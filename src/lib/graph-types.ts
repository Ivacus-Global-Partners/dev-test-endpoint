export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  DateTime: any;
  Int64: any;
};

export type AUDITS_PACKAGE = {
  __typename?: 'AUDITS_PACKAGE';
  accounts: Array<AUDITS_account>;
  accountsAggregate?: Maybe<AUDITS_accountAggregateResult>;
  blocks: Array<AUDITS_document_block>;
  blocksAggregate?: Maybe<AUDITS_document_blockAggregateResult>;
  createdAt: Scalars['DateTime'];
  documents: Array<AUDITS_document>;
  documentsAggregate?: Maybe<AUDITS_documentAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  org360: Org360;
  projectVersions: Array<AUDITS_project_version>;
  projectVersionsAggregate?: Maybe<AUDITS_project_versionAggregateResult>;
  projects: Array<AUDITS_project>;
  projectsAggregate?: Maybe<AUDITS_projectAggregateResult>;
};


export type AUDITS_PACKAGEaccountsArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_accountOrder>;
};


export type AUDITS_PACKAGEaccountsAggregateArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_PACKAGEblocksArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockOrder>;
};


export type AUDITS_PACKAGEblocksAggregateArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};


export type AUDITS_PACKAGEdocumentsArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_documentOrder>;
};


export type AUDITS_PACKAGEdocumentsAggregateArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
};


export type AUDITS_PACKAGEorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type AUDITS_PACKAGEprojectVersionsArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_project_versionOrder>;
};


export type AUDITS_PACKAGEprojectVersionsAggregateArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
};


export type AUDITS_PACKAGEprojectsArgs = {
  filter?: InputMaybe<AUDITS_projectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_projectOrder>;
};


export type AUDITS_PACKAGEprojectsAggregateArgs = {
  filter?: InputMaybe<AUDITS_projectFilter>;
};

export type AUDITS_PACKAGEAggregateResult = {
  __typename?: 'AUDITS_PACKAGEAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type AUDITS_PACKAGEFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_PACKAGEFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_PACKAGEHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_PACKAGEFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_PACKAGEFilter>>>;
};

export enum AUDITS_PACKAGEHasFilter {
  accounts = 'accounts',
  blocks = 'blocks',
  createdAt = 'createdAt',
  documents = 'documents',
  guid = 'guid',
  name = 'name',
  org360 = 'org360',
  projectVersions = 'projectVersions',
  projects = 'projects'
}

export type AUDITS_PACKAGEOrder = {
  asc?: InputMaybe<AUDITS_PACKAGEOrderable>;
  desc?: InputMaybe<AUDITS_PACKAGEOrderable>;
  then?: InputMaybe<AUDITS_PACKAGEOrder>;
};

export enum AUDITS_PACKAGEOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type AUDITS_PACKAGEPatch = {
  accounts?: InputMaybe<Array<AUDITS_accountRef>>;
  blocks?: InputMaybe<Array<AUDITS_document_blockRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<Array<AUDITS_documentRef>>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  projectVersions?: InputMaybe<Array<AUDITS_project_versionRef>>;
  projects?: InputMaybe<Array<AUDITS_projectRef>>;
};

export type AUDITS_PACKAGERef = {
  accounts?: InputMaybe<Array<AUDITS_accountRef>>;
  blocks?: InputMaybe<Array<AUDITS_document_blockRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<Array<AUDITS_documentRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  projectVersions?: InputMaybe<Array<AUDITS_project_versionRef>>;
  projects?: InputMaybe<Array<AUDITS_projectRef>>;
};

export type AUDITS_account = {
  __typename?: 'AUDITS_account';
  account: Account;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: AUDITS_PACKAGE;
  reviews: Array<AUDITS_review_account>;
  reviewsAggregate?: Maybe<AUDITS_review_accountAggregateResult>;
  role: Array<AUDITS_role>;
};


export type AUDITS_accountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type AUDITS_accountcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type AUDITS_accountpackageArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
};


export type AUDITS_accountreviewsArgs = {
  filter?: InputMaybe<AUDITS_review_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_accountOrder>;
};


export type AUDITS_accountreviewsAggregateArgs = {
  filter?: InputMaybe<AUDITS_review_accountFilter>;
};

export type AUDITS_accountAggregateResult = {
  __typename?: 'AUDITS_accountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type AUDITS_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_accountFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_accountFilter>>>;
  role?: InputMaybe<AUDITS_role_exact>;
};

export enum AUDITS_accountHasFilter {
  account = 'account',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  package = 'package',
  reviews = 'reviews',
  role = 'role'
}

export type AUDITS_accountOrder = {
  asc?: InputMaybe<AUDITS_accountOrderable>;
  desc?: InputMaybe<AUDITS_accountOrderable>;
  then?: InputMaybe<AUDITS_accountOrder>;
};

export enum AUDITS_accountOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type AUDITS_accountPatch = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<AUDITS_PACKAGERef>;
  reviews?: InputMaybe<Array<AUDITS_review_accountRef>>;
  role?: InputMaybe<Array<AUDITS_role>>;
};

export type AUDITS_accountRef = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<AUDITS_PACKAGERef>;
  reviews?: InputMaybe<Array<AUDITS_review_accountRef>>;
  role?: InputMaybe<Array<AUDITS_role>>;
};

export type AUDITS_document = {
  __typename?: 'AUDITS_document';
  authors: Array<AUDITS_account>;
  authorsAggregate?: Maybe<AUDITS_accountAggregateResult>;
  blocks: Array<AUDITS_document_block>;
  blocksAggregate?: Maybe<AUDITS_document_blockAggregateResult>;
  comments: Array<AUDITS_review_comment>;
  commentsAggregate?: Maybe<AUDITS_review_commentAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_account;
  description: Scalars['String'];
  file?: Maybe<AUDITS_file>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: AUDITS_PACKAGE;
  previousVersion?: Maybe<AUDITS_document>;
  project: AUDITS_project;
  projectVersion: AUDITS_project_version;
  title: Scalars['String'];
  type: AUDITS_versionType;
  version: Scalars['Int'];
};


export type AUDITS_documentauthorsArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_accountOrder>;
};


export type AUDITS_documentauthorsAggregateArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_documentblocksArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockOrder>;
};


export type AUDITS_documentblocksAggregateArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};


export type AUDITS_documentcommentsArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_commentOrder>;
};


export type AUDITS_documentcommentsAggregateArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
};


export type AUDITS_documentcreatedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_documentfileArgs = {
  filter?: InputMaybe<AUDITS_fileFilter>;
};


export type AUDITS_documentpackageArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
};


export type AUDITS_documentpreviousVersionArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
};


export type AUDITS_documentprojectArgs = {
  filter?: InputMaybe<AUDITS_projectFilter>;
};


export type AUDITS_documentprojectVersionArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
};

export type AUDITS_documentAggregateResult = {
  __typename?: 'AUDITS_documentAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
  versionAvg?: Maybe<Scalars['Float']>;
  versionMax?: Maybe<Scalars['Int']>;
  versionMin?: Maybe<Scalars['Int']>;
  versionSum?: Maybe<Scalars['Int']>;
};

export type AUDITS_documentFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_documentFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_documentHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_documentFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_documentFilter>>>;
  type?: InputMaybe<AUDITS_versionType_exact>;
  version?: InputMaybe<IntFilter>;
};

export enum AUDITS_documentHasFilter {
  authors = 'authors',
  blocks = 'blocks',
  comments = 'comments',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  file = 'file',
  guid = 'guid',
  package = 'package',
  previousVersion = 'previousVersion',
  project = 'project',
  projectVersion = 'projectVersion',
  title = 'title',
  type = 'type',
  version = 'version'
}

export type AUDITS_documentOrder = {
  asc?: InputMaybe<AUDITS_documentOrderable>;
  desc?: InputMaybe<AUDITS_documentOrderable>;
  then?: InputMaybe<AUDITS_documentOrder>;
};

export enum AUDITS_documentOrderable {
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  title = 'title',
  version = 'version'
}

export type AUDITS_documentPatch = {
  authors?: InputMaybe<Array<AUDITS_accountRef>>;
  blocks?: InputMaybe<Array<AUDITS_document_blockRef>>;
  comments?: InputMaybe<Array<AUDITS_review_commentRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  file?: InputMaybe<AUDITS_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<AUDITS_PACKAGERef>;
  previousVersion?: InputMaybe<AUDITS_documentRef>;
  project?: InputMaybe<AUDITS_projectRef>;
  projectVersion?: InputMaybe<AUDITS_project_versionRef>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<AUDITS_versionType>;
  version?: InputMaybe<Scalars['Int']>;
};

export type AUDITS_documentRef = {
  authors?: InputMaybe<Array<AUDITS_accountRef>>;
  blocks?: InputMaybe<Array<AUDITS_document_blockRef>>;
  comments?: InputMaybe<Array<AUDITS_review_commentRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  file?: InputMaybe<AUDITS_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<AUDITS_PACKAGERef>;
  previousVersion?: InputMaybe<AUDITS_documentRef>;
  project?: InputMaybe<AUDITS_projectRef>;
  projectVersion?: InputMaybe<AUDITS_project_versionRef>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<AUDITS_versionType>;
  version?: InputMaybe<Scalars['Int']>;
};

export type AUDITS_document_block = {
  __typename?: 'AUDITS_document_block';
  authors: Array<AUDITS_account>;
  authorsAggregate?: Maybe<AUDITS_accountAggregateResult>;
  comments: Array<AUDITS_review_comment>;
  commentsAggregate?: Maybe<AUDITS_review_commentAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_account;
  document: AUDITS_document;
  guid: Scalars['String'];
  hide?: Maybe<Scalars['Boolean']>;
  id: Scalars['ID'];
  image?: Maybe<AUDITS_document_blockImage>;
  index: Scalars['Int'];
  package: AUDITS_PACKAGE;
  previousVersion?: Maybe<AUDITS_document_block>;
  quote?: Maybe<AUDITS_document_blockQuote>;
  table?: Maybe<AUDITS_document_blockTable>;
  text?: Maybe<AUDITS_document_blockText>;
  title?: Maybe<AUDITS_document_blockTitle>;
  type: AUDITS_document_blockType;
};


export type AUDITS_document_blockauthorsArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_accountOrder>;
};


export type AUDITS_document_blockauthorsAggregateArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_document_blockcommentsArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_commentOrder>;
};


export type AUDITS_document_blockcommentsAggregateArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
};


export type AUDITS_document_blockcreatedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_document_blockdocumentArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
};


export type AUDITS_document_blockimageArgs = {
  filter?: InputMaybe<AUDITS_document_blockImageFilter>;
};


export type AUDITS_document_blockpackageArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
};


export type AUDITS_document_blockpreviousVersionArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};


export type AUDITS_document_blockquoteArgs = {
  filter?: InputMaybe<AUDITS_document_blockQuoteFilter>;
};


export type AUDITS_document_blocktableArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableFilter>;
};


export type AUDITS_document_blocktextArgs = {
  filter?: InputMaybe<AUDITS_document_blockTextFilter>;
};


export type AUDITS_document_blocktitleArgs = {
  filter?: InputMaybe<AUDITS_document_blockTitleFilter>;
};

export type AUDITS_document_blockAggregateResult = {
  __typename?: 'AUDITS_document_blockAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type AUDITS_document_blockFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_document_blockFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_document_blockHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  not?: InputMaybe<AUDITS_document_blockFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_document_blockFilter>>>;
  type?: InputMaybe<AUDITS_document_blockType_exact>;
};

export enum AUDITS_document_blockHasFilter {
  authors = 'authors',
  comments = 'comments',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  document = 'document',
  guid = 'guid',
  hide = 'hide',
  image = 'image',
  index = 'index',
  package = 'package',
  previousVersion = 'previousVersion',
  quote = 'quote',
  table = 'table',
  text = 'text',
  title = 'title',
  type = 'type'
}

export type AUDITS_document_blockImage = {
  __typename?: 'AUDITS_document_blockImage';
  alt: Scalars['String'];
  block: AUDITS_document_block;
  file?: Maybe<AUDITS_file>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  url: Scalars['String'];
};


export type AUDITS_document_blockImageblockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};


export type AUDITS_document_blockImagefileArgs = {
  filter?: InputMaybe<AUDITS_fileFilter>;
};

export type AUDITS_document_blockImageAggregateResult = {
  __typename?: 'AUDITS_document_blockImageAggregateResult';
  altMax?: Maybe<Scalars['String']>;
  altMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
};

export type AUDITS_document_blockImageFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_document_blockImageFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_document_blockImageHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_document_blockImageFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_document_blockImageFilter>>>;
};

export enum AUDITS_document_blockImageHasFilter {
  alt = 'alt',
  block = 'block',
  file = 'file',
  guid = 'guid',
  url = 'url'
}

export type AUDITS_document_blockImageOrder = {
  asc?: InputMaybe<AUDITS_document_blockImageOrderable>;
  desc?: InputMaybe<AUDITS_document_blockImageOrderable>;
  then?: InputMaybe<AUDITS_document_blockImageOrder>;
};

export enum AUDITS_document_blockImageOrderable {
  alt = 'alt',
  guid = 'guid',
  url = 'url'
}

export type AUDITS_document_blockImagePatch = {
  alt?: InputMaybe<Scalars['String']>;
  block?: InputMaybe<AUDITS_document_blockRef>;
  file?: InputMaybe<AUDITS_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type AUDITS_document_blockImageRef = {
  alt?: InputMaybe<Scalars['String']>;
  block?: InputMaybe<AUDITS_document_blockRef>;
  file?: InputMaybe<AUDITS_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  url?: InputMaybe<Scalars['String']>;
};

export type AUDITS_document_blockOrder = {
  asc?: InputMaybe<AUDITS_document_blockOrderable>;
  desc?: InputMaybe<AUDITS_document_blockOrderable>;
  then?: InputMaybe<AUDITS_document_blockOrder>;
};

export enum AUDITS_document_blockOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  index = 'index'
}

export type AUDITS_document_blockPatch = {
  authors?: InputMaybe<Array<AUDITS_accountRef>>;
  comments?: InputMaybe<Array<AUDITS_review_commentRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  document?: InputMaybe<AUDITS_documentRef>;
  guid?: InputMaybe<Scalars['String']>;
  hide?: InputMaybe<Scalars['Boolean']>;
  image?: InputMaybe<AUDITS_document_blockImageRef>;
  index?: InputMaybe<Scalars['Int']>;
  package?: InputMaybe<AUDITS_PACKAGERef>;
  previousVersion?: InputMaybe<AUDITS_document_blockRef>;
  quote?: InputMaybe<AUDITS_document_blockQuoteRef>;
  table?: InputMaybe<AUDITS_document_blockTableRef>;
  text?: InputMaybe<AUDITS_document_blockTextRef>;
  title?: InputMaybe<AUDITS_document_blockTitleRef>;
  type?: InputMaybe<AUDITS_document_blockType>;
};

export type AUDITS_document_blockQuote = {
  __typename?: 'AUDITS_document_blockQuote';
  block: AUDITS_document_block;
  content: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
};


export type AUDITS_document_blockQuoteblockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};

export type AUDITS_document_blockQuoteAggregateResult = {
  __typename?: 'AUDITS_document_blockQuoteAggregateResult';
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type AUDITS_document_blockQuoteFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_document_blockQuoteFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_document_blockQuoteHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_document_blockQuoteFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_document_blockQuoteFilter>>>;
};

export enum AUDITS_document_blockQuoteHasFilter {
  block = 'block',
  content = 'content',
  guid = 'guid'
}

export type AUDITS_document_blockQuoteOrder = {
  asc?: InputMaybe<AUDITS_document_blockQuoteOrderable>;
  desc?: InputMaybe<AUDITS_document_blockQuoteOrderable>;
  then?: InputMaybe<AUDITS_document_blockQuoteOrder>;
};

export enum AUDITS_document_blockQuoteOrderable {
  content = 'content',
  guid = 'guid'
}

export type AUDITS_document_blockQuotePatch = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
};

export type AUDITS_document_blockQuoteRef = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

export type AUDITS_document_blockRef = {
  authors?: InputMaybe<Array<AUDITS_accountRef>>;
  comments?: InputMaybe<Array<AUDITS_review_commentRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  document?: InputMaybe<AUDITS_documentRef>;
  guid?: InputMaybe<Scalars['String']>;
  hide?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  image?: InputMaybe<AUDITS_document_blockImageRef>;
  index?: InputMaybe<Scalars['Int']>;
  package?: InputMaybe<AUDITS_PACKAGERef>;
  previousVersion?: InputMaybe<AUDITS_document_blockRef>;
  quote?: InputMaybe<AUDITS_document_blockQuoteRef>;
  table?: InputMaybe<AUDITS_document_blockTableRef>;
  text?: InputMaybe<AUDITS_document_blockTextRef>;
  title?: InputMaybe<AUDITS_document_blockTitleRef>;
  type?: InputMaybe<AUDITS_document_blockType>;
};

export type AUDITS_document_blockTable = {
  __typename?: 'AUDITS_document_blockTable';
  block: AUDITS_document_block;
  columns: Array<AUDITS_document_blockTableColumn>;
  columnsAggregate?: Maybe<AUDITS_document_blockTableColumnAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  rows: Array<AUDITS_document_blockTableRow>;
  rowsAggregate?: Maybe<AUDITS_document_blockTableRowAggregateResult>;
  title: Scalars['String'];
};


export type AUDITS_document_blockTableblockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};


export type AUDITS_document_blockTablecolumnsArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableColumnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableColumnOrder>;
};


export type AUDITS_document_blockTablecolumnsAggregateArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableColumnFilter>;
};


export type AUDITS_document_blockTablerowsArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableRowFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableRowOrder>;
};


export type AUDITS_document_blockTablerowsAggregateArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableRowFilter>;
};

export type AUDITS_document_blockTableAggregateResult = {
  __typename?: 'AUDITS_document_blockTableAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
};

export type AUDITS_document_blockTableCell = {
  __typename?: 'AUDITS_document_blockTableCell';
  comments: Array<AUDITS_review_comment>;
  commentsAggregate?: Maybe<AUDITS_review_commentAggregateResult>;
  content: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  row: AUDITS_document_blockTableRow;
};


export type AUDITS_document_blockTableCellcommentsArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_commentOrder>;
};


export type AUDITS_document_blockTableCellcommentsAggregateArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
};


export type AUDITS_document_blockTableCellrowArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableRowFilter>;
};

export type AUDITS_document_blockTableCellAggregateResult = {
  __typename?: 'AUDITS_document_blockTableCellAggregateResult';
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type AUDITS_document_blockTableCellFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableCellFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableCellHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_document_blockTableCellFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableCellFilter>>>;
};

export enum AUDITS_document_blockTableCellHasFilter {
  comments = 'comments',
  content = 'content',
  guid = 'guid',
  index = 'index',
  row = 'row'
}

export type AUDITS_document_blockTableCellOrder = {
  asc?: InputMaybe<AUDITS_document_blockTableCellOrderable>;
  desc?: InputMaybe<AUDITS_document_blockTableCellOrderable>;
  then?: InputMaybe<AUDITS_document_blockTableCellOrder>;
};

export enum AUDITS_document_blockTableCellOrderable {
  content = 'content',
  guid = 'guid',
  index = 'index'
}

export type AUDITS_document_blockTableCellPatch = {
  comments?: InputMaybe<Array<AUDITS_review_commentRef>>;
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  row?: InputMaybe<AUDITS_document_blockTableRowRef>;
};

export type AUDITS_document_blockTableCellRef = {
  comments?: InputMaybe<Array<AUDITS_review_commentRef>>;
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  row?: InputMaybe<AUDITS_document_blockTableRowRef>;
};

export type AUDITS_document_blockTableColumn = {
  __typename?: 'AUDITS_document_blockTableColumn';
  content: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  table: AUDITS_document_blockTable;
};


export type AUDITS_document_blockTableColumntableArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableFilter>;
};

export type AUDITS_document_blockTableColumnAggregateResult = {
  __typename?: 'AUDITS_document_blockTableColumnAggregateResult';
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type AUDITS_document_blockTableColumnFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableColumnFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableColumnHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_document_blockTableColumnFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableColumnFilter>>>;
};

export enum AUDITS_document_blockTableColumnHasFilter {
  content = 'content',
  guid = 'guid',
  index = 'index',
  table = 'table'
}

export type AUDITS_document_blockTableColumnOrder = {
  asc?: InputMaybe<AUDITS_document_blockTableColumnOrderable>;
  desc?: InputMaybe<AUDITS_document_blockTableColumnOrderable>;
  then?: InputMaybe<AUDITS_document_blockTableColumnOrder>;
};

export enum AUDITS_document_blockTableColumnOrderable {
  content = 'content',
  guid = 'guid',
  index = 'index'
}

export type AUDITS_document_blockTableColumnPatch = {
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  table?: InputMaybe<AUDITS_document_blockTableRef>;
};

export type AUDITS_document_blockTableColumnRef = {
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  table?: InputMaybe<AUDITS_document_blockTableRef>;
};

export type AUDITS_document_blockTableFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_document_blockTableFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableFilter>>>;
};

export enum AUDITS_document_blockTableHasFilter {
  block = 'block',
  columns = 'columns',
  guid = 'guid',
  rows = 'rows',
  title = 'title'
}

export type AUDITS_document_blockTableOrder = {
  asc?: InputMaybe<AUDITS_document_blockTableOrderable>;
  desc?: InputMaybe<AUDITS_document_blockTableOrderable>;
  then?: InputMaybe<AUDITS_document_blockTableOrder>;
};

export enum AUDITS_document_blockTableOrderable {
  guid = 'guid',
  title = 'title'
}

export type AUDITS_document_blockTablePatch = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  columns?: InputMaybe<Array<AUDITS_document_blockTableColumnRef>>;
  guid?: InputMaybe<Scalars['String']>;
  rows?: InputMaybe<Array<AUDITS_document_blockTableRowRef>>;
  title?: InputMaybe<Scalars['String']>;
};

export type AUDITS_document_blockTableRef = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  columns?: InputMaybe<Array<AUDITS_document_blockTableColumnRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  rows?: InputMaybe<Array<AUDITS_document_blockTableRowRef>>;
  title?: InputMaybe<Scalars['String']>;
};

export type AUDITS_document_blockTableRow = {
  __typename?: 'AUDITS_document_blockTableRow';
  cells: Array<AUDITS_document_blockTableCell>;
  cellsAggregate?: Maybe<AUDITS_document_blockTableCellAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  table: AUDITS_document_blockTable;
};


export type AUDITS_document_blockTableRowcellsArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableCellFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableCellOrder>;
};


export type AUDITS_document_blockTableRowcellsAggregateArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableCellFilter>;
};


export type AUDITS_document_blockTableRowtableArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableFilter>;
};

export type AUDITS_document_blockTableRowAggregateResult = {
  __typename?: 'AUDITS_document_blockTableRowAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type AUDITS_document_blockTableRowFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableRowFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableRowHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_document_blockTableRowFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTableRowFilter>>>;
};

export enum AUDITS_document_blockTableRowHasFilter {
  cells = 'cells',
  guid = 'guid',
  index = 'index',
  table = 'table'
}

export type AUDITS_document_blockTableRowOrder = {
  asc?: InputMaybe<AUDITS_document_blockTableRowOrderable>;
  desc?: InputMaybe<AUDITS_document_blockTableRowOrderable>;
  then?: InputMaybe<AUDITS_document_blockTableRowOrder>;
};

export enum AUDITS_document_blockTableRowOrderable {
  guid = 'guid',
  index = 'index'
}

export type AUDITS_document_blockTableRowPatch = {
  cells?: InputMaybe<Array<AUDITS_document_blockTableCellRef>>;
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  table?: InputMaybe<AUDITS_document_blockTableRef>;
};

export type AUDITS_document_blockTableRowRef = {
  cells?: InputMaybe<Array<AUDITS_document_blockTableCellRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  table?: InputMaybe<AUDITS_document_blockTableRef>;
};

export type AUDITS_document_blockText = {
  __typename?: 'AUDITS_document_blockText';
  block: AUDITS_document_block;
  content: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  type: AUDITS_document_blockTextType;
};


export type AUDITS_document_blockTextblockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};

export type AUDITS_document_blockTextAggregateResult = {
  __typename?: 'AUDITS_document_blockTextAggregateResult';
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type AUDITS_document_blockTextFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTextFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTextHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_document_blockTextFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTextFilter>>>;
  type?: InputMaybe<AUDITS_document_blockTextType_exact>;
};

export enum AUDITS_document_blockTextHasFilter {
  block = 'block',
  content = 'content',
  guid = 'guid',
  type = 'type'
}

export type AUDITS_document_blockTextOrder = {
  asc?: InputMaybe<AUDITS_document_blockTextOrderable>;
  desc?: InputMaybe<AUDITS_document_blockTextOrderable>;
  then?: InputMaybe<AUDITS_document_blockTextOrder>;
};

export enum AUDITS_document_blockTextOrderable {
  content = 'content',
  guid = 'guid'
}

export type AUDITS_document_blockTextPatch = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<AUDITS_document_blockTextType>;
};

export type AUDITS_document_blockTextRef = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  type?: InputMaybe<AUDITS_document_blockTextType>;
};

export enum AUDITS_document_blockTextType {
  HTML = 'HTML',
  TEXT = 'TEXT'
}

export type AUDITS_document_blockTextType_exact = {
  between?: InputMaybe<AUDITS_document_blockTextType>;
  eq?: InputMaybe<AUDITS_document_blockTextType>;
  ge?: InputMaybe<AUDITS_document_blockTextType>;
  gt?: InputMaybe<AUDITS_document_blockTextType>;
  in?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTextType>>>;
  le?: InputMaybe<AUDITS_document_blockTextType>;
  lt?: InputMaybe<AUDITS_document_blockTextType>;
};

export type AUDITS_document_blockTitle = {
  __typename?: 'AUDITS_document_blockTitle';
  block: AUDITS_document_block;
  content: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  type: AUDITS_document_blockTitleType;
};


export type AUDITS_document_blockTitleblockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};

export type AUDITS_document_blockTitleAggregateResult = {
  __typename?: 'AUDITS_document_blockTitleAggregateResult';
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type AUDITS_document_blockTitleFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTitleFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTitleHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_document_blockTitleFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTitleFilter>>>;
  type?: InputMaybe<AUDITS_document_blockTitleType_exact>;
};

export enum AUDITS_document_blockTitleHasFilter {
  block = 'block',
  content = 'content',
  guid = 'guid',
  type = 'type'
}

export type AUDITS_document_blockTitleOrder = {
  asc?: InputMaybe<AUDITS_document_blockTitleOrderable>;
  desc?: InputMaybe<AUDITS_document_blockTitleOrderable>;
  then?: InputMaybe<AUDITS_document_blockTitleOrder>;
};

export enum AUDITS_document_blockTitleOrderable {
  content = 'content',
  guid = 'guid'
}

export type AUDITS_document_blockTitlePatch = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<AUDITS_document_blockTitleType>;
};

export type AUDITS_document_blockTitleRef = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  type?: InputMaybe<AUDITS_document_blockTitleType>;
};

export enum AUDITS_document_blockTitleType {
  H1 = 'H1',
  H2 = 'H2',
  H3 = 'H3',
  H4 = 'H4',
  H5 = 'H5',
  H6 = 'H6'
}

export type AUDITS_document_blockTitleType_exact = {
  between?: InputMaybe<AUDITS_document_blockTitleType>;
  eq?: InputMaybe<AUDITS_document_blockTitleType>;
  ge?: InputMaybe<AUDITS_document_blockTitleType>;
  gt?: InputMaybe<AUDITS_document_blockTitleType>;
  in?: InputMaybe<Array<InputMaybe<AUDITS_document_blockTitleType>>>;
  le?: InputMaybe<AUDITS_document_blockTitleType>;
  lt?: InputMaybe<AUDITS_document_blockTitleType>;
};

export enum AUDITS_document_blockType {
  IMAGE = 'IMAGE',
  QUOTE = 'QUOTE',
  TABLE = 'TABLE',
  TEXT = 'TEXT',
  TITLE = 'TITLE'
}

export type AUDITS_document_blockType_exact = {
  between?: InputMaybe<AUDITS_document_blockType>;
  eq?: InputMaybe<AUDITS_document_blockType>;
  ge?: InputMaybe<AUDITS_document_blockType>;
  gt?: InputMaybe<AUDITS_document_blockType>;
  in?: InputMaybe<Array<InputMaybe<AUDITS_document_blockType>>>;
  le?: InputMaybe<AUDITS_document_blockType>;
  lt?: InputMaybe<AUDITS_document_blockType>;
};

export type AUDITS_file = {
  __typename?: 'AUDITS_file';
  blockImage?: Maybe<AUDITS_document_blockImage>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<AUDITS_account>;
  document?: Maybe<AUDITS_document>;
  file?: Maybe<E360Storage_file>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  label: Scalars['String'];
};


export type AUDITS_fileblockImageArgs = {
  filter?: InputMaybe<AUDITS_document_blockImageFilter>;
};


export type AUDITS_filecreatedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_filedocumentArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
};


export type AUDITS_filefileArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
};

export type AUDITS_fileAggregateResult = {
  __typename?: 'AUDITS_fileAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type AUDITS_fileFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_fileFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_fileHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  label?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<AUDITS_fileFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_fileFilter>>>;
};

export enum AUDITS_fileHasFilter {
  blockImage = 'blockImage',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  document = 'document',
  file = 'file',
  guid = 'guid',
  label = 'label'
}

export type AUDITS_fileOrder = {
  asc?: InputMaybe<AUDITS_fileOrderable>;
  desc?: InputMaybe<AUDITS_fileOrderable>;
  then?: InputMaybe<AUDITS_fileOrder>;
};

export enum AUDITS_fileOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  label = 'label'
}

export type AUDITS_filePatch = {
  blockImage?: InputMaybe<AUDITS_document_blockImageRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  document?: InputMaybe<AUDITS_documentRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
};

export type AUDITS_fileRef = {
  blockImage?: InputMaybe<AUDITS_document_blockImageRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  document?: InputMaybe<AUDITS_documentRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
};

export type AUDITS_project = {
  __typename?: 'AUDITS_project';
  authors: Array<AUDITS_account>;
  authorsAggregate?: Maybe<AUDITS_accountAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_account;
  description?: Maybe<Scalars['String']>;
  documents: Array<AUDITS_document>;
  documentsAggregate?: Maybe<AUDITS_documentAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  package: AUDITS_PACKAGE;
  versions: Array<AUDITS_project_version>;
  versionsAggregate?: Maybe<AUDITS_project_versionAggregateResult>;
};


export type AUDITS_projectauthorsArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_accountOrder>;
};


export type AUDITS_projectauthorsAggregateArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_projectcreatedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_projectdocumentsArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_documentOrder>;
};


export type AUDITS_projectdocumentsAggregateArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
};


export type AUDITS_projectpackageArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
};


export type AUDITS_projectversionsArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_project_versionOrder>;
};


export type AUDITS_projectversionsAggregateArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
};

export type AUDITS_projectAggregateResult = {
  __typename?: 'AUDITS_projectAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type AUDITS_projectFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_projectFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_projectHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_projectFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_projectFilter>>>;
};

export enum AUDITS_projectHasFilter {
  authors = 'authors',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  documents = 'documents',
  guid = 'guid',
  name = 'name',
  package = 'package',
  versions = 'versions'
}

export type AUDITS_projectOrder = {
  asc?: InputMaybe<AUDITS_projectOrderable>;
  desc?: InputMaybe<AUDITS_projectOrderable>;
  then?: InputMaybe<AUDITS_projectOrder>;
};

export enum AUDITS_projectOrderable {
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  name = 'name'
}

export type AUDITS_projectPatch = {
  authors?: InputMaybe<Array<AUDITS_accountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<Array<AUDITS_documentRef>>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<AUDITS_PACKAGERef>;
  versions?: InputMaybe<Array<AUDITS_project_versionRef>>;
};

export type AUDITS_projectRef = {
  authors?: InputMaybe<Array<AUDITS_accountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<Array<AUDITS_documentRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<AUDITS_PACKAGERef>;
  versions?: InputMaybe<Array<AUDITS_project_versionRef>>;
};

export type AUDITS_project_version = {
  __typename?: 'AUDITS_project_version';
  archivedAt?: Maybe<Scalars['DateTime']>;
  archivedBy?: Maybe<AUDITS_account>;
  authors: Array<AUDITS_account>;
  authorsAggregate?: Maybe<AUDITS_accountAggregateResult>;
  comments: Array<AUDITS_review_comment>;
  commentsAggregate?: Maybe<AUDITS_review_commentAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_account;
  deletedAt?: Maybe<Scalars['DateTime']>;
  deletedBy?: Maybe<AUDITS_account>;
  description: Scalars['String'];
  documents: Array<AUDITS_document>;
  documentsAggregate?: Maybe<AUDITS_documentAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  package: AUDITS_PACKAGE;
  project: AUDITS_project;
  publishedAt?: Maybe<Scalars['DateTime']>;
  publishedBy?: Maybe<AUDITS_account>;
  reviews: Array<AUDITS_review>;
  reviewsAggregate?: Maybe<AUDITS_reviewAggregateResult>;
  status: AUDITS_project_versionStatus;
  type: AUDITS_versionType;
  version: Scalars['Int'];
};


export type AUDITS_project_versionarchivedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_project_versionauthorsArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_accountOrder>;
};


export type AUDITS_project_versionauthorsAggregateArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_project_versioncommentsArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_commentOrder>;
};


export type AUDITS_project_versioncommentsAggregateArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
};


export type AUDITS_project_versioncreatedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_project_versiondeletedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_project_versiondocumentsArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_documentOrder>;
};


export type AUDITS_project_versiondocumentsAggregateArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
};


export type AUDITS_project_versionpackageArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
};


export type AUDITS_project_versionprojectArgs = {
  filter?: InputMaybe<AUDITS_projectFilter>;
};


export type AUDITS_project_versionpublishedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_project_versionreviewsArgs = {
  filter?: InputMaybe<AUDITS_reviewFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_reviewOrder>;
};


export type AUDITS_project_versionreviewsAggregateArgs = {
  filter?: InputMaybe<AUDITS_reviewFilter>;
};

export type AUDITS_project_versionAggregateResult = {
  __typename?: 'AUDITS_project_versionAggregateResult';
  archivedAtMax?: Maybe<Scalars['DateTime']>;
  archivedAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  deletedAtMax?: Maybe<Scalars['DateTime']>;
  deletedAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  publishedAtMax?: Maybe<Scalars['DateTime']>;
  publishedAtMin?: Maybe<Scalars['DateTime']>;
  versionAvg?: Maybe<Scalars['Float']>;
  versionMax?: Maybe<Scalars['Int']>;
  versionMin?: Maybe<Scalars['Int']>;
  versionSum?: Maybe<Scalars['Int']>;
};

export type AUDITS_project_versionFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_project_versionFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_project_versionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_project_versionFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_project_versionFilter>>>;
  status?: InputMaybe<AUDITS_project_versionStatus_exact>;
  type?: InputMaybe<AUDITS_versionType_exact>;
  version?: InputMaybe<IntFilter>;
};

export enum AUDITS_project_versionHasFilter {
  archivedAt = 'archivedAt',
  archivedBy = 'archivedBy',
  authors = 'authors',
  comments = 'comments',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  deletedAt = 'deletedAt',
  deletedBy = 'deletedBy',
  description = 'description',
  documents = 'documents',
  guid = 'guid',
  name = 'name',
  package = 'package',
  project = 'project',
  publishedAt = 'publishedAt',
  publishedBy = 'publishedBy',
  reviews = 'reviews',
  status = 'status',
  type = 'type',
  version = 'version'
}

export type AUDITS_project_versionOrder = {
  asc?: InputMaybe<AUDITS_project_versionOrderable>;
  desc?: InputMaybe<AUDITS_project_versionOrderable>;
  then?: InputMaybe<AUDITS_project_versionOrder>;
};

export enum AUDITS_project_versionOrderable {
  archivedAt = 'archivedAt',
  createdAt = 'createdAt',
  deletedAt = 'deletedAt',
  description = 'description',
  guid = 'guid',
  name = 'name',
  publishedAt = 'publishedAt',
  version = 'version'
}

export type AUDITS_project_versionPatch = {
  archivedAt?: InputMaybe<Scalars['DateTime']>;
  archivedBy?: InputMaybe<AUDITS_accountRef>;
  authors?: InputMaybe<Array<AUDITS_accountRef>>;
  comments?: InputMaybe<Array<AUDITS_review_commentRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  deletedBy?: InputMaybe<AUDITS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<Array<AUDITS_documentRef>>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<AUDITS_PACKAGERef>;
  project?: InputMaybe<AUDITS_projectRef>;
  publishedAt?: InputMaybe<Scalars['DateTime']>;
  publishedBy?: InputMaybe<AUDITS_accountRef>;
  reviews?: InputMaybe<Array<AUDITS_reviewRef>>;
  status?: InputMaybe<AUDITS_project_versionStatus>;
  type?: InputMaybe<AUDITS_versionType>;
  version?: InputMaybe<Scalars['Int']>;
};

export type AUDITS_project_versionRef = {
  archivedAt?: InputMaybe<Scalars['DateTime']>;
  archivedBy?: InputMaybe<AUDITS_accountRef>;
  authors?: InputMaybe<Array<AUDITS_accountRef>>;
  comments?: InputMaybe<Array<AUDITS_review_commentRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  deletedBy?: InputMaybe<AUDITS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<Array<AUDITS_documentRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<AUDITS_PACKAGERef>;
  project?: InputMaybe<AUDITS_projectRef>;
  publishedAt?: InputMaybe<Scalars['DateTime']>;
  publishedBy?: InputMaybe<AUDITS_accountRef>;
  reviews?: InputMaybe<Array<AUDITS_reviewRef>>;
  status?: InputMaybe<AUDITS_project_versionStatus>;
  type?: InputMaybe<AUDITS_versionType>;
  version?: InputMaybe<Scalars['Int']>;
};

export enum AUDITS_project_versionStatus {
  ARCHIVED = 'ARCHIVED',
  AUDITED_AND_APPROVED = 'AUDITED_AND_APPROVED',
  AUDITED_AND_REJECTED = 'AUDITED_AND_REJECTED',
  CLOSED = 'CLOSED',
  DELETING = 'DELETING',
  DRAFT = 'DRAFT',
  IN_AUDIT = 'IN_AUDIT',
  IN_REVIEW = 'IN_REVIEW',
  READY_FOR_AUDIT = 'READY_FOR_AUDIT',
  READY_FOR_REVIEW = 'READY_FOR_REVIEW',
  REVIEWED_AND_APPROVED = 'REVIEWED_AND_APPROVED',
  REVIEWED_AND_REJECTED = 'REVIEWED_AND_REJECTED'
}

export type AUDITS_project_versionStatus_exact = {
  between?: InputMaybe<AUDITS_project_versionStatus>;
  eq?: InputMaybe<AUDITS_project_versionStatus>;
  ge?: InputMaybe<AUDITS_project_versionStatus>;
  gt?: InputMaybe<AUDITS_project_versionStatus>;
  in?: InputMaybe<Array<InputMaybe<AUDITS_project_versionStatus>>>;
  le?: InputMaybe<AUDITS_project_versionStatus>;
  lt?: InputMaybe<AUDITS_project_versionStatus>;
};

export type AUDITS_review = {
  __typename?: 'AUDITS_review';
  block?: Maybe<AUDITS_document_block>;
  comments: Array<AUDITS_review_comment>;
  commentsAggregate?: Maybe<AUDITS_review_commentAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_account;
  document?: Maybe<AUDITS_document>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  projectVersion: AUDITS_project_version;
  reviewers: Array<AUDITS_review_account>;
  reviewersAggregate?: Maybe<AUDITS_review_accountAggregateResult>;
};


export type AUDITS_reviewblockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};


export type AUDITS_reviewcommentsArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_commentOrder>;
};


export type AUDITS_reviewcommentsAggregateArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
};


export type AUDITS_reviewcreatedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_reviewdocumentArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
};


export type AUDITS_reviewprojectVersionArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
};


export type AUDITS_reviewreviewersArgs = {
  filter?: InputMaybe<AUDITS_review_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_accountOrder>;
};


export type AUDITS_reviewreviewersAggregateArgs = {
  filter?: InputMaybe<AUDITS_review_accountFilter>;
};

export type AUDITS_reviewAggregateResult = {
  __typename?: 'AUDITS_reviewAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type AUDITS_reviewFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_reviewFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_reviewHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_reviewFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_reviewFilter>>>;
};

export enum AUDITS_reviewHasFilter {
  block = 'block',
  comments = 'comments',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  document = 'document',
  guid = 'guid',
  projectVersion = 'projectVersion',
  reviewers = 'reviewers'
}

export type AUDITS_reviewOrder = {
  asc?: InputMaybe<AUDITS_reviewOrderable>;
  desc?: InputMaybe<AUDITS_reviewOrderable>;
  then?: InputMaybe<AUDITS_reviewOrder>;
};

export enum AUDITS_reviewOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type AUDITS_reviewPatch = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  comments?: InputMaybe<Array<AUDITS_review_commentRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  document?: InputMaybe<AUDITS_documentRef>;
  guid?: InputMaybe<Scalars['String']>;
  projectVersion?: InputMaybe<AUDITS_project_versionRef>;
  reviewers?: InputMaybe<Array<AUDITS_review_accountRef>>;
};

export type AUDITS_reviewRef = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  comments?: InputMaybe<Array<AUDITS_review_commentRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  document?: InputMaybe<AUDITS_documentRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  projectVersion?: InputMaybe<AUDITS_project_versionRef>;
  reviewers?: InputMaybe<Array<AUDITS_review_accountRef>>;
};

export type AUDITS_review_account = {
  __typename?: 'AUDITS_review_account';
  account: AUDITS_account;
  assignedAt: Scalars['DateTime'];
  assignedBy?: Maybe<AUDITS_account>;
  endAt?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  review: AUDITS_review;
  role: AUDITS_role;
  startAt?: Maybe<Scalars['DateTime']>;
};


export type AUDITS_review_accountaccountArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_review_accountassignedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_review_accountreviewArgs = {
  filter?: InputMaybe<AUDITS_reviewFilter>;
};

export type AUDITS_review_accountAggregateResult = {
  __typename?: 'AUDITS_review_accountAggregateResult';
  assignedAtMax?: Maybe<Scalars['DateTime']>;
  assignedAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
};

export type AUDITS_review_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_review_accountFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_review_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_review_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_review_accountFilter>>>;
  role?: InputMaybe<AUDITS_role_exact>;
};

export enum AUDITS_review_accountHasFilter {
  account = 'account',
  assignedAt = 'assignedAt',
  assignedBy = 'assignedBy',
  endAt = 'endAt',
  guid = 'guid',
  review = 'review',
  role = 'role',
  startAt = 'startAt'
}

export type AUDITS_review_accountOrder = {
  asc?: InputMaybe<AUDITS_review_accountOrderable>;
  desc?: InputMaybe<AUDITS_review_accountOrderable>;
  then?: InputMaybe<AUDITS_review_accountOrder>;
};

export enum AUDITS_review_accountOrderable {
  assignedAt = 'assignedAt',
  endAt = 'endAt',
  guid = 'guid',
  startAt = 'startAt'
}

export type AUDITS_review_accountPatch = {
  account?: InputMaybe<AUDITS_accountRef>;
  assignedAt?: InputMaybe<Scalars['DateTime']>;
  assignedBy?: InputMaybe<AUDITS_accountRef>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  review?: InputMaybe<AUDITS_reviewRef>;
  role?: InputMaybe<AUDITS_role>;
  startAt?: InputMaybe<Scalars['DateTime']>;
};

export type AUDITS_review_accountRef = {
  account?: InputMaybe<AUDITS_accountRef>;
  assignedAt?: InputMaybe<Scalars['DateTime']>;
  assignedBy?: InputMaybe<AUDITS_accountRef>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  review?: InputMaybe<AUDITS_reviewRef>;
  role?: InputMaybe<AUDITS_role>;
  startAt?: InputMaybe<Scalars['DateTime']>;
};

export type AUDITS_review_comment = {
  __typename?: 'AUDITS_review_comment';
  block?: Maybe<AUDITS_document_block>;
  closedAt?: Maybe<Scalars['DateTime']>;
  closedBy?: Maybe<AUDITS_account>;
  content: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_account;
  document?: Maybe<AUDITS_document>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  resolvedAt?: Maybe<Scalars['DateTime']>;
  resolvedBy?: Maybe<AUDITS_account>;
  review: AUDITS_review;
  status: AUDITS_review_commentStatus;
  tableCell?: Maybe<AUDITS_document_blockTableCell>;
  type: AUDITS_review_commentType;
  version?: Maybe<AUDITS_project_version>;
};


export type AUDITS_review_commentblockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};


export type AUDITS_review_commentclosedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_review_commentcreatedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_review_commentdocumentArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
};


export type AUDITS_review_commentresolvedByArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AUDITS_review_commentreviewArgs = {
  filter?: InputMaybe<AUDITS_reviewFilter>;
};


export type AUDITS_review_commenttableCellArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableCellFilter>;
};


export type AUDITS_review_commentversionArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
};

export type AUDITS_review_commentAggregateResult = {
  __typename?: 'AUDITS_review_commentAggregateResult';
  closedAtMax?: Maybe<Scalars['DateTime']>;
  closedAtMin?: Maybe<Scalars['DateTime']>;
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  resolvedAtMax?: Maybe<Scalars['DateTime']>;
  resolvedAtMin?: Maybe<Scalars['DateTime']>;
};

export type AUDITS_review_commentFilter = {
  and?: InputMaybe<Array<InputMaybe<AUDITS_review_commentFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<AUDITS_review_commentHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AUDITS_review_commentFilter>;
  or?: InputMaybe<Array<InputMaybe<AUDITS_review_commentFilter>>>;
  status?: InputMaybe<AUDITS_review_commentStatus_exact>;
  type?: InputMaybe<AUDITS_review_commentType_exact>;
};

export enum AUDITS_review_commentHasFilter {
  block = 'block',
  closedAt = 'closedAt',
  closedBy = 'closedBy',
  content = 'content',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  document = 'document',
  guid = 'guid',
  resolvedAt = 'resolvedAt',
  resolvedBy = 'resolvedBy',
  review = 'review',
  status = 'status',
  tableCell = 'tableCell',
  type = 'type',
  version = 'version'
}

export type AUDITS_review_commentOrder = {
  asc?: InputMaybe<AUDITS_review_commentOrderable>;
  desc?: InputMaybe<AUDITS_review_commentOrderable>;
  then?: InputMaybe<AUDITS_review_commentOrder>;
};

export enum AUDITS_review_commentOrderable {
  closedAt = 'closedAt',
  content = 'content',
  createdAt = 'createdAt',
  guid = 'guid',
  resolvedAt = 'resolvedAt'
}

export type AUDITS_review_commentPatch = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  closedAt?: InputMaybe<Scalars['DateTime']>;
  closedBy?: InputMaybe<AUDITS_accountRef>;
  content?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  document?: InputMaybe<AUDITS_documentRef>;
  guid?: InputMaybe<Scalars['String']>;
  resolvedAt?: InputMaybe<Scalars['DateTime']>;
  resolvedBy?: InputMaybe<AUDITS_accountRef>;
  review?: InputMaybe<AUDITS_reviewRef>;
  status?: InputMaybe<AUDITS_review_commentStatus>;
  tableCell?: InputMaybe<AUDITS_document_blockTableCellRef>;
  type?: InputMaybe<AUDITS_review_commentType>;
  version?: InputMaybe<AUDITS_project_versionRef>;
};

export type AUDITS_review_commentRef = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  closedAt?: InputMaybe<Scalars['DateTime']>;
  closedBy?: InputMaybe<AUDITS_accountRef>;
  content?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AUDITS_accountRef>;
  document?: InputMaybe<AUDITS_documentRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  resolvedAt?: InputMaybe<Scalars['DateTime']>;
  resolvedBy?: InputMaybe<AUDITS_accountRef>;
  review?: InputMaybe<AUDITS_reviewRef>;
  status?: InputMaybe<AUDITS_review_commentStatus>;
  tableCell?: InputMaybe<AUDITS_document_blockTableCellRef>;
  type?: InputMaybe<AUDITS_review_commentType>;
  version?: InputMaybe<AUDITS_project_versionRef>;
};

export enum AUDITS_review_commentStatus {
  CLOSED = 'CLOSED',
  OPEN = 'OPEN',
  RESOLVED = 'RESOLVED'
}

export type AUDITS_review_commentStatus_exact = {
  between?: InputMaybe<AUDITS_review_commentStatus>;
  eq?: InputMaybe<AUDITS_review_commentStatus>;
  ge?: InputMaybe<AUDITS_review_commentStatus>;
  gt?: InputMaybe<AUDITS_review_commentStatus>;
  in?: InputMaybe<Array<InputMaybe<AUDITS_review_commentStatus>>>;
  le?: InputMaybe<AUDITS_review_commentStatus>;
  lt?: InputMaybe<AUDITS_review_commentStatus>;
};

export enum AUDITS_review_commentType {
  ERROR = 'ERROR',
  INFO = 'INFO',
  WARNING = 'WARNING'
}

export type AUDITS_review_commentType_exact = {
  between?: InputMaybe<AUDITS_review_commentType>;
  eq?: InputMaybe<AUDITS_review_commentType>;
  ge?: InputMaybe<AUDITS_review_commentType>;
  gt?: InputMaybe<AUDITS_review_commentType>;
  in?: InputMaybe<Array<InputMaybe<AUDITS_review_commentType>>>;
  le?: InputMaybe<AUDITS_review_commentType>;
  lt?: InputMaybe<AUDITS_review_commentType>;
};

export enum AUDITS_role {
  ADMIN = 'ADMIN',
  AUDITOR = 'AUDITOR',
  AUTHOR = 'AUTHOR',
  DISABLED = 'DISABLED',
  REVIEWER = 'REVIEWER'
}

export type AUDITS_role_exact = {
  between?: InputMaybe<AUDITS_role>;
  eq?: InputMaybe<AUDITS_role>;
  ge?: InputMaybe<AUDITS_role>;
  gt?: InputMaybe<AUDITS_role>;
  in?: InputMaybe<Array<InputMaybe<AUDITS_role>>>;
  le?: InputMaybe<AUDITS_role>;
  lt?: InputMaybe<AUDITS_role>;
};

export enum AUDITS_versionType {
  CORRECTIVE = 'CORRECTIVE',
  UPDATE = 'UPDATE'
}

export type AUDITS_versionType_exact = {
  between?: InputMaybe<AUDITS_versionType>;
  eq?: InputMaybe<AUDITS_versionType>;
  ge?: InputMaybe<AUDITS_versionType>;
  gt?: InputMaybe<AUDITS_versionType>;
  in?: InputMaybe<Array<InputMaybe<AUDITS_versionType>>>;
  le?: InputMaybe<AUDITS_versionType>;
  lt?: InputMaybe<AUDITS_versionType>;
};

export type Account = {
  __typename?: 'Account';
  auditsAccount?: Maybe<AUDITS_account>;
  chatbotsAccount?: Maybe<Chatbots_account>;
  cmsAccount?: Maybe<CMS_account>;
  contact?: Maybe<Contact>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<Account>;
  createdMeetings: Array<Meeting>;
  createdMeetingsAggregate?: Maybe<MeetingAggregateResult>;
  crmAccount?: Maybe<CRM_account>;
  defaultRoute?: Maybe<Org360_packageType>;
  emails: Array<Email>;
  emailsAggregate?: Maybe<EmailAggregateResult>;
  erpAccount?: Maybe<ERP_account>;
  events: Array<Account_event>;
  eventsAggregate?: Maybe<Account_eventAggregateResult>;
  id: Scalars['ID'];
  integrations: Array<Integrations_account>;
  integrationsAggregate?: Maybe<Integrations_accountAggregateResult>;
  lmsAccount?: Maybe<LMS_account>;
  logs: Array<Account_log>;
  logsAggregate?: Maybe<Account_logAggregateResult>;
  meetings: Array<MeetingAccount>;
  meetingsAggregate?: Maybe<MeetingAccountAggregateResult>;
  notifications: Array<Account_notification>;
  notificationsAggregate?: Maybe<Account_notificationAggregateResult>;
  org360?: Maybe<Org360>;
  orgAccount?: Maybe<ORG_account>;
  proposalStakeholders: Array<Proposal_stakeholder>;
  proposalStakeholdersAggregate?: Maybe<Proposal_stakeholderAggregateResult>;
  proposals: Array<Proposal>;
  proposalsAggregate?: Maybe<ProposalAggregateResult>;
  role: Account_role;
  sessions: Array<Account_session>;
  sessionsAggregate?: Maybe<Account_sessionAggregateResult>;
  type: Account_type;
  user: User;
  userPlaceholder?: Maybe<Scalars['String']>;
  vetAccount?: Maybe<VET_account>;
};


export type AccountauditsAccountArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type AccountchatbotsAccountArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type AccountcmsAccountArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};


export type AccountcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type AccountcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type AccountcreatedMeetingsArgs = {
  filter?: InputMaybe<MeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingOrder>;
};


export type AccountcreatedMeetingsAggregateArgs = {
  filter?: InputMaybe<MeetingFilter>;
};


export type AccountcrmAccountArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type AccountemailsArgs = {
  filter?: InputMaybe<EmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailOrder>;
};


export type AccountemailsAggregateArgs = {
  filter?: InputMaybe<EmailFilter>;
};


export type AccounterpAccountArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type AccounteventsArgs = {
  filter?: InputMaybe<Account_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_eventOrder>;
};


export type AccounteventsAggregateArgs = {
  filter?: InputMaybe<Account_eventFilter>;
};


export type AccountintegrationsArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_accountOrder>;
};


export type AccountintegrationsAggregateArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type AccountlmsAccountArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type AccountlogsArgs = {
  filter?: InputMaybe<Account_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_logOrder>;
};


export type AccountlogsAggregateArgs = {
  filter?: InputMaybe<Account_logFilter>;
};


export type AccountmeetingsArgs = {
  filter?: InputMaybe<MeetingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingAccountOrder>;
};


export type AccountmeetingsAggregateArgs = {
  filter?: InputMaybe<MeetingAccountFilter>;
};


export type AccountnotificationsArgs = {
  filter?: InputMaybe<Account_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_notificationOrder>;
};


export type AccountnotificationsAggregateArgs = {
  filter?: InputMaybe<Account_notificationFilter>;
};


export type Accountorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type AccountorgAccountArgs = {
  filter?: InputMaybe<ORG_accountFilter>;
};


export type AccountproposalStakeholdersArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderOrder>;
};


export type AccountproposalStakeholdersAggregateArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
};


export type AccountproposalsArgs = {
  filter?: InputMaybe<ProposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProposalOrder>;
};


export type AccountproposalsAggregateArgs = {
  filter?: InputMaybe<ProposalFilter>;
};


export type AccountsessionsArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionOrder>;
};


export type AccountsessionsAggregateArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
};


export type AccountuserArgs = {
  filter?: InputMaybe<UserFilter>;
};


export type AccountvetAccountArgs = {
  filter?: InputMaybe<VET_accountFilter>;
};

export type AccountAggregateResult = {
  __typename?: 'AccountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  userPlaceholderMax?: Maybe<Scalars['String']>;
  userPlaceholderMin?: Maybe<Scalars['String']>;
};

export type AccountFilter = {
  and?: InputMaybe<Array<InputMaybe<AccountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<AccountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AccountFilter>;
  or?: InputMaybe<Array<InputMaybe<AccountFilter>>>;
};

export enum AccountHasFilter {
  auditsAccount = 'auditsAccount',
  chatbotsAccount = 'chatbotsAccount',
  cmsAccount = 'cmsAccount',
  contact = 'contact',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  createdMeetings = 'createdMeetings',
  crmAccount = 'crmAccount',
  defaultRoute = 'defaultRoute',
  emails = 'emails',
  erpAccount = 'erpAccount',
  events = 'events',
  integrations = 'integrations',
  lmsAccount = 'lmsAccount',
  logs = 'logs',
  meetings = 'meetings',
  notifications = 'notifications',
  org360 = 'org360',
  orgAccount = 'orgAccount',
  proposalStakeholders = 'proposalStakeholders',
  proposals = 'proposals',
  role = 'role',
  sessions = 'sessions',
  type = 'type',
  user = 'user',
  userPlaceholder = 'userPlaceholder',
  vetAccount = 'vetAccount'
}

export type AccountOrder = {
  asc?: InputMaybe<AccountOrderable>;
  desc?: InputMaybe<AccountOrderable>;
  then?: InputMaybe<AccountOrder>;
};

export enum AccountOrderable {
  createdAt = 'createdAt',
  userPlaceholder = 'userPlaceholder'
}

export type AccountPatch = {
  auditsAccount?: InputMaybe<AUDITS_accountRef>;
  chatbotsAccount?: InputMaybe<Chatbots_accountRef>;
  cmsAccount?: InputMaybe<CMS_accountRef>;
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  createdMeetings?: InputMaybe<Array<MeetingRef>>;
  crmAccount?: InputMaybe<CRM_accountRef>;
  defaultRoute?: InputMaybe<Org360_packageType>;
  emails?: InputMaybe<Array<EmailRef>>;
  erpAccount?: InputMaybe<ERP_accountRef>;
  events?: InputMaybe<Array<Account_eventRef>>;
  integrations?: InputMaybe<Array<Integrations_accountRef>>;
  lmsAccount?: InputMaybe<LMS_accountRef>;
  logs?: InputMaybe<Array<Account_logRef>>;
  meetings?: InputMaybe<Array<MeetingAccountRef>>;
  notifications?: InputMaybe<Array<Account_notificationRef>>;
  org360?: InputMaybe<Org360Ref>;
  orgAccount?: InputMaybe<ORG_accountRef>;
  proposalStakeholders?: InputMaybe<Array<Proposal_stakeholderRef>>;
  proposals?: InputMaybe<Array<ProposalRef>>;
  role?: InputMaybe<Account_role>;
  sessions?: InputMaybe<Array<Account_sessionRef>>;
  type?: InputMaybe<Account_type>;
  user?: InputMaybe<UserRef>;
  userPlaceholder?: InputMaybe<Scalars['String']>;
  vetAccount?: InputMaybe<VET_accountRef>;
};

export type AccountRef = {
  auditsAccount?: InputMaybe<AUDITS_accountRef>;
  chatbotsAccount?: InputMaybe<Chatbots_accountRef>;
  cmsAccount?: InputMaybe<CMS_accountRef>;
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  createdMeetings?: InputMaybe<Array<MeetingRef>>;
  crmAccount?: InputMaybe<CRM_accountRef>;
  defaultRoute?: InputMaybe<Org360_packageType>;
  emails?: InputMaybe<Array<EmailRef>>;
  erpAccount?: InputMaybe<ERP_accountRef>;
  events?: InputMaybe<Array<Account_eventRef>>;
  id?: InputMaybe<Scalars['ID']>;
  integrations?: InputMaybe<Array<Integrations_accountRef>>;
  lmsAccount?: InputMaybe<LMS_accountRef>;
  logs?: InputMaybe<Array<Account_logRef>>;
  meetings?: InputMaybe<Array<MeetingAccountRef>>;
  notifications?: InputMaybe<Array<Account_notificationRef>>;
  org360?: InputMaybe<Org360Ref>;
  orgAccount?: InputMaybe<ORG_accountRef>;
  proposalStakeholders?: InputMaybe<Array<Proposal_stakeholderRef>>;
  proposals?: InputMaybe<Array<ProposalRef>>;
  role?: InputMaybe<Account_role>;
  sessions?: InputMaybe<Array<Account_sessionRef>>;
  type?: InputMaybe<Account_type>;
  user?: InputMaybe<UserRef>;
  userPlaceholder?: InputMaybe<Scalars['String']>;
  vetAccount?: InputMaybe<VET_accountRef>;
};

export type Account_event = {
  __typename?: 'Account_event';
  account: Account;
  createdAt: Scalars['DateTime'];
  crmAccountEvent?: Maybe<CRM_accountEvent>;
  erpAccountEvent?: Maybe<ERP_accountEvent>;
  event: Event;
  id: Scalars['ID'];
  invitedBy: Account;
  reminder?: Maybe<Account_eventReminder>;
  reminderAt?: Maybe<Scalars['DateTime']>;
  status: Account_eventStatus;
};


export type Account_eventaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Account_eventcrmAccountEventArgs = {
  filter?: InputMaybe<CRM_accountEventFilter>;
};


export type Account_eventerpAccountEventArgs = {
  filter?: InputMaybe<ERP_accountEventFilter>;
};


export type Account_eventeventArgs = {
  filter?: InputMaybe<EventFilter>;
};


export type Account_eventinvitedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};

export type Account_eventAggregateResult = {
  __typename?: 'Account_eventAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  reminderAtMax?: Maybe<Scalars['DateTime']>;
  reminderAtMin?: Maybe<Scalars['DateTime']>;
};

export type Account_eventFilter = {
  and?: InputMaybe<Array<InputMaybe<Account_eventFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Account_eventHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Account_eventFilter>;
  or?: InputMaybe<Array<InputMaybe<Account_eventFilter>>>;
  reminder?: InputMaybe<Account_eventReminder_exact>;
  reminderAt?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<Account_eventStatus_exact>;
};

export enum Account_eventHasFilter {
  account = 'account',
  createdAt = 'createdAt',
  crmAccountEvent = 'crmAccountEvent',
  erpAccountEvent = 'erpAccountEvent',
  event = 'event',
  invitedBy = 'invitedBy',
  reminder = 'reminder',
  reminderAt = 'reminderAt',
  status = 'status'
}

export type Account_eventOrder = {
  asc?: InputMaybe<Account_eventOrderable>;
  desc?: InputMaybe<Account_eventOrderable>;
  then?: InputMaybe<Account_eventOrder>;
};

export enum Account_eventOrderable {
  createdAt = 'createdAt',
  reminderAt = 'reminderAt'
}

export type Account_eventPatch = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crmAccountEvent?: InputMaybe<CRM_accountEventRef>;
  erpAccountEvent?: InputMaybe<ERP_accountEventRef>;
  event?: InputMaybe<EventRef>;
  invitedBy?: InputMaybe<AccountRef>;
  reminder?: InputMaybe<Account_eventReminder>;
  reminderAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Account_eventStatus>;
};

export type Account_eventRef = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crmAccountEvent?: InputMaybe<CRM_accountEventRef>;
  erpAccountEvent?: InputMaybe<ERP_accountEventRef>;
  event?: InputMaybe<EventRef>;
  id?: InputMaybe<Scalars['ID']>;
  invitedBy?: InputMaybe<AccountRef>;
  reminder?: InputMaybe<Account_eventReminder>;
  reminderAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Account_eventStatus>;
};

export enum Account_eventReminder {
  FIFTEEN_MINUTES = 'FIFTEEN_MINUTES',
  FIVE_MINUTES = 'FIVE_MINUTES',
  ONE_HOUR = 'ONE_HOUR',
  TEN_MINUTES = 'TEN_MINUTES',
  THIRTY_MINUTES = 'THIRTY_MINUTES'
}

export type Account_eventReminder_exact = {
  between?: InputMaybe<Account_eventReminder>;
  eq?: InputMaybe<Account_eventReminder>;
  ge?: InputMaybe<Account_eventReminder>;
  gt?: InputMaybe<Account_eventReminder>;
  in?: InputMaybe<Array<InputMaybe<Account_eventReminder>>>;
  le?: InputMaybe<Account_eventReminder>;
  lt?: InputMaybe<Account_eventReminder>;
};

export enum Account_eventStatus {
  ACCEPTED = 'ACCEPTED',
  CANCELLED = 'CANCELLED',
  DECLINED = 'DECLINED',
  INVITED = 'INVITED',
  TENTATIVE = 'TENTATIVE'
}

export type Account_eventStatus_exact = {
  between?: InputMaybe<Account_eventStatus>;
  eq?: InputMaybe<Account_eventStatus>;
  ge?: InputMaybe<Account_eventStatus>;
  gt?: InputMaybe<Account_eventStatus>;
  in?: InputMaybe<Array<InputMaybe<Account_eventStatus>>>;
  le?: InputMaybe<Account_eventStatus>;
  lt?: InputMaybe<Account_eventStatus>;
};

export type Account_log = {
  __typename?: 'Account_log';
  account?: Maybe<Account>;
  createdAt: Scalars['DateTime'];
  id: Scalars['ID'];
  lms?: Maybe<LMS_accountLog>;
  org360: Org360;
  session: Account_session;
  sessionConnection?: Maybe<Account_sessionConnection>;
  type: Account_logType;
};


export type Account_logaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Account_loglmsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type Account_logorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type Account_logsessionArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
};


export type Account_logsessionConnectionArgs = {
  filter?: InputMaybe<Account_sessionConnectionFilter>;
};

export type Account_logAggregateResult = {
  __typename?: 'Account_logAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
};

export type Account_logFilter = {
  and?: InputMaybe<Array<InputMaybe<Account_logFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<Account_logHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Account_logFilter>;
  or?: InputMaybe<Array<InputMaybe<Account_logFilter>>>;
  type?: InputMaybe<Account_logType_hash>;
};

export enum Account_logHasFilter {
  account = 'account',
  createdAt = 'createdAt',
  lms = 'lms',
  org360 = 'org360',
  session = 'session',
  sessionConnection = 'sessionConnection',
  type = 'type'
}

export type Account_logOrder = {
  asc?: InputMaybe<Account_logOrderable>;
  desc?: InputMaybe<Account_logOrderable>;
  then?: InputMaybe<Account_logOrder>;
};

export enum Account_logOrderable {
  createdAt = 'createdAt'
}

export type Account_logPatch = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  lms?: InputMaybe<LMS_accountLogRef>;
  org360?: InputMaybe<Org360Ref>;
  session?: InputMaybe<Account_sessionRef>;
  sessionConnection?: InputMaybe<Account_sessionConnectionRef>;
  type?: InputMaybe<Account_logType>;
};

export type Account_logRef = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  lms?: InputMaybe<LMS_accountLogRef>;
  org360?: InputMaybe<Org360Ref>;
  session?: InputMaybe<Account_sessionRef>;
  sessionConnection?: InputMaybe<Account_sessionConnectionRef>;
  type?: InputMaybe<Account_logType>;
};

export enum Account_logType {
  CONNECTED = 'CONNECTED',
  DISCONNECTED = 'DISCONNECTED',
  LMS = 'LMS',
  LOGIN = 'LOGIN',
  LOGOUT = 'LOGOUT'
}

export type Account_logType_hash = {
  eq?: InputMaybe<Account_logType>;
  in?: InputMaybe<Array<InputMaybe<Account_logType>>>;
};

export type Account_notification = {
  __typename?: 'Account_notification';
  account: Account;
  action?: Maybe<Scalars['String']>;
  color: Account_notificationColor;
  createdAt: Scalars['DateTime'];
  deliverAt: Scalars['DateTime'];
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  readAt?: Maybe<Scalars['DateTime']>;
  status: Account_notificationStatus;
  title: Scalars['String'];
  type: Account_notificationType;
};


export type Account_notificationaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};

export type Account_notificationAggregateResult = {
  __typename?: 'Account_notificationAggregateResult';
  actionMax?: Maybe<Scalars['String']>;
  actionMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  deliverAtMax?: Maybe<Scalars['DateTime']>;
  deliverAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  readAtMax?: Maybe<Scalars['DateTime']>;
  readAtMin?: Maybe<Scalars['DateTime']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
};

export enum Account_notificationColor {
  ERROR = 'ERROR',
  INFO = 'INFO',
  PRIMARY = 'PRIMARY',
  SECONDARY = 'SECONDARY',
  SUCCESS = 'SUCCESS',
  WARNING = 'WARNING'
}

export type Account_notificationFilter = {
  and?: InputMaybe<Array<InputMaybe<Account_notificationFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Account_notificationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Account_notificationFilter>;
  or?: InputMaybe<Array<InputMaybe<Account_notificationFilter>>>;
  status?: InputMaybe<Account_notificationStatus_exact>;
  title?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<Account_notificationType_exact>;
};

export enum Account_notificationHasFilter {
  account = 'account',
  action = 'action',
  color = 'color',
  createdAt = 'createdAt',
  deliverAt = 'deliverAt',
  description = 'description',
  readAt = 'readAt',
  status = 'status',
  title = 'title',
  type = 'type'
}

export type Account_notificationOrder = {
  asc?: InputMaybe<Account_notificationOrderable>;
  desc?: InputMaybe<Account_notificationOrderable>;
  then?: InputMaybe<Account_notificationOrder>;
};

export enum Account_notificationOrderable {
  action = 'action',
  createdAt = 'createdAt',
  deliverAt = 'deliverAt',
  description = 'description',
  readAt = 'readAt',
  title = 'title'
}

export type Account_notificationPatch = {
  account?: InputMaybe<AccountRef>;
  action?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Account_notificationColor>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deliverAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  readAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Account_notificationStatus>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Account_notificationType>;
};

export type Account_notificationRef = {
  account?: InputMaybe<AccountRef>;
  action?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Account_notificationColor>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deliverAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  readAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Account_notificationStatus>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Account_notificationType>;
};

export enum Account_notificationStatus {
  DELIVERED = 'DELIVERED',
  NEW = 'NEW',
  READ = 'READ'
}

export type Account_notificationStatus_exact = {
  between?: InputMaybe<Account_notificationStatus>;
  eq?: InputMaybe<Account_notificationStatus>;
  ge?: InputMaybe<Account_notificationStatus>;
  gt?: InputMaybe<Account_notificationStatus>;
  in?: InputMaybe<Array<InputMaybe<Account_notificationStatus>>>;
  le?: InputMaybe<Account_notificationStatus>;
  lt?: InputMaybe<Account_notificationStatus>;
};

export enum Account_notificationType {
  EVENT = 'EVENT',
  MEETING = 'MEETING',
  MESSAGE = 'MESSAGE',
  REMINDER = 'REMINDER',
  TMP_FILE = 'TMP_FILE'
}

export type Account_notificationType_exact = {
  between?: InputMaybe<Account_notificationType>;
  eq?: InputMaybe<Account_notificationType>;
  ge?: InputMaybe<Account_notificationType>;
  gt?: InputMaybe<Account_notificationType>;
  in?: InputMaybe<Array<InputMaybe<Account_notificationType>>>;
  le?: InputMaybe<Account_notificationType>;
  lt?: InputMaybe<Account_notificationType>;
};

export enum Account_role {
  ADMIN = 'ADMIN',
  DISABLED = 'DISABLED',
  GUEST = 'GUEST',
  MANAGER = 'MANAGER',
  USER = 'USER'
}

export type Account_session = {
  __typename?: 'Account_session';
  account?: Maybe<Account>;
  connectionTasks?: Maybe<Array<Account_sessionConnectionTask>>;
  connectionTasksAggregate?: Maybe<Account_sessionConnectionTaskAggregateResult>;
  connections?: Maybe<Array<Account_sessionConnection>>;
  connectionsAggregate?: Maybe<Account_sessionConnectionAggregateResult>;
  endAt?: Maybe<Scalars['DateTime']>;
  expiredAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  logs: Array<Account_log>;
  logsAggregate?: Maybe<Account_logAggregateResult>;
  org360: Org360;
  startAt: Scalars['DateTime'];
  tasks: Array<Account_sessionTask>;
  tasksAggregate?: Maybe<Account_sessionTaskAggregateResult>;
};


export type Account_sessionaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Account_sessionconnectionTasksArgs = {
  filter?: InputMaybe<Account_sessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionTaskOrder>;
};


export type Account_sessionconnectionTasksAggregateArgs = {
  filter?: InputMaybe<Account_sessionConnectionTaskFilter>;
};


export type Account_sessionconnectionsArgs = {
  filter?: InputMaybe<Account_sessionConnectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionOrder>;
};


export type Account_sessionconnectionsAggregateArgs = {
  filter?: InputMaybe<Account_sessionConnectionFilter>;
};


export type Account_sessionlogsArgs = {
  filter?: InputMaybe<Account_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_logOrder>;
};


export type Account_sessionlogsAggregateArgs = {
  filter?: InputMaybe<Account_logFilter>;
};


export type Account_sessionorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type Account_sessiontasksArgs = {
  filter?: InputMaybe<Account_sessionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionTaskOrder>;
};


export type Account_sessiontasksAggregateArgs = {
  filter?: InputMaybe<Account_sessionTaskFilter>;
};

export type Account_sessionAggregateResult = {
  __typename?: 'Account_sessionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  expiredAtMax?: Maybe<Scalars['DateTime']>;
  expiredAtMin?: Maybe<Scalars['DateTime']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
};

export type Account_sessionConnection = {
  __typename?: 'Account_sessionConnection';
  endAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  logs: Array<Account_log>;
  logsAggregate?: Maybe<Account_logAggregateResult>;
  org360: Org360;
  session: Account_session;
  startAt: Scalars['DateTime'];
  tasks: Array<Account_sessionConnectionTask>;
  tasksAggregate?: Maybe<Account_sessionConnectionTaskAggregateResult>;
};


export type Account_sessionConnectionlogsArgs = {
  filter?: InputMaybe<Account_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_logOrder>;
};


export type Account_sessionConnectionlogsAggregateArgs = {
  filter?: InputMaybe<Account_logFilter>;
};


export type Account_sessionConnectionorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type Account_sessionConnectionsessionArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
};


export type Account_sessionConnectiontasksArgs = {
  filter?: InputMaybe<Account_sessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionTaskOrder>;
};


export type Account_sessionConnectiontasksAggregateArgs = {
  filter?: InputMaybe<Account_sessionConnectionTaskFilter>;
};

export type Account_sessionConnectionAggregateResult = {
  __typename?: 'Account_sessionConnectionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
};

export type Account_sessionConnectionFilter = {
  and?: InputMaybe<Array<InputMaybe<Account_sessionConnectionFilter>>>;
  endAt?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<Account_sessionConnectionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Account_sessionConnectionFilter>;
  or?: InputMaybe<Array<InputMaybe<Account_sessionConnectionFilter>>>;
  startAt?: InputMaybe<DateTimeFilter>;
};

export enum Account_sessionConnectionHasFilter {
  endAt = 'endAt',
  logs = 'logs',
  org360 = 'org360',
  session = 'session',
  startAt = 'startAt',
  tasks = 'tasks'
}

export type Account_sessionConnectionOrder = {
  asc?: InputMaybe<Account_sessionConnectionOrderable>;
  desc?: InputMaybe<Account_sessionConnectionOrderable>;
  then?: InputMaybe<Account_sessionConnectionOrder>;
};

export enum Account_sessionConnectionOrderable {
  endAt = 'endAt',
  startAt = 'startAt'
}

export type Account_sessionConnectionPatch = {
  endAt?: InputMaybe<Scalars['DateTime']>;
  logs?: InputMaybe<Array<Account_logRef>>;
  org360?: InputMaybe<Org360Ref>;
  session?: InputMaybe<Account_sessionRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  tasks?: InputMaybe<Array<Account_sessionConnectionTaskRef>>;
};

export type Account_sessionConnectionRef = {
  endAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  logs?: InputMaybe<Array<Account_logRef>>;
  org360?: InputMaybe<Org360Ref>;
  session?: InputMaybe<Account_sessionRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  tasks?: InputMaybe<Array<Account_sessionConnectionTaskRef>>;
};

export type Account_sessionConnectionTask = {
  __typename?: 'Account_sessionConnectionTask';
  completedAt?: Maybe<Scalars['DateTime']>;
  connection: Account_sessionConnection;
  createdAt: Scalars['DateTime'];
  event: Account_sessionTaskEvent;
  id: Scalars['ID'];
  org360: Org360;
  payload?: Maybe<Scalars['String']>;
  session: Account_session;
  type: Account_sessionTaskType;
};


export type Account_sessionConnectionTaskconnectionArgs = {
  filter?: InputMaybe<Account_sessionConnectionFilter>;
};


export type Account_sessionConnectionTaskorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type Account_sessionConnectionTasksessionArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
};

export type Account_sessionConnectionTaskAggregateResult = {
  __typename?: 'Account_sessionConnectionTaskAggregateResult';
  completedAtMax?: Maybe<Scalars['DateTime']>;
  completedAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  payloadMax?: Maybe<Scalars['String']>;
  payloadMin?: Maybe<Scalars['String']>;
};

export type Account_sessionConnectionTaskFilter = {
  and?: InputMaybe<Array<InputMaybe<Account_sessionConnectionTaskFilter>>>;
  completedAt?: InputMaybe<DateTimeFilter>;
  event?: InputMaybe<Account_sessionTaskEvent_hash>;
  has?: InputMaybe<Array<InputMaybe<Account_sessionConnectionTaskHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Account_sessionConnectionTaskFilter>;
  or?: InputMaybe<Array<InputMaybe<Account_sessionConnectionTaskFilter>>>;
  type?: InputMaybe<Account_sessionTaskType_hash>;
};

export enum Account_sessionConnectionTaskHasFilter {
  completedAt = 'completedAt',
  connection = 'connection',
  createdAt = 'createdAt',
  event = 'event',
  org360 = 'org360',
  payload = 'payload',
  session = 'session',
  type = 'type'
}

export type Account_sessionConnectionTaskOrder = {
  asc?: InputMaybe<Account_sessionConnectionTaskOrderable>;
  desc?: InputMaybe<Account_sessionConnectionTaskOrderable>;
  then?: InputMaybe<Account_sessionConnectionTaskOrder>;
};

export enum Account_sessionConnectionTaskOrderable {
  completedAt = 'completedAt',
  createdAt = 'createdAt',
  payload = 'payload'
}

export type Account_sessionConnectionTaskPatch = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  connection?: InputMaybe<Account_sessionConnectionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<Account_sessionTaskEvent>;
  org360?: InputMaybe<Org360Ref>;
  payload?: InputMaybe<Scalars['String']>;
  session?: InputMaybe<Account_sessionRef>;
  type?: InputMaybe<Account_sessionTaskType>;
};

export type Account_sessionConnectionTaskRef = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  connection?: InputMaybe<Account_sessionConnectionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<Account_sessionTaskEvent>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  payload?: InputMaybe<Scalars['String']>;
  session?: InputMaybe<Account_sessionRef>;
  type?: InputMaybe<Account_sessionTaskType>;
};

export type Account_sessionFilter = {
  and?: InputMaybe<Array<InputMaybe<Account_sessionFilter>>>;
  endAt?: InputMaybe<DateTimeFilter>;
  expiredAt?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<Account_sessionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Account_sessionFilter>;
  or?: InputMaybe<Array<InputMaybe<Account_sessionFilter>>>;
  startAt?: InputMaybe<DateTimeFilter>;
};

export enum Account_sessionHasFilter {
  account = 'account',
  connectionTasks = 'connectionTasks',
  connections = 'connections',
  endAt = 'endAt',
  expiredAt = 'expiredAt',
  logs = 'logs',
  org360 = 'org360',
  startAt = 'startAt',
  tasks = 'tasks'
}

export type Account_sessionOrder = {
  asc?: InputMaybe<Account_sessionOrderable>;
  desc?: InputMaybe<Account_sessionOrderable>;
  then?: InputMaybe<Account_sessionOrder>;
};

export enum Account_sessionOrderable {
  endAt = 'endAt',
  expiredAt = 'expiredAt',
  startAt = 'startAt'
}

export type Account_sessionPatch = {
  account?: InputMaybe<AccountRef>;
  connectionTasks?: InputMaybe<Array<Account_sessionConnectionTaskRef>>;
  connections?: InputMaybe<Array<Account_sessionConnectionRef>>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  logs?: InputMaybe<Array<Account_logRef>>;
  org360?: InputMaybe<Org360Ref>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  tasks?: InputMaybe<Array<Account_sessionTaskRef>>;
};

export type Account_sessionRef = {
  account?: InputMaybe<AccountRef>;
  connectionTasks?: InputMaybe<Array<Account_sessionConnectionTaskRef>>;
  connections?: InputMaybe<Array<Account_sessionConnectionRef>>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  logs?: InputMaybe<Array<Account_logRef>>;
  org360?: InputMaybe<Org360Ref>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  tasks?: InputMaybe<Array<Account_sessionTaskRef>>;
};

export type Account_sessionTask = {
  __typename?: 'Account_sessionTask';
  completedAt?: Maybe<Scalars['DateTime']>;
  createdAt: Scalars['DateTime'];
  event: Account_sessionTaskEvent;
  id: Scalars['ID'];
  org360: Org360;
  payload?: Maybe<Scalars['String']>;
  session: Account_session;
  type: Account_sessionTaskType;
};


export type Account_sessionTaskorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type Account_sessionTasksessionArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
};

export type Account_sessionTaskAggregateResult = {
  __typename?: 'Account_sessionTaskAggregateResult';
  completedAtMax?: Maybe<Scalars['DateTime']>;
  completedAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  payloadMax?: Maybe<Scalars['String']>;
  payloadMin?: Maybe<Scalars['String']>;
};

export enum Account_sessionTaskEvent {
  ON_CLOSE = 'ON_CLOSE',
  ON_EXPIRED = 'ON_EXPIRED'
}

export type Account_sessionTaskEvent_hash = {
  eq?: InputMaybe<Account_sessionTaskEvent>;
  in?: InputMaybe<Array<InputMaybe<Account_sessionTaskEvent>>>;
};

export type Account_sessionTaskFilter = {
  and?: InputMaybe<Array<InputMaybe<Account_sessionTaskFilter>>>;
  completedAt?: InputMaybe<DateTimeFilter>;
  event?: InputMaybe<Account_sessionTaskEvent_hash>;
  has?: InputMaybe<Array<InputMaybe<Account_sessionTaskHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Account_sessionTaskFilter>;
  or?: InputMaybe<Array<InputMaybe<Account_sessionTaskFilter>>>;
  type?: InputMaybe<Account_sessionTaskType_hash>;
};

export enum Account_sessionTaskHasFilter {
  completedAt = 'completedAt',
  createdAt = 'createdAt',
  event = 'event',
  org360 = 'org360',
  payload = 'payload',
  session = 'session',
  type = 'type'
}

export type Account_sessionTaskOrder = {
  asc?: InputMaybe<Account_sessionTaskOrderable>;
  desc?: InputMaybe<Account_sessionTaskOrderable>;
  then?: InputMaybe<Account_sessionTaskOrder>;
};

export enum Account_sessionTaskOrderable {
  completedAt = 'completedAt',
  createdAt = 'createdAt',
  payload = 'payload'
}

export type Account_sessionTaskPatch = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<Account_sessionTaskEvent>;
  org360?: InputMaybe<Org360Ref>;
  payload?: InputMaybe<Scalars['String']>;
  session?: InputMaybe<Account_sessionRef>;
  type?: InputMaybe<Account_sessionTaskType>;
};

export type Account_sessionTaskRef = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<Account_sessionTaskEvent>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  payload?: InputMaybe<Scalars['String']>;
  session?: InputMaybe<Account_sessionRef>;
  type?: InputMaybe<Account_sessionTaskType>;
};

export enum Account_sessionTaskType {
  SET_LOG = 'SET_LOG'
}

export type Account_sessionTaskType_hash = {
  eq?: InputMaybe<Account_sessionTaskType>;
  in?: InputMaybe<Array<InputMaybe<Account_sessionTaskType>>>;
};

export enum Account_type {
  SERVICE_ACCOUNT = 'SERVICE_ACCOUNT',
  USER = 'USER'
}

export type AddAUDITS_PACKAGEInput = {
  accounts: Array<AUDITS_accountRef>;
  blocks: Array<AUDITS_document_blockRef>;
  createdAt: Scalars['DateTime'];
  documents: Array<AUDITS_documentRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  org360: Org360Ref;
  projectVersions: Array<AUDITS_project_versionRef>;
  projects: Array<AUDITS_projectRef>;
};

export type AddAUDITS_PACKAGEPayload = {
  __typename?: 'AddAUDITS_PACKAGEPayload';
  aUDITS_PACKAGE?: Maybe<Array<Maybe<AUDITS_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_PACKAGEPayloadaUDITS_PACKAGEArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_PACKAGEOrder>;
};

export type AddAUDITS_accountInput = {
  account: AccountRef;
  createdAt: Scalars['DateTime'];
  createdBy: AccountRef;
  guid: Scalars['String'];
  package: AUDITS_PACKAGERef;
  reviews: Array<AUDITS_review_accountRef>;
  role: Array<AUDITS_role>;
};

export type AddAUDITS_accountPayload = {
  __typename?: 'AddAUDITS_accountPayload';
  aUDITS_account?: Maybe<Array<Maybe<AUDITS_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_accountPayloadaUDITS_accountArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_accountOrder>;
};

export type AddAUDITS_documentInput = {
  authors: Array<AUDITS_accountRef>;
  blocks: Array<AUDITS_document_blockRef>;
  comments: Array<AUDITS_review_commentRef>;
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_accountRef;
  description: Scalars['String'];
  file?: InputMaybe<AUDITS_fileRef>;
  guid: Scalars['String'];
  package: AUDITS_PACKAGERef;
  previousVersion?: InputMaybe<AUDITS_documentRef>;
  project: AUDITS_projectRef;
  projectVersion: AUDITS_project_versionRef;
  title: Scalars['String'];
  type: AUDITS_versionType;
  version: Scalars['Int'];
};

export type AddAUDITS_documentPayload = {
  __typename?: 'AddAUDITS_documentPayload';
  aUDITS_document?: Maybe<Array<Maybe<AUDITS_document>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_documentPayloadaUDITS_documentArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_documentOrder>;
};

export type AddAUDITS_document_blockImageInput = {
  alt: Scalars['String'];
  block: AUDITS_document_blockRef;
  file?: InputMaybe<AUDITS_fileRef>;
  guid: Scalars['String'];
  url: Scalars['String'];
};

export type AddAUDITS_document_blockImagePayload = {
  __typename?: 'AddAUDITS_document_blockImagePayload';
  aUDITS_document_blockImage?: Maybe<Array<Maybe<AUDITS_document_blockImage>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_document_blockImagePayloadaUDITS_document_blockImageArgs = {
  filter?: InputMaybe<AUDITS_document_blockImageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockImageOrder>;
};

export type AddAUDITS_document_blockInput = {
  authors: Array<AUDITS_accountRef>;
  comments: Array<AUDITS_review_commentRef>;
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_accountRef;
  document: AUDITS_documentRef;
  guid: Scalars['String'];
  hide?: InputMaybe<Scalars['Boolean']>;
  image?: InputMaybe<AUDITS_document_blockImageRef>;
  index: Scalars['Int'];
  package: AUDITS_PACKAGERef;
  previousVersion?: InputMaybe<AUDITS_document_blockRef>;
  quote?: InputMaybe<AUDITS_document_blockQuoteRef>;
  table?: InputMaybe<AUDITS_document_blockTableRef>;
  text?: InputMaybe<AUDITS_document_blockTextRef>;
  title?: InputMaybe<AUDITS_document_blockTitleRef>;
  type: AUDITS_document_blockType;
};

export type AddAUDITS_document_blockPayload = {
  __typename?: 'AddAUDITS_document_blockPayload';
  aUDITS_document_block?: Maybe<Array<Maybe<AUDITS_document_block>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_document_blockPayloadaUDITS_document_blockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockOrder>;
};

export type AddAUDITS_document_blockQuoteInput = {
  block: AUDITS_document_blockRef;
  content: Scalars['String'];
  guid: Scalars['String'];
};

export type AddAUDITS_document_blockQuotePayload = {
  __typename?: 'AddAUDITS_document_blockQuotePayload';
  aUDITS_document_blockQuote?: Maybe<Array<Maybe<AUDITS_document_blockQuote>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_document_blockQuotePayloadaUDITS_document_blockQuoteArgs = {
  filter?: InputMaybe<AUDITS_document_blockQuoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockQuoteOrder>;
};

export type AddAUDITS_document_blockTableCellInput = {
  comments: Array<AUDITS_review_commentRef>;
  content: Scalars['String'];
  guid: Scalars['String'];
  index: Scalars['Int'];
  row: AUDITS_document_blockTableRowRef;
};

export type AddAUDITS_document_blockTableCellPayload = {
  __typename?: 'AddAUDITS_document_blockTableCellPayload';
  aUDITS_document_blockTableCell?: Maybe<Array<Maybe<AUDITS_document_blockTableCell>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_document_blockTableCellPayloadaUDITS_document_blockTableCellArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableCellFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableCellOrder>;
};

export type AddAUDITS_document_blockTableColumnInput = {
  content: Scalars['String'];
  guid: Scalars['String'];
  index: Scalars['Int'];
  table: AUDITS_document_blockTableRef;
};

export type AddAUDITS_document_blockTableColumnPayload = {
  __typename?: 'AddAUDITS_document_blockTableColumnPayload';
  aUDITS_document_blockTableColumn?: Maybe<Array<Maybe<AUDITS_document_blockTableColumn>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_document_blockTableColumnPayloadaUDITS_document_blockTableColumnArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableColumnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableColumnOrder>;
};

export type AddAUDITS_document_blockTableInput = {
  block: AUDITS_document_blockRef;
  columns: Array<AUDITS_document_blockTableColumnRef>;
  guid: Scalars['String'];
  rows: Array<AUDITS_document_blockTableRowRef>;
  title: Scalars['String'];
};

export type AddAUDITS_document_blockTablePayload = {
  __typename?: 'AddAUDITS_document_blockTablePayload';
  aUDITS_document_blockTable?: Maybe<Array<Maybe<AUDITS_document_blockTable>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_document_blockTablePayloadaUDITS_document_blockTableArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableOrder>;
};

export type AddAUDITS_document_blockTableRowInput = {
  cells: Array<AUDITS_document_blockTableCellRef>;
  guid: Scalars['String'];
  index: Scalars['Int'];
  table: AUDITS_document_blockTableRef;
};

export type AddAUDITS_document_blockTableRowPayload = {
  __typename?: 'AddAUDITS_document_blockTableRowPayload';
  aUDITS_document_blockTableRow?: Maybe<Array<Maybe<AUDITS_document_blockTableRow>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_document_blockTableRowPayloadaUDITS_document_blockTableRowArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableRowFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableRowOrder>;
};

export type AddAUDITS_document_blockTextInput = {
  block: AUDITS_document_blockRef;
  content: Scalars['String'];
  guid: Scalars['String'];
  type: AUDITS_document_blockTextType;
};

export type AddAUDITS_document_blockTextPayload = {
  __typename?: 'AddAUDITS_document_blockTextPayload';
  aUDITS_document_blockText?: Maybe<Array<Maybe<AUDITS_document_blockText>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_document_blockTextPayloadaUDITS_document_blockTextArgs = {
  filter?: InputMaybe<AUDITS_document_blockTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTextOrder>;
};

export type AddAUDITS_document_blockTitleInput = {
  block: AUDITS_document_blockRef;
  content: Scalars['String'];
  guid: Scalars['String'];
  type: AUDITS_document_blockTitleType;
};

export type AddAUDITS_document_blockTitlePayload = {
  __typename?: 'AddAUDITS_document_blockTitlePayload';
  aUDITS_document_blockTitle?: Maybe<Array<Maybe<AUDITS_document_blockTitle>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_document_blockTitlePayloadaUDITS_document_blockTitleArgs = {
  filter?: InputMaybe<AUDITS_document_blockTitleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTitleOrder>;
};

export type AddAUDITS_fileInput = {
  blockImage?: InputMaybe<AUDITS_document_blockImageRef>;
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<AUDITS_accountRef>;
  document?: InputMaybe<AUDITS_documentRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid: Scalars['String'];
  label: Scalars['String'];
};

export type AddAUDITS_filePayload = {
  __typename?: 'AddAUDITS_filePayload';
  aUDITS_file?: Maybe<Array<Maybe<AUDITS_file>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_filePayloadaUDITS_fileArgs = {
  filter?: InputMaybe<AUDITS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_fileOrder>;
};

export type AddAUDITS_projectInput = {
  authors: Array<AUDITS_accountRef>;
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_accountRef;
  description?: InputMaybe<Scalars['String']>;
  documents: Array<AUDITS_documentRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  package: AUDITS_PACKAGERef;
  versions: Array<AUDITS_project_versionRef>;
};

export type AddAUDITS_projectPayload = {
  __typename?: 'AddAUDITS_projectPayload';
  aUDITS_project?: Maybe<Array<Maybe<AUDITS_project>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_projectPayloadaUDITS_projectArgs = {
  filter?: InputMaybe<AUDITS_projectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_projectOrder>;
};

export type AddAUDITS_project_versionInput = {
  archivedAt?: InputMaybe<Scalars['DateTime']>;
  archivedBy?: InputMaybe<AUDITS_accountRef>;
  authors: Array<AUDITS_accountRef>;
  comments: Array<AUDITS_review_commentRef>;
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_accountRef;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  deletedBy?: InputMaybe<AUDITS_accountRef>;
  description: Scalars['String'];
  documents: Array<AUDITS_documentRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  package: AUDITS_PACKAGERef;
  project: AUDITS_projectRef;
  publishedAt?: InputMaybe<Scalars['DateTime']>;
  publishedBy?: InputMaybe<AUDITS_accountRef>;
  reviews: Array<AUDITS_reviewRef>;
  status: AUDITS_project_versionStatus;
  type: AUDITS_versionType;
  version: Scalars['Int'];
};

export type AddAUDITS_project_versionPayload = {
  __typename?: 'AddAUDITS_project_versionPayload';
  aUDITS_project_version?: Maybe<Array<Maybe<AUDITS_project_version>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_project_versionPayloadaUDITS_project_versionArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_project_versionOrder>;
};

export type AddAUDITS_reviewInput = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  comments: Array<AUDITS_review_commentRef>;
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_accountRef;
  document?: InputMaybe<AUDITS_documentRef>;
  guid: Scalars['String'];
  projectVersion: AUDITS_project_versionRef;
  reviewers: Array<AUDITS_review_accountRef>;
};

export type AddAUDITS_reviewPayload = {
  __typename?: 'AddAUDITS_reviewPayload';
  aUDITS_review?: Maybe<Array<Maybe<AUDITS_review>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_reviewPayloadaUDITS_reviewArgs = {
  filter?: InputMaybe<AUDITS_reviewFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_reviewOrder>;
};

export type AddAUDITS_review_accountInput = {
  account: AUDITS_accountRef;
  assignedAt: Scalars['DateTime'];
  assignedBy?: InputMaybe<AUDITS_accountRef>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  review: AUDITS_reviewRef;
  role: AUDITS_role;
  startAt?: InputMaybe<Scalars['DateTime']>;
};

export type AddAUDITS_review_accountPayload = {
  __typename?: 'AddAUDITS_review_accountPayload';
  aUDITS_review_account?: Maybe<Array<Maybe<AUDITS_review_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_review_accountPayloadaUDITS_review_accountArgs = {
  filter?: InputMaybe<AUDITS_review_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_accountOrder>;
};

export type AddAUDITS_review_commentInput = {
  block?: InputMaybe<AUDITS_document_blockRef>;
  closedAt?: InputMaybe<Scalars['DateTime']>;
  closedBy?: InputMaybe<AUDITS_accountRef>;
  content: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy: AUDITS_accountRef;
  document?: InputMaybe<AUDITS_documentRef>;
  guid: Scalars['String'];
  resolvedAt?: InputMaybe<Scalars['DateTime']>;
  resolvedBy?: InputMaybe<AUDITS_accountRef>;
  review: AUDITS_reviewRef;
  status: AUDITS_review_commentStatus;
  tableCell?: InputMaybe<AUDITS_document_blockTableCellRef>;
  type: AUDITS_review_commentType;
  version?: InputMaybe<AUDITS_project_versionRef>;
};

export type AddAUDITS_review_commentPayload = {
  __typename?: 'AddAUDITS_review_commentPayload';
  aUDITS_review_comment?: Maybe<Array<Maybe<AUDITS_review_comment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAUDITS_review_commentPayloadaUDITS_review_commentArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_commentOrder>;
};

export type AddAccountInput = {
  auditsAccount?: InputMaybe<AUDITS_accountRef>;
  chatbotsAccount?: InputMaybe<Chatbots_accountRef>;
  cmsAccount?: InputMaybe<CMS_accountRef>;
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  createdMeetings: Array<MeetingRef>;
  crmAccount?: InputMaybe<CRM_accountRef>;
  defaultRoute?: InputMaybe<Org360_packageType>;
  emails: Array<EmailRef>;
  erpAccount?: InputMaybe<ERP_accountRef>;
  events: Array<Account_eventRef>;
  integrations: Array<Integrations_accountRef>;
  lmsAccount?: InputMaybe<LMS_accountRef>;
  logs: Array<Account_logRef>;
  meetings: Array<MeetingAccountRef>;
  notifications: Array<Account_notificationRef>;
  org360?: InputMaybe<Org360Ref>;
  orgAccount?: InputMaybe<ORG_accountRef>;
  proposalStakeholders: Array<Proposal_stakeholderRef>;
  proposals: Array<ProposalRef>;
  role?: InputMaybe<Account_role>;
  sessions: Array<Account_sessionRef>;
  type?: InputMaybe<Account_type>;
  user: UserRef;
  userPlaceholder?: InputMaybe<Scalars['String']>;
  vetAccount?: InputMaybe<VET_accountRef>;
};

export type AddAccountPayload = {
  __typename?: 'AddAccountPayload';
  account?: Maybe<Array<Maybe<Account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAccountPayloadaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AccountOrder>;
};

export type AddAccount_eventInput = {
  account: AccountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crmAccountEvent?: InputMaybe<CRM_accountEventRef>;
  erpAccountEvent?: InputMaybe<ERP_accountEventRef>;
  event: EventRef;
  invitedBy: AccountRef;
  reminder?: InputMaybe<Account_eventReminder>;
  reminderAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Account_eventStatus>;
};

export type AddAccount_eventPayload = {
  __typename?: 'AddAccount_eventPayload';
  account_event?: Maybe<Array<Maybe<Account_event>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAccount_eventPayloadaccount_eventArgs = {
  filter?: InputMaybe<Account_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_eventOrder>;
};

export type AddAccount_logInput = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  lms?: InputMaybe<LMS_accountLogRef>;
  org360: Org360Ref;
  session: Account_sessionRef;
  sessionConnection?: InputMaybe<Account_sessionConnectionRef>;
  type: Account_logType;
};

export type AddAccount_logPayload = {
  __typename?: 'AddAccount_logPayload';
  account_log?: Maybe<Array<Maybe<Account_log>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAccount_logPayloadaccount_logArgs = {
  filter?: InputMaybe<Account_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_logOrder>;
};

export type AddAccount_notificationInput = {
  account: AccountRef;
  action?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Account_notificationColor>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deliverAt: Scalars['DateTime'];
  description?: InputMaybe<Scalars['String']>;
  readAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Account_notificationStatus>;
  title: Scalars['String'];
  type?: InputMaybe<Account_notificationType>;
};

export type AddAccount_notificationPayload = {
  __typename?: 'AddAccount_notificationPayload';
  account_notification?: Maybe<Array<Maybe<Account_notification>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAccount_notificationPayloadaccount_notificationArgs = {
  filter?: InputMaybe<Account_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_notificationOrder>;
};

export type AddAccount_sessionConnectionInput = {
  endAt?: InputMaybe<Scalars['DateTime']>;
  logs: Array<Account_logRef>;
  org360: Org360Ref;
  session: Account_sessionRef;
  startAt: Scalars['DateTime'];
  tasks: Array<Account_sessionConnectionTaskRef>;
};

export type AddAccount_sessionConnectionPayload = {
  __typename?: 'AddAccount_sessionConnectionPayload';
  account_sessionConnection?: Maybe<Array<Maybe<Account_sessionConnection>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAccount_sessionConnectionPayloadaccount_sessionConnectionArgs = {
  filter?: InputMaybe<Account_sessionConnectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionOrder>;
};

export type AddAccount_sessionConnectionTaskInput = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  connection: Account_sessionConnectionRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  event: Account_sessionTaskEvent;
  org360: Org360Ref;
  payload?: InputMaybe<Scalars['String']>;
  session: Account_sessionRef;
  type: Account_sessionTaskType;
};

export type AddAccount_sessionConnectionTaskPayload = {
  __typename?: 'AddAccount_sessionConnectionTaskPayload';
  account_sessionConnectionTask?: Maybe<Array<Maybe<Account_sessionConnectionTask>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAccount_sessionConnectionTaskPayloadaccount_sessionConnectionTaskArgs = {
  filter?: InputMaybe<Account_sessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionTaskOrder>;
};

export type AddAccount_sessionInput = {
  account?: InputMaybe<AccountRef>;
  connectionTasks?: InputMaybe<Array<Account_sessionConnectionTaskRef>>;
  connections?: InputMaybe<Array<Account_sessionConnectionRef>>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  logs: Array<Account_logRef>;
  org360: Org360Ref;
  startAt: Scalars['DateTime'];
  tasks: Array<Account_sessionTaskRef>;
};

export type AddAccount_sessionPayload = {
  __typename?: 'AddAccount_sessionPayload';
  account_session?: Maybe<Array<Maybe<Account_session>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAccount_sessionPayloadaccount_sessionArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionOrder>;
};

export type AddAccount_sessionTaskInput = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  event: Account_sessionTaskEvent;
  org360: Org360Ref;
  payload?: InputMaybe<Scalars['String']>;
  session: Account_sessionRef;
  type: Account_sessionTaskType;
};

export type AddAccount_sessionTaskPayload = {
  __typename?: 'AddAccount_sessionTaskPayload';
  account_sessionTask?: Maybe<Array<Maybe<Account_sessionTask>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAccount_sessionTaskPayloadaccount_sessionTaskArgs = {
  filter?: InputMaybe<Account_sessionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionTaskOrder>;
};

export type AddAddressInput = {
  address1: Scalars['String'];
  address2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<ContactRef>;
  country?: InputMaybe<CountryRef>;
  fullAddress?: InputMaybe<Scalars['String']>;
  number?: InputMaybe<Scalars['String']>;
  roadType?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  type: Array<Address_type>;
  zipCode?: InputMaybe<Scalars['String']>;
};

export type AddAddressPayload = {
  __typename?: 'AddAddressPayload';
  address?: Maybe<Array<Maybe<Address>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAddressPayloadaddressArgs = {
  filter?: InputMaybe<AddressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AddressOrder>;
};

export type AddBankAccountInput = {
  BIC?: InputMaybe<Scalars['String']>;
  IBAN: Scalars['String'];
  accountHolder?: InputMaybe<Scalars['String']>;
  bank?: InputMaybe<BankRef>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankName?: InputMaybe<Scalars['String']>;
};

export type AddBankAccountPayload = {
  __typename?: 'AddBankAccountPayload';
  bankAccount?: Maybe<Array<Maybe<BankAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddBankAccountPayloadbankAccountArgs = {
  filter?: InputMaybe<BankAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BankAccountOrder>;
};

export type AddBankInput = {
  address: Scalars['String'];
  code: Scalars['String'];
  country: CountryRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  euroCode?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
};

export type AddBankPayload = {
  __typename?: 'AddBankPayload';
  bank?: Maybe<Array<Maybe<Bank>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddBankPayloadbankArgs = {
  filter?: InputMaybe<BankFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BankOrder>;
};

export type AddCMS_PACKAGEInput = {
  accounts: Array<CMS_accountRef>;
  appContacts: Array<CMS_appContactRef>;
  apps: Array<CMS_appRef>;
  authorAliases: Array<CMS_authorAliasRef>;
  contacts: Array<CMS_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  guid: Scalars['String'];
  org360: Org360Ref;
  websites: Array<CMS_websiteRef>;
};

export type AddCMS_PACKAGEPayload = {
  __typename?: 'AddCMS_PACKAGEPayload';
  cMS_PACKAGE?: Maybe<Array<Maybe<CMS_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_PACKAGEPayloadcMS_PACKAGEArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_PACKAGEOrder>;
};

export type AddCMS_accountInput = {
  account: AccountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  guid: Scalars['String'];
  package: CMS_PACKAGERef;
  roles: Array<CMS_roleType>;
};

export type AddCMS_accountPayload = {
  __typename?: 'AddCMS_accountPayload';
  cMS_account?: Maybe<Array<Maybe<CMS_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_accountPayloadcMS_accountArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_accountOrder>;
};

export type AddCMS_appContactInput = {
  app: CMS_appRef;
  contact: CMS_contactRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: CMS_accountRef;
  guid: Scalars['String'];
  package: CMS_PACKAGERef;
};

export type AddCMS_appContactPayload = {
  __typename?: 'AddCMS_appContactPayload';
  cMS_appContact?: Maybe<Array<Maybe<CMS_appContact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_appContactPayloadcMS_appContactArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appContactOrder>;
};

export type AddCMS_appInput = {
  contacts: Array<CMS_appContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: CMS_accountRef;
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  name: Scalars['String'];
  package: CMS_PACKAGERef;
  token: Scalars['String'];
};

export type AddCMS_appPayload = {
  __typename?: 'AddCMS_appPayload';
  cMS_app?: Maybe<Array<Maybe<CMS_app>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_appPayloadcMS_appArgs = {
  filter?: InputMaybe<CMS_appFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appOrder>;
};

export type AddCMS_authorAliasInput = {
  cmsPackage: CMS_PACKAGERef;
  createdAt: Scalars['DateTime'];
  createdBy: CMS_accountRef;
  guid: Scalars['String'];
  isDeleted: Scalars['Boolean'];
  name: Scalars['String'];
};

export type AddCMS_authorAliasPayload = {
  __typename?: 'AddCMS_authorAliasPayload';
  cMS_authorAlias?: Maybe<Array<Maybe<CMS_authorAlias>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_authorAliasPayloadcMS_authorAliasArgs = {
  filter?: InputMaybe<CMS_authorAliasFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_authorAliasOrder>;
};

export type AddCMS_contactInput = {
  appContacts: Array<CMS_appContactRef>;
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: CMS_accountRef;
  guid: Scalars['String'];
  package: CMS_PACKAGERef;
  token: Scalars['String'];
};

export type AddCMS_contactPayload = {
  __typename?: 'AddCMS_contactPayload';
  cMS_contact?: Maybe<Array<Maybe<CMS_contact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_contactPayloadcMS_contactArgs = {
  filter?: InputMaybe<CMS_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_contactOrder>;
};

export type AddCMS_fileInput = {
  blockImage?: InputMaybe<CMS_website_page_blockImageRef>;
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<CMS_accountRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid: Scalars['String'];
  label?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type AddCMS_filePayload = {
  __typename?: 'AddCMS_filePayload';
  cMS_file?: Maybe<Array<Maybe<CMS_file>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_filePayloadcMS_fileArgs = {
  filter?: InputMaybe<CMS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_fileOrder>;
};

export type AddCMS_websiteInput = {
  cmsPackage: CMS_PACKAGERef;
  createdAt: Scalars['DateTime'];
  createdBy: CMS_accountRef;
  description?: InputMaybe<Scalars['String']>;
  domain?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  isDeleted: Scalars['Boolean'];
  name: Scalars['String'];
  pages: Array<CMS_website_pageRef>;
  title?: InputMaybe<Scalars['String']>;
};

export type AddCMS_websitePayload = {
  __typename?: 'AddCMS_websitePayload';
  cMS_website?: Maybe<Array<Maybe<CMS_website>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_websitePayloadcMS_websiteArgs = {
  filter?: InputMaybe<CMS_websiteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_websiteOrder>;
};

export type AddCMS_website_pageInput = {
  authorAlias?: InputMaybe<Scalars['String']>;
  blocks: Array<CMS_website_page_blockRef>;
  createdAt: Scalars['DateTime'];
  createdBy: CMS_accountRef;
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  isDeleted: Scalars['Boolean'];
  keywords?: InputMaybe<Array<Scalars['String']>>;
  lastPublish?: InputMaybe<Scalars['DateTime']>;
  name: Scalars['String'];
  path: Scalars['String'];
  published: Scalars['Boolean'];
  thumb?: InputMaybe<Scalars['String']>;
  thumbAlt?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  website: CMS_websiteRef;
};

export type AddCMS_website_pagePayload = {
  __typename?: 'AddCMS_website_pagePayload';
  cMS_website_page?: Maybe<Array<Maybe<CMS_website_page>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_website_pagePayloadcMS_website_pageArgs = {
  filter?: InputMaybe<CMS_website_pageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_pageOrder>;
};

export type AddCMS_website_page_blockComboInput = {
  guid: Scalars['String'];
  pageBlock: CMS_website_page_blockRef;
  type: CMS_website_page_blockComboType;
};

export type AddCMS_website_page_blockComboPayload = {
  __typename?: 'AddCMS_website_page_blockComboPayload';
  cMS_website_page_blockCombo?: Maybe<Array<Maybe<CMS_website_page_blockCombo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_website_page_blockComboPayloadcMS_website_page_blockComboArgs = {
  filter?: InputMaybe<CMS_website_page_blockComboFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockComboOrder>;
};

export type AddCMS_website_page_blockImageInput = {
  alt: Scalars['String'];
  file?: InputMaybe<CMS_fileRef>;
  format: CMS_website_page_blockImageFormat;
  guid: Scalars['String'];
  orientation: CMS_website_page_blockImageOrientation;
  pageBlock: CMS_website_page_blockRef;
  src: Scalars['String'];
};

export type AddCMS_website_page_blockImagePayload = {
  __typename?: 'AddCMS_website_page_blockImagePayload';
  cMS_website_page_blockImage?: Maybe<Array<Maybe<CMS_website_page_blockImage>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_website_page_blockImagePayloadcMS_website_page_blockImageArgs = {
  filter?: InputMaybe<CMS_website_page_blockImageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockImageOrder>;
};

export type AddCMS_website_page_blockInput = {
  combo?: InputMaybe<CMS_website_page_blockComboRef>;
  content: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy: CMS_accountRef;
  guid: Scalars['String'];
  image?: InputMaybe<CMS_website_page_blockImageRef>;
  index: Scalars['Int'];
  isDeleted: Scalars['Boolean'];
  link?: InputMaybe<CMS_website_page_blockLinkRef>;
  page: CMS_website_pageRef;
  text?: InputMaybe<CMS_website_page_blockTextRef>;
  title?: InputMaybe<CMS_website_page_blockTitleRef>;
  type: CMS_website_page_blockType;
};

export type AddCMS_website_page_blockLinkInput = {
  guid: Scalars['String'];
  pageBlock: CMS_website_page_blockRef;
  text: Scalars['String'];
  type: CMS_website_page_blockLinkType;
  url: Scalars['String'];
};

export type AddCMS_website_page_blockLinkPayload = {
  __typename?: 'AddCMS_website_page_blockLinkPayload';
  cMS_website_page_blockLink?: Maybe<Array<Maybe<CMS_website_page_blockLink>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_website_page_blockLinkPayloadcMS_website_page_blockLinkArgs = {
  filter?: InputMaybe<CMS_website_page_blockLinkFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockLinkOrder>;
};

export type AddCMS_website_page_blockPayload = {
  __typename?: 'AddCMS_website_page_blockPayload';
  cMS_website_page_block?: Maybe<Array<Maybe<CMS_website_page_block>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_website_page_blockPayloadcMS_website_page_blockArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockOrder>;
};

export type AddCMS_website_page_blockTextInput = {
  content: Scalars['String'];
  guid: Scalars['String'];
  pageBlock: CMS_website_page_blockRef;
  type: CMS_website_page_blockTextType;
};

export type AddCMS_website_page_blockTextPayload = {
  __typename?: 'AddCMS_website_page_blockTextPayload';
  cMS_website_page_blockText?: Maybe<Array<Maybe<CMS_website_page_blockText>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_website_page_blockTextPayloadcMS_website_page_blockTextArgs = {
  filter?: InputMaybe<CMS_website_page_blockTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockTextOrder>;
};

export type AddCMS_website_page_blockTitleInput = {
  content: Scalars['String'];
  guid: Scalars['String'];
  pageBlock: CMS_website_page_blockRef;
  type: CMS_website_page_blockTitleType;
};

export type AddCMS_website_page_blockTitlePayload = {
  __typename?: 'AddCMS_website_page_blockTitlePayload';
  cMS_website_page_blockTitle?: Maybe<Array<Maybe<CMS_website_page_blockTitle>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCMS_website_page_blockTitlePayloadcMS_website_page_blockTitleArgs = {
  filter?: InputMaybe<CMS_website_page_blockTitleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockTitleOrder>;
};

export type AddCRM_PACKAGEInput = {
  accounts: Array<CRM_accountRef>;
  actions: Array<CRM_actionRef>;
  areas: Array<CRM_areaRef>;
  campaignContactEvents: Array<CRM_campaignContactEventRef>;
  campaignContacts: Array<CRM_campaignContactRef>;
  campaignDelivers: Array<CRM_campaignDeliverRef>;
  campaignEmailTemplates: Array<CRM_campaignEmailTemplateRef>;
  campaigns: Array<CRM_campaignRef>;
  contactActions: Array<CRM_contactActionRef>;
  contactInputSubStatuses: Array<CRM_contactInputSubStatusRef>;
  contactLists: Array<CRM_contactListRef>;
  contacts: Array<CRM_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  emailTemplates: Array<CRM_emailTemplateRef>;
  events: Array<CRM_eventRef>;
  funnels: Array<CRM_funnelRef>;
  inputs: Array<CRM_contactInputRef>;
  name: Scalars['String'];
  opportunityLogs: Array<CRM_opportunityLogRef>;
  opportunityPaymentPlanItems: Array<CRM_opportunityPaymentPlanItemRef>;
  org360: Org360Ref;
  overview: CRM_overviewRef;
  proposals: Array<CRM_proposalRef>;
  roles: Array<InputMaybe<CRM_roleRef>>;
  socialMediaCampaignMedia: Array<CRM_socialMediaCampaign_mediaRef>;
  socialMediaCampaignPosts: Array<CRM_socialMediaCampaign_postRef>;
  socialMediaCampaigns: Array<CRM_socialMediaCampaignRef>;
  sourceCategories: Array<CRM_sourceCategoryRef>;
  sourceFormEmailTemplates: Array<CRM_sourceForm_emailTemplateRef>;
  sourceFormReasons: Array<CRM_sourceFormReasonRef>;
  sourceForms: Array<CRM_sourceFormRef>;
  sources: Array<CRM_sourceRef>;
  teamAccounts: Array<CRM_teamAccountRef>;
  teamActionBoardEffects: Array<CRM_teamActionBoardEffectRef>;
  teamActions: Array<CRM_teamActionRef>;
  teamBoardItems: Array<CRM_teamBoardItemRef>;
  teamBoardStatuses: Array<CRM_teamBoardStatusRef>;
  teamBoardSubStatuses: Array<CRM_teamBoardSubStatusRef>;
  teamBoardTasks: Array<CRM_teamBoardTaskRef>;
  teamBoards: Array<CRM_teamBoardRef>;
  teams: Array<CRM_teamRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AddCRM_PACKAGEPayload = {
  __typename?: 'AddCRM_PACKAGEPayload';
  cRM_PACKAGE?: Maybe<Array<Maybe<CRM_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_PACKAGEPayloadcRM_PACKAGEArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_PACKAGEOrder>;
};

export type AddCRM_accountContactsTableColumnInput = {
  account: CRM_accountRef;
  index: Scalars['Int'];
  isChecked?: InputMaybe<Scalars['Boolean']>;
  type: CRM_accountContactsTableColumnType;
};

export type AddCRM_accountContactsTableColumnPayload = {
  __typename?: 'AddCRM_accountContactsTableColumnPayload';
  cRM_accountContactsTableColumn?: Maybe<Array<Maybe<CRM_accountContactsTableColumn>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_accountContactsTableColumnPayloadcRM_accountContactsTableColumnArgs = {
  filter?: InputMaybe<CRM_accountContactsTableColumnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_accountContactsTableColumnOrder>;
};

export type AddCRM_accountContactsTableFilterInput = {
  account: CRM_accountRef;
  index: Scalars['Int'];
  isChecked?: InputMaybe<Scalars['Boolean']>;
  type: CRM_accountContactsTableFilterType;
};

export type AddCRM_accountContactsTableFilterPayload = {
  __typename?: 'AddCRM_accountContactsTableFilterPayload';
  cRM_accountContactsTableFilter?: Maybe<Array<Maybe<CRM_accountContactsTableFilter>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_accountContactsTableFilterPayloadcRM_accountContactsTableFilterArgs = {
  filter?: InputMaybe<CRM_accountContactsTableFilterFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_accountContactsTableFilterOrder>;
};

export type AddCRM_accountEventInput = {
  account: CRM_accountRef;
  accountEvent: Account_eventRef;
  event: CRM_eventRef;
};

export type AddCRM_accountEventPayload = {
  __typename?: 'AddCRM_accountEventPayload';
  cRM_accountEvent?: Maybe<Array<Maybe<CRM_accountEvent>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_accountEventPayloadcRM_accountEventArgs = {
  filter?: InputMaybe<CRM_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_accountInput = {
  account: AccountRef;
  assignedContacts: Array<InputMaybe<CRM_contactRef>>;
  contactsTableColumns: Array<CRM_accountContactsTableColumnRef>;
  contactsTableFilters: Array<CRM_accountContactsTableFilterRef>;
  createdBy: AccountRef;
  createdCampaigns: Array<InputMaybe<CRM_campaignRef>>;
  events: Array<CRM_accountEventRef>;
  org360: Org360Ref;
  package: CRM_PACKAGERef;
  role: CRM_roleRef;
  teams: Array<CRM_teamAccountRef>;
};

export type AddCRM_accountPayload = {
  __typename?: 'AddCRM_accountPayload';
  cRM_account?: Maybe<Array<Maybe<CRM_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_accountPayloadcRM_accountArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_actionCallInput = {
  action: CRM_actionRef;
};

export type AddCRM_actionCallPayload = {
  __typename?: 'AddCRM_actionCallPayload';
  cRM_actionCall?: Maybe<Array<Maybe<CRM_actionCall>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_actionCallPayloadcRM_actionCallArgs = {
  filter?: InputMaybe<CRM_actionCallFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_actionChatInput = {
  action: CRM_actionRef;
  body: Scalars['String'];
  raw: Scalars['String'];
};

export type AddCRM_actionChatPayload = {
  __typename?: 'AddCRM_actionChatPayload';
  cRM_actionChat?: Maybe<Array<Maybe<CRM_actionChat>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_actionChatPayloadcRM_actionChatArgs = {
  filter?: InputMaybe<CRM_actionChatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionChatOrder>;
};

export type AddCRM_actionEmailInput = {
  action: CRM_actionRef;
  body: Scalars['String'];
  raw: Scalars['String'];
  subject: Scalars['String'];
};

export type AddCRM_actionEmailPayload = {
  __typename?: 'AddCRM_actionEmailPayload';
  cRM_actionEmail?: Maybe<Array<Maybe<CRM_actionEmail>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_actionEmailPayloadcRM_actionEmailArgs = {
  filter?: InputMaybe<CRM_actionEmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionEmailOrder>;
};

export type AddCRM_actionInput = {
  allowStatus: Array<CRM_contactInputStatus>;
  call?: InputMaybe<CRM_actionCallRef>;
  chat?: InputMaybe<CRM_actionChatRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<CRM_actionEmailRef>;
  jumpToStatus?: InputMaybe<CRM_contactInputStatus>;
  meeting?: InputMaybe<CRM_actionMeetingRef>;
  name: Scalars['String'];
  org360: Org360Ref;
  package: CRM_PACKAGERef;
  type: CRM_actionType;
};

export type AddCRM_actionMeetingInput = {
  action: CRM_actionRef;
};

export type AddCRM_actionMeetingPayload = {
  __typename?: 'AddCRM_actionMeetingPayload';
  cRM_actionMeeting?: Maybe<Array<Maybe<CRM_actionMeeting>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_actionMeetingPayloadcRM_actionMeetingArgs = {
  filter?: InputMaybe<CRM_actionMeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_actionPayload = {
  __typename?: 'AddCRM_actionPayload';
  cRM_action?: Maybe<Array<Maybe<CRM_action>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_actionPayloadcRM_actionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionOrder>;
};

export type AddCRM_areaInput = {
  color: Scalars['String'];
  contacts: Array<CRM_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  icon: Scalars['String'];
  name: Scalars['String'];
  package: CRM_PACKAGERef;
};

export type AddCRM_areaPayload = {
  __typename?: 'AddCRM_areaPayload';
  cRM_area?: Maybe<Array<Maybe<CRM_area>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_areaPayloadcRM_areaArgs = {
  filter?: InputMaybe<CRM_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_areaOrder>;
};

export type AddCRM_campaignContactEventInput = {
  campaign: CRM_campaignRef;
  contact: CRM_campaignContactRef;
  date?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<CRM_campaignContactEventType>;
  ip?: InputMaybe<Scalars['String']>;
  package: CRM_PACKAGERef;
  sendGridProviderEvent?: InputMaybe<Integrations_Sendgrid_emailEventRef>;
};

export type AddCRM_campaignContactEventPayload = {
  __typename?: 'AddCRM_campaignContactEventPayload';
  cRM_campaignContactEvent?: Maybe<Array<Maybe<CRM_campaignContactEvent>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_campaignContactEventPayloadcRM_campaignContactEventArgs = {
  filter?: InputMaybe<CRM_campaignContactEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactEventOrder>;
};

export type AddCRM_campaignContactInput = {
  campaign: CRM_campaignRef;
  clickDate?: InputMaybe<Scalars['DateTime']>;
  contact: CRM_contactRef;
  created?: InputMaybe<Scalars['DateTime']>;
  createdBy: CRM_accountRef;
  deliver?: InputMaybe<CRM_campaignDeliverRef>;
  deliveredDate?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  events: Array<CRM_campaignContactEventRef>;
  failedDate?: InputMaybe<Scalars['DateTime']>;
  inputs: Array<CRM_contactInputRef>;
  invalidReasons: Array<CRM_campaignContactInvalidReason>;
  openDate?: InputMaybe<Scalars['DateTime']>;
  package: CRM_PACKAGERef;
  sentDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<CRM_campaignContactStatus>;
};

export type AddCRM_campaignContactPayload = {
  __typename?: 'AddCRM_campaignContactPayload';
  cRM_campaignContact?: Maybe<Array<Maybe<CRM_campaignContact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_campaignContactPayloadcRM_campaignContactArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactOrder>;
};

export type AddCRM_campaignDeliverInput = {
  campaign: CRM_campaignRef;
  contacts: Array<CRM_campaignContactRef>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  package: CRM_PACKAGERef;
  startAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<CRM_campaignDeliverStatus>;
};

export type AddCRM_campaignDeliverPayload = {
  __typename?: 'AddCRM_campaignDeliverPayload';
  cRM_campaignDeliver?: Maybe<Array<Maybe<CRM_campaignDeliver>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_campaignDeliverPayloadcRM_campaignDeliverArgs = {
  filter?: InputMaybe<CRM_campaignDeliverFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignDeliverOrder>;
};

export type AddCRM_campaignEmailTemplateInput = {
  body: Scalars['String'];
  campaign: CRM_campaignRef;
  html: Scalars['String'];
  package: CRM_PACKAGERef;
  template?: InputMaybe<CRM_emailTemplateRef>;
  text: Scalars['String'];
};

export type AddCRM_campaignEmailTemplatePayload = {
  __typename?: 'AddCRM_campaignEmailTemplatePayload';
  cRM_campaignEmailTemplate?: Maybe<Array<Maybe<CRM_campaignEmailTemplate>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_campaignEmailTemplatePayloadcRM_campaignEmailTemplateArgs = {
  filter?: InputMaybe<CRM_campaignEmailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignEmailTemplateOrder>;
};

export type AddCRM_campaignInput = {
  confirmedAt?: InputMaybe<Scalars['DateTime']>;
  confirmedBy?: InputMaybe<CRM_accountRef>;
  contacts: Array<CRM_campaignContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: CRM_accountRef;
  delivers: Array<CRM_campaignDeliverRef>;
  html?: InputMaybe<Scalars['String']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  isConfirmed?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  package: CRM_PACKAGERef;
  status?: InputMaybe<CRM_campaignStatus>;
  subject?: InputMaybe<Scalars['String']>;
  template?: InputMaybe<CRM_campaignEmailTemplateRef>;
  text?: InputMaybe<Scalars['String']>;
};

export type AddCRM_campaignPayload = {
  __typename?: 'AddCRM_campaignPayload';
  cRM_campaign?: Maybe<Array<Maybe<CRM_campaign>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_campaignPayloadcRM_campaignArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignOrder>;
};

export type AddCRM_contactActionCallInput = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction: CRM_contactActionRef;
  endDate?: InputMaybe<Scalars['DateTime']>;
  startDate: Scalars['DateTime'];
};

export type AddCRM_contactActionCallPayload = {
  __typename?: 'AddCRM_contactActionCallPayload';
  cRM_contactActionCall?: Maybe<Array<Maybe<CRM_contactActionCall>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactActionCallPayloadcRM_contactActionCallArgs = {
  filter?: InputMaybe<CRM_contactActionCallFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionCallOrder>;
};

export type AddCRM_contactActionChatInput = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction: CRM_contactActionRef;
};

export type AddCRM_contactActionChatPayload = {
  __typename?: 'AddCRM_contactActionChatPayload';
  cRM_contactActionChat?: Maybe<Array<Maybe<CRM_contactActionChat>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactActionChatPayloadcRM_contactActionChatArgs = {
  filter?: InputMaybe<CRM_contactActionChatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_contactActionEmailInput = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction: CRM_contactActionRef;
  email: EmailRef;
  type?: InputMaybe<CRM_contactActionEmailType>;
};

export type AddCRM_contactActionEmailPayload = {
  __typename?: 'AddCRM_contactActionEmailPayload';
  cRM_contactActionEmail?: Maybe<Array<Maybe<CRM_contactActionEmail>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactActionEmailPayloadcRM_contactActionEmailArgs = {
  filter?: InputMaybe<CRM_contactActionEmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_contactActionInput = {
  action?: InputMaybe<CRM_actionRef>;
  answer?: InputMaybe<CRM_contactAnswerRef>;
  call?: InputMaybe<CRM_contactActionCallRef>;
  chat?: InputMaybe<CRM_contactActionChatRef>;
  contact: CRM_contactRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: CRM_accountRef;
  date: Scalars['DateTime'];
  email?: InputMaybe<CRM_contactActionEmailRef>;
  event?: InputMaybe<CRM_eventRef>;
  input?: InputMaybe<CRM_contactInputRef>;
  label?: InputMaybe<Scalars['String']>;
  meeting?: InputMaybe<CRM_contactActionMeetingRef>;
  package: CRM_PACKAGERef;
  proposal?: InputMaybe<CRM_proposalRef>;
  reminder?: InputMaybe<Account_eventReminder>;
  status?: InputMaybe<CRM_contactActionStatus>;
  statusChange?: InputMaybe<CRM_contactActionStatusChangeRef>;
  type: CRM_actionType;
};

export type AddCRM_contactActionMeetingInput = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction: CRM_contactActionRef;
  endDate?: InputMaybe<Scalars['DateTime']>;
  meeting?: InputMaybe<MeetingRef>;
  startDate: Scalars['DateTime'];
};

export type AddCRM_contactActionMeetingPayload = {
  __typename?: 'AddCRM_contactActionMeetingPayload';
  cRM_contactActionMeeting?: Maybe<Array<Maybe<CRM_contactActionMeeting>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactActionMeetingPayloadcRM_contactActionMeetingArgs = {
  filter?: InputMaybe<CRM_contactActionMeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionMeetingOrder>;
};

export type AddCRM_contactActionPayload = {
  __typename?: 'AddCRM_contactActionPayload';
  cRM_contactAction?: Maybe<Array<Maybe<CRM_contactAction>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactActionPayloadcRM_contactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionOrder>;
};

export type AddCRM_contactActionStatusChangeInput = {
  contactAction: CRM_contactActionRef;
  newStatus: CRM_contactInputStatus;
  newSubStatus?: InputMaybe<CRM_contactInputSubStatusRef>;
  status: CRM_contactInputStatus;
  subStatus?: InputMaybe<CRM_contactInputSubStatusRef>;
};

export type AddCRM_contactActionStatusChangePayload = {
  __typename?: 'AddCRM_contactActionStatusChangePayload';
  cRM_contactActionStatusChange?: Maybe<Array<Maybe<CRM_contactActionStatusChange>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactActionStatusChangePayloadcRM_contactActionStatusChangeArgs = {
  filter?: InputMaybe<CRM_contactActionStatusChangeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_contactAnswerInput = {
  action: CRM_contactActionRef;
  answer?: InputMaybe<Scalars['String']>;
  contact: CRM_contactRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  input?: InputMaybe<CRM_contactInputRef>;
  type?: InputMaybe<CRM_contactAnswerType>;
};

export type AddCRM_contactAnswerPayload = {
  __typename?: 'AddCRM_contactAnswerPayload';
  cRM_contactAnswer?: Maybe<Array<Maybe<CRM_contactAnswer>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactAnswerPayloadcRM_contactAnswerArgs = {
  filter?: InputMaybe<CRM_contactAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactAnswerOrder>;
};

export type AddCRM_contactInput = {
  actions: Array<CRM_contactActionRef>;
  areas: Array<CRM_areaRef>;
  assignedTo: Array<CRM_accountRef>;
  campaigns: Array<CRM_campaignContactRef>;
  contact: ContactRef;
  customerStatus?: InputMaybe<CRM_contactCustomerStatus>;
  customerType?: InputMaybe<CRM_contactCustomerType>;
  inputs: Array<CRM_contactInputRef>;
  isEmailBounce?: InputMaybe<Scalars['Boolean']>;
  isUnsubscribed?: InputMaybe<Scalars['Boolean']>;
  org360: Org360Ref;
  package: CRM_PACKAGERef;
  roles: Array<CRM_contactRole>;
  sourceForms: Array<CRM_sourceFormRef>;
  sources: Array<CRM_sourceRef>;
  supplierStatus?: InputMaybe<CRM_contactSupplierStatus>;
  supplierType?: InputMaybe<CRM_contactSupplierType>;
  tokens: Array<Scalars['String']>;
};

export type AddCRM_contactInputInput = {
  actions: Array<CRM_contactActionRef>;
  addedBy?: InputMaybe<CRM_accountRef>;
  answers: Array<CRM_contactAnswerRef>;
  campaignContact?: InputMaybe<CRM_campaignContactRef>;
  contact?: InputMaybe<CRM_contactRef>;
  contactSuggestions: Array<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  form: CRM_sourceFormRef;
  index?: InputMaybe<Scalars['Int']>;
  isManual?: InputMaybe<Scalars['Boolean']>;
  opportunityLogs?: InputMaybe<Array<CRM_opportunityLogRef>>;
  opportunityRate?: InputMaybe<Scalars['Int']>;
  opportunityValue?: InputMaybe<Scalars['Int']>;
  org360: Org360Ref;
  package: CRM_PACKAGERef;
  paymentPlanItems?: InputMaybe<Array<CRM_opportunityPaymentPlanItemRef>>;
  products: Array<ProductRef>;
  proposals: Array<CRM_proposalRef>;
  source: CRM_sourceRef;
  status?: InputMaybe<CRM_contactInputStatus>;
  subStatus?: InputMaybe<CRM_contactInputSubStatusRef>;
  teamBoardItem?: InputMaybe<CRM_teamBoardItemRef>;
  values: Array<CRM_contactInputValueRef>;
};

export type AddCRM_contactInputPayload = {
  __typename?: 'AddCRM_contactInputPayload';
  cRM_contactInput?: Maybe<Array<Maybe<CRM_contactInput>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactInputPayloadcRM_contactInputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};

export type AddCRM_contactInputSubStatusInput = {
  icon: Scalars['String'];
  name: Scalars['String'];
  package: CRM_PACKAGERef;
  status: CRM_contactInputStatus;
};

export type AddCRM_contactInputSubStatusPayload = {
  __typename?: 'AddCRM_contactInputSubStatusPayload';
  cRM_contactInputSubStatus?: Maybe<Array<Maybe<CRM_contactInputSubStatus>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactInputSubStatusPayloadcRM_contactInputSubStatusArgs = {
  filter?: InputMaybe<CRM_contactInputSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputSubStatusOrder>;
};

export type AddCRM_contactInputValueInput = {
  field: CRM_sourceFormFieldRef;
  input: CRM_contactInputRef;
  organization?: InputMaybe<ContactRef>;
  product?: InputMaybe<ProductRef>;
  value?: InputMaybe<Scalars['String']>;
};

export type AddCRM_contactInputValuePayload = {
  __typename?: 'AddCRM_contactInputValuePayload';
  cRM_contactInputValue?: Maybe<Array<Maybe<CRM_contactInputValue>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactInputValuePayloadcRM_contactInputValueArgs = {
  filter?: InputMaybe<CRM_contactInputValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputValueOrder>;
};

export type AddCRM_contactListInput = {
  contacts: Array<ContactRef>;
  createdAt: Scalars['DateTime'];
  createdBy: CRM_contactRef;
  guid: Scalars['String'];
  name: Scalars['String'];
  package: CRM_PACKAGERef;
};

export type AddCRM_contactListPayload = {
  __typename?: 'AddCRM_contactListPayload';
  cRM_contactList?: Maybe<Array<Maybe<CRM_contactList>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactListPayloadcRM_contactListArgs = {
  filter?: InputMaybe<CRM_contactListFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactListOrder>;
};

export type AddCRM_contactPayload = {
  __typename?: 'AddCRM_contactPayload';
  cRM_contact?: Maybe<Array<Maybe<CRM_contact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_contactPayloadcRM_contactArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_emailTemplateInput = {
  campaignTemplates: Array<CRM_campaignEmailTemplateRef>;
  package: CRM_PACKAGERef;
  template: EmailEditor_templateRef;
};

export type AddCRM_emailTemplatePayload = {
  __typename?: 'AddCRM_emailTemplatePayload';
  cRM_emailTemplate?: Maybe<Array<Maybe<CRM_emailTemplate>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_emailTemplatePayloadcRM_emailTemplateArgs = {
  filter?: InputMaybe<CRM_emailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_eventInput = {
  accounts: Array<CRM_accountEventRef>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
  event: EventRef;
  package: CRM_PACKAGERef;
};

export type AddCRM_eventPayload = {
  __typename?: 'AddCRM_eventPayload';
  cRM_event?: Maybe<Array<Maybe<CRM_event>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_eventPayloadcRM_eventArgs = {
  filter?: InputMaybe<CRM_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_funnelActionInput = {
  action: CRM_actionRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: CRM_accountRef;
  funnel: CRM_funnelRef;
};

export type AddCRM_funnelActionPayload = {
  __typename?: 'AddCRM_funnelActionPayload';
  cRM_funnelAction?: Maybe<Array<Maybe<CRM_funnelAction>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_funnelActionPayloadcRM_funnelActionArgs = {
  filter?: InputMaybe<CRM_funnelActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelActionOrder>;
};

export type AddCRM_funnelInput = {
  actions: Array<CRM_funnelActionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: CRM_accountRef;
  name: Scalars['String'];
  package: CRM_PACKAGERef;
  statuses: Array<CRM_funnelStatusRef>;
};

export type AddCRM_funnelPayload = {
  __typename?: 'AddCRM_funnelPayload';
  cRM_funnel?: Maybe<Array<Maybe<CRM_funnel>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_funnelPayloadcRM_funnelArgs = {
  filter?: InputMaybe<CRM_funnelFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelOrder>;
};

export type AddCRM_funnelStatusInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: CRM_accountRef;
  funnel: CRM_funnelRef;
  index?: InputMaybe<Scalars['Int']>;
  name: Scalars['String'];
};

export type AddCRM_funnelStatusPayload = {
  __typename?: 'AddCRM_funnelStatusPayload';
  cRM_funnelStatus?: Maybe<Array<Maybe<CRM_funnelStatus>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_funnelStatusPayloadcRM_funnelStatusArgs = {
  filter?: InputMaybe<CRM_funnelStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelStatusOrder>;
};

export type AddCRM_opportunityLogInput = {
  changeBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  input: CRM_contactInputRef;
  package: CRM_PACKAGERef;
  paymentPlanItems: Array<CRM_opportunityPaymentPlanItemRef>;
  rate: Scalars['Int'];
  value: Scalars['Int'];
};

export type AddCRM_opportunityLogPayload = {
  __typename?: 'AddCRM_opportunityLogPayload';
  cRM_opportunityLog?: Maybe<Array<Maybe<CRM_opportunityLog>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_opportunityLogPayloadcRM_opportunityLogArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityLogOrder>;
};

export type AddCRM_opportunityPaymentPlanItemInput = {
  date: Scalars['DateTime'];
  input: CRM_contactInputRef;
  label?: InputMaybe<Scalars['String']>;
  log: CRM_opportunityLogRef;
  package: CRM_PACKAGERef;
  value: Scalars['Int'];
};

export type AddCRM_opportunityPaymentPlanItemPayload = {
  __typename?: 'AddCRM_opportunityPaymentPlanItemPayload';
  cRM_opportunityPaymentPlanItem?: Maybe<Array<Maybe<CRM_opportunityPaymentPlanItem>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_opportunityPaymentPlanItemPayloadcRM_opportunityPaymentPlanItemArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityPaymentPlanItemOrder>;
};

export type AddCRM_overviewInput = {
  package: CRM_PACKAGERef;
  table: DynamicTableRef;
};

export type AddCRM_overviewPayload = {
  __typename?: 'AddCRM_overviewPayload';
  cRM_overview?: Maybe<Array<Maybe<CRM_overview>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_overviewPayloadcRM_overviewArgs = {
  filter?: InputMaybe<CRM_overviewFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_proposalInput = {
  contactAction?: InputMaybe<CRM_contactActionRef>;
  input: Array<CRM_contactInputRef>;
  item?: InputMaybe<CRM_teamBoardItemRef>;
  itemTask?: InputMaybe<CRM_teamBoardTaskRef>;
  opportunityLog?: InputMaybe<CRM_opportunityLogRef>;
  package: CRM_PACKAGERef;
  proposal: ProposalRef;
};

export type AddCRM_proposalPayload = {
  __typename?: 'AddCRM_proposalPayload';
  cRM_proposal?: Maybe<Array<Maybe<CRM_proposal>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_proposalPayloadcRM_proposalArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_roleInput = {
  accounts: Array<InputMaybe<CRM_accountRef>>;
  org360: Org360Ref;
  package: CRM_PACKAGERef;
  type: CRM_roleType;
};

export type AddCRM_rolePayload = {
  __typename?: 'AddCRM_rolePayload';
  cRM_role?: Maybe<Array<Maybe<CRM_role>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_rolePayloadcRM_roleArgs = {
  filter?: InputMaybe<CRM_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddCRM_socialMediaCampaignInput = {
  content: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy: CRM_accountRef;
  guid: Scalars['String'];
  media: Array<CRM_socialMediaCampaign_mediaRef>;
  package: CRM_PACKAGERef;
  posts: Array<CRM_socialMediaCampaign_postRef>;
  profileId: Scalars['String'];
  status: CRM_socialMediaCampaign_status;
  title: Scalars['String'];
};

export type AddCRM_socialMediaCampaignPayload = {
  __typename?: 'AddCRM_socialMediaCampaignPayload';
  cRM_socialMediaCampaign?: Maybe<Array<Maybe<CRM_socialMediaCampaign>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_socialMediaCampaignPayloadcRM_socialMediaCampaignArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaignOrder>;
};

export type AddCRM_socialMediaCampaign_mediaInput = {
  campaign: CRM_socialMediaCampaignRef;
  guid: Scalars['String'];
  package: CRM_PACKAGERef;
  type: Scalars['String'];
  url: Scalars['String'];
};

export type AddCRM_socialMediaCampaign_mediaPayload = {
  __typename?: 'AddCRM_socialMediaCampaign_mediaPayload';
  cRM_socialMediaCampaign_media?: Maybe<Array<Maybe<CRM_socialMediaCampaign_media>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_socialMediaCampaign_mediaPayloadcRM_socialMediaCampaign_mediaArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_mediaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_mediaOrder>;
};

export type AddCRM_socialMediaCampaign_postInput = {
  campaign: CRM_socialMediaCampaignRef;
  guid: Scalars['String'];
  package: CRM_PACKAGERef;
  ref: Scalars['String'];
  scheduledAt: Scalars['DateTime'];
  socialMedia: Scalars['String'];
};

export type AddCRM_socialMediaCampaign_postPayload = {
  __typename?: 'AddCRM_socialMediaCampaign_postPayload';
  cRM_socialMediaCampaign_post?: Maybe<Array<Maybe<CRM_socialMediaCampaign_post>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_socialMediaCampaign_postPayloadcRM_socialMediaCampaign_postArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_postFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_postOrder>;
};

export type AddCRM_sourceCategoryInput = {
  color: Scalars['String'];
  name: Scalars['String'];
  package: CRM_PACKAGERef;
  sources: Array<CRM_sourceRef>;
};

export type AddCRM_sourceCategoryPayload = {
  __typename?: 'AddCRM_sourceCategoryPayload';
  cRM_sourceCategory?: Maybe<Array<Maybe<CRM_sourceCategory>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_sourceCategoryPayloadcRM_sourceCategoryArgs = {
  filter?: InputMaybe<CRM_sourceCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceCategoryOrder>;
};

export type AddCRM_sourceFormFieldInput = {
  form: CRM_sourceFormRef;
  label?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  type: CRM_sourceFormFieldType;
};

export type AddCRM_sourceFormFieldPayload = {
  __typename?: 'AddCRM_sourceFormFieldPayload';
  cRM_sourceFormField?: Maybe<Array<Maybe<CRM_sourceFormField>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_sourceFormFieldPayloadcRM_sourceFormFieldArgs = {
  filter?: InputMaybe<CRM_sourceFormFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormFieldOrder>;
};

export type AddCRM_sourceFormInput = {
  contacts: Array<CRM_contactRef>;
  fields: Array<CRM_sourceFormFieldRef>;
  inputs: Array<CRM_contactInputRef>;
  name: Scalars['String'];
  oldId?: InputMaybe<Scalars['String']>;
  package: CRM_PACKAGERef;
  reason: CRM_sourceFormReasonRef;
  responseEmailTemplate?: InputMaybe<CRM_sourceForm_emailTemplateRef>;
  source: CRM_sourceRef;
};

export type AddCRM_sourceFormPayload = {
  __typename?: 'AddCRM_sourceFormPayload';
  cRM_sourceForm?: Maybe<Array<Maybe<CRM_sourceForm>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_sourceFormPayloadcRM_sourceFormArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormOrder>;
};

export type AddCRM_sourceFormReasonInput = {
  color: Scalars['String'];
  forms?: InputMaybe<Array<CRM_sourceFormRef>>;
  name: Scalars['String'];
  package: CRM_PACKAGERef;
  toCustomerStatus: CRM_contactCustomerStatus;
};

export type AddCRM_sourceFormReasonPayload = {
  __typename?: 'AddCRM_sourceFormReasonPayload';
  cRM_sourceFormReason?: Maybe<Array<Maybe<CRM_sourceFormReason>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_sourceFormReasonPayloadcRM_sourceFormReasonArgs = {
  filter?: InputMaybe<CRM_sourceFormReasonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormReasonOrder>;
};

export type AddCRM_sourceForm_emailTemplateInput = {
  form: Array<CRM_sourceFormRef>;
  guid: Scalars['String'];
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  package: CRM_PACKAGERef;
  subject: Scalars['String'];
  template: Scalars['String'];
};

export type AddCRM_sourceForm_emailTemplatePayload = {
  __typename?: 'AddCRM_sourceForm_emailTemplatePayload';
  cRM_sourceForm_emailTemplate?: Maybe<Array<Maybe<CRM_sourceForm_emailTemplate>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_sourceForm_emailTemplatePayloadcRM_sourceForm_emailTemplateArgs = {
  filter?: InputMaybe<CRM_sourceForm_emailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceForm_emailTemplateOrder>;
};

export type AddCRM_sourceInput = {
  categories: Array<CRM_sourceCategoryRef>;
  contacts: Array<CRM_contactRef>;
  forms: Array<CRM_sourceFormRef>;
  inputs: Array<CRM_contactInputRef>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  oldId?: InputMaybe<Scalars['String']>;
  package: CRM_PACKAGERef;
};

export type AddCRM_sourcePayload = {
  __typename?: 'AddCRM_sourcePayload';
  cRM_source?: Maybe<Array<Maybe<CRM_source>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_sourcePayloadcRM_sourceArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceOrder>;
};

export type AddCRM_teamAccountInput = {
  account: CRM_accountRef;
  activeSince?: InputMaybe<Scalars['DateTime']>;
  assignedItems: Array<CRM_teamBoardItemRef>;
  createBy: CRM_accountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  inactiveSince?: InputMaybe<Scalars['DateTime']>;
  kickedSince?: InputMaybe<Scalars['DateTime']>;
  package: CRM_PACKAGERef;
  role?: InputMaybe<CRM_teamAccountRole>;
  status?: InputMaybe<CRM_teamAccountStatus>;
  tasks: Array<CRM_teamBoardTaskRef>;
  team: CRM_teamRef;
};

export type AddCRM_teamAccountPayload = {
  __typename?: 'AddCRM_teamAccountPayload';
  cRM_teamAccount?: Maybe<Array<Maybe<CRM_teamAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_teamAccountPayloadcRM_teamAccountArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamAccountOrder>;
};

export type AddCRM_teamActionBoardEffectInput = {
  action: CRM_teamActionRef;
  board?: InputMaybe<CRM_teamBoardRef>;
  createBy: CRM_accountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<CRM_teamActionBoardEffectEvent>;
  finalStatus?: InputMaybe<CRM_teamBoardStatusRef>;
  finalSubStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  guid: Scalars['String'];
  initialStatuses: Array<CRM_teamBoardStatusRef>;
  initialSubStatuses: Array<CRM_teamBoardSubStatusRef>;
  isDisabled: Scalars['Boolean'];
  package: CRM_PACKAGERef;
  team: CRM_teamRef;
};

export type AddCRM_teamActionBoardEffectPayload = {
  __typename?: 'AddCRM_teamActionBoardEffectPayload';
  cRM_teamActionBoardEffect?: Maybe<Array<Maybe<CRM_teamActionBoardEffect>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_teamActionBoardEffectPayloadcRM_teamActionBoardEffectArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionBoardEffectOrder>;
};

export type AddCRM_teamActionInput = {
  boardEffects: Array<CRM_teamActionBoardEffectRef>;
  createBy: CRM_accountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  name: Scalars['String'];
  package: CRM_PACKAGERef;
  team: CRM_teamRef;
  type?: InputMaybe<CRM_teamActionType>;
};

export type AddCRM_teamActionPayload = {
  __typename?: 'AddCRM_teamActionPayload';
  cRM_teamAction?: Maybe<Array<Maybe<CRM_teamAction>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_teamActionPayloadcRM_teamActionArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionOrder>;
};

export type AddCRM_teamBoardInput = {
  actionEffects: Array<CRM_teamActionBoardEffectRef>;
  createBy: CRM_accountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  items: Array<CRM_teamBoardItemRef>;
  name: Scalars['String'];
  package: CRM_PACKAGERef;
  products: Array<ProductRef>;
  statuses: Array<CRM_teamBoardStatusRef>;
  subStatuses: Array<CRM_teamBoardSubStatusRef>;
  tasks: Array<CRM_teamBoardTaskRef>;
  team: CRM_teamRef;
  type: CRM_teamBoardType;
};

export type AddCRM_teamBoardItemInput = {
  assignedTo: Array<CRM_teamAccountRef>;
  board: CRM_teamBoardRef;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  label?: InputMaybe<Scalars['String']>;
  opportunity?: InputMaybe<CRM_contactInputRef>;
  package: CRM_PACKAGERef;
  proposal?: InputMaybe<CRM_proposalRef>;
  status: CRM_teamBoardStatusRef;
  subStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  tasks: Array<CRM_teamBoardTaskRef>;
  team: CRM_teamRef;
  type: CRM_teamBoardType;
};

export type AddCRM_teamBoardItemPayload = {
  __typename?: 'AddCRM_teamBoardItemPayload';
  cRM_teamBoardItem?: Maybe<Array<Maybe<CRM_teamBoardItem>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_teamBoardItemPayloadcRM_teamBoardItemArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardItemOrder>;
};

export type AddCRM_teamBoardPayload = {
  __typename?: 'AddCRM_teamBoardPayload';
  cRM_teamBoard?: Maybe<Array<Maybe<CRM_teamBoard>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_teamBoardPayloadcRM_teamBoardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardOrder>;
};

export type AddCRM_teamBoardStatusInput = {
  board: CRM_teamBoardRef;
  color: Scalars['String'];
  createBy: CRM_accountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  index: Scalars['Int'];
  items: Array<CRM_teamBoardItemRef>;
  name: Scalars['String'];
  package: CRM_PACKAGERef;
  subStatuses: Array<CRM_teamBoardSubStatusRef>;
  type: CRM_teamBoardType;
};

export type AddCRM_teamBoardStatusPayload = {
  __typename?: 'AddCRM_teamBoardStatusPayload';
  cRM_teamBoardStatus?: Maybe<Array<Maybe<CRM_teamBoardStatus>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_teamBoardStatusPayloadcRM_teamBoardStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardStatusOrder>;
};

export type AddCRM_teamBoardSubStatusInput = {
  board: CRM_teamBoardRef;
  createBy: CRM_accountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  icon: Scalars['String'];
  index: Scalars['Int'];
  items: Array<CRM_teamBoardItemRef>;
  name: Scalars['String'];
  package: CRM_PACKAGERef;
  status: CRM_teamBoardStatusRef;
  type: CRM_teamBoardType;
};

export type AddCRM_teamBoardSubStatusPayload = {
  __typename?: 'AddCRM_teamBoardSubStatusPayload';
  cRM_teamBoardSubStatus?: Maybe<Array<Maybe<CRM_teamBoardSubStatus>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_teamBoardSubStatusPayloadcRM_teamBoardSubStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardSubStatusOrder>;
};

export type AddCRM_teamBoardTaskInput = {
  action?: InputMaybe<CRM_teamActionRef>;
  addressTo?: InputMaybe<Scalars['String']>;
  assignedTo: Array<CRM_teamAccountRef>;
  board: CRM_teamBoardRef;
  cancelledAt?: InputMaybe<Scalars['DateTime']>;
  cancelledBy?: InputMaybe<CRM_teamAccountRef>;
  createBy: CRM_teamAccountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  destinyBoard?: InputMaybe<CRM_teamBoardRef>;
  doneAt?: InputMaybe<Scalars['DateTime']>;
  doneBy?: InputMaybe<CRM_teamAccountRef>;
  guid: Scalars['String'];
  html?: InputMaybe<Scalars['String']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  item: CRM_teamBoardItemRef;
  label: Scalars['String'];
  nextStatus?: InputMaybe<CRM_teamBoardStatusRef>;
  nextSubStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  package: CRM_PACKAGERef;
  previousStatus?: InputMaybe<CRM_teamBoardStatusRef>;
  previousSubStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  proposal?: InputMaybe<CRM_proposalRef>;
  scheduledAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<CRM_teamBoardTaskStatus>;
  team: CRM_teamRef;
  type?: InputMaybe<CRM_teamActionType>;
};

export type AddCRM_teamBoardTaskPayload = {
  __typename?: 'AddCRM_teamBoardTaskPayload';
  cRM_teamBoardTask?: Maybe<Array<Maybe<CRM_teamBoardTask>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_teamBoardTaskPayloadcRM_teamBoardTaskArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardTaskOrder>;
};

export type AddCRM_teamInput = {
  accounts: Array<CRM_teamAccountRef>;
  actionBoardEffects: Array<CRM_teamActionBoardEffectRef>;
  actions: Array<CRM_teamActionRef>;
  boardTasks: Array<CRM_teamBoardTaskRef>;
  boards: Array<CRM_teamBoardRef>;
  createBy: CRM_accountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  isDefault?: InputMaybe<Scalars['Boolean']>;
  items: Array<CRM_teamBoardItemRef>;
  name: Scalars['String'];
  package: CRM_PACKAGERef;
};

export type AddCRM_teamPayload = {
  __typename?: 'AddCRM_teamPayload';
  cRM_team?: Maybe<Array<Maybe<CRM_team>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCRM_teamPayloadcRM_teamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamOrder>;
};

export type AddChatbots_PACKAGEInput = {
  accounts: Array<Chatbots_accountRef>;
  areaAccounts: Array<Chatbots_areaAccountRef>;
  areas: Array<Chatbots_areaRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  externalAPIs: Array<Chatbots_externalAPIRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  org360: Org360Ref;
  processAPIs: Array<Chatbots_processAPIRef>;
  processAccounts: Array<Chatbots_processAccountRef>;
  processActions: Array<Chatbots_processActionRef>;
  processButtons: Array<Chatbots_processButtonRef>;
  processFields: Array<Chatbots_processFieldRef>;
  processFilterParams: Array<Chatbots_processFilterParamRef>;
  processOperations: Array<Chatbots_processOperationRef>;
  processStatuses: Array<Chatbots_processStatusRef>;
  processTableHeadConfigs: Array<Chatbots_processTableHeadConfigRef>;
  processValidationOperationDocumentFiles: Array<Chatbots_processValidationOperation_document_fileRef>;
  processValidationOperationDocuments: Array<Chatbots_processValidationOperation_documentRef>;
  processValidationOperationFields: Array<Chatbots_processsValidationOperation_fieldRef>;
  processValidationOperations: Array<Chatbots_processValidationOperationRef>;
  processValidations: Array<Chatbots_processValidationRef>;
  processes: Array<Chatbots_processRef>;
  validationDocumenFiles: Array<Chatbots_validationDocument_fileRef>;
  validationDocuments: Array<Chatbots_validationDocumentRef>;
  validations: Array<Chatbots_validationRef>;
  validationsFields: Array<Chatbots_validationFieldRef>;
};

export type AddChatbots_PACKAGEPayload = {
  __typename?: 'AddChatbots_PACKAGEPayload';
  chatbots_PACKAGE?: Maybe<Array<Maybe<Chatbots_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_PACKAGEPayloadchatbots_PACKAGEArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_PACKAGEOrder>;
};

export type AddChatbots_accountInput = {
  account: AccountRef;
  areas: Array<Chatbots_areaAccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  guid: Scalars['String'];
  package: Chatbots_PACKAGERef;
  processes: Array<Chatbots_processAccountRef>;
  role?: InputMaybe<Chatbots_role>;
};

export type AddChatbots_accountPayload = {
  __typename?: 'AddChatbots_accountPayload';
  chatbots_account?: Maybe<Array<Maybe<Chatbots_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_accountPayloadchatbots_accountArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_accountOrder>;
};

export type AddChatbots_areaAccountInput = {
  account: Chatbots_accountRef;
  area: Chatbots_areaRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  guid: Scalars['String'];
  package: Chatbots_PACKAGERef;
  processes: Array<Chatbots_processAccountRef>;
  role?: InputMaybe<Chatbots_role>;
};

export type AddChatbots_areaAccountPayload = {
  __typename?: 'AddChatbots_areaAccountPayload';
  chatbots_areaAccount?: Maybe<Array<Maybe<Chatbots_areaAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_areaAccountPayloadchatbots_areaAccountArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaAccountOrder>;
};

export type AddChatbots_areaInput = {
  accounts: Array<Chatbots_areaAccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  fields: Array<Chatbots_processFieldRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  operations: Array<Chatbots_processOperationRef>;
  package: Chatbots_PACKAGERef;
  processes: Array<Chatbots_processRef>;
};

export type AddChatbots_areaPayload = {
  __typename?: 'AddChatbots_areaPayload';
  chatbots_area?: Maybe<Array<Maybe<Chatbots_area>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_areaPayloadchatbots_areaArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaOrder>;
};

export type AddChatbots_externalAPIInput = {
  fields: Array<Chatbots_externalAPI_fieldRef>;
  guid: Scalars['String'];
  method: Scalars['String'];
  name: Scalars['String'];
  package: Chatbots_PACKAGERef;
  processActions: Array<Chatbots_processActionRef>;
  processes: Array<Chatbots_processAPIRef>;
  rootKey?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Chatbots_externalAPIResponseType>;
  url: Scalars['String'];
};

export type AddChatbots_externalAPIPayload = {
  __typename?: 'AddChatbots_externalAPIPayload';
  chatbots_externalAPI?: Maybe<Array<Maybe<Chatbots_externalAPI>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_externalAPIPayloadchatbots_externalAPIArgs = {
  filter?: InputMaybe<Chatbots_externalAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_externalAPIOrder>;
};

export type AddChatbots_externalAPI_fieldInput = {
  authEndpoint?: InputMaybe<Scalars['String']>;
  authLogin?: InputMaybe<Scalars['String']>;
  authMethod?: InputMaybe<Scalars['String']>;
  authTokenRequestField?: InputMaybe<Scalars['String']>;
  authTokenResponseField?: InputMaybe<Scalars['String']>;
  externalAPI: Chatbots_externalAPIRef;
  guid: Scalars['String'];
  name: Scalars['String'];
  type?: InputMaybe<Chatbots_externalAPI_fieldType>;
  useAuth?: InputMaybe<Scalars['Boolean']>;
};

export type AddChatbots_externalAPI_fieldPayload = {
  __typename?: 'AddChatbots_externalAPI_fieldPayload';
  chatbots_externalAPI_field?: Maybe<Array<Maybe<Chatbots_externalAPI_field>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_externalAPI_fieldPayloadchatbots_externalAPI_fieldArgs = {
  filter?: InputMaybe<Chatbots_externalAPI_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_externalAPI_fieldOrder>;
};

export type AddChatbots_processAPIInput = {
  externalAPI?: InputMaybe<Chatbots_externalAPIRef>;
  guid: Scalars['String'];
  package: Chatbots_PACKAGERef;
  process: Chatbots_processRef;
};

export type AddChatbots_processAPIPayload = {
  __typename?: 'AddChatbots_processAPIPayload';
  chatbots_processAPI?: Maybe<Array<Maybe<Chatbots_processAPI>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processAPIPayloadchatbots_processAPIArgs = {
  filter?: InputMaybe<Chatbots_processAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAPIOrder>;
};

export type AddChatbots_processAccountInput = {
  account: Chatbots_accountRef;
  areaAccount: Chatbots_areaAccountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  guid: Scalars['String'];
  package: Chatbots_PACKAGERef;
  process: Chatbots_processRef;
  role?: InputMaybe<Chatbots_role>;
  tableHeadConfigs: Array<Chatbots_processTableHeadConfigRef>;
};

export type AddChatbots_processAccountPayload = {
  __typename?: 'AddChatbots_processAccountPayload';
  chatbots_processAccount?: Maybe<Array<Maybe<Chatbots_processAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processAccountPayloadchatbots_processAccountArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAccountOrder>;
};

export type AddChatbots_processActionInput = {
  buttons: Array<Chatbots_processButtonRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  description: Scalars['String'];
  externalAPI?: InputMaybe<Chatbots_externalAPIRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  package: Chatbots_PACKAGERef;
  process: Chatbots_processRef;
  tableHeads: Array<Chatbots_processTableHeadRef>;
  type: Chatbots_processActionType;
};

export type AddChatbots_processActionPayload = {
  __typename?: 'AddChatbots_processActionPayload';
  chatbots_processAction?: Maybe<Array<Maybe<Chatbots_processAction>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processActionPayloadchatbots_processActionArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processActionOrder>;
};

export type AddChatbots_processButtonInput = {
  action: Chatbots_processActionRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  filtersParams: Array<Chatbots_processFilterParamRef>;
  guid: Scalars['String'];
  label: Scalars['String'];
  package: Chatbots_PACKAGERef;
  process: Chatbots_processRef;
};

export type AddChatbots_processButtonPayload = {
  __typename?: 'AddChatbots_processButtonPayload';
  chatbots_processButton?: Maybe<Array<Maybe<Chatbots_processButton>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processButtonPayloadchatbots_processButtonArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processButtonOrder>;
};

export type AddChatbots_processFieldInput = {
  area: Chatbots_areaRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  guid: Scalars['String'];
  hiddenLevel?: InputMaybe<Chatbots_processFieldHiddenLevel>;
  key: Scalars['String'];
  package: Chatbots_PACKAGERef;
  process: Chatbots_processRef;
  tableHeaders: Array<Chatbots_processTableHeadRef>;
  type?: InputMaybe<Chatbots_processFieldType>;
};

export type AddChatbots_processFieldPayload = {
  __typename?: 'AddChatbots_processFieldPayload';
  chatbots_processField?: Maybe<Array<Maybe<Chatbots_processField>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processFieldPayloadchatbots_processFieldArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFieldOrder>;
};

export type AddChatbots_processFilterParamInput = {
  buttons: Array<Chatbots_processButtonRef>;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_accountRef;
  defaultValue?: InputMaybe<Scalars['String']>;
  fields: Array<Chatbots_processFieldRef>;
  guid: Scalars['String'];
  isHidden?: InputMaybe<Scalars['Boolean']>;
  max?: InputMaybe<Scalars['Int']>;
  min?: InputMaybe<Scalars['Int']>;
  package: Chatbots_PACKAGERef;
  param: Scalars['String'];
  paramType: Chatbots_processParamType;
  process: Chatbots_processRef;
  scope: Chatbots_processFilterParamScope;
  type: Chatbots_processFilterParamType;
};

export type AddChatbots_processFilterParamPayload = {
  __typename?: 'AddChatbots_processFilterParamPayload';
  chatbots_processFilterParam?: Maybe<Array<Maybe<Chatbots_processFilterParam>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processFilterParamPayloadchatbots_processFilterParamArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFilterParamOrder>;
};

export type AddChatbots_processInput = {
  accounts: Array<Chatbots_processAccountRef>;
  actions: Array<Chatbots_processActionRef>;
  api: Chatbots_processAPIRef;
  area: Chatbots_areaRef;
  buttons: Array<Chatbots_processButtonRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  description?: InputMaybe<Scalars['String']>;
  fields: Array<Chatbots_processFieldRef>;
  filterParams: Array<Chatbots_processFilterParamRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  operations: Array<Chatbots_processOperationRef>;
  package: Chatbots_PACKAGERef;
  statuses: Array<Chatbots_processStatusRef>;
  tableHeadConfigs: Array<Chatbots_processTableHeadConfigRef>;
  tableHeads: Array<Chatbots_processTableHeadRef>;
  tableMatchReplaces: Array<Chatbots_processTableMatchReplaceRef>;
  temporalForm?: InputMaybe<Scalars['String']>;
  validations: Array<Chatbots_processValidationRef>;
};

export type AddChatbots_processOperationInput = {
  area: Chatbots_areaRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  exId: Scalars['String'];
  guid: Scalars['String'];
  package: Chatbots_PACKAGERef;
  process: Chatbots_processRef;
  validations: Array<Chatbots_processValidationOperationRef>;
};

export type AddChatbots_processOperationPayload = {
  __typename?: 'AddChatbots_processOperationPayload';
  chatbots_processOperation?: Maybe<Array<Maybe<Chatbots_processOperation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processOperationPayloadchatbots_processOperationArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOperationOrder>;
};

export type AddChatbots_processPayload = {
  __typename?: 'AddChatbots_processPayload';
  chatbots_process?: Maybe<Array<Maybe<Chatbots_process>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processPayloadchatbots_processArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOrder>;
};

export type AddChatbots_processStatusInput = {
  color?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  guid: Scalars['String'];
  icon?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  package: Chatbots_PACKAGERef;
  process: Chatbots_processRef;
  value: Scalars['String'];
};

export type AddChatbots_processStatusPayload = {
  __typename?: 'AddChatbots_processStatusPayload';
  chatbots_processStatus?: Maybe<Array<Maybe<Chatbots_processStatus>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processStatusPayloadchatbots_processStatusArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processStatusOrder>;
};

export type AddChatbots_processTableHeadConfigInput = {
  guid: Scalars['String'];
  index: Scalars['Int'];
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  package: Chatbots_PACKAGERef;
  process: Chatbots_processRef;
  processAccount: Chatbots_processAccountRef;
  tableHead: Chatbots_processTableHeadRef;
};

export type AddChatbots_processTableHeadConfigPayload = {
  __typename?: 'AddChatbots_processTableHeadConfigPayload';
  chatbots_processTableHeadConfig?: Maybe<Array<Maybe<Chatbots_processTableHeadConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processTableHeadConfigPayloadchatbots_processTableHeadConfigArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadConfigOrder>;
};

export type AddChatbots_processTableHeadInput = {
  action?: InputMaybe<Chatbots_processActionRef>;
  allowActionByStatuses?: InputMaybe<Array<Chatbots_processStatusRef>>;
  configs: Array<Chatbots_processTableHeadConfigRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  fields: Array<Chatbots_processFieldRef>;
  guid: Scalars['String'];
  index: Scalars['Int'];
  matchReplaces: Array<Chatbots_processTableMatchReplaceRef>;
  name: Scalars['String'];
  process?: InputMaybe<Chatbots_processRef>;
};

export type AddChatbots_processTableHeadPayload = {
  __typename?: 'AddChatbots_processTableHeadPayload';
  chatbots_processTableHead?: Maybe<Array<Maybe<Chatbots_processTableHead>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processTableHeadPayloadchatbots_processTableHeadArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadOrder>;
};

export type AddChatbots_processTableMatchReplaceInput = {
  color?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  guid: Scalars['String'];
  match: Scalars['String'];
  operator: Chatbots_processTableMatchOperator;
  process: Chatbots_processRef;
  replace: Scalars['String'];
  tableHead: Chatbots_processTableHeadRef;
  tooltip?: InputMaybe<Scalars['String']>;
  type: Chatbots_processTableMatchReplaceType;
};

export type AddChatbots_processTableMatchReplacePayload = {
  __typename?: 'AddChatbots_processTableMatchReplacePayload';
  chatbots_processTableMatchReplace?: Maybe<Array<Maybe<Chatbots_processTableMatchReplace>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processTableMatchReplacePayloadchatbots_processTableMatchReplaceArgs = {
  filter?: InputMaybe<Chatbots_processTableMatchReplaceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableMatchReplaceOrder>;
};

export type AddChatbots_processValidationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  guid: Scalars['String'];
  operations: Array<Chatbots_processValidationOperationRef>;
  package: Chatbots_PACKAGERef;
  process: Chatbots_processRef;
  validation: Chatbots_validationRef;
};

export type AddChatbots_processValidationOperationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  documents: Array<Chatbots_processValidationOperation_documentRef>;
  endReviewDate?: InputMaybe<Scalars['DateTime']>;
  fields: Array<Chatbots_processsValidationOperation_fieldRef>;
  guid: Scalars['String'];
  operation: Chatbots_processOperationRef;
  package: Chatbots_PACKAGERef;
  process?: InputMaybe<Chatbots_processValidationRef>;
  reviewers: Array<Chatbots_accountRef>;
  startReviewDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
  validation?: InputMaybe<Chatbots_validationRef>;
};

export type AddChatbots_processValidationOperationPayload = {
  __typename?: 'AddChatbots_processValidationOperationPayload';
  chatbots_processValidationOperation?: Maybe<Array<Maybe<Chatbots_processValidationOperation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processValidationOperationPayloadchatbots_processValidationOperationArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperationOrder>;
};

export type AddChatbots_processValidationOperation_documentInput = {
  document?: InputMaybe<Chatbots_validationDocumentRef>;
  endReviewDate?: InputMaybe<Scalars['DateTime']>;
  exId?: InputMaybe<Scalars['String']>;
  files: Array<Chatbots_processValidationOperation_document_fileRef>;
  guid: Scalars['String'];
  operation: Chatbots_processValidationOperationRef;
  package: Chatbots_PACKAGERef;
  reviewers: Array<Chatbots_accountRef>;
  startReviewDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
};

export type AddChatbots_processValidationOperation_documentPayload = {
  __typename?: 'AddChatbots_processValidationOperation_documentPayload';
  chatbots_processValidationOperation_document?: Maybe<Array<Maybe<Chatbots_processValidationOperation_document>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processValidationOperation_documentPayloadchatbots_processValidationOperation_documentArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_documentOrder>;
};

export type AddChatbots_processValidationOperation_document_fileInput = {
  endReviewDate?: InputMaybe<Scalars['DateTime']>;
  exId?: InputMaybe<Scalars['String']>;
  fields: Array<Chatbots_processsValidationOperation_fieldRef>;
  file?: InputMaybe<Chatbots_validationDocument_fileRef>;
  guid: Scalars['String'];
  mimeType?: InputMaybe<Scalars['String']>;
  operationDocument: Chatbots_processValidationOperation_documentRef;
  package: Chatbots_PACKAGERef;
  reviewers: Array<Chatbots_accountRef>;
  startReviewDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
  url: Scalars['String'];
};

export type AddChatbots_processValidationOperation_document_filePayload = {
  __typename?: 'AddChatbots_processValidationOperation_document_filePayload';
  chatbots_processValidationOperation_document_file?: Maybe<Array<Maybe<Chatbots_processValidationOperation_document_file>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processValidationOperation_document_filePayloadchatbots_processValidationOperation_document_fileArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_document_fileOrder>;
};

export type AddChatbots_processValidationPayload = {
  __typename?: 'AddChatbots_processValidationPayload';
  chatbots_processValidation?: Maybe<Array<Maybe<Chatbots_processValidation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processValidationPayloadchatbots_processValidationArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOrder>;
};

export type AddChatbots_processsValidationOperation_fieldInput = {
  extId?: InputMaybe<Scalars['String']>;
  field?: InputMaybe<Chatbots_validationFieldRef>;
  file: Chatbots_processValidationOperation_document_fileRef;
  finalValue?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  isAutoApproved?: InputMaybe<Scalars['Boolean']>;
  isReviewed?: InputMaybe<Scalars['Boolean']>;
  key: Scalars['String'];
  operation: Chatbots_processValidationOperationRef;
  package: Chatbots_PACKAGERef;
  reliableRate?: InputMaybe<Scalars['Int']>;
  reviewedDate?: InputMaybe<Scalars['DateTime']>;
  reviewer?: InputMaybe<Chatbots_accountRef>;
  reviewerValue?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
  value: Scalars['String'];
};

export type AddChatbots_processsValidationOperation_fieldPayload = {
  __typename?: 'AddChatbots_processsValidationOperation_fieldPayload';
  chatbots_processsValidationOperation_field?: Maybe<Array<Maybe<Chatbots_processsValidationOperation_field>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_processsValidationOperation_fieldPayloadchatbots_processsValidationOperation_fieldArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processsValidationOperation_fieldOrder>;
};

export type AddChatbots_validationDocumentInput = {
  files: Array<Chatbots_validationDocument_fileRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  operationsDocuments: Array<Chatbots_processValidationOperation_documentRef>;
  package: Chatbots_PACKAGERef;
  validation: Chatbots_validationRef;
};

export type AddChatbots_validationDocumentPayload = {
  __typename?: 'AddChatbots_validationDocumentPayload';
  chatbots_validationDocument?: Maybe<Array<Maybe<Chatbots_validationDocument>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_validationDocumentPayloadchatbots_validationDocumentArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocumentOrder>;
};

export type AddChatbots_validationDocument_fileInput = {
  document: Chatbots_validationDocumentRef;
  fields: Array<Chatbots_processsValidationOperation_fieldRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  operationFiles: Array<Chatbots_processValidationOperation_document_fileRef>;
  package: Chatbots_PACKAGERef;
  type: Chatbots_validationDocumentType;
};

export type AddChatbots_validationDocument_filePayload = {
  __typename?: 'AddChatbots_validationDocument_filePayload';
  chatbots_validationDocument_file?: Maybe<Array<Maybe<Chatbots_validationDocument_file>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_validationDocument_filePayloadchatbots_validationDocument_fileArgs = {
  filter?: InputMaybe<Chatbots_validationDocument_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocument_fileOrder>;
};

export type AddChatbots_validationFieldInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  guid: Scalars['String'];
  key: Scalars['String'];
  name: Scalars['String'];
  package: Chatbots_PACKAGERef;
  processValidationOperationFields: Array<Chatbots_processsValidationOperation_fieldRef>;
  regexp?: InputMaybe<Scalars['String']>;
  type: Chatbots_validationFieldType;
  validation: Chatbots_validationRef;
};

export type AddChatbots_validationFieldPayload = {
  __typename?: 'AddChatbots_validationFieldPayload';
  chatbots_validationField?: Maybe<Array<Maybe<Chatbots_validationField>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_validationFieldPayloadchatbots_validationFieldArgs = {
  filter?: InputMaybe<Chatbots_validationFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationFieldOrder>;
};

export type AddChatbots_validationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: Chatbots_accountRef;
  description?: InputMaybe<Scalars['String']>;
  documents: Array<Chatbots_validationDocumentRef>;
  fields: Array<Chatbots_validationFieldRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  operations: Array<Chatbots_processValidationOperationRef>;
  package: Chatbots_PACKAGERef;
  processes: Array<Chatbots_processValidationRef>;
  type: Chatbots_validationType;
};

export type AddChatbots_validationPayload = {
  __typename?: 'AddChatbots_validationPayload';
  chatbots_validation?: Maybe<Array<Maybe<Chatbots_validation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddChatbots_validationPayloadchatbots_validationArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationOrder>;
};

export type AddCompanySectorInput = {
  name: Scalars['String'];
};

export type AddCompanySectorPayload = {
  __typename?: 'AddCompanySectorPayload';
  companySector?: Maybe<Array<Maybe<CompanySector>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCompanySectorPayloadcompanySectorArgs = {
  filter?: InputMaybe<CompanySectorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CompanySectorOrder>;
};

export type AddContactInput = {
  account?: InputMaybe<AccountRef>;
  addresses: Array<AddressRef>;
  billing?: InputMaybe<Contact_billingInfoRef>;
  business?: InputMaybe<Contact_businessInfoRef>;
  cmsContact?: InputMaybe<CMS_contactRef>;
  comercialName: Scalars['String'];
  contactLists?: InputMaybe<Array<CRM_contactListRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  crmContact?: InputMaybe<CRM_contactRef>;
  dni?: InputMaybe<Scalars['String']>;
  emails: Array<Contact_emailRef>;
  erpContact?: InputMaybe<ERP_contactRef>;
  guid: Scalars['String'];
  importLogs: Array<Contact_importLogRef>;
  ips: Array<Scalars['String']>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  jobPositions?: InputMaybe<Array<Contact_jobPositionRef>>;
  lmsContact?: InputMaybe<LMS_contactRef>;
  oldId?: InputMaybe<Scalars['String']>;
  org?: InputMaybe<OrgRef>;
  org360: Org360Ref;
  organizations?: InputMaybe<Array<Contact_jobPositionRef>>;
  person?: InputMaybe<PersonRef>;
  phones: Array<Contact_phoneRef>;
  proposalStakeholders: Array<Proposal_stakeholderRef>;
  publicToken?: InputMaybe<Scalars['String']>;
  vetContact?: InputMaybe<VET_contactRef>;
};

export type AddContactPayload = {
  __typename?: 'AddContactPayload';
  contact?: Maybe<Array<Maybe<Contact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddContactPayloadcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ContactOrder>;
};

export type AddContact_billingInfoInput = {
  banks: Array<BankAccountRef>;
  contact: ContactRef;
  employmentType?: InputMaybe<Contact_billingInfo_employmentType>;
  taxID?: InputMaybe<Scalars['String']>;
};

export type AddContact_billingInfoPayload = {
  __typename?: 'AddContact_billingInfoPayload';
  contact_billingInfo?: Maybe<Array<Maybe<Contact_billingInfo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddContact_billingInfoPayloadcontact_billingInfoArgs = {
  filter?: InputMaybe<Contact_billingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_billingInfoOrder>;
};

export type AddContact_businessInfoInput = {
  contact: ContactRef;
  jobPosition?: InputMaybe<Scalars['String']>;
  linkedin?: InputMaybe<Scalars['String']>;
  sector?: InputMaybe<CompanySectorRef>;
  website?: InputMaybe<Scalars['String']>;
  yearsOfExperience?: InputMaybe<Contact_yearsOfExperience>;
};

export type AddContact_businessInfoPayload = {
  __typename?: 'AddContact_businessInfoPayload';
  contact_businessInfo?: Maybe<Array<Maybe<Contact_businessInfo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddContact_businessInfoPayloadcontact_businessInfoArgs = {
  filter?: InputMaybe<Contact_businessInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_businessInfoOrder>;
};

export type AddContact_emailInput = {
  contact: ContactRef;
  email: Scalars['String'];
  type: Contact_emailType;
};

export type AddContact_emailPayload = {
  __typename?: 'AddContact_emailPayload';
  contact_email?: Maybe<Array<Maybe<Contact_email>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddContact_emailPayloadcontact_emailArgs = {
  filter?: InputMaybe<Contact_emailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_emailOrder>;
};

export type AddContact_importLogInput = {
  contact: ContactRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  importGUID: Scalars['String'];
  type?: InputMaybe<Contact_importLogType>;
};

export type AddContact_importLogPayload = {
  __typename?: 'AddContact_importLogPayload';
  contact_importLog?: Maybe<Array<Maybe<Contact_importLog>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddContact_importLogPayloadcontact_importLogArgs = {
  filter?: InputMaybe<Contact_importLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_importLogOrder>;
};

export type AddContact_jobPositionInput = {
  contact: ContactRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  department?: InputMaybe<Organization_departmentRef>;
  isCurrent?: InputMaybe<Scalars['Boolean']>;
  jobPosition?: InputMaybe<JobPositionRef>;
  name: Scalars['String'];
  organization: ContactRef;
  role?: InputMaybe<Contact_jobPositionRole>;
};

export type AddContact_jobPositionPayload = {
  __typename?: 'AddContact_jobPositionPayload';
  contact_jobPosition?: Maybe<Array<Maybe<Contact_jobPosition>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddContact_jobPositionPayloadcontact_jobPositionArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_jobPositionOrder>;
};

export type AddContact_phoneInput = {
  contact: ContactRef;
  phone: Scalars['String'];
  prefix: Scalars['String'];
  type: Contact_phoneType;
};

export type AddContact_phonePayload = {
  __typename?: 'AddContact_phonePayload';
  contact_phone?: Maybe<Array<Maybe<Contact_phone>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddContact_phonePayloadcontact_phoneArgs = {
  filter?: InputMaybe<Contact_phoneFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_phoneOrder>;
};

export type AddCountryInput = {
  code: Scalars['String'];
  country: Scalars['String'];
};

export type AddCountryPayload = {
  __typename?: 'AddCountryPayload';
  country?: Maybe<Array<Maybe<Country>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCountryPayloadcountryArgs = {
  filter?: InputMaybe<CountryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CountryOrder>;
};

export type AddCurrencyInput = {
  code: Scalars['String'];
  name: Scalars['String'];
  symbol: Scalars['String'];
};

export type AddCurrencyPayload = {
  __typename?: 'AddCurrencyPayload';
  currency?: Maybe<Array<Maybe<Currency>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCurrencyPayloadcurrencyArgs = {
  filter?: InputMaybe<CurrencyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CurrencyOrder>;
};

export type AddDynamicTableInput = {
  accounts: Array<DynamicTable_accountRef>;
  heads: Array<DynamicTable_headRef>;
  name: Scalars['String'];
};

export type AddDynamicTablePayload = {
  __typename?: 'AddDynamicTablePayload';
  dynamicTable?: Maybe<Array<Maybe<DynamicTable>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDynamicTablePayloaddynamicTableArgs = {
  filter?: InputMaybe<DynamicTableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTableOrder>;
};

export type AddDynamicTable_accountInput = {
  account: AccountRef;
  heads: Array<DynamicTable_headRef>;
  table: DynamicTableRef;
};

export type AddDynamicTable_accountPayload = {
  __typename?: 'AddDynamicTable_accountPayload';
  dynamicTable_account?: Maybe<Array<Maybe<DynamicTable_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDynamicTable_accountPayloaddynamicTable_accountArgs = {
  filter?: InputMaybe<DynamicTable_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddDynamicTable_headInput = {
  accounts: Array<DynamicTable_accountRef>;
  booleanOptions?: InputMaybe<DynamicTable_headValueBooleanOptionsRef>;
  currencyOptions?: InputMaybe<DynamicTable_headValueCurrencyOptionsRef>;
  dateOptions?: InputMaybe<DynamicTable_headValueDateOptionsRef>;
  keys: Array<Scalars['String']>;
  linkOptions?: InputMaybe<DynamicTable_headValueLinkOptionsRef>;
  name: Scalars['String'];
  numberOptions?: InputMaybe<DynamicTable_headValueNumberOptionsRef>;
  table: DynamicTableRef;
  type: DynamicTable_headValueType;
};

export type AddDynamicTable_headPayload = {
  __typename?: 'AddDynamicTable_headPayload';
  dynamicTable_head?: Maybe<Array<Maybe<DynamicTable_head>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDynamicTable_headPayloaddynamicTable_headArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headOrder>;
};

export type AddDynamicTable_headValueBooleanOptionsInput = {
  head: DynamicTable_headRef;
  ifFalse: Scalars['String'];
  ifTrue: Scalars['String'];
};

export type AddDynamicTable_headValueBooleanOptionsPayload = {
  __typename?: 'AddDynamicTable_headValueBooleanOptionsPayload';
  dynamicTable_headValueBooleanOptions?: Maybe<Array<Maybe<DynamicTable_headValueBooleanOptions>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDynamicTable_headValueBooleanOptionsPayloaddynamicTable_headValueBooleanOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueBooleanOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headValueBooleanOptionsOrder>;
};

export type AddDynamicTable_headValueCurrencyOptionsInput = {
  defaultCurrency: CurrencyRef;
  head: DynamicTable_headRef;
};

export type AddDynamicTable_headValueCurrencyOptionsPayload = {
  __typename?: 'AddDynamicTable_headValueCurrencyOptionsPayload';
  dynamicTable_headValueCurrencyOptions?: Maybe<Array<Maybe<DynamicTable_headValueCurrencyOptions>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDynamicTable_headValueCurrencyOptionsPayloaddynamicTable_headValueCurrencyOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueCurrencyOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddDynamicTable_headValueDateOptionsInput = {
  format: Scalars['String'];
  head: DynamicTable_headRef;
};

export type AddDynamicTable_headValueDateOptionsPayload = {
  __typename?: 'AddDynamicTable_headValueDateOptionsPayload';
  dynamicTable_headValueDateOptions?: Maybe<Array<Maybe<DynamicTable_headValueDateOptions>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDynamicTable_headValueDateOptionsPayloaddynamicTable_headValueDateOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueDateOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headValueDateOptionsOrder>;
};

export type AddDynamicTable_headValueLinkOptionsInput = {
  head: DynamicTable_headRef;
  type: DynamicTable_headValueLinkOptionsType;
};

export type AddDynamicTable_headValueLinkOptionsPayload = {
  __typename?: 'AddDynamicTable_headValueLinkOptionsPayload';
  dynamicTable_headValueLinkOptions?: Maybe<Array<Maybe<DynamicTable_headValueLinkOptions>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDynamicTable_headValueLinkOptionsPayloaddynamicTable_headValueLinkOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueLinkOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddDynamicTable_headValueNumberOptionsInput = {
  head: DynamicTable_headRef;
  type: DynamicTable_headValueNumberOptionsType;
};

export type AddDynamicTable_headValueNumberOptionsPayload = {
  __typename?: 'AddDynamicTable_headValueNumberOptionsPayload';
  dynamicTable_headValueNumberOptions?: Maybe<Array<Maybe<DynamicTable_headValueNumberOptions>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDynamicTable_headValueNumberOptionsPayloaddynamicTable_headValueNumberOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueNumberOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddE360AppInput = {
  androidId?: InputMaybe<Scalars['String']>;
  domains?: InputMaybe<Array<InputMaybe<E360App_domainRef>>>;
  guid: Scalars['String'];
  iosId?: InputMaybe<Scalars['String']>;
  locations: Array<E360App_locationRef>;
  name: Scalars['String'];
  notifications: Array<E360App_notificationRef>;
  organizations: Array<E360App_organizationRef>;
  partners: Array<E360App_partnerRef>;
  petPassApp?: InputMaybe<PETPASS_APPRef>;
  shop?: InputMaybe<E360App_shopRef>;
  stablishments: Array<E360App_stablishmentRef>;
  userNotifications: Array<E360App_user_notificationRef>;
  users?: InputMaybe<Array<InputMaybe<E360App_userRef>>>;
};

export type AddE360AppPayload = {
  __typename?: 'AddE360AppPayload';
  e360App?: Maybe<Array<Maybe<E360App>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360AppPayloade360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360AppOrder>;
};

export type AddE360App_domainInput = {
  domain: Scalars['String'];
  e360App?: InputMaybe<E360AppRef>;
  guid: Scalars['String'];
  type: E360App_domainType;
};

export type AddE360App_domainPayload = {
  __typename?: 'AddE360App_domainPayload';
  e360App_domain?: Maybe<Array<Maybe<E360App_domain>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_domainPayloade360App_domainArgs = {
  filter?: InputMaybe<E360App_domainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_domainOrder>;
};

export type AddE360App_locationFileInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid: Scalars['String'];
  label: Scalars['String'];
  location: E360App_locationRef;
};

export type AddE360App_locationFilePayload = {
  __typename?: 'AddE360App_locationFilePayload';
  e360App_locationFile?: Maybe<Array<Maybe<E360App_locationFile>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_locationFilePayloade360App_locationFileArgs = {
  filter?: InputMaybe<E360App_locationFileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationFileOrder>;
};

export type AddE360App_locationInput = {
  address: Scalars['String'];
  addressInfo?: InputMaybe<Scalars['String']>;
  allowAppointments?: InputMaybe<Scalars['Boolean']>;
  app: E360AppRef;
  appoinmentLots: Array<E360App_location_appoinmentLotsRef>;
  appoinments: Array<E360App_location_appoinmentRef>;
  areas: Array<E360App_location_areaRef>;
  avatar?: InputMaybe<Scalars['String']>;
  categoryByPartner?: InputMaybe<Scalars['String']>;
  country: CountryRef;
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  description: Scalars['String'];
  emails: Array<Scalars['String']>;
  fullAddress?: InputMaybe<Scalars['String']>;
  gallery: Array<E360App_locationFileRef>;
  galleryUrl?: InputMaybe<Array<Scalars['String']>>;
  guid: Scalars['String'];
  isDeleted: Scalars['Boolean'];
  isDisabled: Scalars['Boolean'];
  isVerified: Scalars['Boolean'];
  lastUpdate?: InputMaybe<Scalars['DateTime']>;
  lastUpdateBy?: InputMaybe<E360App_userRef>;
  lat?: InputMaybe<Scalars['Float']>;
  lon?: InputMaybe<Scalars['Float']>;
  menu: Array<E360App_location_menuRef>;
  menuSections: Array<E360App_location_menu_sectionRef>;
  menuSubSections: Array<E360App_location_menu_subSectionRef>;
  name: Scalars['String'];
  partner?: InputMaybe<E360App_partnerRef>;
  petpass?: InputMaybe<PETPASS_locationRef>;
  phones: Array<Scalars['String']>;
  publicPath: Scalars['String'];
  resources: Array<E360App_location_area_resourceRef>;
  roadType?: InputMaybe<Scalars['String']>;
  schedules: Array<E360App_locationScheduleRef>;
  stablishment?: InputMaybe<E360App_stablishmentRef>;
  status: E360App_locationStatus;
  subcategoryByPartner?: InputMaybe<Scalars['String']>;
  tags: Array<E360App_location_menu_tagRef>;
  thumbnail?: InputMaybe<E360Storage_fileRef>;
  thumbnailUrl?: InputMaybe<Scalars['String']>;
  tmp_contactName?: InputMaybe<Scalars['String']>;
  tmp_locality?: InputMaybe<Scalars['String']>;
  tmp_province?: InputMaybe<Scalars['String']>;
  tmp_source?: InputMaybe<Scalars['String']>;
  tmp_vet_consultingChannelType?: InputMaybe<Array<Scalars['String']>>;
  tmp_vet_consultingType?: InputMaybe<Array<Scalars['String']>>;
  tmp_vet_specialities?: InputMaybe<Array<Scalars['String']>>;
  types: Array<E360App_locationType>;
  website?: InputMaybe<Scalars['String']>;
  workShifts: Array<E360App_location_area_workShiftRef>;
  zipCode?: InputMaybe<Scalars['String']>;
};

export type AddE360App_locationPayload = {
  __typename?: 'AddE360App_locationPayload';
  e360App_location?: Maybe<Array<Maybe<E360App_location>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_locationPayloade360App_locationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationOrder>;
};

export type AddE360App_locationScheduleInput = {
  days: Array<E360App_locationScheduleDay>;
  endAt: Scalars['String'];
  guid: Scalars['String'];
  location: E360App_locationRef;
  startAt: Scalars['String'];
};

export type AddE360App_locationSchedulePayload = {
  __typename?: 'AddE360App_locationSchedulePayload';
  e360App_locationSchedule?: Maybe<Array<Maybe<E360App_locationSchedule>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_locationSchedulePayloade360App_locationScheduleArgs = {
  filter?: InputMaybe<E360App_locationScheduleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationScheduleOrder>;
};

export type AddE360App_location_appoinmentInput = {
  bookBy: E360App_userRef;
  comment?: InputMaybe<Scalars['String']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  location: E360App_locationRef;
  startAt: Scalars['DateTime'];
  time: Scalars['String'];
};

export type AddE360App_location_appoinmentLotsInput = {
  amount: Scalars['Int'];
  guid: Scalars['String'];
  label: Scalars['String'];
  location: E360App_locationRef;
};

export type AddE360App_location_appoinmentLotsPayload = {
  __typename?: 'AddE360App_location_appoinmentLotsPayload';
  e360App_location_appoinmentLots?: Maybe<Array<Maybe<E360App_location_appoinmentLots>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_appoinmentLotsPayloade360App_location_appoinmentLotsArgs = {
  filter?: InputMaybe<E360App_location_appoinmentLotsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentLotsOrder>;
};

export type AddE360App_location_appoinmentPayload = {
  __typename?: 'AddE360App_location_appoinmentPayload';
  e360App_location_appoinment?: Maybe<Array<Maybe<E360App_location_appoinment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_appoinmentPayloade360App_location_appoinmentArgs = {
  filter?: InputMaybe<E360App_location_appoinmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentOrder>;
};

export type AddE360App_location_areaInput = {
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  location: E360App_locationRef;
  name: Scalars['String'];
  resources: Array<E360App_location_area_resourceRef>;
  workShifts: Array<E360App_location_area_workShiftRef>;
};

export type AddE360App_location_areaPayload = {
  __typename?: 'AddE360App_location_areaPayload';
  e360App_location_area?: Maybe<Array<Maybe<E360App_location_area>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_areaPayloade360App_location_areaArgs = {
  filter?: InputMaybe<E360App_location_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_areaOrder>;
};

export type AddE360App_location_area_resourceInput = {
  amount: Scalars['Int'];
  area: E360App_location_areaRef;
  capacity: Scalars['Int'];
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  location: E360App_locationRef;
  name: Scalars['String'];
  workShift: E360App_location_area_workShiftRef;
};

export type AddE360App_location_area_resourcePayload = {
  __typename?: 'AddE360App_location_area_resourcePayload';
  e360App_location_area_resource?: Maybe<Array<Maybe<E360App_location_area_resource>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_area_resourcePayloade360App_location_area_resourceArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_resourceOrder>;
};

export type AddE360App_location_area_workShiftInput = {
  area: E360App_location_areaRef;
  days: Array<E360App_locationScheduleDay>;
  endAt: Scalars['String'];
  guid: Scalars['String'];
  location: E360App_locationRef;
  name: Scalars['String'];
  resources: Array<E360App_location_area_resourceRef>;
  startAt: Scalars['String'];
};

export type AddE360App_location_area_workShiftPayload = {
  __typename?: 'AddE360App_location_area_workShiftPayload';
  e360App_location_area_workShift?: Maybe<Array<Maybe<E360App_location_area_workShift>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_area_workShiftPayloade360App_location_area_workShiftArgs = {
  filter?: InputMaybe<E360App_location_area_workShiftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_workShiftOrder>;
};

export type AddE360App_location_menuInput = {
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  isPublished: Scalars['Boolean'];
  location: E360App_locationRef;
  name: Scalars['String'];
  price?: InputMaybe<Scalars['Float']>;
  sections: Array<E360App_location_menu_sectionRef>;
};

export type AddE360App_location_menuPayload = {
  __typename?: 'AddE360App_location_menuPayload';
  e360App_location_menu?: Maybe<Array<Maybe<E360App_location_menu>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_menuPayloade360App_location_menuArgs = {
  filter?: InputMaybe<E360App_location_menuFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menuOrder>;
};

export type AddE360App_location_menu_comboInput = {
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  isPublished: Scalars['Boolean'];
  items: Array<E360App_location_menu_itemRef>;
  name: Scalars['String'];
  price?: InputMaybe<Scalars['Float']>;
  sections: Array<E360App_location_menu_section_itemRef>;
  thumb?: InputMaybe<Scalars['String']>;
};

export type AddE360App_location_menu_comboPayload = {
  __typename?: 'AddE360App_location_menu_comboPayload';
  e360App_location_menu_combo?: Maybe<Array<Maybe<E360App_location_menu_combo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_menu_comboPayloade360App_location_menu_comboArgs = {
  filter?: InputMaybe<E360App_location_menu_comboFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_comboOrder>;
};

export type AddE360App_location_menu_itemInput = {
  alert?: InputMaybe<Array<E360App_location_menu_itemAlert>>;
  combos: Array<E360App_location_menu_comboRef>;
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  isNotAvailableForCombo: Scalars['Boolean'];
  isNotAvailableForOffer: Scalars['Boolean'];
  isPublished: Scalars['Boolean'];
  measure: E360App_location_menu_itemMeasure;
  name: Scalars['String'];
  price?: InputMaybe<Scalars['Float']>;
  sections: Array<E360App_location_menu_section_itemRef>;
  tags: Array<E360App_location_menu_tagRef>;
  thumb?: InputMaybe<Scalars['String']>;
  type: E360App_location_menu_itemType;
};

export type AddE360App_location_menu_itemPayload = {
  __typename?: 'AddE360App_location_menu_itemPayload';
  e360App_location_menu_item?: Maybe<Array<Maybe<E360App_location_menu_item>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_menu_itemPayloade360App_location_menu_itemArgs = {
  filter?: InputMaybe<E360App_location_menu_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_itemOrder>;
};

export type AddE360App_location_menu_sectionInput = {
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  isPublished: Scalars['Boolean'];
  items: Array<E360App_location_menu_section_itemRef>;
  location: E360App_locationRef;
  menu: Array<E360App_location_menuRef>;
  name: Scalars['String'];
  subSections: Array<E360App_location_menu_subSectionRef>;
};

export type AddE360App_location_menu_sectionPayload = {
  __typename?: 'AddE360App_location_menu_sectionPayload';
  e360App_location_menu_section?: Maybe<Array<Maybe<E360App_location_menu_section>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_menu_sectionPayloade360App_location_menu_sectionArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_sectionOrder>;
};

export type AddE360App_location_menu_section_itemInput = {
  combo?: InputMaybe<E360App_location_menu_comboRef>;
  guid: Scalars['String'];
  index: Scalars['Int'];
  isPublished: Scalars['Boolean'];
  item?: InputMaybe<E360App_location_menu_itemRef>;
  section?: InputMaybe<E360App_location_menu_sectionRef>;
  subSection?: InputMaybe<E360App_location_menu_subSectionRef>;
};

export type AddE360App_location_menu_section_itemPayload = {
  __typename?: 'AddE360App_location_menu_section_itemPayload';
  e360App_location_menu_section_item?: Maybe<Array<Maybe<E360App_location_menu_section_item>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_menu_section_itemPayloade360App_location_menu_section_itemArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_section_itemOrder>;
};

export type AddE360App_location_menu_subSectionInput = {
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  index: Scalars['Int'];
  isPublished: Scalars['Boolean'];
  items: Array<E360App_location_menu_section_itemRef>;
  location: E360App_locationRef;
  name: Scalars['String'];
  section?: InputMaybe<E360App_location_menu_sectionRef>;
};

export type AddE360App_location_menu_subSectionPayload = {
  __typename?: 'AddE360App_location_menu_subSectionPayload';
  e360App_location_menu_subSection?: Maybe<Array<Maybe<E360App_location_menu_subSection>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_menu_subSectionPayloade360App_location_menu_subSectionArgs = {
  filter?: InputMaybe<E360App_location_menu_subSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_subSectionOrder>;
};

export type AddE360App_location_menu_tagInput = {
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  items: Array<E360App_location_menu_itemRef>;
  location: E360App_locationRef;
  name: Scalars['String'];
};

export type AddE360App_location_menu_tagPayload = {
  __typename?: 'AddE360App_location_menu_tagPayload';
  e360App_location_menu_tag?: Maybe<Array<Maybe<E360App_location_menu_tag>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_location_menu_tagPayloade360App_location_menu_tagArgs = {
  filter?: InputMaybe<E360App_location_menu_tagFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_tagOrder>;
};

export type AddE360App_notificationInput = {
  app?: InputMaybe<E360AppRef>;
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  guid: Scalars['String'];
  message: Scalars['String'];
  title: Scalars['String'];
  users: Array<E360App_user_notificationRef>;
};

export type AddE360App_notificationPayload = {
  __typename?: 'AddE360App_notificationPayload';
  e360App_notification?: Maybe<Array<Maybe<E360App_notification>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_notificationPayloade360App_notificationArgs = {
  filter?: InputMaybe<E360App_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_notificationOrder>;
};

export type AddE360App_organizationInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  e360App?: InputMaybe<E360AppRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  stablishmentUsers: Array<E360App_stablishment_userRef>;
  stablishments: Array<E360App_stablishmentRef>;
  type: E360App_organizationType;
  users: Array<E360App_organization_userRef>;
};

export type AddE360App_organizationPayload = {
  __typename?: 'AddE360App_organizationPayload';
  e360App_organization?: Maybe<Array<Maybe<E360App_organization>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_organizationPayloade360App_organizationArgs = {
  filter?: InputMaybe<E360App_organizationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organizationOrder>;
};

export type AddE360App_organization_userInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  guid: Scalars['String'];
  organization: E360App_organizationRef;
  role: E360App_organization_userRole;
  stablishmentUsers: Array<E360App_stablishment_userRef>;
  user?: InputMaybe<E360App_userRef>;
};

export type AddE360App_organization_userPayload = {
  __typename?: 'AddE360App_organization_userPayload';
  e360App_organization_user?: Maybe<Array<Maybe<E360App_organization_user>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_organization_userPayloade360App_organization_userArgs = {
  filter?: InputMaybe<E360App_organization_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organization_userOrder>;
};

export type AddE360App_partnerInput = {
  allowedOrigins: Array<Scalars['String']>;
  contracts: Array<E360App_shop_partner_contractRef>;
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  customerContracts: Array<E360App_shop_customer_contractRef>;
  e360App?: InputMaybe<E360AppRef>;
  guid: Scalars['String'];
  locations: Array<E360App_locationRef>;
  name: Scalars['String'];
  operations: Array<E360App_shop_operationRef>;
  operationsRef?: InputMaybe<Scalars['String']>;
  petPassPartner?: InputMaybe<PETPASS_partnerRef>;
  promotionCodes: Array<E360App_shop_promotionCodeRef>;
  promotions: Array<E360App_shop_promotionRef>;
  users?: InputMaybe<Array<E360App_user_partnerRef>>;
  webhooks: Array<E360App_partner_webhookRef>;
};

export type AddE360App_partnerPayload = {
  __typename?: 'AddE360App_partnerPayload';
  e360App_partner?: Maybe<Array<Maybe<E360App_partner>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_partnerPayloade360App_partnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partnerOrder>;
};

export type AddE360App_partner_webhookInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  env: E360App_partner_webhookEnv;
  guid: Scalars['String'];
  partner?: InputMaybe<E360App_partnerRef>;
  url: Scalars['String'];
};

export type AddE360App_partner_webhookPayload = {
  __typename?: 'AddE360App_partner_webhookPayload';
  e360App_partner_webhook?: Maybe<Array<Maybe<E360App_partner_webhook>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_partner_webhookPayloade360App_partner_webhookArgs = {
  filter?: InputMaybe<E360App_partner_webhookFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partner_webhookOrder>;
};

export type AddE360App_shopInput = {
  contracts: Array<E360App_shop_contractRef>;
  customerContracts: Array<E360App_shop_customer_contractRef>;
  e360App: E360AppRef;
  guid: Scalars['String'];
  name: Scalars['String'];
  operations: Array<E360App_shop_operationRef>;
  partnerContracts: Array<E360App_shop_partner_contractRef>;
  products: Array<E360App_shop_productRef>;
  promotionCodes: Array<E360App_shop_promotionCodeRef>;
  promotions: Array<E360App_shop_promotionRef>;
  purchases: Array<E360App_shop_purchaseRef>;
};

export type AddE360App_shopPayload = {
  __typename?: 'AddE360App_shopPayload';
  e360App_shop?: Maybe<Array<Maybe<E360App_shop>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shopPayloade360App_shopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shopOrder>;
};

export type AddE360App_shop_contractInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  netPrice: Scalars['Int'];
  partnerContracts: Array<E360App_shop_partner_contractRef>;
  periodicity: E360App_shop_contract_periodicity;
  products?: InputMaybe<E360App_shop_productRef>;
  renewalNetPrice: Scalars['Int'];
  renewalType: E360App_shop_contract_renewalType;
  returnPolicy?: InputMaybe<Scalars['String']>;
  returnPolicyDays?: InputMaybe<Scalars['Int']>;
  returnPolicyFee?: InputMaybe<Scalars['Int']>;
  returnPolicyFeeType?: InputMaybe<E360App_contractFeeType>;
  shop: E360App_shopRef;
};

export type AddE360App_shop_contractPayload = {
  __typename?: 'AddE360App_shop_contractPayload';
  e360App_shop_contract?: Maybe<Array<Maybe<E360App_shop_contract>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_contractPayloade360App_shop_contractArgs = {
  filter?: InputMaybe<E360App_shop_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_contractOrder>;
};

export type AddE360App_shop_customer_contractInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  customer: E360App_userRef;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  deletedBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  disabledAt?: InputMaybe<Scalars['DateTime']>;
  disabledBy?: InputMaybe<E360App_userRef>;
  guid: Scalars['String'];
  netPrice: Scalars['Int'];
  nextRenewalAlertDate: Scalars['DateTime'];
  nextRenewalDate: Scalars['DateTime'];
  nextRenewalNetPrice: Scalars['Int'];
  partner?: InputMaybe<E360App_partnerRef>;
  partnerContract?: InputMaybe<E360App_shop_partner_contractRef>;
  periodicity: E360App_shop_contract_periodicity;
  petpassContract?: InputMaybe<PETPASS_contractRef>;
  products: Array<E360App_shop_productRef>;
  renewalType: E360App_shop_contract_renewalType;
  renewals: Array<E360App_shop_customer_contract_renewalRef>;
  services?: InputMaybe<Array<E360App_shop_customer_contractServiceRef>>;
  shop: E360App_shopRef;
  status: E360App_shop_customer_contractStatus;
};

export type AddE360App_shop_customer_contractPayload = {
  __typename?: 'AddE360App_shop_customer_contractPayload';
  e360App_shop_customer_contract?: Maybe<Array<Maybe<E360App_shop_customer_contract>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_customer_contractPayloade360App_shop_customer_contractArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractOrder>;
};

export type AddE360App_shop_customer_contractServiceInput = {
  code?: InputMaybe<Scalars['String']>;
  contract: E360App_shop_customer_contractRef;
  guid: Scalars['String'];
  key: Scalars['String'];
  keys?: InputMaybe<Array<Scalars['String']>>;
  name: Scalars['String'];
  type: E360App_shop_productService_type;
};

export type AddE360App_shop_customer_contractServicePayload = {
  __typename?: 'AddE360App_shop_customer_contractServicePayload';
  e360App_shop_customer_contractService?: Maybe<Array<Maybe<E360App_shop_customer_contractService>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_customer_contractServicePayloade360App_shop_customer_contractServiceArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractServiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractServiceOrder>;
};

export type AddE360App_shop_customer_contract_renewalInput = {
  contract: E360App_shop_customer_contractRef;
  createdBy?: InputMaybe<E360App_userRef>;
  endAt: Scalars['DateTime'];
  guid: Scalars['String'];
  index: Scalars['Int'];
  netPrice: Scalars['Int'];
  paidAt?: InputMaybe<Scalars['DateTime']>;
  partnerFee: Scalars['Int'];
  startAt: Scalars['DateTime'];
  status: E360App_shop_customer_contract_renewalStatus;
};

export type AddE360App_shop_customer_contract_renewalPayload = {
  __typename?: 'AddE360App_shop_customer_contract_renewalPayload';
  e360App_shop_customer_contract_renewal?: Maybe<Array<Maybe<E360App_shop_customer_contract_renewal>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_customer_contract_renewalPayloade360App_shop_customer_contract_renewalArgs = {
  filter?: InputMaybe<E360App_shop_customer_contract_renewalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contract_renewalOrder>;
};

export type AddE360App_shop_operationInput = {
  amount: Scalars['Int'];
  date: Scalars['DateTime'];
  guid: Scalars['String'];
  netProfit: Scalars['Int'];
  partner?: InputMaybe<E360App_partnerRef>;
  partnerFee: Scalars['Int'];
  paymentMethod: E360App_shop_paymentMethod;
  product?: InputMaybe<E360App_shop_productRef>;
  purchase: E360App_shop_purchaseRef;
  ref: Scalars['String'];
  shop: E360App_shopRef;
  taxPercentage: Scalars['Int'];
  taxType?: InputMaybe<e360App_shop_taxType>;
  taxValue: Scalars['Int'];
  taxValueType?: InputMaybe<e360App_shop_taxValueType>;
  total: Scalars['Int'];
  type: E360App_shop_operationType;
};

export type AddE360App_shop_operationPayload = {
  __typename?: 'AddE360App_shop_operationPayload';
  e360App_shop_operation?: Maybe<Array<Maybe<E360App_shop_operation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_operationPayloade360App_shop_operationArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_operationOrder>;
};

export type AddE360App_shop_partner_contractInput = {
  contract?: InputMaybe<E360App_shop_contractRef>;
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  customerContracts: Array<E360App_shop_customer_contractRef>;
  description?: InputMaybe<Scalars['String']>;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  fee: Scalars['Int'];
  feeType: E360App_contractFeeType;
  guid: Scalars['String'];
  netPrice: Scalars['Int'];
  partner: E360App_partnerRef;
  periodicity: E360App_shop_contract_periodicity;
  product?: InputMaybe<E360App_shop_productRef>;
  renewalFee: Scalars['Int'];
  renewalFeeType: E360App_contractFeeType;
  renewalType: E360App_shop_contract_renewalType;
  shop: E360App_shopRef;
  status: E360App_partner_contactStatus;
};

export type AddE360App_shop_partner_contractPayload = {
  __typename?: 'AddE360App_shop_partner_contractPayload';
  e360App_shop_partner_contract?: Maybe<Array<Maybe<E360App_shop_partner_contract>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_partner_contractPayloade360App_shop_partner_contractArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_partner_contractOrder>;
};

export type AddE360App_shop_productInput = {
  avatar?: InputMaybe<Scalars['String']>;
  bannerDesktop?: InputMaybe<Scalars['String']>;
  bannerMobile?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<E360App_shop_contractRef>;
  customerContracts: Array<E360App_shop_customer_contractRef>;
  description?: InputMaybe<Scalars['String']>;
  disclaimer?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  items: Array<E360App_shop_productItemRef>;
  name: Scalars['String'];
  operations: Array<E360App_shop_operationRef>;
  partnerContracts: Array<E360App_shop_partner_contractRef>;
  petpassProduct?: InputMaybe<PETPASS_productRef>;
  price: Scalars['Int'];
  promotions: Array<E360App_shop_promotionRef>;
  purchaseBannerDesktop?: InputMaybe<Scalars['String']>;
  purchaseBannerMobile?: InputMaybe<Scalars['String']>;
  purchases: Array<E360App_shop_purchaseRef>;
  services: Array<E360App_shop_productServiceRef>;
  shop: E360App_shopRef;
  sku?: InputMaybe<Scalars['String']>;
  status: E360App_shop_productStatus;
  stockType: E360App_shop_productStockType;
  stripeProductID?: InputMaybe<Scalars['String']>;
  taxType: e360App_shop_taxType;
  taxValue: Scalars['Int'];
  taxValueType: e360App_shop_taxValueType;
  type: E360App_shop_productType;
};

export type AddE360App_shop_productItemInput = {
  avatar?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  index: Scalars['Int'];
  product?: InputMaybe<E360App_shop_productRef>;
  title: Scalars['String'];
};

export type AddE360App_shop_productItemPayload = {
  __typename?: 'AddE360App_shop_productItemPayload';
  e360App_shop_productItem?: Maybe<Array<Maybe<E360App_shop_productItem>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_productItemPayloade360App_shop_productItemArgs = {
  filter?: InputMaybe<E360App_shop_productItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productItemOrder>;
};

export type AddE360App_shop_productPayload = {
  __typename?: 'AddE360App_shop_productPayload';
  e360App_shop_product?: Maybe<Array<Maybe<E360App_shop_product>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_productPayloade360App_shop_productArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productOrder>;
};

export type AddE360App_shop_productServiceInput = {
  guid: Scalars['String'];
  key: Scalars['String'];
  keys?: InputMaybe<Array<Scalars['String']>>;
  name: Scalars['String'];
  products: Array<E360App_shop_productRef>;
  type: E360App_shop_productService_type;
};

export type AddE360App_shop_productServicePayload = {
  __typename?: 'AddE360App_shop_productServicePayload';
  e360App_shop_productService?: Maybe<Array<Maybe<E360App_shop_productService>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_productServicePayloade360App_shop_productServiceArgs = {
  filter?: InputMaybe<E360App_shop_productServiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productServiceOrder>;
};

export type AddE360App_shop_promoProductInput = {
  discount: Scalars['Int'];
  discountType: E360App_shop_purchaseDiscountType;
  guid: Scalars['String'];
  product: E360App_shop_productRef;
  promotion: E360App_shop_promotionRef;
};

export type AddE360App_shop_promoProductPayload = {
  __typename?: 'AddE360App_shop_promoProductPayload';
  e360App_shop_promoProduct?: Maybe<Array<Maybe<E360App_shop_promoProduct>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_promoProductPayloade360App_shop_promoProductArgs = {
  filter?: InputMaybe<E360App_shop_promoProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promoProductOrder>;
};

export type AddE360App_shop_promotionCodeInput = {
  code: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  discount: Scalars['Int'];
  discountType: E360App_shop_purchaseDiscountType;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  label?: InputMaybe<Scalars['String']>;
  maxTimes: Scalars['Int'];
  partner?: InputMaybe<E360App_partnerRef>;
  promotion: E360App_shop_promotionRef;
  purchases: Array<E360App_shop_purchaseRef>;
  requested: Scalars['Int'];
  shop: E360App_shopRef;
  status: E360App_shop_promotionCodeStatus;
  timesUsed: Scalars['Int'];
  type: E360App_shop_promotionType;
};

export type AddE360App_shop_promotionCodePayload = {
  __typename?: 'AddE360App_shop_promotionCodePayload';
  e360App_shop_promotionCode?: Maybe<Array<Maybe<E360App_shop_promotionCode>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_promotionCodePayloade360App_shop_promotionCodeArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionCodeOrder>;
};

export type AddE360App_shop_promotionInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  discount: Scalars['Int'];
  discountType: E360App_shop_purchaseDiscountType;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  name: Scalars['String'];
  partners: Array<E360App_partnerRef>;
  products: Array<E360App_shop_productRef>;
  promoProducts?: InputMaybe<Array<E360App_shop_promoProductRef>>;
  promotionCodes: Array<E360App_shop_promotionCodeRef>;
  shop: E360App_shopRef;
  status: E360App_shop_promotionStatus;
  type: E360App_shop_promotionType;
};

export type AddE360App_shop_promotionPayload = {
  __typename?: 'AddE360App_shop_promotionPayload';
  e360App_shop_promotion?: Maybe<Array<Maybe<E360App_shop_promotion>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_promotionPayloade360App_shop_promotionArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionOrder>;
};

export type AddE360App_shop_purchaseInput = {
  canceledAt?: InputMaybe<Scalars['DateTime']>;
  channel?: InputMaybe<E360App_shop_channel>;
  cost: Scalars['Int'];
  createBy?: InputMaybe<E360App_userRef>;
  createdAt: Scalars['DateTime'];
  customer?: InputMaybe<E360App_userRef>;
  customerAddress?: InputMaybe<Scalars['String']>;
  customerAddressInfo?: InputMaybe<Scalars['String']>;
  customerAddressNumber?: InputMaybe<Scalars['String']>;
  customerAddressType?: InputMaybe<Scalars['String']>;
  customerBirthDate?: InputMaybe<Scalars['DateTime']>;
  customerCity?: InputMaybe<Scalars['String']>;
  customerCompany?: InputMaybe<Scalars['String']>;
  customerCompanyDocumentId?: InputMaybe<Scalars['String']>;
  customerCountry?: InputMaybe<Scalars['String']>;
  customerDataRaw?: InputMaybe<Scalars['String']>;
  customerDocumentId?: InputMaybe<Scalars['String']>;
  customerEmail?: InputMaybe<Scalars['String']>;
  customerLastName?: InputMaybe<Scalars['String']>;
  customerName?: InputMaybe<Scalars['String']>;
  customerPartnerMemberId?: InputMaybe<Scalars['String']>;
  customerPhone?: InputMaybe<Scalars['String']>;
  customerSecondLastName?: InputMaybe<Scalars['String']>;
  customerState?: InputMaybe<Scalars['String']>;
  customerZipCode?: InputMaybe<Scalars['String']>;
  date: Scalars['DateTime'];
  discount: Scalars['Int'];
  discountType: E360App_shop_purchaseDiscountType;
  discountValue: Scalars['Int'];
  failedAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  isTest?: InputMaybe<Scalars['Boolean']>;
  metaadataIP?: InputMaybe<Scalars['String']>;
  metadataAccuracyType?: InputMaybe<Scalars['String']>;
  metadataCity?: InputMaybe<Scalars['String']>;
  metadataCountry?: InputMaybe<Scalars['String']>;
  metadataLat?: InputMaybe<Scalars['Float']>;
  metadataLon?: InputMaybe<Scalars['Float']>;
  metadataOrigin?: InputMaybe<Scalars['String']>;
  metadataPlatform?: InputMaybe<Scalars['String']>;
  metadataRegion?: InputMaybe<Scalars['String']>;
  metadataTimezone?: InputMaybe<Scalars['String']>;
  metadataUrl?: InputMaybe<Scalars['String']>;
  operations: Array<E360App_shop_operationRef>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentMethod?: InputMaybe<E360App_shop_paymentMethod>;
  petpassPurchase?: InputMaybe<PETPASS_purchaseRef>;
  products: Array<E360App_shop_productRef>;
  promotionCode?: InputMaybe<E360App_shop_promotionCodeRef>;
  providerEvents: Array<E360App_shop_purchaseProviderEventRef>;
  redsysMerchantIdentifier?: InputMaybe<Scalars['String']>;
  redsysOrderId?: InputMaybe<Scalars['String']>;
  refundedAt?: InputMaybe<Scalars['DateTime']>;
  shop: E360App_shopRef;
  status: E360App_shop_purchaseStatus;
  stripeCheckoutSessionID?: InputMaybe<Scalars['String']>;
  stripePaymentIntentID?: InputMaybe<Scalars['String']>;
  taxPercentage: Scalars['Int'];
  taxType?: InputMaybe<e360App_shop_taxType>;
  taxValue: Scalars['Int'];
  taxValueType?: InputMaybe<e360App_shop_taxValueType>;
  total: Scalars['Int'];
  user?: InputMaybe<E360App_userRef>;
  ux?: InputMaybe<Scalars['String']>;
};

export type AddE360App_shop_purchasePayload = {
  __typename?: 'AddE360App_shop_purchasePayload';
  e360App_shop_purchase?: Maybe<Array<Maybe<E360App_shop_purchase>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_purchasePayloade360App_shop_purchaseArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseOrder>;
};

export type AddE360App_shop_purchaseProviderEventInput = {
  createdAt: Scalars['DateTime'];
  data?: InputMaybe<Scalars['String']>;
  event: Scalars['String'];
  guid: Scalars['String'];
  providerName: Scalars['String'];
  purchase: E360App_shop_purchaseRef;
  status: E360App_shop_purchaseStatus;
  stripeCheckoutSessionID?: InputMaybe<Scalars['String']>;
  stripePaymentIntentID?: InputMaybe<Scalars['String']>;
};

export type AddE360App_shop_purchaseProviderEventPayload = {
  __typename?: 'AddE360App_shop_purchaseProviderEventPayload';
  e360App_shop_purchaseProviderEvent?: Maybe<Array<Maybe<E360App_shop_purchaseProviderEvent>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_shop_purchaseProviderEventPayloade360App_shop_purchaseProviderEventArgs = {
  filter?: InputMaybe<E360App_shop_purchaseProviderEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseProviderEventOrder>;
};

export type AddE360App_stablishmentInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  e360App?: InputMaybe<E360AppRef>;
  guid: Scalars['String'];
  location?: InputMaybe<E360App_locationRef>;
  name: Scalars['String'];
  organization?: InputMaybe<E360App_organizationRef>;
  status: E360App_stablishmentStatus;
  users: Array<E360App_stablishment_userRef>;
};

export type AddE360App_stablishmentPayload = {
  __typename?: 'AddE360App_stablishmentPayload';
  e360App_stablishment?: Maybe<Array<Maybe<E360App_stablishment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_stablishmentPayloade360App_stablishmentArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishmentOrder>;
};

export type AddE360App_stablishment_userInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  guid: Scalars['String'];
  organization?: InputMaybe<E360App_organizationRef>;
  organizationUser?: InputMaybe<E360App_organization_userRef>;
  role: E360App_stablishment_userRole;
  stablishment: E360App_stablishmentRef;
  user?: InputMaybe<E360App_userRef>;
};

export type AddE360App_stablishment_userPayload = {
  __typename?: 'AddE360App_stablishment_userPayload';
  e360App_stablishment_user?: Maybe<Array<Maybe<E360App_stablishment_user>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_stablishment_userPayloade360App_stablishment_userArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishment_userOrder>;
};

export type AddE360App_userInput = {
  allowEmailNotifications?: InputMaybe<Scalars['Boolean']>;
  allowPushNotifications?: InputMaybe<Scalars['Boolean']>;
  allowSmsNotifications?: InputMaybe<Scalars['Boolean']>;
  appoinments?: InputMaybe<Array<E360App_location_appoinmentRef>>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  e360App?: InputMaybe<E360AppRef>;
  fcmToken?: InputMaybe<Scalars['String']>;
  fcmTokens?: InputMaybe<Array<Scalars['String']>>;
  guid: Scalars['String'];
  isAuthorizedToMultipleOrganizations?: InputMaybe<Scalars['Boolean']>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  notifications?: InputMaybe<Array<E360App_user_notificationRef>>;
  organizations?: InputMaybe<Array<E360App_organization_userRef>>;
  partners?: InputMaybe<Array<E360App_user_partnerRef>>;
  petpassUser?: InputMaybe<PETPASS_userRef>;
  purchases?: InputMaybe<Array<E360App_shop_purchaseRef>>;
  role: E360App_userRole;
  stablishments?: InputMaybe<Array<E360App_stablishment_userRef>>;
  status: E360App_userStatus;
  user?: InputMaybe<UserRef>;
};

export type AddE360App_userLogInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  e360AppUser_ref: Scalars['String'];
  e360App_ref: Scalars['String'];
  guid: Scalars['String'];
  session: E360App_userSessionRef;
  sessionConnection?: InputMaybe<E360App_userSessionConnectionRef>;
  type: E360App_userLogType;
};

export type AddE360App_userLogPayload = {
  __typename?: 'AddE360App_userLogPayload';
  e360App_userLog?: Maybe<Array<Maybe<E360App_userLog>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_userLogPayloade360App_userLogArgs = {
  filter?: InputMaybe<E360App_userLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userLogOrder>;
};

export type AddE360App_userPayload = {
  __typename?: 'AddE360App_userPayload';
  e360App_user?: Maybe<Array<Maybe<E360App_user>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_userPayloade360App_userArgs = {
  filter?: InputMaybe<E360App_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userOrder>;
};

export type AddE360App_userSessionConnectionInput = {
  e360AppUser_ref: Scalars['String'];
  e360App_ref: Scalars['String'];
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  logs: Array<E360App_userLogRef>;
  session: E360App_userSessionRef;
  startAt: Scalars['DateTime'];
  tasks: Array<E360App_userSessionConnectionTaskRef>;
};

export type AddE360App_userSessionConnectionPayload = {
  __typename?: 'AddE360App_userSessionConnectionPayload';
  e360App_userSessionConnection?: Maybe<Array<Maybe<E360App_userSessionConnection>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_userSessionConnectionPayloade360App_userSessionConnectionArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionOrder>;
};

export type AddE360App_userSessionConnectionTaskInput = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  connection: E360App_userSessionConnectionRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  e360AppUser_ref: Scalars['String'];
  e360App_ref: Scalars['String'];
  event: E360App_userSessionTaskEvent;
  guid: Scalars['String'];
  payload?: InputMaybe<Scalars['String']>;
  session: E360App_userSessionRef;
  type: E360App_userSessionTaskType;
};

export type AddE360App_userSessionConnectionTaskPayload = {
  __typename?: 'AddE360App_userSessionConnectionTaskPayload';
  e360App_userSessionConnectionTask?: Maybe<Array<Maybe<E360App_userSessionConnectionTask>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_userSessionConnectionTaskPayloade360App_userSessionConnectionTaskArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionTaskOrder>;
};

export type AddE360App_userSessionInput = {
  connectionTasks?: InputMaybe<Array<E360App_userSessionConnectionTaskRef>>;
  connections?: InputMaybe<Array<E360App_userSessionConnectionRef>>;
  e360AppUser_ref: Scalars['String'];
  e360App_ref: Scalars['String'];
  endAt?: InputMaybe<Scalars['DateTime']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  logs: Array<E360App_userLogRef>;
  startAt: Scalars['DateTime'];
  tasks: Array<E360App_userSessionTaskRef>;
};

export type AddE360App_userSessionPayload = {
  __typename?: 'AddE360App_userSessionPayload';
  e360App_userSession?: Maybe<Array<Maybe<E360App_userSession>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_userSessionPayloade360App_userSessionArgs = {
  filter?: InputMaybe<E360App_userSessionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionOrder>;
};

export type AddE360App_userSessionTaskInput = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  e360AppUser_ref: Scalars['String'];
  e360App_ref: Scalars['String'];
  event: E360App_userSessionTaskEvent;
  guid: Scalars['String'];
  payload?: InputMaybe<Scalars['String']>;
  session: E360App_userSessionRef;
  type: E360App_userSessionTaskType;
};

export type AddE360App_userSessionTaskPayload = {
  __typename?: 'AddE360App_userSessionTaskPayload';
  e360App_userSessionTask?: Maybe<Array<Maybe<E360App_userSessionTask>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_userSessionTaskPayloade360App_userSessionTaskArgs = {
  filter?: InputMaybe<E360App_userSessionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionTaskOrder>;
};

export type AddE360App_user_notificationInput = {
  app?: InputMaybe<E360AppRef>;
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  notification: E360App_notificationRef;
  readAt?: InputMaybe<Scalars['DateTime']>;
  receivedAt?: InputMaybe<Scalars['DateTime']>;
  status: E360App_user_notificationStatus;
  user: E360App_userRef;
};

export type AddE360App_user_notificationPayload = {
  __typename?: 'AddE360App_user_notificationPayload';
  e360App_user_notification?: Maybe<Array<Maybe<E360App_user_notification>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_user_notificationPayloade360App_user_notificationArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_notificationOrder>;
};

export type AddE360App_user_partnerInput = {
  guid: Scalars['String'];
  memberId: Scalars['String'];
  partner: E360App_partnerRef;
  user: E360App_userRef;
};

export type AddE360App_user_partnerPayload = {
  __typename?: 'AddE360App_user_partnerPayload';
  e360App_user_partner?: Maybe<Array<Maybe<E360App_user_partner>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360App_user_partnerPayloade360App_user_partnerArgs = {
  filter?: InputMaybe<E360App_user_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_partnerOrder>;
};

export type AddE360Storage_fileInput = {
  mimeType: Scalars['String'];
  ref: Scalars['String'];
};

export type AddE360Storage_filePayload = {
  __typename?: 'AddE360Storage_filePayload';
  e360Storage_file?: Maybe<Array<Maybe<E360Storage_file>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddE360Storage_filePayloade360Storage_fileArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360Storage_fileOrder>;
};

export type AddERP_PACKAGEInput = {
  accountingAccounts: Array<ERP_accountingAccountRef>;
  accounts?: InputMaybe<Array<InputMaybe<ERP_accountRef>>>;
  billingInfo: ERP_organizationBillingInfoRef;
  contactActions: Array<ERP_contactActionRef>;
  contacts: Array<ERP_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  events: Array<ERP_eventRef>;
  invoiceItems: Array<ERP_invoiceItemRef>;
  invoices: Array<ERP_invoiceRef>;
  name: Scalars['String'];
  org360: Org360Ref;
  paymentPlans: Array<ERP_paymentPlanRef>;
  products: Array<ERP_productRef>;
  resources: Array<ERP_resourceRef>;
  roles: Array<ERP_roleRef>;
  seats: Array<ERP_seatRef>;
  series: Array<ERP_contactSerieRef>;
  taxes: Array<ERP_taxRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  withholdings: Array<ERP_withholdingRef>;
};

export type AddERP_PACKAGEPayload = {
  __typename?: 'AddERP_PACKAGEPayload';
  eRP_PACKAGE?: Maybe<Array<Maybe<ERP_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_PACKAGEPayloadeRP_PACKAGEArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_PACKAGEOrder>;
};

export type AddERP_accountEventInput = {
  account: ERP_accountRef;
  accountEvent: Account_eventRef;
  event: ERP_eventRef;
};

export type AddERP_accountEventPayload = {
  __typename?: 'AddERP_accountEventPayload';
  eRP_accountEvent?: Maybe<Array<Maybe<ERP_accountEvent>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_accountEventPayloadeRP_accountEventArgs = {
  filter?: InputMaybe<ERP_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddERP_accountInput = {
  account: AccountRef;
  createdBy: AccountRef;
  events: Array<ERP_accountEventRef>;
  mod_role?: InputMaybe<ERP_roleType>;
  org360: Org360Ref;
  package: ERP_PACKAGERef;
  role: ERP_roleRef;
};

export type AddERP_accountPayload = {
  __typename?: 'AddERP_accountPayload';
  eRP_account?: Maybe<Array<Maybe<ERP_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_accountPayloadeRP_accountArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddERP_accountingAccountInput = {
  createdBy: ERP_accountRef;
  description?: InputMaybe<Scalars['String']>;
  group?: InputMaybe<GeneralAccountingAccountRef>;
  name?: InputMaybe<Scalars['String']>;
  numberStr?: InputMaybe<Scalars['String']>;
  package: ERP_PACKAGERef;
  seatLines: Array<ERP_seatLineRef>;
  type?: InputMaybe<ERP_accountingAccountType>;
};

export type AddERP_accountingAccountPayload = {
  __typename?: 'AddERP_accountingAccountPayload';
  eRP_accountingAccount?: Maybe<Array<Maybe<ERP_accountingAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_accountingAccountPayloadeRP_accountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_accountingAccountOrder>;
};

export type AddERP_contactActionInput = {
  contact: ERP_contactRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: ERP_accountRef;
  date: Scalars['DateTime'];
  event?: InputMaybe<ERP_eventRef>;
  invoiceNote?: InputMaybe<ERP_invoiceNoteRef>;
  label?: InputMaybe<Scalars['String']>;
  package: ERP_PACKAGERef;
  reminder?: InputMaybe<Account_eventReminder>;
  status?: InputMaybe<ERP_contactActionStatus>;
  type: ERP_actionType;
};

export type AddERP_contactActionPayload = {
  __typename?: 'AddERP_contactActionPayload';
  eRP_contactAction?: Maybe<Array<Maybe<ERP_contactAction>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_contactActionPayloadeRP_contactActionArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactActionOrder>;
};

export type AddERP_contactInput = {
  accountingAccounts: Array<ERP_accountingAccountRef>;
  actions: Array<ERP_contactActionRef>;
  contact: ContactRef;
  invoices: Array<ERP_invoiceRef>;
  package: ERP_PACKAGERef;
  paymentPlans: Array<ERP_paymentPlanRef>;
  series: Array<ERP_contactSerieRef>;
  tax?: InputMaybe<ERP_taxRef>;
  widthholding?: InputMaybe<ERP_withholdingRef>;
};

export type AddERP_contactPayload = {
  __typename?: 'AddERP_contactPayload';
  eRP_contact?: Maybe<Array<Maybe<ERP_contact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_contactPayloadeRP_contactArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddERP_contactSerieInput = {
  contact?: InputMaybe<ERP_contactRef>;
  index?: InputMaybe<Scalars['Int']>;
  invoices: Array<ERP_invoiceRef>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  package: ERP_PACKAGERef;
  serie: Scalars['String'];
  type: ERP_contactSerieType;
  year: Scalars['Int'];
};

export type AddERP_contactSeriePayload = {
  __typename?: 'AddERP_contactSeriePayload';
  eRP_contactSerie?: Maybe<Array<Maybe<ERP_contactSerie>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_contactSeriePayloadeRP_contactSerieArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactSerieOrder>;
};

export type AddERP_eventInput = {
  accounts: Array<ERP_accountEventRef>;
  contactAction?: InputMaybe<ERP_contactActionRef>;
  event: EventRef;
  package: ERP_PACKAGERef;
};

export type AddERP_eventPayload = {
  __typename?: 'AddERP_eventPayload';
  eRP_event?: Maybe<Array<Maybe<ERP_event>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_eventPayloadeRP_eventArgs = {
  filter?: InputMaybe<ERP_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddERP_invoiceInput = {
  accountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  allow_x_date?: InputMaybe<Scalars['Boolean']>;
  bankAccount?: InputMaybe<BankAccountRef>;
  bankAccountIBAN?: InputMaybe<Scalars['String']>;
  bankAccountOwner?: InputMaybe<Scalars['String']>;
  bankName?: InputMaybe<Scalars['String']>;
  comments?: InputMaybe<Scalars['String']>;
  concept?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<ERP_contactRef>;
  contactAddress?: InputMaybe<Scalars['String']>;
  contactName?: InputMaybe<Scalars['String']>;
  contactTaxCode?: InputMaybe<Scalars['String']>;
  correctiveInvoice?: InputMaybe<ERP_invoiceRef>;
  correctivedInvoices?: InputMaybe<Array<ERP_invoiceRef>>;
  cost?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: ERP_accountRef;
  dueBy?: InputMaybe<ERP_accountRef>;
  dueDate?: InputMaybe<Scalars['DateTime']>;
  fullSerie?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  issueBy?: InputMaybe<ERP_accountRef>;
  issueDate?: InputMaybe<Scalars['DateTime']>;
  items: Array<ERP_invoiceItemRef>;
  lastUpdate?: InputMaybe<Scalars['DateTime']>;
  lastUpdateBy?: InputMaybe<ERP_accountRef>;
  notes: Array<ERP_invoiceNoteRef>;
  oldId?: InputMaybe<Scalars['String']>;
  originalProforma?: InputMaybe<ERP_invoiceRef>;
  package: ERP_PACKAGERef;
  paymentDate?: InputMaybe<Scalars['DateTime']>;
  paymentMethod?: InputMaybe<ERP_paymentMethod>;
  paymentPlan?: InputMaybe<ERP_paymentPlanRef>;
  paymentPlanIndex?: InputMaybe<Scalars['Int']>;
  productCategories: Array<Product_categoryRef>;
  resource?: InputMaybe<ERP_resourceRef>;
  seat?: InputMaybe<ERP_seatRef>;
  serie?: InputMaybe<ERP_contactSerieRef>;
  serieType?: InputMaybe<ERP_contactSerieType>;
  standardGenerated?: InputMaybe<ERP_invoiceRef>;
  status?: InputMaybe<ERP_invoiceStatus>;
  templateType?: InputMaybe<ERP_templateType>;
  totalCost?: InputMaybe<Scalars['Float']>;
  totalTaxValue?: InputMaybe<Scalars['Float']>;
  totalWithholdingValue?: InputMaybe<Scalars['Float']>;
  type: ERP_invoiceType;
  withholding?: InputMaybe<ERP_withholdingRef>;
  withholdingPercent?: InputMaybe<Scalars['Float']>;
};

export type AddERP_invoiceItemInput = {
  accountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  amount?: InputMaybe<Scalars['Float']>;
  concept?: InputMaybe<Scalars['String']>;
  cost?: InputMaybe<Scalars['Float']>;
  detail?: InputMaybe<Scalars['String']>;
  invoice: ERP_invoiceRef;
  line?: InputMaybe<ERP_seatLineRef>;
  lmsGroupLessonTeacherConfig?: InputMaybe<LMS_groupLessonTeacherConfigRef>;
  package: ERP_PACKAGERef;
  product?: InputMaybe<ProductRef>;
  tax?: InputMaybe<ERP_taxRef>;
  taxAccountingAccount?: InputMaybe<ERP_accountingAccountType>;
  taxPercent?: InputMaybe<Scalars['Float']>;
  taxValue?: InputMaybe<Scalars['Float']>;
  total?: InputMaybe<Scalars['Float']>;
  totalCost?: InputMaybe<Scalars['Float']>;
  x_date?: InputMaybe<Scalars['DateTime']>;
};

export type AddERP_invoiceItemPayload = {
  __typename?: 'AddERP_invoiceItemPayload';
  eRP_invoiceItem?: Maybe<Array<Maybe<ERP_invoiceItem>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_invoiceItemPayloadeRP_invoiceItemArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceItemOrder>;
};

export type AddERP_invoiceNoteInput = {
  contactAction?: InputMaybe<ERP_contactActionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: ERP_accountRef;
  description?: InputMaybe<Scalars['String']>;
  invoice: ERP_invoiceRef;
  package: ERP_PACKAGERef;
  title: Scalars['String'];
};

export type AddERP_invoiceNotePayload = {
  __typename?: 'AddERP_invoiceNotePayload';
  eRP_invoiceNote?: Maybe<Array<Maybe<ERP_invoiceNote>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_invoiceNotePayloadeRP_invoiceNoteArgs = {
  filter?: InputMaybe<ERP_invoiceNoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceNoteOrder>;
};

export type AddERP_invoicePayload = {
  __typename?: 'AddERP_invoicePayload';
  eRP_invoice?: Maybe<Array<Maybe<ERP_invoice>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_invoicePayloadeRP_invoiceArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceOrder>;
};

export type AddERP_organizationBillingInfoInput = {
  address: AddressRef;
  banks: Array<BankAccountRef>;
  comercialName?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  package: ERP_PACKAGERef;
  taxId?: InputMaybe<Scalars['String']>;
};

export type AddERP_organizationBillingInfoPayload = {
  __typename?: 'AddERP_organizationBillingInfoPayload';
  eRP_organizationBillingInfo?: Maybe<Array<Maybe<ERP_organizationBillingInfo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_organizationBillingInfoPayloadeRP_organizationBillingInfoArgs = {
  filter?: InputMaybe<ERP_organizationBillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_organizationBillingInfoOrder>;
};

export type AddERP_paymentPlanInput = {
  accountingAccount: ERP_accountingAccountRef;
  concept: Scalars['String'];
  contact: ERP_contactRef;
  cost?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: ERP_accountRef;
  endAt?: InputMaybe<Scalars['DateTime']>;
  invoices: Array<ERP_invoiceRef>;
  package: ERP_PACKAGERef;
  serie: ERP_contactSerieRef;
  startAt?: InputMaybe<Scalars['DateTime']>;
};

export type AddERP_paymentPlanPayload = {
  __typename?: 'AddERP_paymentPlanPayload';
  eRP_paymentPlan?: Maybe<Array<Maybe<ERP_paymentPlan>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_paymentPlanPayloadeRP_paymentPlanArgs = {
  filter?: InputMaybe<ERP_paymentPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_paymentPlanOrder>;
};

export type AddERP_productInput = {
  buyAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  buyTax?: InputMaybe<ERP_taxRef>;
  buyTaxAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  package: ERP_PACKAGERef;
  product: ProductRef;
  saleAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  saleTax?: InputMaybe<ERP_taxRef>;
  saleTaxAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
};

export type AddERP_productPayload = {
  __typename?: 'AddERP_productPayload';
  eRP_product?: Maybe<Array<Maybe<ERP_product>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_productPayloadeRP_productArgs = {
  filter?: InputMaybe<ERP_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddERP_resourceInput = {
  createdBy: ERP_accountRef;
  invoice?: InputMaybe<ERP_invoiceRef>;
  package: ERP_PACKAGERef;
  resource: ResourceRef;
};

export type AddERP_resourcePayload = {
  __typename?: 'AddERP_resourcePayload';
  eRP_resource?: Maybe<Array<Maybe<ERP_resource>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_resourcePayloadeRP_resourceArgs = {
  filter?: InputMaybe<ERP_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddERP_roleInput = {
  accounts: Array<ERP_accountRef>;
  org360: Org360Ref;
  package: ERP_PACKAGERef;
  type: ERP_roleType;
};

export type AddERP_rolePayload = {
  __typename?: 'AddERP_rolePayload';
  eRP_role?: Maybe<Array<Maybe<ERP_role>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_rolePayloadeRP_roleArgs = {
  filter?: InputMaybe<ERP_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddERP_seatInput = {
  index?: InputMaybe<Scalars['Int']>;
  invoice: ERP_invoiceRef;
  lines: Array<ERP_seatLineRef>;
  package: ERP_PACKAGERef;
};

export type AddERP_seatLineInput = {
  accountingAccount: ERP_accountingAccountRef;
  index?: InputMaybe<Scalars['Int']>;
  seat: ERP_seatRef;
  value?: InputMaybe<Scalars['Float']>;
};

export type AddERP_seatLinePayload = {
  __typename?: 'AddERP_seatLinePayload';
  eRP_seatLine?: Maybe<Array<Maybe<ERP_seatLine>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_seatLinePayloadeRP_seatLineArgs = {
  filter?: InputMaybe<ERP_seatLineFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatLineOrder>;
};

export type AddERP_seatPayload = {
  __typename?: 'AddERP_seatPayload';
  eRP_seat?: Maybe<Array<Maybe<ERP_seat>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_seatPayloadeRP_seatArgs = {
  filter?: InputMaybe<ERP_seatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatOrder>;
};

export type AddERP_taxInput = {
  name: Scalars['String'];
  package: ERP_PACKAGERef;
  value: Scalars['Float'];
};

export type AddERP_taxPayload = {
  __typename?: 'AddERP_taxPayload';
  eRP_tax?: Maybe<Array<Maybe<ERP_tax>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_taxPayloadeRP_taxArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_taxOrder>;
};

export type AddERP_withholdingInput = {
  name: Scalars['String'];
  package: ERP_PACKAGERef;
  value: Scalars['Float'];
};

export type AddERP_withholdingPayload = {
  __typename?: 'AddERP_withholdingPayload';
  eRP_withholding?: Maybe<Array<Maybe<ERP_withholding>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddERP_withholdingPayloadeRP_withholdingArgs = {
  filter?: InputMaybe<ERP_withholdingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_withholdingOrder>;
};

export type AddEmailEditorInput = {
  org360: Org360Ref;
  templates: Array<EmailEditor_templateRef>;
};

export type AddEmailEditorPayload = {
  __typename?: 'AddEmailEditorPayload';
  emailEditor?: Maybe<Array<Maybe<EmailEditor>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddEmailEditorPayloademailEditorArgs = {
  filter?: InputMaybe<EmailEditorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddEmailEditor_templateInput = {
  body: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  crmTemplate?: InputMaybe<CRM_emailTemplateRef>;
  emailEditor: EmailEditorRef;
  name: Scalars['String'];
  org360: Org360Ref;
  status?: InputMaybe<EmailEditor_templateStatus>;
};

export type AddEmailEditor_templatePayload = {
  __typename?: 'AddEmailEditor_templatePayload';
  emailEditor_template?: Maybe<Array<Maybe<EmailEditor_template>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddEmailEditor_templatePayloademailEditor_templateArgs = {
  filter?: InputMaybe<EmailEditor_templateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailEditor_templateOrder>;
};

export type AddEmailInput = {
  account?: InputMaybe<AccountRef>;
  attachments?: InputMaybe<Array<InputMaybe<Email_attachmentRef>>>;
  body?: InputMaybe<Scalars['String']>;
  bodyPreview?: InputMaybe<Scalars['String']>;
  conversationId?: InputMaybe<Scalars['String']>;
  from?: InputMaybe<Email_fromRef>;
  guid: Scalars['String'];
  hasAttachments?: InputMaybe<Scalars['Boolean']>;
  inboxItem?: InputMaybe<Inbox_itemRef>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  internetMessageId?: InputMaybe<Scalars['String']>;
  msftId?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  owner: Email_ownerType;
  parentFolderId?: InputMaybe<Scalars['String']>;
  raw?: InputMaybe<Scalars['String']>;
  receivedDateTime?: InputMaybe<Scalars['String']>;
  sendGridId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  to: Array<Email_toRef>;
  user?: InputMaybe<UserRef>;
  webLink?: InputMaybe<Scalars['String']>;
};

export type AddEmailPayload = {
  __typename?: 'AddEmailPayload';
  email?: Maybe<Array<Maybe<Email>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddEmailPayloademailArgs = {
  filter?: InputMaybe<EmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailOrder>;
};

export type AddEmail_attachmentInput = {
  resource?: InputMaybe<ResourceRef>;
};

export type AddEmail_attachmentPayload = {
  __typename?: 'AddEmail_attachmentPayload';
  email_attachment?: Maybe<Array<Maybe<Email_attachment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddEmail_attachmentPayloademail_attachmentArgs = {
  filter?: InputMaybe<Email_attachmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddEmail_fromInput = {
  address?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type AddEmail_fromPayload = {
  __typename?: 'AddEmail_fromPayload';
  email_from?: Maybe<Array<Maybe<Email_from>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddEmail_fromPayloademail_fromArgs = {
  filter?: InputMaybe<Email_fromFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Email_fromOrder>;
};

export type AddEmail_toInput = {
  address?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type AddEmail_toPayload = {
  __typename?: 'AddEmail_toPayload';
  email_to?: Maybe<Array<Maybe<Email_to>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddEmail_toPayloademail_toArgs = {
  filter?: InputMaybe<Email_toFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Email_toOrder>;
};

export type AddEventInput = {
  accounts?: InputMaybe<Array<Account_eventRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  crmEvent?: InputMaybe<CRM_eventRef>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  erpEvent?: InputMaybe<ERP_eventRef>;
  name: Scalars['String'];
  startDate: Scalars['DateTime'];
  status?: InputMaybe<Event_status>;
};

export type AddEventPayload = {
  __typename?: 'AddEventPayload';
  event?: Maybe<Array<Maybe<Event>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddEventPayloadeventArgs = {
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EventOrder>;
};

export type AddExternalAPI_keyInput = {
  allowedOperations: Array<ExternalAPI_operations>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  id: Scalars['String'];
  label: Scalars['String'];
  org360: Org360Ref;
  status?: InputMaybe<ExternalAPI_keyStatus>;
};

export type AddExternalAPI_keyPayload = {
  __typename?: 'AddExternalAPI_keyPayload';
  externalAPI_key?: Maybe<Array<Maybe<ExternalAPI_key>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddExternalAPI_keyPayloadexternalAPI_keyArgs = {
  filter?: InputMaybe<ExternalAPI_keyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ExternalAPI_keyOrder>;
};

export type AddFormBuilderInput = {
  forms: Array<FormBuilder_formRef>;
  org360: Org360Ref;
};

export type AddFormBuilderPayload = {
  __typename?: 'AddFormBuilderPayload';
  formBuilder?: Maybe<Array<Maybe<FormBuilder>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddFormBuilderPayloadformBuilderArgs = {
  filter?: InputMaybe<FormBuilderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddFormBuilder_formInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  description?: InputMaybe<Scalars['String']>;
  formBuilder: FormBuilderRef;
  inputs: Array<FormBuilder_inputRef>;
  lmsForms: Array<LMS_formRef>;
  name: Scalars['String'];
  org360: Org360Ref;
  status?: InputMaybe<FormBuilder_formStatus>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AddFormBuilder_formPayload = {
  __typename?: 'AddFormBuilder_formPayload';
  formBuilder_form?: Maybe<Array<Maybe<FormBuilder_form>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddFormBuilder_formPayloadformBuilder_formArgs = {
  filter?: InputMaybe<FormBuilder_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_formOrder>;
};

export type AddFormBuilder_inputBooleanInput = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerValue?: InputMaybe<Scalars['Boolean']>;
  input: FormBuilder_inputRef;
};

export type AddFormBuilder_inputBooleanPayload = {
  __typename?: 'AddFormBuilder_inputBooleanPayload';
  formBuilder_inputBoolean?: Maybe<Array<Maybe<FormBuilder_inputBoolean>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddFormBuilder_inputBooleanPayloadformBuilder_inputBooleanArgs = {
  filter?: InputMaybe<FormBuilder_inputBooleanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddFormBuilder_inputInput = {
  boolean?: InputMaybe<FormBuilder_inputBooleanRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  description?: InputMaybe<Scalars['String']>;
  form: FormBuilder_formRef;
  index?: InputMaybe<Scalars['Int']>;
  multipleChoice?: InputMaybe<FormBuilder_inputMultipleChoiceRef>;
  number?: InputMaybe<FormBuilder_inputNumberRef>;
  text?: InputMaybe<FormBuilder_inputTextRef>;
  title: Scalars['String'];
  type: FormBuilder_inputType;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  value?: InputMaybe<Scalars['Float']>;
};

export type AddFormBuilder_inputMultipleChoiceInput = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerValues?: InputMaybe<Array<FormBuilder_inputMultipleChoiceOptionRef>>;
  input: FormBuilder_inputRef;
  isMultipleSelect?: InputMaybe<Scalars['Boolean']>;
  optionValueType?: InputMaybe<FormBuilder_inputMultipleChoiceOptionValueType>;
  options?: InputMaybe<Array<FormBuilder_inputMultipleChoiceOptionRef>>;
};

export type AddFormBuilder_inputMultipleChoiceOptionInput = {
  form: FormBuilder_formRef;
  index?: InputMaybe<Scalars['Int']>;
  input: FormBuilder_inputRef;
  multipleChoice: FormBuilder_inputMultipleChoiceRef;
  name: Scalars['String'];
  value?: InputMaybe<Scalars['String']>;
};

export type AddFormBuilder_inputMultipleChoiceOptionPayload = {
  __typename?: 'AddFormBuilder_inputMultipleChoiceOptionPayload';
  formBuilder_inputMultipleChoiceOption?: Maybe<Array<Maybe<FormBuilder_inputMultipleChoiceOption>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddFormBuilder_inputMultipleChoiceOptionPayloadformBuilder_inputMultipleChoiceOptionArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputMultipleChoiceOptionOrder>;
};

export type AddFormBuilder_inputMultipleChoicePayload = {
  __typename?: 'AddFormBuilder_inputMultipleChoicePayload';
  formBuilder_inputMultipleChoice?: Maybe<Array<Maybe<FormBuilder_inputMultipleChoice>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddFormBuilder_inputMultipleChoicePayloadformBuilder_inputMultipleChoiceArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddFormBuilder_inputNumberInput = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerFloatValue?: InputMaybe<Scalars['Float']>;
  correctAnswerIntValue?: InputMaybe<Scalars['Int']>;
  input: FormBuilder_inputRef;
  type: FormBuilder_inputNumberType;
};

export type AddFormBuilder_inputNumberPayload = {
  __typename?: 'AddFormBuilder_inputNumberPayload';
  formBuilder_inputNumber?: Maybe<Array<Maybe<FormBuilder_inputNumber>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddFormBuilder_inputNumberPayloadformBuilder_inputNumberArgs = {
  filter?: InputMaybe<FormBuilder_inputNumberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputNumberOrder>;
};

export type AddFormBuilder_inputPayload = {
  __typename?: 'AddFormBuilder_inputPayload';
  formBuilder_input?: Maybe<Array<Maybe<FormBuilder_input>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddFormBuilder_inputPayloadformBuilder_inputArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputOrder>;
};

export type AddFormBuilder_inputTextInput = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerValue?: InputMaybe<Scalars['String']>;
  maxLength?: InputMaybe<Scalars['Int']>;
  rows?: InputMaybe<Scalars['Int']>;
  type: FormBuilder_inputTextType;
};

export type AddFormBuilder_inputTextPayload = {
  __typename?: 'AddFormBuilder_inputTextPayload';
  formBuilder_inputText?: Maybe<Array<Maybe<FormBuilder_inputText>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddFormBuilder_inputTextPayloadformBuilder_inputTextArgs = {
  filter?: InputMaybe<FormBuilder_inputTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputTextOrder>;
};

export type AddGeneralAccountingAccountInput = {
  hasChildren: Scalars['Boolean'];
  id: Scalars['String'];
  name: Scalars['String'];
  number: Scalars['Int'];
};

export type AddGeneralAccountingAccountPayload = {
  __typename?: 'AddGeneralAccountingAccountPayload';
  generalAccountingAccount?: Maybe<Array<Maybe<GeneralAccountingAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddGeneralAccountingAccountPayloadgeneralAccountingAccountArgs = {
  filter?: InputMaybe<GeneralAccountingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<GeneralAccountingAccountOrder>;
};

export type AddImportProcessInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  elementOptions: Array<ImportProcess_elementOption>;
  elementType: ImportProcess_elementType;
  errors: Array<ImportProcess_itemErrorRef>;
  fields: Array<ImportProcess_elementFieldRef>;
  guid: Scalars['String'];
  itemValues: Array<ImportProcess_itemValueRef>;
  items: Array<ImportProcess_itemRef>;
  label: Scalars['String'];
  matches: Array<ImportProcess_matchRef>;
  org360: Org360Ref;
  sourceValues: Array<ImportProcess_sourceValueRef>;
  status: ImportProcess_status;
};

export type AddImportProcessPayload = {
  __typename?: 'AddImportProcessPayload';
  importProcess?: Maybe<Array<Maybe<ImportProcess>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddImportProcessPayloadimportProcessArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcessOrder>;
};

export type AddImportProcess_elementFieldInput = {
  import: ImportProcessRef;
  matches: Array<ImportProcess_matchRef>;
  type: ImportProcess_elementFieldType;
};

export type AddImportProcess_elementFieldPayload = {
  __typename?: 'AddImportProcess_elementFieldPayload';
  importProcess_elementField?: Maybe<Array<Maybe<ImportProcess_elementField>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddImportProcess_elementFieldPayloadimportProcess_elementFieldArgs = {
  filter?: InputMaybe<ImportProcess_elementFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddImportProcess_itemErrorInput = {
  conflictContact?: InputMaybe<ContactRef>;
  fieldType: ImportProcess_elementFieldType;
  import: ImportProcessRef;
  item: ImportProcess_itemRef;
  level: ImportProcess_itemErrorLevel;
  type: ImportProcess_itemErrorType;
};

export type AddImportProcess_itemErrorPayload = {
  __typename?: 'AddImportProcess_itemErrorPayload';
  importProcess_itemError?: Maybe<Array<Maybe<ImportProcess_itemError>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddImportProcess_itemErrorPayloadimportProcess_itemErrorArgs = {
  filter?: InputMaybe<ImportProcess_itemErrorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddImportProcess_itemInput = {
  approvedBy?: InputMaybe<AccountRef>;
  approvedDate?: InputMaybe<Scalars['DateTime']>;
  errors: Array<ImportProcess_itemErrorRef>;
  exactContact?: InputMaybe<ContactRef>;
  import: ImportProcessRef;
  mergeBy?: InputMaybe<AccountRef>;
  mergeDate?: InputMaybe<Scalars['DateTime']>;
  raw?: InputMaybe<Scalars['String']>;
  status: ImportProcess_item_status;
  values: Array<ImportProcess_itemValueRef>;
};

export type AddImportProcess_itemPayload = {
  __typename?: 'AddImportProcess_itemPayload';
  importProcess_item?: Maybe<Array<Maybe<ImportProcess_item>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddImportProcess_itemPayloadimportProcess_itemArgs = {
  filter?: InputMaybe<ImportProcess_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemOrder>;
};

export type AddImportProcess_itemValueInput = {
  fieldType: ImportProcess_elementFieldType;
  import: ImportProcessRef;
  item: ImportProcess_itemRef;
  value: Scalars['String'];
};

export type AddImportProcess_itemValuePayload = {
  __typename?: 'AddImportProcess_itemValuePayload';
  importProcess_itemValue?: Maybe<Array<Maybe<ImportProcess_itemValue>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddImportProcess_itemValuePayloadimportProcess_itemValueArgs = {
  filter?: InputMaybe<ImportProcess_itemValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemValueOrder>;
};

export type AddImportProcess_matchInput = {
  field: ImportProcess_elementFieldRef;
  guid: Scalars['String'];
  import: ImportProcessRef;
  index: Scalars['Int'];
  sourceValue: ImportProcess_sourceValueRef;
};

export type AddImportProcess_matchPayload = {
  __typename?: 'AddImportProcess_matchPayload';
  importProcess_match?: Maybe<Array<Maybe<ImportProcess_match>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddImportProcess_matchPayloadimportProcess_matchArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_matchOrder>;
};

export type AddImportProcess_sourceValueInput = {
  import: ImportProcessRef;
  matches: Array<ImportProcess_matchRef>;
  value: Scalars['String'];
};

export type AddImportProcess_sourceValuePayload = {
  __typename?: 'AddImportProcess_sourceValuePayload';
  importProcess_sourceValue?: Maybe<Array<Maybe<ImportProcess_sourceValue>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddImportProcess_sourceValuePayloadimportProcess_sourceValueArgs = {
  filter?: InputMaybe<ImportProcess_sourceValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_sourceValueOrder>;
};

export type AddInboxInput = {
  guid: Scalars['String'];
  items: Array<Inbox_itemRef>;
  user: UserRef;
};

export type AddInboxPayload = {
  __typename?: 'AddInboxPayload';
  inbox?: Maybe<Array<Maybe<Inbox>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddInboxPayloadinboxArgs = {
  filter?: InputMaybe<InboxFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<InboxOrder>;
};

export type AddInbox_itemInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<EmailRef>;
  guid: Scalars['String'];
  inbox: InboxRef;
  status: Inbox_itemStatus;
  type: Inbox_itemType;
};

export type AddInbox_itemPayload = {
  __typename?: 'AddInbox_itemPayload';
  inbox_item?: Maybe<Array<Maybe<Inbox_item>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddInbox_itemPayloadinbox_itemArgs = {
  filter?: InputMaybe<Inbox_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Inbox_itemOrder>;
};

export type AddIntegrationsInput = {
  accounts?: InputMaybe<Array<Integrations_accountRef>>;
  org360: Org360Ref;
};

export type AddIntegrationsPayload = {
  __typename?: 'AddIntegrationsPayload';
  integrations?: Maybe<Array<Maybe<Integrations>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrationsPayloadintegrationsArgs = {
  filter?: InputMaybe<IntegrationsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddIntegrations_Digilab_ProviderInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  digilabId: Scalars['String'];
  integrationsAccount: Integrations_accountRef;
  name?: InputMaybe<Scalars['String']>;
  org360: Org360Ref;
};

export type AddIntegrations_Digilab_ProviderPayload = {
  __typename?: 'AddIntegrations_Digilab_ProviderPayload';
  integrations_Digilab_Provider?: Maybe<Array<Maybe<Integrations_Digilab_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_Digilab_ProviderPayloadintegrations_Digilab_ProviderArgs = {
  filter?: InputMaybe<Integrations_Digilab_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Digilab_ProviderOrder>;
};

export type AddIntegrations_Google_Analytics_ProviderInput = {
  accessToken?: InputMaybe<Scalars['String']>;
  clientSecret?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  experireAt?: InputMaybe<Scalars['DateTime']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  googleAnalyticsId: Scalars['String'];
  integrationsAccount: Integrations_accountRef;
  name?: InputMaybe<Scalars['String']>;
  org360: Org360Ref;
  propertyId?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
  viewId?: InputMaybe<Scalars['String']>;
};

export type AddIntegrations_Google_Analytics_ProviderPayload = {
  __typename?: 'AddIntegrations_Google_Analytics_ProviderPayload';
  integrations_Google_Analytics_Provider?: Maybe<Array<Maybe<Integrations_Google_Analytics_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_Google_Analytics_ProviderPayloadintegrations_Google_Analytics_ProviderArgs = {
  filter?: InputMaybe<Integrations_Google_Analytics_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Google_Analytics_ProviderOrder>;
};

export type AddIntegrations_Google_ProviderInput = {
  accessToken?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  experireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  googleId: Scalars['String'];
  integrationsAccount: Integrations_accountRef;
  name?: InputMaybe<Scalars['String']>;
  org360: Org360Ref;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  secret?: InputMaybe<Scalars['String']>;
  tokenType?: InputMaybe<Scalars['String']>;
};

export type AddIntegrations_Google_ProviderPayload = {
  __typename?: 'AddIntegrations_Google_ProviderPayload';
  integrations_Google_Provider?: Maybe<Array<Maybe<Integrations_Google_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_Google_ProviderPayloadintegrations_Google_ProviderArgs = {
  filter?: InputMaybe<Integrations_Google_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Google_ProviderOrder>;
};

export type AddIntegrations_Link_Mobility_ProviderInput = {
  accessToken?: InputMaybe<Scalars['String']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  integrationsAccount: Integrations_accountRef;
  linkMobilityId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360: Org360Ref;
  phone?: InputMaybe<Scalars['String']>;
  prefix?: InputMaybe<Scalars['String']>;
};

export type AddIntegrations_Link_Mobility_ProviderPayload = {
  __typename?: 'AddIntegrations_Link_Mobility_ProviderPayload';
  integrations_Link_Mobility_Provider?: Maybe<Array<Maybe<Integrations_Link_Mobility_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_Link_Mobility_ProviderPayloadintegrations_Link_Mobility_ProviderArgs = {
  filter?: InputMaybe<Integrations_Link_Mobility_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Link_Mobility_ProviderOrder>;
};

export type AddIntegrations_LinkedIn_ProviderInput = {
  accessToken?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  integrationsAccount: Integrations_accountRef;
  linkedInId: Scalars['String'];
  name?: InputMaybe<Scalars['String']>;
  org360: Org360Ref;
  profilePic?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
};

export type AddIntegrations_LinkedIn_ProviderPayload = {
  __typename?: 'AddIntegrations_LinkedIn_ProviderPayload';
  integrations_LinkedIn_Provider?: Maybe<Array<Maybe<Integrations_LinkedIn_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_LinkedIn_ProviderPayloadintegrations_LinkedIn_ProviderArgs = {
  filter?: InputMaybe<Integrations_LinkedIn_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_LinkedIn_ProviderOrder>;
};

export type AddIntegrations_MSFT_MeetingInput = {
  createdBy: Integrations_accountRef;
  id: Scalars['String'];
  msftProvider: Integrations_MSFT_ProviderRef;
  url: Scalars['String'];
};

export type AddIntegrations_MSFT_MeetingPayload = {
  __typename?: 'AddIntegrations_MSFT_MeetingPayload';
  integrations_MSFT_Meeting?: Maybe<Array<Maybe<Integrations_MSFT_Meeting>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_MSFT_MeetingPayloadintegrations_MSFT_MeetingArgs = {
  filter?: InputMaybe<Integrations_MSFT_MeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_MSFT_MeetingOrder>;
};

export type AddIntegrations_MSFT_ProviderInput = {
  accessToken?: InputMaybe<Scalars['String']>;
  accountObject?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  experireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  integrationsAccount: Integrations_accountRef;
  meetings?: InputMaybe<Array<Integrations_MSFT_MeetingRef>>;
  msftId: Scalars['String'];
  name?: InputMaybe<Scalars['String']>;
  org360: Org360Ref;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
  userName?: InputMaybe<Scalars['String']>;
};

export type AddIntegrations_MSFT_ProviderPayload = {
  __typename?: 'AddIntegrations_MSFT_ProviderPayload';
  integrations_MSFT_Provider?: Maybe<Array<Maybe<Integrations_MSFT_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_MSFT_ProviderPayloadintegrations_MSFT_ProviderArgs = {
  filter?: InputMaybe<Integrations_MSFT_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_MSFT_ProviderOrder>;
};

export type AddIntegrations_Meta_ProviderInput = {
  accessToken?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  integrationsAccount: Integrations_accountRef;
  metaId: Scalars['String'];
  name?: InputMaybe<Scalars['String']>;
  org360: Org360Ref;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
};

export type AddIntegrations_Meta_ProviderPayload = {
  __typename?: 'AddIntegrations_Meta_ProviderPayload';
  integrations_Meta_Provider?: Maybe<Array<Maybe<Integrations_Meta_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_Meta_ProviderPayloadintegrations_Meta_ProviderArgs = {
  filter?: InputMaybe<Integrations_Meta_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Meta_ProviderOrder>;
};

export type AddIntegrations_SendGrid_ProviderInput = {
  email: Scalars['String'];
  integrationsAccount: Integrations_accountRef;
  name: Scalars['String'];
};

export type AddIntegrations_SendGrid_ProviderPayload = {
  __typename?: 'AddIntegrations_SendGrid_ProviderPayload';
  integrations_SendGrid_Provider?: Maybe<Array<Maybe<Integrations_SendGrid_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_SendGrid_ProviderPayloadintegrations_SendGrid_ProviderArgs = {
  filter?: InputMaybe<Integrations_SendGrid_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_SendGrid_ProviderOrder>;
};

export type AddIntegrations_Sendgrid_emailEventInput = {
  cpid?: InputMaybe<Scalars['String']>;
  cpx?: InputMaybe<Scalars['String']>;
  cx?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<Scalars['String']>;
  iax?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  response?: InputMaybe<Scalars['String']>;
  sg_event_id?: InputMaybe<Scalars['String']>;
  sg_message_id?: InputMaybe<Scalars['String']>;
  sg_template_id?: InputMaybe<Scalars['String']>;
  sg_template_name?: InputMaybe<Scalars['String']>;
  smpt_id?: InputMaybe<Scalars['String']>;
  tls?: InputMaybe<Scalars['String']>;
  ts: Scalars['DateTime'];
};

export type AddIntegrations_Sendgrid_emailEventPayload = {
  __typename?: 'AddIntegrations_Sendgrid_emailEventPayload';
  integrations_Sendgrid_emailEvent?: Maybe<Array<Maybe<Integrations_Sendgrid_emailEvent>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_Sendgrid_emailEventPayloadintegrations_Sendgrid_emailEventArgs = {
  filter?: InputMaybe<Integrations_Sendgrid_emailEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Sendgrid_emailEventOrder>;
};

export type AddIntegrations_accountInput = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  digilabProvider?: InputMaybe<Integrations_Digilab_ProviderRef>;
  emails?: InputMaybe<Array<EmailRef>>;
  googleAnalyticsProvider?: InputMaybe<Integrations_Google_Analytics_ProviderRef>;
  googleProvider?: InputMaybe<Integrations_Google_ProviderRef>;
  integrations: IntegrationsRef;
  linkMobilityProvider?: InputMaybe<Integrations_Link_Mobility_ProviderRef>;
  linkedInProvider?: InputMaybe<Integrations_LinkedIn_ProviderRef>;
  metaProvider?: InputMaybe<Integrations_Meta_ProviderRef>;
  msftProvider?: InputMaybe<Integrations_MSFT_ProviderRef>;
  org360: Org360Ref;
  ownerType: Integrations_accountOwnertype;
  scopes?: InputMaybe<Array<Integrations_scope>>;
  sendGridProvider?: InputMaybe<Integrations_SendGrid_ProviderRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserRef>;
};

export type AddIntegrations_accountPayload = {
  __typename?: 'AddIntegrations_accountPayload';
  integrations_account?: Maybe<Array<Maybe<Integrations_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_accountPayloadintegrations_accountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_accountOrder>;
};

export type AddIntegrations_carrefour_operartionsLogInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  createdByUserEmail: Scalars['String'];
  date: Scalars['DateTime'];
  guid: Scalars['String'];
  index: Scalars['Int'];
  operation: Scalars['String'];
  ref: Scalars['String'];
  response: Scalars['String'];
  status: Integrations_carrefour_operartionsLogStatus;
};

export type AddIntegrations_carrefour_operartionsLogPayload = {
  __typename?: 'AddIntegrations_carrefour_operartionsLogPayload';
  integrations_carrefour_operartionsLog?: Maybe<Array<Maybe<Integrations_carrefour_operartionsLog>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddIntegrations_carrefour_operartionsLogPayloadintegrations_carrefour_operartionsLogArgs = {
  filter?: InputMaybe<Integrations_carrefour_operartionsLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_carrefour_operartionsLogOrder>;
};

export type AddJobPositionInput = {
  name: Scalars['String'];
  org360?: InputMaybe<Org360Ref>;
};

export type AddJobPositionPayload = {
  __typename?: 'AddJobPositionPayload';
  jobPosition?: Maybe<Array<Maybe<JobPosition>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddJobPositionPayloadjobPositionArgs = {
  filter?: InputMaybe<JobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<JobPositionOrder>;
};

export type AddLMS_PACKAGEInput = {
  accounts: Array<LMS_accountRef>;
  blockStudentProgress: Array<LMS_blockStudentProgressRef>;
  blocks: Array<LMS_blockRef>;
  contacts: Array<LMS_contactRef>;
  courseCategories: Array<LMS_courseCategoryRef>;
  courseStudentProgress: Array<LMS_courseStudentProgressRef>;
  courseVersions: Array<LMS_courseVersionRef>;
  courses: Array<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  formStudentProgress: Array<LMS_formStudentProgressRef>;
  forms: Array<LMS_formRef>;
  groupAccountFormAnswers: Array<LMS_groupAccountFormAnswerRef>;
  groupAccountFormAttempts: Array<LMS_groupAccountFormAttemptRef>;
  groupAccounts: Array<LMS_groupAccountRef>;
  groupBlockConfigs: Array<LMS_groupBlockConfigRef>;
  groupCourseConfigs: Array<LMS_groupCourseConfigRef>;
  groupFormConfigCalculationRanges: Array<LMS_groupFormConfigCalculationRangeRef>;
  groupFormConfigCalculations: Array<LMS_groupFormConfigCalculationRef>;
  groupFormConfigs: Array<LMS_groupFormConfigRef>;
  groupLessonConfigs: Array<LMS_groupLessonConfigRef>;
  groupLessonMeetingConfigs: Array<LMS_groupLessonMeetingConfigRef>;
  groupLessonTeacherConfigs: Array<LMS_groupLessonTeacherConfigRef>;
  groupResourceConfigs: Array<LMS_groupResourceConfigRef>;
  groups: Array<LMS_groupRef>;
  lessonStudentProgress: Array<LMS_lessonStudentProgressRef>;
  lessons: Array<LMS_lessonRef>;
  logs: Array<LMS_accountLogRef>;
  meetingStudentProgress: Array<LMS_meetingStudentProgressRef>;
  name: Scalars['String'];
  org360: Org360Ref;
  products: Array<LMS_productRef>;
  resourceStudentProgress: Array<LMS_resourceStudentProgressRef>;
  resources: Array<LMS_resourceRef>;
  sections: Array<LMS_sectionRef>;
  studentVideoReports: Array<LMS_resourceStudentVideoReportRef>;
  thumbnails: Array<LMS_thumbnailRef>;
};

export type AddLMS_PACKAGEPayload = {
  __typename?: 'AddLMS_PACKAGEPayload';
  lMS_PACKAGE?: Maybe<Array<Maybe<LMS_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_PACKAGEPayloadlMS_PACKAGEArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_PACKAGEOrder>;
};

export type AddLMS_accountInput = {
  account: AccountRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  groupAccounts: Array<LMS_groupAccountRef>;
  groupLessonTeacherConfigs: Array<LMS_groupLessonTeacherConfigRef>;
  logs: Array<LMS_accountLogRef>;
  package: LMS_PACKAGERef;
  role: LMS_roleType;
};

export type AddLMS_accountLogDetailInput = {
  log: LMS_accountLogRef;
  type: LMS_accountLogDetailType;
  value?: InputMaybe<Scalars['String']>;
};

export type AddLMS_accountLogDetailPayload = {
  __typename?: 'AddLMS_accountLogDetailPayload';
  lMS_accountLogDetail?: Maybe<Array<Maybe<LMS_accountLogDetail>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_accountLogDetailPayloadlMS_accountLogDetailArgs = {
  filter?: InputMaybe<LMS_accountLogDetailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountLogDetailOrder>;
};

export type AddLMS_accountLogInput = {
  account: LMS_accountRef;
  details: Array<LMS_accountLogDetailRef>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupBlockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  groupCourseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  groupFormConfig?: InputMaybe<LMS_groupFormConfigRef>;
  groupLessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  groupLessonMeetingConfig?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  groupResourceConfig?: InputMaybe<LMS_groupResourceConfigRef>;
  log: Account_logRef;
  package: LMS_PACKAGERef;
  type: LMS_logType;
};

export type AddLMS_accountLogPayload = {
  __typename?: 'AddLMS_accountLogPayload';
  lMS_accountLog?: Maybe<Array<Maybe<LMS_accountLog>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_accountLogPayloadlMS_accountLogArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddLMS_accountPayload = {
  __typename?: 'AddLMS_accountPayload';
  lMS_account?: Maybe<Array<Maybe<LMS_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_accountPayloadlMS_accountArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};

export type AddLMS_blockInput = {
  authors: Array<LMS_accountRef>;
  course: LMS_courseRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  description?: InputMaybe<Scalars['String']>;
  forms: Array<LMS_formRef>;
  groupBlockConfigs: Array<LMS_groupBlockConfigRef>;
  index?: InputMaybe<Scalars['Int']>;
  lessons: Array<LMS_lessonRef>;
  name: Scalars['String'];
  package: LMS_PACKAGERef;
  previousBlockVersion?: InputMaybe<LMS_blockRef>;
  resources: Array<LMS_resourceRef>;
  sections: Array<LMS_sectionRef>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  version: LMS_courseVersionRef;
};

export type AddLMS_blockPayload = {
  __typename?: 'AddLMS_blockPayload';
  lMS_block?: Maybe<Array<Maybe<LMS_block>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_blockPayloadlMS_blockArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockOrder>;
};

export type AddLMS_blockStudentProgressInput = {
  courseProgress: LMS_courseStudentProgressRef;
  formProgress: Array<LMS_formStudentProgressRef>;
  group: LMS_groupRef;
  groupAccount: LMS_groupAccountRef;
  groupBlockConfig: LMS_groupBlockConfigRef;
  lessonProgress: Array<LMS_lessonStudentProgressRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  resourceProgress: Array<LMS_resourceStudentProgressRef>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type AddLMS_blockStudentProgressPayload = {
  __typename?: 'AddLMS_blockStudentProgressPayload';
  lMS_blockStudentProgress?: Maybe<Array<Maybe<LMS_blockStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_blockStudentProgressPayloadlMS_blockStudentProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockStudentProgressOrder>;
};

export type AddLMS_contactInput = {
  contact: ContactRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  package: LMS_PACKAGERef;
  role: Array<LMS_roleType>;
};

export type AddLMS_contactPayload = {
  __typename?: 'AddLMS_contactPayload';
  lMS_contact?: Maybe<Array<Maybe<LMS_contact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_contactPayloadlMS_contactArgs = {
  filter?: InputMaybe<LMS_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_contactOrder>;
};

export type AddLMS_courseCategoryInput = {
  color?: InputMaybe<Scalars['String']>;
  courseVersions: Array<LMS_courseVersionRef>;
  courses: Array<LMS_courseRef>;
  name: Scalars['String'];
  package: LMS_PACKAGERef;
};

export type AddLMS_courseCategoryPayload = {
  __typename?: 'AddLMS_courseCategoryPayload';
  lMS_courseCategory?: Maybe<Array<Maybe<LMS_courseCategory>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_courseCategoryPayloadlMS_courseCategoryArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseCategoryOrder>;
};

export type AddLMS_courseInput = {
  authors: Array<LMS_accountRef>;
  blocks: Array<LMS_blockRef>;
  categories: Array<LMS_courseCategoryRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  deletedBy?: InputMaybe<LMS_accountRef>;
  deletedDate?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  disabledBy?: InputMaybe<LMS_accountRef>;
  disabledDate?: InputMaybe<Scalars['DateTime']>;
  forms: Array<LMS_formRef>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  lessons: Array<LMS_lessonRef>;
  name: Scalars['String'];
  package?: InputMaybe<LMS_PACKAGERef>;
  products: Array<LMS_productRef>;
  resources: Array<LMS_resourceRef>;
  sections: Array<LMS_sectionRef>;
  status?: InputMaybe<LMS_courseStatus>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  versions: Array<LMS_courseVersionRef>;
};

export type AddLMS_coursePayload = {
  __typename?: 'AddLMS_coursePayload';
  lMS_course?: Maybe<Array<Maybe<LMS_course>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_coursePayloadlMS_courseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseOrder>;
};

export type AddLMS_courseStudentProgressInput = {
  blockProgress: Array<LMS_blockStudentProgressRef>;
  formProgress: Array<LMS_formStudentProgressRef>;
  group: LMS_groupRef;
  groupAccount: LMS_groupAccountRef;
  groupCourseConfig: LMS_groupCourseConfigRef;
  lessonProgress: Array<LMS_lessonStudentProgressRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  resourceProgress: Array<LMS_resourceStudentProgressRef>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type AddLMS_courseStudentProgressPayload = {
  __typename?: 'AddLMS_courseStudentProgressPayload';
  lMS_courseStudentProgress?: Maybe<Array<Maybe<LMS_courseStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_courseStudentProgressPayloadlMS_courseStudentProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseStudentProgressOrder>;
};

export type AddLMS_courseVersionInput = {
  authors: Array<LMS_accountRef>;
  blocks: Array<LMS_blockRef>;
  buyProduct?: InputMaybe<LMS_productRef>;
  categories: Array<LMS_courseCategoryRef>;
  childVersions: Array<LMS_courseVersionRef>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  deletedBy?: InputMaybe<LMS_accountRef>;
  deletedDate?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  disabledBy?: InputMaybe<LMS_accountRef>;
  disabledDate?: InputMaybe<Scalars['DateTime']>;
  forms: Array<LMS_formRef>;
  groupCourseConfigs: Array<LMS_groupCourseConfigRef>;
  groups: Array<LMS_groupRef>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isInCampaign?: InputMaybe<Scalars['Boolean']>;
  lessons: Array<LMS_lessonRef>;
  name: Scalars['String'];
  package: LMS_PACKAGERef;
  parentVersion?: InputMaybe<LMS_courseVersionRef>;
  resources: Array<LMS_resourceRef>;
  saleProduct?: InputMaybe<LMS_productRef>;
  sections: Array<LMS_sectionRef>;
  status?: InputMaybe<LMS_courseVersionStatus>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  version: Scalars['Int'];
};

export type AddLMS_courseVersionPayload = {
  __typename?: 'AddLMS_courseVersionPayload';
  lMS_courseVersion?: Maybe<Array<Maybe<LMS_courseVersion>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_courseVersionPayloadlMS_courseVersionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseVersionOrder>;
};

export type AddLMS_formInput = {
  block: LMS_blockRef;
  course: LMS_courseRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  form: FormBuilder_formRef;
  groupFormConfigs: Array<LMS_groupFormConfigRef>;
  lesson: LMS_lessonRef;
  package: LMS_PACKAGERef;
  previousFormVersion?: InputMaybe<LMS_formRef>;
  version: LMS_courseVersionRef;
};

export type AddLMS_formPayload = {
  __typename?: 'AddLMS_formPayload';
  lMS_form?: Maybe<Array<Maybe<LMS_form>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_formPayloadlMS_formArgs = {
  filter?: InputMaybe<LMS_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formOrder>;
};

export type AddLMS_formStudentProgressInput = {
  blockProgress: LMS_blockStudentProgressRef;
  courseProgress: LMS_courseStudentProgressRef;
  formAttempts: Array<LMS_groupAccountFormAttemptRef>;
  group: LMS_groupRef;
  groupAccount: LMS_groupAccountRef;
  groupFormConfig: LMS_groupFormConfigRef;
  lessonProgress: LMS_lessonStudentProgressRef;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type AddLMS_formStudentProgressPayload = {
  __typename?: 'AddLMS_formStudentProgressPayload';
  lMS_formStudentProgress?: Maybe<Array<Maybe<LMS_formStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_formStudentProgressPayloadlMS_formStudentProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};

export type AddLMS_groupAccountFormAnswerInput = {
  boolean?: InputMaybe<Scalars['Boolean']>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupAccountFormAttempt: LMS_groupAccountFormAttemptRef;
  groupFormConfig: LMS_groupFormConfigRef;
  input: FormBuilder_inputRef;
  multipleChoice: Array<FormBuilder_inputMultipleChoiceOptionRef>;
  number?: InputMaybe<Scalars['Float']>;
  package: LMS_PACKAGERef;
  score?: InputMaybe<Scalars['Float']>;
  text?: InputMaybe<Scalars['String']>;
};

export type AddLMS_groupAccountFormAnswerPayload = {
  __typename?: 'AddLMS_groupAccountFormAnswerPayload';
  lMS_groupAccountFormAnswer?: Maybe<Array<Maybe<LMS_groupAccountFormAnswer>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupAccountFormAnswerPayloadlMS_groupAccountFormAnswerArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAnswerOrder>;
};

export type AddLMS_groupAccountFormAttemptInput = {
  answers: Array<LMS_groupAccountFormAnswerRef>;
  assessmentAt?: InputMaybe<Scalars['DateTime']>;
  autoAssessment?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deliverAt?: InputMaybe<Scalars['DateTime']>;
  formStudentProgress?: InputMaybe<LMS_formStudentProgressRef>;
  group: LMS_groupRef;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupFormConfig: LMS_groupFormConfigRef;
  groupFormConfigId?: InputMaybe<Scalars['String']>;
  package: LMS_PACKAGERef;
  reviewers: Array<LMS_accountRef>;
  score?: InputMaybe<Scalars['Float']>;
};

export type AddLMS_groupAccountFormAttemptPayload = {
  __typename?: 'AddLMS_groupAccountFormAttemptPayload';
  lMS_groupAccountFormAttempt?: Maybe<Array<Maybe<LMS_groupAccountFormAttempt>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupAccountFormAttemptPayloadlMS_groupAccountFormAttemptArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAttemptOrder>;
};

export type AddLMS_groupAccountInput = {
  account: LMS_accountRef;
  blockStudentProgress: Array<LMS_blockStudentProgressRef>;
  courseStudentProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  formAnswers: Array<LMS_groupAccountFormAnswerRef>;
  formAttempts: Array<InputMaybe<LMS_groupAccountFormAttemptRef>>;
  formStudentProgress: Array<LMS_formStudentProgressRef>;
  group: LMS_groupRef;
  groupLessonTeacherConfigs: Array<LMS_groupLessonTeacherConfigRef>;
  lessonStudentProgress: Array<LMS_lessonStudentProgressRef>;
  logs: Array<LMS_accountLogRef>;
  meetingStudentProgress: Array<LMS_meetingStudentProgressRef>;
  package: LMS_PACKAGERef;
  resourceStudentProgress: Array<LMS_resourceStudentProgressRef>;
  role?: InputMaybe<LMS_roleType>;
};

export type AddLMS_groupAccountPayload = {
  __typename?: 'AddLMS_groupAccountPayload';
  lMS_groupAccount?: Maybe<Array<Maybe<LMS_groupAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupAccountPayloadlMS_groupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountOrder>;
};

export type AddLMS_groupBlockConfigInput = {
  block: LMS_blockRef;
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  courseConfig: LMS_groupCourseConfigRef;
  endDate?: InputMaybe<Scalars['DateTime']>;
  formConfigs: Array<InputMaybe<LMS_groupFormConfigRef>>;
  group: LMS_groupRef;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  lessonConfigs: Array<InputMaybe<LMS_groupLessonConfigRef>>;
  lessonTeacherConfigs: Array<InputMaybe<LMS_groupLessonTeacherConfigRef>>;
  logs: Array<LMS_accountLogRef>;
  meetingConfigs: Array<InputMaybe<LMS_groupLessonMeetingConfigRef>>;
  package: LMS_PACKAGERef;
  progressValue?: InputMaybe<Scalars['Float']>;
  resourceConfigs?: InputMaybe<Array<InputMaybe<LMS_groupResourceConfigRef>>>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress: Array<InputMaybe<LMS_blockStudentProgressRef>>;
};

export type AddLMS_groupBlockConfigPayload = {
  __typename?: 'AddLMS_groupBlockConfigPayload';
  lMS_groupBlockConfig?: Maybe<Array<Maybe<LMS_groupBlockConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupBlockConfigPayloadlMS_groupBlockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupBlockConfigOrder>;
};

export type AddLMS_groupCourseConfigInput = {
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  blockConfigs: Array<InputMaybe<LMS_groupBlockConfigRef>>;
  courseVersion: LMS_courseVersionRef;
  endDate?: InputMaybe<Scalars['DateTime']>;
  formConfigs: Array<InputMaybe<LMS_groupFormConfigRef>>;
  group: LMS_groupRef;
  lessonConfigs: Array<InputMaybe<LMS_groupLessonConfigRef>>;
  lessonTeacherConfigs: Array<InputMaybe<LMS_groupLessonTeacherConfigRef>>;
  logs: Array<LMS_accountLogRef>;
  meetingConfigs: Array<InputMaybe<LMS_groupLessonMeetingConfigRef>>;
  package: LMS_PACKAGERef;
  resourceConfigs: Array<InputMaybe<LMS_groupResourceConfigRef>>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress: Array<InputMaybe<LMS_courseStudentProgressRef>>;
};

export type AddLMS_groupCourseConfigPayload = {
  __typename?: 'AddLMS_groupCourseConfigPayload';
  lMS_groupCourseConfig?: Maybe<Array<Maybe<LMS_groupCourseConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupCourseConfigPayloadlMS_groupCourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupCourseConfigOrder>;
};

export type AddLMS_groupFormConfigCalculationInput = {
  formConfigs: Array<LMS_groupFormConfigRef>;
  name: Scalars['String'];
  package: LMS_PACKAGERef;
  ranges: Array<LMS_groupFormConfigCalculationRangeRef>;
};

export type AddLMS_groupFormConfigCalculationPayload = {
  __typename?: 'AddLMS_groupFormConfigCalculationPayload';
  lMS_groupFormConfigCalculation?: Maybe<Array<Maybe<LMS_groupFormConfigCalculation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupFormConfigCalculationPayloadlMS_groupFormConfigCalculationArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationOrder>;
};

export type AddLMS_groupFormConfigCalculationRangeInput = {
  customCalculation: LMS_groupFormConfigCalculationRef;
  label: Scalars['String'];
  max: Scalars['Float'];
  min: Scalars['Float'];
  package: LMS_PACKAGERef;
};

export type AddLMS_groupFormConfigCalculationRangePayload = {
  __typename?: 'AddLMS_groupFormConfigCalculationRangePayload';
  lMS_groupFormConfigCalculationRange?: Maybe<Array<Maybe<LMS_groupFormConfigCalculationRange>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupFormConfigCalculationRangePayloadlMS_groupFormConfigCalculationRangeArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationRangeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationRangeOrder>;
};

export type AddLMS_groupFormConfigInput = {
  attempts?: InputMaybe<Scalars['Int']>;
  blockConfig: LMS_groupBlockConfigRef;
  courseConfig: LMS_groupCourseConfigRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  customCalculation?: InputMaybe<LMS_groupFormConfigCalculationRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  form: LMS_formRef;
  formAnswers: Array<LMS_groupAccountFormAnswerRef>;
  formAttempts: Array<LMS_groupAccountFormAttemptRef>;
  group: LMS_groupRef;
  isAnonymous?: InputMaybe<Scalars['Boolean']>;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  lessonConfig: LMS_groupLessonConfigRef;
  logs: Array<LMS_accountLogRef>;
  maximumGrade?: InputMaybe<Scalars['Float']>;
  minimumGrade?: InputMaybe<Scalars['Float']>;
  package: LMS_PACKAGERef;
  progressValue?: InputMaybe<Scalars['Int']>;
  publicToken?: InputMaybe<Scalars['String']>;
  questOptionsSuffle?: InputMaybe<Scalars['Boolean']>;
  questSuffle?: InputMaybe<Scalars['Boolean']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress: Array<LMS_formStudentProgressRef>;
  teacherConfigs: Array<LMS_groupLessonTeacherConfigRef>;
  type: LMS_groupFormConfigType;
};

export type AddLMS_groupFormConfigPayload = {
  __typename?: 'AddLMS_groupFormConfigPayload';
  lMS_groupFormConfig?: Maybe<Array<Maybe<LMS_groupFormConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupFormConfigPayloadlMS_groupFormConfigArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};

export type AddLMS_groupInput = {
  activeBy?: InputMaybe<LMS_accountRef>;
  activeDate?: InputMaybe<Scalars['DateTime']>;
  archivedBy?: InputMaybe<LMS_accountRef>;
  archivedDate?: InputMaybe<Scalars['DateTime']>;
  authors: Array<LMS_accountRef>;
  blockConfigs: Array<LMS_groupBlockConfigRef>;
  blockStudentProgress: Array<LMS_blockStudentProgressRef>;
  courseConfig: LMS_groupCourseConfigRef;
  courseStudentProgress: Array<LMS_courseStudentProgressRef>;
  courseVersion: LMS_courseVersionRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  deletedBy?: InputMaybe<LMS_accountRef>;
  deletedDate?: InputMaybe<Scalars['DateTime']>;
  disabledBy?: InputMaybe<LMS_accountRef>;
  disabledDate?: InputMaybe<Scalars['DateTime']>;
  formAttemps: Array<LMS_groupAccountFormAttemptRef>;
  formConfigs: Array<LMS_groupFormConfigRef>;
  formStudentProgress: Array<LMS_formStudentProgressRef>;
  groupAccounts: Array<LMS_groupAccountRef>;
  lessonConfigs: Array<LMS_groupLessonConfigRef>;
  lessonStudentProgress: Array<LMS_lessonStudentProgressRef>;
  lessonTeacherConfigs: Array<LMS_groupLessonTeacherConfigRef>;
  logs: Array<LMS_accountLogRef>;
  meetingConfigs: Array<LMS_groupLessonMeetingConfigRef>;
  meetingStudentProgress: Array<LMS_meetingStudentProgressRef>;
  name: Scalars['String'];
  package: LMS_PACKAGERef;
  resourceConfigs: Array<LMS_groupResourceConfigRef>;
  resourceStudentProgress: Array<LMS_resourceStudentProgressRef>;
  status?: InputMaybe<LMS_groupStatus>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
};

export type AddLMS_groupLessonConfigInput = {
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  blockConfig: LMS_groupBlockConfigRef;
  courseConfig: LMS_groupCourseConfigRef;
  endDate?: InputMaybe<Scalars['DateTime']>;
  formConfigs: Array<LMS_groupFormConfigRef>;
  group: LMS_groupRef;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  lesson: LMS_lessonRef;
  logs: Array<LMS_accountLogRef>;
  meeting?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  package: LMS_PACKAGERef;
  progressValue?: InputMaybe<Scalars['Float']>;
  resourceConfigs: Array<LMS_groupResourceConfigRef>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress: Array<LMS_lessonStudentProgressRef>;
  teacherConfigs: Array<LMS_groupLessonTeacherConfigRef>;
};

export type AddLMS_groupLessonConfigPayload = {
  __typename?: 'AddLMS_groupLessonConfigPayload';
  lMS_groupLessonConfig?: Maybe<Array<Maybe<LMS_groupLessonConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupLessonConfigPayloadlMS_groupLessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonConfigOrder>;
};

export type AddLMS_groupLessonMeetingConfigInput = {
  blockConfig: LMS_groupBlockConfigRef;
  courseConfig: LMS_groupCourseConfigRef;
  group: LMS_groupRef;
  lessonConfig: LMS_groupLessonConfigRef;
  logs: Array<LMS_accountLogRef>;
  meeting: MeetingRef;
  package: LMS_PACKAGERef;
  resources: Array<LMS_groupResourceConfigRef>;
  studentProgress: Array<LMS_meetingStudentProgressRef>;
};

export type AddLMS_groupLessonMeetingConfigPayload = {
  __typename?: 'AddLMS_groupLessonMeetingConfigPayload';
  lMS_groupLessonMeetingConfig?: Maybe<Array<Maybe<LMS_groupLessonMeetingConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupLessonMeetingConfigPayloadlMS_groupLessonMeetingConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddLMS_groupLessonTeacherConfigInput = {
  account: LMS_accountRef;
  blockConfig: LMS_groupBlockConfigRef;
  courseConfig: LMS_groupCourseConfigRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  erpInvoiceItem?: InputMaybe<ERP_invoiceItemRef>;
  formConfig?: InputMaybe<LMS_groupFormConfigRef>;
  group: LMS_groupRef;
  groupAccount: LMS_groupAccountRef;
  isExtra?: InputMaybe<Scalars['Boolean']>;
  isValidated?: InputMaybe<Scalars['Boolean']>;
  lessonConfig: LMS_groupLessonConfigRef;
  package: LMS_PACKAGERef;
  time?: InputMaybe<Scalars['Int']>;
  validatedAt?: InputMaybe<Scalars['DateTime']>;
  validatedBy?: InputMaybe<LMS_accountRef>;
};

export type AddLMS_groupLessonTeacherConfigPayload = {
  __typename?: 'AddLMS_groupLessonTeacherConfigPayload';
  lMS_groupLessonTeacherConfig?: Maybe<Array<Maybe<LMS_groupLessonTeacherConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupLessonTeacherConfigPayloadlMS_groupLessonTeacherConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};

export type AddLMS_groupPayload = {
  __typename?: 'AddLMS_groupPayload';
  lMS_group?: Maybe<Array<Maybe<LMS_group>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupPayloadlMS_groupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupOrder>;
};

export type AddLMS_groupResourceConfigInput = {
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  blockConfig: LMS_groupBlockConfigRef;
  courseConfig: LMS_groupCourseConfigRef;
  endDate?: InputMaybe<Scalars['DateTime']>;
  group: LMS_groupRef;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  lessonConfig: LMS_groupLessonConfigRef;
  logs: Array<LMS_accountLogRef>;
  meeting?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  package: LMS_PACKAGERef;
  progressValue?: InputMaybe<Scalars['Float']>;
  resource: LMS_resourceRef;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress: Array<LMS_resourceStudentProgressRef>;
  studentVideoReports: Array<LMS_resourceStudentVideoReportRef>;
};

export type AddLMS_groupResourceConfigPayload = {
  __typename?: 'AddLMS_groupResourceConfigPayload';
  lMS_groupResourceConfig?: Maybe<Array<Maybe<LMS_groupResourceConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_groupResourceConfigPayloadlMS_groupResourceConfigArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};

export type AddLMS_lessonInput = {
  authors: Array<LMS_accountRef>;
  block: LMS_blockRef;
  course: LMS_courseRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  description?: InputMaybe<Scalars['String']>;
  forms: Array<LMS_formRef>;
  groupLessonConfigs: Array<LMS_groupLessonConfigRef>;
  index?: InputMaybe<Scalars['Int']>;
  name: Scalars['String'];
  package: LMS_PACKAGERef;
  previousLessonVersion?: InputMaybe<LMS_lessonRef>;
  resources: Array<LMS_resourceRef>;
  sections: Array<LMS_sectionRef>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  version: LMS_courseVersionRef;
};

export type AddLMS_lessonPayload = {
  __typename?: 'AddLMS_lessonPayload';
  lMS_lesson?: Maybe<Array<Maybe<LMS_lesson>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_lessonPayloadlMS_lessonArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonOrder>;
};

export type AddLMS_lessonStudentProgressInput = {
  blockProgress: LMS_blockStudentProgressRef;
  courseProgress: LMS_courseStudentProgressRef;
  formProgress: Array<LMS_formStudentProgressRef>;
  group: LMS_groupRef;
  groupAccount: LMS_groupAccountRef;
  groupLessonConfig: LMS_groupLessonConfigRef;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  resourceProgress: Array<LMS_resourceStudentProgressRef>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type AddLMS_lessonStudentProgressPayload = {
  __typename?: 'AddLMS_lessonStudentProgressPayload';
  lMS_lessonStudentProgress?: Maybe<Array<Maybe<LMS_lessonStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_lessonStudentProgressPayloadlMS_lessonStudentProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonStudentProgressOrder>;
};

export type AddLMS_meetingStudentProgressInput = {
  group: LMS_groupRef;
  groupAccount: LMS_groupAccountRef;
  isAttended?: InputMaybe<Scalars['Boolean']>;
  isManualVerified?: InputMaybe<Scalars['Boolean']>;
  meeting: LMS_groupLessonMeetingConfigRef;
  package: LMS_PACKAGERef;
  verifyBy?: InputMaybe<LMS_accountRef>;
  verifyDate?: InputMaybe<Scalars['DateTime']>;
};

export type AddLMS_meetingStudentProgressPayload = {
  __typename?: 'AddLMS_meetingStudentProgressPayload';
  lMS_meetingStudentProgress?: Maybe<Array<Maybe<LMS_meetingStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_meetingStudentProgressPayloadlMS_meetingStudentProgressArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_meetingStudentProgressOrder>;
};

export type AddLMS_productInput = {
  buyCourseVersion?: InputMaybe<LMS_courseVersionRef>;
  course?: InputMaybe<LMS_courseRef>;
  hours?: InputMaybe<Scalars['Int']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  product: ProductRef;
  saleCourseVersion?: InputMaybe<LMS_courseVersionRef>;
  sessions?: InputMaybe<Scalars['Int']>;
};

export type AddLMS_productPayload = {
  __typename?: 'AddLMS_productPayload';
  lMS_product?: Maybe<Array<Maybe<LMS_product>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_productPayloadlMS_productArgs = {
  filter?: InputMaybe<LMS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_productOrder>;
};

export type AddLMS_resourceInput = {
  authors: Array<LMS_accountRef>;
  block: LMS_blockRef;
  course: LMS_courseRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  description?: InputMaybe<Scalars['String']>;
  groupResourceConfigs: Array<LMS_groupResourceConfigRef>;
  index?: InputMaybe<Scalars['Int']>;
  isGroupAutoConfig?: InputMaybe<Scalars['Boolean']>;
  lesson: LMS_lessonRef;
  name: Scalars['String'];
  package: LMS_PACKAGERef;
  previousResourceVersion?: InputMaybe<LMS_resourceRef>;
  resource: ResourceRef;
  section?: InputMaybe<LMS_sectionRef>;
  version: LMS_courseVersionRef;
};

export type AddLMS_resourcePayload = {
  __typename?: 'AddLMS_resourcePayload';
  lMS_resource?: Maybe<Array<Maybe<LMS_resource>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_resourcePayloadlMS_resourceArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};

export type AddLMS_resourceStudentProgressInput = {
  blockProgress: LMS_blockStudentProgressRef;
  courseProgress: LMS_courseStudentProgressRef;
  group: LMS_groupRef;
  groupAccount: LMS_groupAccountRef;
  groupResourceConfig: LMS_groupResourceConfigRef;
  lessonProgress: LMS_lessonStudentProgressRef;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
  videoReport?: InputMaybe<LMS_resourceStudentVideoReportRef>;
};

export type AddLMS_resourceStudentProgressPayload = {
  __typename?: 'AddLMS_resourceStudentProgressPayload';
  lMS_resourceStudentProgress?: Maybe<Array<Maybe<LMS_resourceStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_resourceStudentProgressPayloadlMS_resourceStudentProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};

export type AddLMS_resourceStudentVideoReportInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  groupResourceConfig: LMS_groupResourceConfigRef;
  intervals: Array<LMS_resourceStudentVideoReport_intervalRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  score?: InputMaybe<Scalars['Int']>;
  studentProgress: LMS_resourceStudentProgressRef;
  updatedAt: Scalars['DateTime'];
  version?: InputMaybe<Scalars['Int']>;
};

export type AddLMS_resourceStudentVideoReportPayload = {
  __typename?: 'AddLMS_resourceStudentVideoReportPayload';
  lMS_resourceStudentVideoReport?: Maybe<Array<Maybe<LMS_resourceStudentVideoReport>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_resourceStudentVideoReportPayloadlMS_resourceStudentVideoReportArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReportOrder>;
};

export type AddLMS_resourceStudentVideoReport_intervalInput = {
  end: Scalars['Int'];
  endAt: Scalars['DateTime'];
  report: LMS_resourceStudentVideoReportRef;
  start: Scalars['Int'];
  startAt: Scalars['DateTime'];
  version?: InputMaybe<Scalars['Int']>;
  volume: Scalars['Int'];
};

export type AddLMS_resourceStudentVideoReport_intervalPayload = {
  __typename?: 'AddLMS_resourceStudentVideoReport_intervalPayload';
  lMS_resourceStudentVideoReport_interval?: Maybe<Array<Maybe<LMS_resourceStudentVideoReport_interval>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_resourceStudentVideoReport_intervalPayloadlMS_resourceStudentVideoReport_intervalArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReport_intervalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReport_intervalOrder>;
};

export type AddLMS_sectionInput = {
  authors: Array<LMS_accountRef>;
  block: LMS_blockRef;
  content?: InputMaybe<Scalars['String']>;
  contentRaw?: InputMaybe<Scalars['String']>;
  course: LMS_courseRef;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  index?: InputMaybe<Scalars['Int']>;
  lesson: LMS_lessonRef;
  name: Scalars['String'];
  package: LMS_PACKAGERef;
  previousSectionVersion?: InputMaybe<LMS_sectionRef>;
  resources: Array<LMS_resourceRef>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  version: LMS_courseVersionRef;
};

export type AddLMS_sectionPayload = {
  __typename?: 'AddLMS_sectionPayload';
  lMS_section?: Maybe<Array<Maybe<LMS_section>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_sectionPayloadlMS_sectionArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_sectionOrder>;
};

export type AddLMS_thumbnailInput = {
  blocks: Array<LMS_blockRef>;
  courseVersions: Array<LMS_courseVersionRef>;
  courses: Array<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: LMS_accountRef;
  groups: Array<LMS_groupRef>;
  lessons: Array<LMS_lessonRef>;
  package: LMS_PACKAGERef;
  resource: ResourceRef;
  sections: Array<LMS_sectionRef>;
};

export type AddLMS_thumbnailPayload = {
  __typename?: 'AddLMS_thumbnailPayload';
  lMS_thumbnail?: Maybe<Array<Maybe<LMS_thumbnail>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLMS_thumbnailPayloadlMS_thumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_thumbnailOrder>;
};

export type AddLogger_logInput = {
  accountGUID?: InputMaybe<Scalars['String']>;
  actionKey?: InputMaybe<Scalars['String']>;
  appGUID?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  guid: Scalars['String'];
  ip?: InputMaybe<Scalars['String']>;
  lat?: InputMaybe<Scalars['Float']>;
  latLonAccuracy?: InputMaybe<Logger_log_latLonAccuracy>;
  lon?: InputMaybe<Scalars['Float']>;
  org360GUID?: InputMaybe<Scalars['String']>;
  platformGUID?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Logger_logType>;
  url?: InputMaybe<Scalars['String']>;
  userGUID?: InputMaybe<Scalars['String']>;
  ux?: InputMaybe<Scalars['String']>;
};

export type AddLogger_logPayload = {
  __typename?: 'AddLogger_logPayload';
  logger_log?: Maybe<Array<Maybe<Logger_log>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLogger_logPayloadlogger_logArgs = {
  filter?: InputMaybe<Logger_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Logger_logOrder>;
};

export type AddLoginProviderInput = {
  accessToken?: InputMaybe<Scalars['String']>;
  accountObject?: InputMaybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  email?: InputMaybe<Scalars['String']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  phone?: InputMaybe<Scalars['String']>;
  providerId?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  status: LoginProviderStatus;
  type: LoginProviderType;
  updatedAt: Scalars['DateTime'];
  user?: InputMaybe<UserRef>;
  username?: InputMaybe<Scalars['String']>;
};

export type AddLoginProviderPayload = {
  __typename?: 'AddLoginProviderPayload';
  loginProvider?: Maybe<Array<Maybe<LoginProvider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddLoginProviderPayloadloginProviderArgs = {
  filter?: InputMaybe<LoginProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LoginProviderOrder>;
};

export type AddMeetingAccountInput = {
  account: AccountRef;
  connections?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  disconnections?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  displayName: Scalars['String'];
  displayRoleName?: InputMaybe<Scalars['String']>;
  meeting: MeetingRef;
  role: MeetingRole;
};

export type AddMeetingAccountPayload = {
  __typename?: 'AddMeetingAccountPayload';
  meetingAccount?: Maybe<Array<Maybe<MeetingAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddMeetingAccountPayloadmeetingAccountArgs = {
  filter?: InputMaybe<MeetingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingAccountOrder>;
};

export type AddMeetingDoctors_userInput = {
  company_group_code?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  pet: PETPASS_petRef;
  status: MeetingDoctors_userStatus;
  user: PETPASS_userRef;
  video_call: MeetingDoctors_featureVideoCall;
  video_call_1to1: MeetingDoctors_featureVideoCall;
};

export type AddMeetingDoctors_userPayload = {
  __typename?: 'AddMeetingDoctors_userPayload';
  meetingDoctors_user?: Maybe<Array<Maybe<MeetingDoctors_user>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddMeetingDoctors_userPayloadmeetingDoctors_userArgs = {
  filter?: InputMaybe<MeetingDoctors_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingDoctors_userOrder>;
};

export type AddMeetingInput = {
  createdBy: AccountRef;
  date: Scalars['DateTime'];
  description?: InputMaybe<Scalars['String']>;
  endTime: Scalars['String'];
  estimatedTime: Scalars['Int'];
  org360?: InputMaybe<Org360Ref>;
  participants?: InputMaybe<Array<MeetingAccountRef>>;
  provider?: InputMaybe<MeetingProviderRef>;
  reminders?: InputMaybe<Array<Scheduler_taskRef>>;
  startTime: Scalars['String'];
  time: Scalars['Int'];
  title: Scalars['String'];
  type: MeetingType;
};

export type AddMeetingPayload = {
  __typename?: 'AddMeetingPayload';
  meeting?: Maybe<Array<Maybe<Meeting>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddMeetingPayloadmeetingArgs = {
  filter?: InputMaybe<MeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingOrder>;
};

export type AddMeetingProviderInput = {
  accessCode?: InputMaybe<Scalars['String']>;
  msftProviderInfo?: InputMaybe<Integrations_MSFT_MeetingRef>;
  provider: Integrations_accountRef;
  url: Scalars['String'];
};

export type AddMeetingProviderPayload = {
  __typename?: 'AddMeetingProviderPayload';
  meetingProvider?: Maybe<Array<Maybe<MeetingProvider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddMeetingProviderPayloadmeetingProviderArgs = {
  filter?: InputMaybe<MeetingProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingProviderOrder>;
};

export type AddNavigationInput = {
  routes?: InputMaybe<Array<Navigation_routeRef>>;
};

export type AddNavigationPayload = {
  __typename?: 'AddNavigationPayload';
  navigation?: Maybe<Array<Maybe<Navigation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddNavigationPayloadnavigationArgs = {
  filter?: InputMaybe<NavigationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddNavigation_routeInput = {
  icon?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  path: Scalars['String'];
};

export type AddNavigation_routePayload = {
  __typename?: 'AddNavigation_routePayload';
  navigation_route?: Maybe<Array<Maybe<Navigation_route>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddNavigation_routePayloadnavigation_routeArgs = {
  filter?: InputMaybe<Navigation_routeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Navigation_routeOrder>;
};

export type AddORG_PACKAGEInput = {
  accounts: Array<ORG_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  name: Scalars['String'];
  org360: Org360Ref;
  roles: Array<ORG_roleRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AddORG_PACKAGEPayload = {
  __typename?: 'AddORG_PACKAGEPayload';
  numUids?: Maybe<Scalars['Int']>;
  oRG_PACKAGE?: Maybe<Array<Maybe<ORG_PACKAGE>>>;
};


export type AddORG_PACKAGEPayloadoRG_PACKAGEArgs = {
  filter?: InputMaybe<ORG_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_PACKAGEOrder>;
};

export type AddORG_accountInput = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  mod_role: ORG_roleType;
  package: ORG_PACKAGERef;
  role: ORG_roleRef;
};

export type AddORG_accountPayload = {
  __typename?: 'AddORG_accountPayload';
  numUids?: Maybe<Scalars['Int']>;
  oRG_account?: Maybe<Array<Maybe<ORG_account>>>;
};


export type AddORG_accountPayloadoRG_accountArgs = {
  filter?: InputMaybe<ORG_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_accountOrder>;
};

export type AddORG_roleInput = {
  accounts: Array<ORG_accountRef>;
  name: Scalars['String'];
  package: ORG_PACKAGERef;
  type: ORG_roleType;
};

export type AddORG_rolePayload = {
  __typename?: 'AddORG_rolePayload';
  numUids?: Maybe<Scalars['Int']>;
  oRG_role?: Maybe<Array<Maybe<ORG_role>>>;
};


export type AddORG_rolePayloadoRG_roleArgs = {
  filter?: InputMaybe<ORG_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_roleOrder>;
};

export type AddOrg360Input = {
  accountLogs: Array<Account_logRef>;
  accountSessionExpirationTime?: InputMaybe<Scalars['Int']>;
  accountSessions: Array<Account_sessionRef>;
  accounts?: InputMaybe<Array<InputMaybe<AccountRef>>>;
  auditsPackage?: InputMaybe<AUDITS_PACKAGERef>;
  chatbotsPackage?: InputMaybe<Chatbots_PACKAGERef>;
  cmsPackage?: InputMaybe<CMS_PACKAGERef>;
  contacts: Array<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crmPackage?: InputMaybe<CRM_PACKAGERef>;
  departments: Array<Organization_departmentRef>;
  domains?: InputMaybe<Array<InputMaybe<OrgDomainRef>>>;
  emailEditor?: InputMaybe<EmailEditorRef>;
  emailEditorTemplates: Array<EmailEditor_templateRef>;
  emails: Array<EmailRef>;
  erpPackage?: InputMaybe<ERP_PACKAGERef>;
  formBuilder?: InputMaybe<FormBuilderRef>;
  guid: Scalars['String'];
  importProcesses: Array<ImportProcessRef>;
  integrations?: InputMaybe<IntegrationsRef>;
  jobPositions: Array<JobPositionRef>;
  lmsPackage?: InputMaybe<LMS_PACKAGERef>;
  loginProviders: Array<LoginProviderType>;
  org?: InputMaybe<OrgRef>;
  orgPackage?: InputMaybe<ORG_PACKAGERef>;
  productCategories: Array<Product_categoryRef>;
  productPaymentPlanItems: Array<Product_paymentPlanItemRef>;
  products: Array<ProductRef>;
  proposals: Array<ProposalRef>;
  resourceTokens?: InputMaybe<Array<InputMaybe<ResourceTokenRef>>>;
  resources?: InputMaybe<Array<InputMaybe<ResourceRef>>>;
  scheduler?: InputMaybe<SchedulerRef>;
  serviceAccounts: Array<ServiceAccountRef>;
  storage?: InputMaybe<StorageRef>;
  theme?: InputMaybe<Org360_themeRef>;
  vetPackage?: InputMaybe<VET_PACKAGERef>;
  webhook?: InputMaybe<WebhookRef>;
};

export type AddOrg360Payload = {
  __typename?: 'AddOrg360Payload';
  numUids?: Maybe<Scalars['Int']>;
  org360?: Maybe<Array<Maybe<Org360>>>;
};


export type AddOrg360Payloadorg360Args = {
  filter?: InputMaybe<Org360Filter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Org360Order>;
};

export type AddOrg360_themeInput = {
  defaultBackground?: InputMaybe<Scalars['String']>;
  errorColorContrastText?: InputMaybe<Scalars['String']>;
  errorColorDark?: InputMaybe<Scalars['String']>;
  errorColorLight?: InputMaybe<Scalars['String']>;
  errorColorMain?: InputMaybe<Scalars['String']>;
  infoColorContrastText?: InputMaybe<Scalars['String']>;
  infoColorDark?: InputMaybe<Scalars['String']>;
  infoColorLight?: InputMaybe<Scalars['String']>;
  infoColorMain?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  paperBackground?: InputMaybe<Scalars['String']>;
  primaryColorContrastText?: InputMaybe<Scalars['String']>;
  primaryColorDark?: InputMaybe<Scalars['String']>;
  primaryColorLight?: InputMaybe<Scalars['String']>;
  primaryColorMain?: InputMaybe<Scalars['String']>;
  secondaryColorContrastText?: InputMaybe<Scalars['String']>;
  secondaryColorDark?: InputMaybe<Scalars['String']>;
  secondaryColorLight?: InputMaybe<Scalars['String']>;
  secondaryColorMain?: InputMaybe<Scalars['String']>;
  successColorContrastText?: InputMaybe<Scalars['String']>;
  successColorDark?: InputMaybe<Scalars['String']>;
  successColorLight?: InputMaybe<Scalars['String']>;
  successColorMain?: InputMaybe<Scalars['String']>;
  warningColorContrastText?: InputMaybe<Scalars['String']>;
  warningColorDark?: InputMaybe<Scalars['String']>;
  warningColorLight?: InputMaybe<Scalars['String']>;
  warningColorMain?: InputMaybe<Scalars['String']>;
};

export type AddOrg360_themePayload = {
  __typename?: 'AddOrg360_themePayload';
  numUids?: Maybe<Scalars['Int']>;
  org360_theme?: Maybe<Array<Maybe<Org360_theme>>>;
};


export type AddOrg360_themePayloadorg360_themeArgs = {
  filter?: InputMaybe<Org360_themeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Org360_themeOrder>;
};

export type AddOrgDomainInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  disable?: InputMaybe<Scalars['Boolean']>;
  domain: Scalars['String'];
  label?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Array<InputMaybe<Org360Ref>>>;
  type: OrgDomainType;
};

export type AddOrgDomainPayload = {
  __typename?: 'AddOrgDomainPayload';
  numUids?: Maybe<Scalars['Int']>;
  orgDomain?: Maybe<Array<Maybe<OrgDomain>>>;
};


export type AddOrgDomainPayloadorgDomainArgs = {
  filter?: InputMaybe<OrgDomainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<OrgDomainOrder>;
};

export type AddOrgInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AddOrgPayload = {
  __typename?: 'AddOrgPayload';
  numUids?: Maybe<Scalars['Int']>;
  org?: Maybe<Array<Maybe<Org>>>;
};


export type AddOrgPayloadorgArgs = {
  filter?: InputMaybe<OrgFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<OrgOrder>;
};

export type AddOrganization_departmentInput = {
  contacts: Array<Contact_jobPositionRef>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  org360?: InputMaybe<Org360Ref>;
};

export type AddOrganization_departmentPayload = {
  __typename?: 'AddOrganization_departmentPayload';
  numUids?: Maybe<Scalars['Int']>;
  organization_department?: Maybe<Array<Maybe<Organization_department>>>;
};


export type AddOrganization_departmentPayloadorganization_departmentArgs = {
  filter?: InputMaybe<Organization_departmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Organization_departmentOrder>;
};

export type AddPETPASS_APPInput = {
  banners: Array<PETPASS_bannerRef>;
  contracts: Array<PETPASS_contractRef>;
  e360App: E360AppRef;
  files: Array<PETPASS_fileRef>;
  guid: Scalars['String'];
  insuranceCompanies: Array<PETPASS_insurance_companyRef>;
  insurances: Array<PETPASS_insuranceRef>;
  locations: Array<PETPASS_locationRef>;
  partners: Array<PETPASS_partnerRef>;
  petExternalInsurances: Array<PETPASS_pet_external_insuranceRef>;
  petInsurances: Array<PETPASS_pet_insuranceRef>;
  pets: Array<PETPASS_petRef>;
  policies: Array<PETPASS_locationPolicyRef>;
  products: Array<PETPASS_productRef>;
  purchases: Array<PETPASS_purchaseRef>;
  users: Array<PETPASS_userRef>;
};

export type AddPETPASS_APPPayload = {
  __typename?: 'AddPETPASS_APPPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_APP?: Maybe<Array<Maybe<PETPASS_APP>>>;
};


export type AddPETPASS_APPPayloadpETPASS_APPArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_APPOrder>;
};

export type AddPETPASS_bannerInput = {
  alt?: InputMaybe<Scalars['String']>;
  app: PETPASS_APPRef;
  appLink?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  guid: Scalars['String'];
  srcDesktop?: InputMaybe<Scalars['String']>;
  srcMobile?: InputMaybe<Scalars['String']>;
  status: PETPASS_bannerStatus;
  webLink?: InputMaybe<Scalars['String']>;
};

export type AddPETPASS_bannerPayload = {
  __typename?: 'AddPETPASS_bannerPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_banner?: Maybe<Array<Maybe<PETPASS_banner>>>;
};


export type AddPETPASS_bannerPayloadpETPASS_bannerArgs = {
  filter?: InputMaybe<PETPASS_bannerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_bannerOrder>;
};

export type AddPETPASS_contractInput = {
  app: PETPASS_APPRef;
  contract?: InputMaybe<E360App_shop_customer_contractRef>;
  guid: Scalars['String'];
  insurance?: InputMaybe<PETPASS_pet_insuranceRef>;
  partner?: InputMaybe<PETPASS_partnerRef>;
  pet: PETPASS_petRef;
  user: PETPASS_userRef;
};

export type AddPETPASS_contractPayload = {
  __typename?: 'AddPETPASS_contractPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_contract?: Maybe<Array<Maybe<PETPASS_contract>>>;
};


export type AddPETPASS_contractPayloadpETPASS_contractArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_contractOrder>;
};

export type AddPETPASS_fileInput = {
  app: PETPASS_APPRef;
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<PETPASS_userRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid: Scalars['String'];
  label: Scalars['String'];
  petInsurance?: InputMaybe<PETPASS_pet_insuranceRef>;
};

export type AddPETPASS_filePayload = {
  __typename?: 'AddPETPASS_filePayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_file?: Maybe<Array<Maybe<PETPASS_file>>>;
};


export type AddPETPASS_filePayloadpETPASS_fileArgs = {
  filter?: InputMaybe<PETPASS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_fileOrder>;
};

export type AddPETPASS_insuranceInput = {
  app: PETPASS_APPRef;
  company: PETPASS_insurance_companyRef;
  coverage?: InputMaybe<Scalars['String']>;
  coverageValue?: InputMaybe<Scalars['Int']>;
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_userRef;
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  name: Scalars['String'];
  product: PETPASS_productRef;
  terms?: InputMaybe<Scalars['String']>;
  types: Array<PETPASS_insuranceType>;
};

export type AddPETPASS_insurancePayload = {
  __typename?: 'AddPETPASS_insurancePayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_insurance?: Maybe<Array<Maybe<PETPASS_insurance>>>;
};


export type AddPETPASS_insurancePayloadpETPASS_insuranceArgs = {
  filter?: InputMaybe<PETPASS_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insuranceOrder>;
};

export type AddPETPASS_insurance_companyInput = {
  app: PETPASS_APPRef;
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_userRef;
  guid: Scalars['String'];
  insurances: Array<PETPASS_insuranceRef>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  petExternalInsurances: Array<PETPASS_pet_external_insuranceRef>;
  petInsurances: Array<PETPASS_pet_insuranceRef>;
};

export type AddPETPASS_insurance_companyPayload = {
  __typename?: 'AddPETPASS_insurance_companyPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_insurance_company?: Maybe<Array<Maybe<PETPASS_insurance_company>>>;
};


export type AddPETPASS_insurance_companyPayloadpETPASS_insurance_companyArgs = {
  filter?: InputMaybe<PETPASS_insurance_companyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insurance_companyOrder>;
};

export type AddPETPASS_locationInput = {
  app: PETPASS_APPRef;
  guid: Scalars['String'];
  location: E360App_locationRef;
  policy: PETPASS_locationPolicyRef;
};

export type AddPETPASS_locationPayload = {
  __typename?: 'AddPETPASS_locationPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_location?: Maybe<Array<Maybe<PETPASS_location>>>;
};


export type AddPETPASS_locationPayloadpETPASS_locationArgs = {
  filter?: InputMaybe<PETPASS_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locationOrder>;
};

export type AddPETPASS_locationPolicyInput = {
  allowedAreas: Array<PETPASS_locationPolicy_areas>;
  allowedAreasComment?: InputMaybe<Scalars['String']>;
  allowedDangerousBreeds: Scalars['Boolean'];
  allowedDangerousBreedsComment?: InputMaybe<Scalars['String']>;
  allowedOthersPetTypesComment?: InputMaybe<Scalars['String']>;
  allowedPetSizes: Array<PETPASS_locationPolicy_petSize>;
  allowedPetSizesComment?: InputMaybe<Scalars['String']>;
  allowedPetTypes: Array<PETPASS_locationPolicy_petType>;
  allowedPetTypesComment?: InputMaybe<Scalars['String']>;
  allowedTime: Array<PETPASS_locationPolicyAllowedTime>;
  allowedTimeComment?: InputMaybe<Scalars['String']>;
  app: PETPASS_APPRef;
  guid: Scalars['String'];
  location: PETPASS_locationRef;
  petOwnerMustAcceptClean: Scalars['Boolean'];
  petOwnerMustAcceptFollowRules: Scalars['Boolean'];
  petOwnerMustAcceptFullResponsibility: Scalars['Boolean'];
  petOwnerMustAcceptKeepPetInRestrictedAreas: Scalars['Boolean'];
  petOwnerMustAcceptKeepPetOnLeash: Scalars['Boolean'];
  petOwnerMustAcceptKeepPetUnderControl: Scalars['Boolean'];
};

export type AddPETPASS_locationPolicyPayload = {
  __typename?: 'AddPETPASS_locationPolicyPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_locationPolicy?: Maybe<Array<Maybe<PETPASS_locationPolicy>>>;
};


export type AddPETPASS_locationPolicyPayloadpETPASS_locationPolicyArgs = {
  filter?: InputMaybe<PETPASS_locationPolicyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locationPolicyOrder>;
};

export type AddPETPASS_locatorInput = {
  activationCode: Scalars['String'];
  adminCode: Scalars['String'];
  assignedAt?: InputMaybe<Scalars['DateTime']>;
  assignedBy?: InputMaybe<PETPASS_userRef>;
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_userRef;
  distributorType: PETPASS_locatorDistributorType;
  isDisabled: Scalars['Boolean'];
  isTest: Scalars['Boolean'];
  lotRef: Scalars['String'];
  pet?: InputMaybe<PETPASS_petRef>;
  ref: Scalars['String'];
  sentToProvider: Scalars['Boolean'];
  sentToProviderAt?: InputMaybe<Scalars['DateTime']>;
};

export type AddPETPASS_locatorPayload = {
  __typename?: 'AddPETPASS_locatorPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_locator?: Maybe<Array<Maybe<PETPASS_locator>>>;
};


export type AddPETPASS_locatorPayloadpETPASS_locatorArgs = {
  filter?: InputMaybe<PETPASS_locatorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locatorOrder>;
};

export type AddPETPASS_partnerInput = {
  allowedProducts: Array<PETPASS_productRef>;
  app: PETPASS_APPRef;
  contracts: Array<PETPASS_contractRef>;
  guid: Scalars['String'];
  partner: E360App_partnerRef;
  purchases: Array<PETPASS_purchaseRef>;
};

export type AddPETPASS_partnerPayload = {
  __typename?: 'AddPETPASS_partnerPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_partner?: Maybe<Array<Maybe<PETPASS_partner>>>;
};


export type AddPETPASS_partnerPayloadpETPASS_partnerArgs = {
  filter?: InputMaybe<PETPASS_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_partnerOrder>;
};

export type AddPETPASS_petInput = {
  activeAt?: InputMaybe<Scalars['DateTime']>;
  activeBy?: InputMaybe<PETPASS_userRef>;
  app: PETPASS_APPRef;
  contracts: Array<PETPASS_contractRef>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  deletedBy?: InputMaybe<PETPASS_userRef>;
  deletedReason?: InputMaybe<Scalars['String']>;
  externalInsurances?: InputMaybe<Array<PETPASS_pet_external_insuranceRef>>;
  guid: Scalars['String'];
  inactiveAt?: InputMaybe<Scalars['DateTime']>;
  inactiveBy?: InputMaybe<PETPASS_userRef>;
  inactiveReason?: InputMaybe<Scalars['String']>;
  insurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
  locator?: InputMaybe<PETPASS_locatorRef>;
  meetingDoctorsUser?: InputMaybe<MeetingDoctors_userRef>;
  owners: Array<PETPASS_userRef>;
  pet: PetRef;
  sosHistory: Array<PETPASS_sosRef>;
  status?: InputMaybe<PETPASS_petStatus>;
  tmp_vet?: InputMaybe<E360App_locationRef>;
  tmp_vetEmail?: InputMaybe<Scalars['String']>;
  tmp_vetName?: InputMaybe<Scalars['String']>;
  tmp_vetPhone?: InputMaybe<Scalars['String']>;
  tokens?: InputMaybe<Array<PETPASS_petTokenRef>>;
};

export type AddPETPASS_petPayload = {
  __typename?: 'AddPETPASS_petPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_pet?: Maybe<Array<Maybe<PETPASS_pet>>>;
};


export type AddPETPASS_petPayloadpETPASS_petArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petOrder>;
};

export type AddPETPASS_petTokenInput = {
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_userRef;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  pet: PETPASS_petRef;
  requiredData: Array<PETPASS_petTokenDataType>;
  status: PETPASS_petTokenStatus;
  type: PETPASS_petTokenType;
  usedAt?: InputMaybe<Scalars['DateTime']>;
  user: PETPASS_userRef;
};

export type AddPETPASS_petTokenPayload = {
  __typename?: 'AddPETPASS_petTokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_petToken?: Maybe<Array<Maybe<PETPASS_petToken>>>;
};


export type AddPETPASS_petTokenPayloadpETPASS_petTokenArgs = {
  filter?: InputMaybe<PETPASS_petTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petTokenOrder>;
};

export type AddPETPASS_pet_external_insuranceInput = {
  app: PETPASS_APPRef;
  company: PETPASS_insurance_companyRef;
  coverage?: InputMaybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_userRef;
  description?: InputMaybe<Scalars['String']>;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  name?: InputMaybe<Scalars['String']>;
  pet: PETPASS_petRef;
  policyNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Int']>;
  status: PETPASS_pet_external_insurance_status;
  terms?: InputMaybe<Scalars['String']>;
  types: Array<PETPASS_insuranceType>;
};

export type AddPETPASS_pet_external_insurancePayload = {
  __typename?: 'AddPETPASS_pet_external_insurancePayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_pet_external_insurance?: Maybe<Array<Maybe<PETPASS_pet_external_insurance>>>;
};


export type AddPETPASS_pet_external_insurancePayloadpETPASS_pet_external_insuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_external_insuranceOrder>;
};

export type AddPETPASS_pet_insuranceInput = {
  app: PETPASS_APPRef;
  company: PETPASS_insurance_companyRef;
  contract?: InputMaybe<PETPASS_contractRef>;
  coverageValue?: InputMaybe<Scalars['Int']>;
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_userRef;
  endAt?: InputMaybe<Scalars['DateTime']>;
  files: Array<PETPASS_fileRef>;
  guid: Scalars['String'];
  pet: PETPASS_petRef;
  policyGroup?: InputMaybe<Scalars['String']>;
  policyNumber?: InputMaybe<Scalars['String']>;
  product: PETPASS_productRef;
  purchase?: InputMaybe<PETPASS_purchaseRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  status: PETPASS_pet_insurance_status;
  types: Array<PETPASS_insuranceType>;
};

export type AddPETPASS_pet_insurancePayload = {
  __typename?: 'AddPETPASS_pet_insurancePayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_pet_insurance?: Maybe<Array<Maybe<PETPASS_pet_insurance>>>;
};


export type AddPETPASS_pet_insurancePayloadpETPASS_pet_insuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_insuranceOrder>;
};

export type AddPETPASS_productInput = {
  app: PETPASS_APPRef;
  guid: Scalars['String'];
  insurance?: InputMaybe<PETPASS_insuranceRef>;
  petInsurances: Array<PETPASS_pet_insuranceRef>;
  product?: InputMaybe<E360App_shop_productRef>;
  purchases: Array<PETPASS_purchaseRef>;
  type: PETPASS_productType;
};

export type AddPETPASS_productPayload = {
  __typename?: 'AddPETPASS_productPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_product?: Maybe<Array<Maybe<PETPASS_product>>>;
};


export type AddPETPASS_productPayloadpETPASS_productArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_productOrder>;
};

export type AddPETPASS_purchaseInput = {
  app: PETPASS_APPRef;
  guid: Scalars['String'];
  partner?: InputMaybe<PETPASS_partnerRef>;
  petInsurances: Array<PETPASS_pet_insuranceRef>;
  petpassPet?: InputMaybe<PETPASS_petRef>;
  products: Array<PETPASS_productRef>;
  purchase: E360App_shop_purchaseRef;
};

export type AddPETPASS_purchasePayload = {
  __typename?: 'AddPETPASS_purchasePayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_purchase?: Maybe<Array<Maybe<PETPASS_purchase>>>;
};


export type AddPETPASS_purchasePayloadpETPASS_purchaseArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_purchaseOrder>;
};

export type AddPETPASS_sosInput = {
  activatedAt: Scalars['DateTime'];
  activatedBy: PETPASS_userRef;
  address?: InputMaybe<Scalars['String']>;
  cancelledAt?: InputMaybe<Scalars['DateTime']>;
  cancelledBy?: InputMaybe<PETPASS_userRef>;
  description?: InputMaybe<Scalars['String']>;
  events: Array<PETPASS_sos_eventRef>;
  guid: Scalars['String'];
  latitude?: InputMaybe<Scalars['Float']>;
  longitude?: InputMaybe<Scalars['Float']>;
  pet: PETPASS_petRef;
  resolvedAt?: InputMaybe<Scalars['DateTime']>;
  resolvedBy?: InputMaybe<PETPASS_userRef>;
  status: PETPASS_sosStatus;
};

export type AddPETPASS_sosPayload = {
  __typename?: 'AddPETPASS_sosPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_sos?: Maybe<Array<Maybe<PETPASS_sos>>>;
};


export type AddPETPASS_sosPayloadpETPASS_sosArgs = {
  filter?: InputMaybe<PETPASS_sosFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_sosOrder>;
};

export type AddPETPASS_sos_eventInput = {
  address?: InputMaybe<Scalars['String']>;
  comment?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  lat?: InputMaybe<Scalars['Float']>;
  lon?: InputMaybe<Scalars['Float']>;
  metadata?: InputMaybe<Scalars['String']>;
  platform: PETPASS_sos_eventPlatform;
  sos: PETPASS_sosRef;
  type: PETPASS_sos_eventType;
  user?: InputMaybe<PETPASS_userRef>;
};

export type AddPETPASS_sos_eventPayload = {
  __typename?: 'AddPETPASS_sos_eventPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_sos_event?: Maybe<Array<Maybe<PETPASS_sos_event>>>;
};


export type AddPETPASS_sos_eventPayloadpETPASS_sos_eventArgs = {
  filter?: InputMaybe<PETPASS_sos_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_sos_eventOrder>;
};

export type AddPETPASS_userInput = {
  address?: InputMaybe<Scalars['String']>;
  addressInfo?: InputMaybe<Scalars['String']>;
  addressNumber?: InputMaybe<Scalars['String']>;
  app: PETPASS_APPRef;
  birthdate?: InputMaybe<Scalars['DateTime']>;
  company?: InputMaybe<Scalars['String']>;
  companyDocumentId?: InputMaybe<Scalars['String']>;
  contracts: Array<PETPASS_contractRef>;
  country?: InputMaybe<CountryRef>;
  documentId?: InputMaybe<Scalars['String']>;
  documentType?: InputMaybe<PETPASS_userDocumentType>;
  email?: InputMaybe<Scalars['String']>;
  favVet?: InputMaybe<E360App_locationRef>;
  guid: Scalars['String'];
  lastName?: InputMaybe<Scalars['String']>;
  lastUpdate?: InputMaybe<Scalars['DateTime']>;
  locality?: InputMaybe<Scalars['String']>;
  meetingDoctorsUser?: InputMaybe<MeetingDoctors_userRef>;
  meetingDoctorsUsers?: InputMaybe<Array<MeetingDoctors_userRef>>;
  name?: InputMaybe<Scalars['String']>;
  petTokens?: InputMaybe<Array<PETPASS_petTokenRef>>;
  pets: Array<PETPASS_petRef>;
  phone?: InputMaybe<Scalars['String']>;
  province?: InputMaybe<Scalars['String']>;
  roadType?: InputMaybe<Scalars['String']>;
  role: PETPASS_userRole;
  secondLastName?: InputMaybe<Scalars['String']>;
  shareAddress?: InputMaybe<Scalars['Boolean']>;
  shareEmail?: InputMaybe<Scalars['Boolean']>;
  sharePhone?: InputMaybe<Scalars['Boolean']>;
  user: E360App_userRef;
  zipCode?: InputMaybe<Scalars['String']>;
};

export type AddPETPASS_userPayload = {
  __typename?: 'AddPETPASS_userPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_user?: Maybe<Array<Maybe<PETPASS_user>>>;
};


export type AddPETPASS_userPayloadpETPASS_userArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_userOrder>;
};

export type AddPersonInput = {
  birth?: InputMaybe<Scalars['DateTime']>;
  name: Scalars['String'];
  secondSurname?: InputMaybe<Scalars['String']>;
  surname?: InputMaybe<Scalars['String']>;
};

export type AddPersonPayload = {
  __typename?: 'AddPersonPayload';
  numUids?: Maybe<Scalars['Int']>;
  person?: Maybe<Array<Maybe<Person>>>;
};


export type AddPersonPayloadpersonArgs = {
  filter?: InputMaybe<PersonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PersonOrder>;
};

export type AddPetBreedInput = {
  avatar?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  name: Scalars['String'];
  type: PetTypeRef;
};

export type AddPetBreedPayload = {
  __typename?: 'AddPetBreedPayload';
  numUids?: Maybe<Scalars['Int']>;
  petBreed?: Maybe<Array<Maybe<PetBreed>>>;
};


export type AddPetBreedPayloadpetBreedArgs = {
  filter?: InputMaybe<PetBreedFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetBreedOrder>;
};

export type AddPetInput = {
  ageByMonths?: InputMaybe<Scalars['Int']>;
  birthday?: InputMaybe<Scalars['DateTime']>;
  breed?: InputMaybe<PetBreedRef>;
  character?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deceasedAt?: InputMaybe<Scalars['DateTime']>;
  documentExpirationDate?: InputMaybe<Scalars['DateTime']>;
  documentFile?: InputMaybe<Pet_fileRef>;
  documentId?: InputMaybe<Scalars['String']>;
  documentStatus?: InputMaybe<Pet_validationStatus>;
  documentUpdatedAt?: InputMaybe<Scalars['DateTime']>;
  documentValidatedAt?: InputMaybe<Scalars['DateTime']>;
  fatherBreed?: InputMaybe<PetBreedRef>;
  gallery: Array<Pet_fileRef>;
  gender?: InputMaybe<PetGender>;
  guid: Scalars['String'];
  hairColor?: InputMaybe<Scalars['String']>;
  hairLength?: InputMaybe<Scalars['String']>;
  hasInsurance?: InputMaybe<Scalars['Boolean']>;
  isHealthy?: InputMaybe<Scalars['Boolean']>;
  isSterilised: Scalars['Boolean'];
  isVaccinated?: InputMaybe<Scalars['Boolean']>;
  legalGuardianDocumentId?: InputMaybe<Scalars['String']>;
  legalGuardianFullName?: InputMaybe<Scalars['String']>;
  microchip?: InputMaybe<Scalars['String']>;
  microchipFile?: InputMaybe<Pet_fileRef>;
  microchipStatus?: InputMaybe<Pet_validationStatus>;
  microchipUpdatedAt?: InputMaybe<Scalars['DateTime']>;
  microchipValidatedAt?: InputMaybe<Scalars['DateTime']>;
  motherBreed?: InputMaybe<PetBreedRef>;
  name: Scalars['String'];
  origin?: InputMaybe<PetOrigin>;
  petPassPet?: InputMaybe<PETPASS_petRef>;
  role?: InputMaybe<PetRole>;
  thumbnail?: InputMaybe<E360Storage_fileRef>;
  type: PetTypeRef;
  vaccinations: Array<Pet_vaccinationRef>;
  vetPets: Array<VET_petRef>;
  weight?: InputMaybe<Scalars['Int']>;
};

export type AddPetPayload = {
  __typename?: 'AddPetPayload';
  numUids?: Maybe<Scalars['Int']>;
  pet?: Maybe<Array<Maybe<Pet>>>;
};


export type AddPetPayloadpetArgs = {
  filter?: InputMaybe<PetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetOrder>;
};

export type AddPetTypeInput = {
  avatar?: InputMaybe<Scalars['String']>;
  breeds: Array<PetBreedRef>;
  code?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  name: Scalars['String'];
};

export type AddPetTypePayload = {
  __typename?: 'AddPetTypePayload';
  numUids?: Maybe<Scalars['Int']>;
  petType?: Maybe<Array<Maybe<PetType>>>;
};


export type AddPetTypePayloadpetTypeArgs = {
  filter?: InputMaybe<PetTypeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetTypeOrder>;
};

export type AddPet_fileInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  document?: InputMaybe<PetRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid: Scalars['String'];
  label: Scalars['String'];
  microchip?: InputMaybe<PetRef>;
  pet?: InputMaybe<PetRef>;
  vaccination?: InputMaybe<Pet_vaccinationRef>;
};

export type AddPet_filePayload = {
  __typename?: 'AddPet_filePayload';
  numUids?: Maybe<Scalars['Int']>;
  pet_file?: Maybe<Array<Maybe<Pet_file>>>;
};


export type AddPet_filePayloadpet_fileArgs = {
  filter?: InputMaybe<Pet_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_fileOrder>;
};

export type AddPet_vaccinationInput = {
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<E360App_userRef>;
  file?: InputMaybe<Pet_fileRef>;
  guid: Scalars['String'];
  pet: PetRef;
  ref?: InputMaybe<Scalars['String']>;
  scheduledAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Pet_vaccinationStatus>;
  vaccine: Pet_vaccineRef;
};

export type AddPet_vaccinationPayload = {
  __typename?: 'AddPet_vaccinationPayload';
  numUids?: Maybe<Scalars['Int']>;
  pet_vaccination?: Maybe<Array<Maybe<Pet_vaccination>>>;
};


export type AddPet_vaccinationPayloadpet_vaccinationArgs = {
  filter?: InputMaybe<Pet_vaccinationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_vaccinationOrder>;
};

export type AddPet_vaccineInput = {
  afterHowManyMonths?: InputMaybe<Scalars['Int']>;
  description?: InputMaybe<Scalars['String']>;
  guid: Scalars['String'];
  name: Scalars['String'];
  periodicity?: InputMaybe<Pet_vaccinePeriodicity>;
  type?: InputMaybe<Pet_vaccineType>;
  vaccinations: Array<Pet_vaccinationRef>;
};

export type AddPet_vaccinePayload = {
  __typename?: 'AddPet_vaccinePayload';
  numUids?: Maybe<Scalars['Int']>;
  pet_vaccine?: Maybe<Array<Maybe<Pet_vaccine>>>;
};


export type AddPet_vaccinePayloadpet_vaccineArgs = {
  filter?: InputMaybe<Pet_vaccineFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_vaccineOrder>;
};

export type AddProductInput = {
  buyPrice: Scalars['Float'];
  category?: InputMaybe<Product_categoryRef>;
  crmTeamBoards?: InputMaybe<Array<CRM_teamBoardRef>>;
  currency: CurrencyRef;
  erpInvoiceItems: Array<ERP_invoiceItemRef>;
  erpProduct: ERP_productRef;
  fixedPaymentPlan?: InputMaybe<Scalars['Boolean']>;
  inputs: Array<CRM_contactInputRef>;
  isAvailable?: InputMaybe<Scalars['Boolean']>;
  isInfiniteStock?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<InputMaybe<Product_itemRef>>>;
  lmsProduct?: InputMaybe<LMS_productRef>;
  name: Scalars['String'];
  org360: Org360Ref;
  paymentPlanGap?: InputMaybe<Scalars['Int']>;
  paymentPlanItems: Array<Product_paymentPlanItemRef>;
  proposals?: InputMaybe<Array<ProposalRef>>;
  salePrice: Scalars['Float'];
  status?: InputMaybe<Product_status>;
  unit: UnitRef;
};

export type AddProductPayload = {
  __typename?: 'AddProductPayload';
  numUids?: Maybe<Scalars['Int']>;
  product?: Maybe<Array<Maybe<Product>>>;
};


export type AddProductPayloadproductArgs = {
  filter?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProductOrder>;
};

export type AddProduct_categoryInput = {
  color: Scalars['String'];
  icon: Scalars['String'];
  invoices: Array<ERP_invoiceRef>;
  name: Scalars['String'];
  org360: Org360Ref;
  products: Array<ProductRef>;
  type?: InputMaybe<Product_categoryType>;
};

export type AddProduct_categoryPayload = {
  __typename?: 'AddProduct_categoryPayload';
  numUids?: Maybe<Scalars['Int']>;
  product_category?: Maybe<Array<Maybe<Product_category>>>;
};


export type AddProduct_categoryPayloadproduct_categoryArgs = {
  filter?: InputMaybe<Product_categoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_categoryOrder>;
};

export type AddProduct_itemInput = {
  product: ProductRef;
};

export type AddProduct_itemPayload = {
  __typename?: 'AddProduct_itemPayload';
  numUids?: Maybe<Scalars['Int']>;
  product_item?: Maybe<Array<Maybe<Product_item>>>;
};


export type AddProduct_itemPayloadproduct_itemArgs = {
  filter?: InputMaybe<Product_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddProduct_paymentPlanItemInput = {
  date?: InputMaybe<Scalars['DateTime']>;
  index: Scalars['Int'];
  label?: InputMaybe<Scalars['String']>;
  org360: Org360Ref;
  product: ProductRef;
  value: Scalars['Int'];
};

export type AddProduct_paymentPlanItemPayload = {
  __typename?: 'AddProduct_paymentPlanItemPayload';
  numUids?: Maybe<Scalars['Int']>;
  product_paymentPlanItem?: Maybe<Array<Maybe<Product_paymentPlanItem>>>;
};


export type AddProduct_paymentPlanItemPayloadproduct_paymentPlanItemArgs = {
  filter?: InputMaybe<Product_paymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_paymentPlanItemOrder>;
};

export type AddProposalInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  crmProposal?: InputMaybe<CRM_proposalRef>;
  description: Scalars['String'];
  guid: Scalars['String'];
  org360: Org360Ref;
  products: Array<ProductRef>;
  resources: Array<Proposal_resourceRef>;
  stakeholderResources: Array<Proposal_stakeholderResourceRef>;
  stakeholders: Array<Proposal_stakeholderRef>;
  status?: InputMaybe<Proposal_status>;
  title: Scalars['String'];
};

export type AddProposalPayload = {
  __typename?: 'AddProposalPayload';
  numUids?: Maybe<Scalars['Int']>;
  proposal?: Maybe<Array<Maybe<Proposal>>>;
};


export type AddProposalPayloadproposalArgs = {
  filter?: InputMaybe<ProposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProposalOrder>;
};

export type AddProposal_resourceInput = {
  guid: Scalars['String'];
  proposal: ProposalRef;
  resource: ResourceRef;
  stakeholders: Array<Proposal_stakeholderResourceRef>;
};

export type AddProposal_resourcePayload = {
  __typename?: 'AddProposal_resourcePayload';
  numUids?: Maybe<Scalars['Int']>;
  proposal_resource?: Maybe<Array<Maybe<Proposal_resource>>>;
};


export type AddProposal_resourcePayloadproposal_resourceArgs = {
  filter?: InputMaybe<Proposal_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_resourceOrder>;
};

export type AddProposal_stakeholderInput = {
  account?: InputMaybe<AccountRef>;
  contact?: InputMaybe<ContactRef>;
  guid: Scalars['String'];
  proposal: ProposalRef;
  resources: Array<Proposal_stakeholderResourceRef>;
  status?: InputMaybe<Proposal_stackeholder_status>;
  tokens: Array<Proposal_stakeholderTokenRef>;
};

export type AddProposal_stakeholderPayload = {
  __typename?: 'AddProposal_stakeholderPayload';
  numUids?: Maybe<Scalars['Int']>;
  proposal_stakeholder?: Maybe<Array<Maybe<Proposal_stakeholder>>>;
};


export type AddProposal_stakeholderPayloadproposal_stakeholderArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderOrder>;
};

export type AddProposal_stakeholderResourceInput = {
  checkDate?: InputMaybe<Scalars['DateTime']>;
  deliverDate?: InputMaybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  isCheck?: InputMaybe<Scalars['Boolean']>;
  isRequiredCheck?: InputMaybe<Scalars['Boolean']>;
  isRequiredSign?: InputMaybe<Scalars['Boolean']>;
  isSign?: InputMaybe<Scalars['Boolean']>;
  openDate?: InputMaybe<Scalars['DateTime']>;
  proposal: ProposalRef;
  resource: Proposal_resourceRef;
  signDate?: InputMaybe<Scalars['DateTime']>;
  stakeholder: Proposal_stakeholderRef;
};

export type AddProposal_stakeholderResourcePayload = {
  __typename?: 'AddProposal_stakeholderResourcePayload';
  numUids?: Maybe<Scalars['Int']>;
  proposal_stakeholderResource?: Maybe<Array<Maybe<Proposal_stakeholderResource>>>;
};


export type AddProposal_stakeholderResourcePayloadproposal_stakeholderResourceArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderResourceOrder>;
};

export type AddProposal_stakeholderTokenInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expiresAt: Scalars['DateTime'];
  guid: Scalars['String'];
  isUsed?: InputMaybe<Scalars['Boolean']>;
  stakeholder: Proposal_stakeholderRef;
};

export type AddProposal_stakeholderTokenPayload = {
  __typename?: 'AddProposal_stakeholderTokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  proposal_stakeholderToken?: Maybe<Array<Maybe<Proposal_stakeholderToken>>>;
};


export type AddProposal_stakeholderTokenPayloadproposal_stakeholderTokenArgs = {
  filter?: InputMaybe<Proposal_stakeholderTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderTokenOrder>;
};

export type AddResourceInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  duration?: InputMaybe<Scalars['Int']>;
  erpResource?: InputMaybe<ERP_resourceRef>;
  extension: Scalars['String'];
  fileName: Scalars['String'];
  isAsset?: InputMaybe<Scalars['Boolean']>;
  isPublic?: InputMaybe<Scalars['Boolean']>;
  lmsResources?: InputMaybe<Array<LMS_resourceRef>>;
  mimeType: Scalars['String'];
  name: Scalars['String'];
  org360?: InputMaybe<Org360Ref>;
  publicPath?: InputMaybe<Scalars['String']>;
  ref: Scalars['String'];
  size: Scalars['Int'];
  tokens?: InputMaybe<Array<InputMaybe<ResourceTokenRef>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AddResourcePayload = {
  __typename?: 'AddResourcePayload';
  numUids?: Maybe<Scalars['Int']>;
  resource?: Maybe<Array<Maybe<Resource>>>;
};


export type AddResourcePayloadresourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceOrder>;
};

export type AddResourceTokenInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  expiresAt?: InputMaybe<Scalars['DateTime']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  label?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  resource: ResourceRef;
  token: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AddResourceTokenPayload = {
  __typename?: 'AddResourceTokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  resourceToken?: Maybe<Array<Maybe<ResourceToken>>>;
};


export type AddResourceTokenPayloadresourceTokenArgs = {
  filter?: InputMaybe<ResourceTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceTokenOrder>;
};

export type AddSMSInput = {
  channel?: InputMaybe<SMS_channel>;
  createdAt: Scalars['DateTime'];
  createdBy?: InputMaybe<AccountRef>;
  destinationNumber?: InputMaybe<Scalars['String']>;
  encoding?: InputMaybe<SMS_encoding>;
  guid: Scalars['String'];
  message?: InputMaybe<Scalars['String']>;
  operator?: InputMaybe<Scalars['String']>;
  operatorResultCode?: InputMaybe<Scalars['String']>;
  org360: Org360Ref;
  receivedAt?: InputMaybe<Scalars['DateTime']>;
  resultCode?: InputMaybe<Scalars['Int']>;
  sentAt?: InputMaybe<Scalars['DateTime']>;
  smsId: Scalars['String'];
  source?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<SMS_state>;
  type?: InputMaybe<SMS_type>;
};

export type AddSMSPayload = {
  __typename?: 'AddSMSPayload';
  numUids?: Maybe<Scalars['Int']>;
  sMS?: Maybe<Array<Maybe<SMS>>>;
};


export type AddSMSPayloadsMSArgs = {
  filter?: InputMaybe<SMSFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SMSOrder>;
};

export type AddSchedulerInput = {
  actions: Array<InputMaybe<Scheduler_actionRef>>;
  isActive: Scalars['Boolean'];
  org360: Org360Ref;
  tasks: Array<InputMaybe<Scheduler_taskRef>>;
};

export type AddSchedulerPayload = {
  __typename?: 'AddSchedulerPayload';
  numUids?: Maybe<Scalars['Int']>;
  scheduler?: Maybe<Array<Maybe<Scheduler>>>;
};


export type AddSchedulerPayloadschedulerArgs = {
  filter?: InputMaybe<SchedulerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddScheduler_actionInput = {
  external?: InputMaybe<Scheduler_externalActionRef>;
  index?: InputMaybe<Scalars['Int']>;
  manager?: InputMaybe<Scheduler_managerActionRef>;
  payload: Scalars['String'];
  scheduler: SchedulerRef;
  status: Scheduler_actionStatus;
  task: Scheduler_taskRef;
  type: Scheduler_actionType;
};

export type AddScheduler_actionPayload = {
  __typename?: 'AddScheduler_actionPayload';
  numUids?: Maybe<Scalars['Int']>;
  scheduler_action?: Maybe<Array<Maybe<Scheduler_action>>>;
};


export type AddScheduler_actionPayloadscheduler_actionArgs = {
  filter?: InputMaybe<Scheduler_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_actionOrder>;
};

export type AddScheduler_externalActionInput = {
  headers?: InputMaybe<Scalars['String']>;
  method: Scalars['String'];
  url: Scalars['String'];
};

export type AddScheduler_externalActionPayload = {
  __typename?: 'AddScheduler_externalActionPayload';
  numUids?: Maybe<Scalars['Int']>;
  scheduler_externalAction?: Maybe<Array<Maybe<Scheduler_externalAction>>>;
};


export type AddScheduler_externalActionPayloadscheduler_externalActionArgs = {
  filter?: InputMaybe<Scheduler_externalActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_externalActionOrder>;
};

export type AddScheduler_managerActionInput = {
  fields: Scalars['String'];
  manager: Scheduler_actionAllowManagers;
  name?: InputMaybe<Scalars['String']>;
};

export type AddScheduler_managerActionPayload = {
  __typename?: 'AddScheduler_managerActionPayload';
  numUids?: Maybe<Scalars['Int']>;
  scheduler_managerAction?: Maybe<Array<Maybe<Scheduler_managerAction>>>;
};


export type AddScheduler_managerActionPayloadscheduler_managerActionArgs = {
  filter?: InputMaybe<Scheduler_managerActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_managerActionOrder>;
};

export type AddScheduler_taskInput = {
  actions: Array<InputMaybe<Scheduler_actionRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  date: Scalars['DateTime'];
  org360: Org360Ref;
  scheduler: SchedulerRef;
  status: Scheduler_taskStatus;
};

export type AddScheduler_taskPayload = {
  __typename?: 'AddScheduler_taskPayload';
  numUids?: Maybe<Scalars['Int']>;
  scheduler_task?: Maybe<Array<Maybe<Scheduler_task>>>;
};


export type AddScheduler_taskPayloadscheduler_taskArgs = {
  filter?: InputMaybe<Scheduler_taskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_taskOrder>;
};

export type AddSearchIndex_contactInput = {
  accountId?: InputMaybe<Scalars['String']>;
  comercialName: Scalars['String'];
  createdAt: Scalars['DateTime'];
  crmAreaIds: Array<Scalars['String']>;
  crmAssignedToIds: Array<Scalars['String']>;
  crmContactId: Scalars['String'];
  crmCustomerStatus?: InputMaybe<Scalars['String']>;
  crmCustomerType?: InputMaybe<Scalars['String']>;
  crmIsEmailBounced?: InputMaybe<Scalars['Boolean']>;
  crmIsUnsubscribe?: InputMaybe<Scalars['Boolean']>;
  crmRoles: Array<Scalars['String']>;
  crmSourceIds: Array<Scalars['String']>;
  crmSupplierStatus?: InputMaybe<Scalars['String']>;
  crmSupplierType?: InputMaybe<Scalars['String']>;
  emails: Array<Scalars['String']>;
  erpContactId: Scalars['String'];
  id: Scalars['String'];
  lastUpdateAt: Scalars['DateTime'];
  org360Id: Scalars['String'];
  phones: Array<Scalars['String']>;
};

export type AddSearchIndex_contactPayload = {
  __typename?: 'AddSearchIndex_contactPayload';
  numUids?: Maybe<Scalars['Int']>;
  searchIndex_contact?: Maybe<Array<Maybe<SearchIndex_contact>>>;
};


export type AddSearchIndex_contactPayloadsearchIndex_contactArgs = {
  filter?: InputMaybe<SearchIndex_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SearchIndex_contactOrder>;
};

export type AddServiceAccountInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  name: Scalars['String'];
  org360: Org360Ref;
};

export type AddServiceAccountPayload = {
  __typename?: 'AddServiceAccountPayload';
  numUids?: Maybe<Scalars['Int']>;
  serviceAccount?: Maybe<Array<Maybe<ServiceAccount>>>;
};


export type AddServiceAccountPayloadserviceAccountArgs = {
  filter?: InputMaybe<ServiceAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ServiceAccountOrder>;
};

export type AddShortUrlInput = {
  createdAt: Scalars['DateTime'];
  description?: InputMaybe<Scalars['String']>;
  domain: ShortUrl_domainRef;
  guid: Scalars['String'];
  qrCode?: InputMaybe<Scalars['String']>;
  qrCodeUrl?: InputMaybe<Scalars['String']>;
  redirectUrl: Scalars['String'];
  status: ShortUrl_status;
  url: Scalars['String'];
  utmCampaign?: InputMaybe<Scalars['String']>;
  utmContent?: InputMaybe<Scalars['String']>;
  utmMedium?: InputMaybe<Scalars['String']>;
  utmSource?: InputMaybe<Scalars['String']>;
  utmTerm?: InputMaybe<Scalars['String']>;
};

export type AddShortUrlPayload = {
  __typename?: 'AddShortUrlPayload';
  numUids?: Maybe<Scalars['Int']>;
  shortUrl?: Maybe<Array<Maybe<ShortUrl>>>;
};


export type AddShortUrlPayloadshortUrlArgs = {
  filter?: InputMaybe<ShortUrlFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ShortUrlOrder>;
};

export type AddShortUrl_domainInput = {
  createdAt: Scalars['DateTime'];
  domain: Scalars['String'];
  guid: Scalars['String'];
  shortUrls: Array<ShortUrlRef>;
  status: ShortUrl_status;
};

export type AddShortUrl_domainPayload = {
  __typename?: 'AddShortUrl_domainPayload';
  numUids?: Maybe<Scalars['Int']>;
  shortUrl_domain?: Maybe<Array<Maybe<ShortUrl_domain>>>;
};


export type AddShortUrl_domainPayloadshortUrl_domainArgs = {
  filter?: InputMaybe<ShortUrl_domainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ShortUrl_domainOrder>;
};

export type AddStorageInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  files?: InputMaybe<Array<InputMaybe<Storage_fileRef>>>;
  filesByDemands?: InputMaybe<Array<InputMaybe<Storage_fileByDemandRef>>>;
  org360?: InputMaybe<Org360Ref>;
  publicPath: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type AddStoragePayload = {
  __typename?: 'AddStoragePayload';
  numUids?: Maybe<Scalars['Int']>;
  storage?: Maybe<Array<Maybe<Storage>>>;
};


export type AddStoragePayloadstorageArgs = {
  filter?: InputMaybe<StorageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<StorageOrder>;
};

export type AddStorage_fileByDemandInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expiresAt: Scalars['DateTime'];
  fileName: Scalars['String'];
  guid: Scalars['String'];
  mimeType: Scalars['String'];
  status: Storage_fileByDemandStatus;
  storage: StorageRef;
  subscribers: Array<AccountRef>;
};

export type AddStorage_fileByDemandPayload = {
  __typename?: 'AddStorage_fileByDemandPayload';
  numUids?: Maybe<Scalars['Int']>;
  storage_fileByDemand?: Maybe<Array<Maybe<Storage_fileByDemand>>>;
};


export type AddStorage_fileByDemandPayloadstorage_fileByDemandArgs = {
  filter?: InputMaybe<Storage_fileByDemandFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileByDemandOrder>;
};

export type AddStorage_fileInput = {
  createFileToken?: InputMaybe<Storage_fileOperationTokenRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy: AccountRef;
  description?: InputMaybe<Scalars['String']>;
  extension: Scalars['String'];
  filePath: Scalars['String'];
  folderPath: Scalars['String'];
  isAsset?: InputMaybe<Scalars['Boolean']>;
  isPublic?: InputMaybe<Scalars['Boolean']>;
  mimeType?: InputMaybe<Scalars['String']>;
  readFileTokens?: InputMaybe<Array<InputMaybe<Storage_fileOperationTokenRef>>>;
  ref: Scalars['String'];
  size?: InputMaybe<Scalars['Float']>;
  storage: StorageRef;
};

export type AddStorage_fileOperationTokenInput = {
  account: AccountRef;
  chunkSize?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  expiresAt: Scalars['DateTime'];
  file?: InputMaybe<Storage_fileRef>;
  files?: InputMaybe<Array<InputMaybe<Storage_fileRef>>>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  storage: StorageRef;
  token: Scalars['String'];
  type: Storage_fileOperationTokenType;
};

export type AddStorage_fileOperationTokenPayload = {
  __typename?: 'AddStorage_fileOperationTokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  storage_fileOperationToken?: Maybe<Array<Maybe<Storage_fileOperationToken>>>;
};


export type AddStorage_fileOperationTokenPayloadstorage_fileOperationTokenArgs = {
  filter?: InputMaybe<Storage_fileOperationTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOperationTokenOrder>;
};

export type AddStorage_filePayload = {
  __typename?: 'AddStorage_filePayload';
  numUids?: Maybe<Scalars['Int']>;
  storage_file?: Maybe<Array<Maybe<Storage_file>>>;
};


export type AddStorage_filePayloadstorage_fileArgs = {
  filter?: InputMaybe<Storage_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOrder>;
};

export type AddTwoFactorTokenInput = {
  accountId?: InputMaybe<Scalars['String']>;
  code: Scalars['String'];
  expiredAt: Scalars['DateTime'];
  organizationId?: InputMaybe<Scalars['String']>;
  token: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
  userToken?: InputMaybe<Scalars['String']>;
};

export type AddTwoFactorTokenPayload = {
  __typename?: 'AddTwoFactorTokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  twoFactorToken?: Maybe<Array<Maybe<TwoFactorToken>>>;
};


export type AddTwoFactorTokenPayloadtwoFactorTokenArgs = {
  filter?: InputMaybe<TwoFactorTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TwoFactorTokenOrder>;
};

export type AddUnitInput = {
  name: Scalars['String'];
  plural: Scalars['String'];
  symbol: Scalars['String'];
  type: Unit_type;
};

export type AddUnitPayload = {
  __typename?: 'AddUnitPayload';
  numUids?: Maybe<Scalars['Int']>;
  unit?: Maybe<Array<Maybe<Unit>>>;
};


export type AddUnitPayloadunitArgs = {
  filter?: InputMaybe<UnitFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UnitOrder>;
};

export type AddUserInput = {
  accounts?: InputMaybe<Array<AccountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crypto?: InputMaybe<Scalars['String']>;
  currentAccount?: InputMaybe<AccountRef>;
  e360Apps?: InputMaybe<Array<E360App_userRef>>;
  email: Scalars['String'];
  emails: Array<EmailRef>;
  guid?: InputMaybe<Scalars['String']>;
  inbox?: InputMaybe<InboxRef>;
  integrations?: InputMaybe<Array<Integrations_accountRef>>;
  isConnected?: InputMaybe<Scalars['Boolean']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isTwoFactor?: InputMaybe<Scalars['Boolean']>;
  loginProvider?: InputMaybe<Array<LoginProviderRef>>;
  person?: InputMaybe<PersonRef>;
  phone?: InputMaybe<Scalars['String']>;
  pwd: Scalars['String'];
  tokens: Array<User_tokenRef>;
  twoFactorType?: InputMaybe<TwoFactorType>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userName: Scalars['String'];
};

export type AddUserPayload = {
  __typename?: 'AddUserPayload';
  numUids?: Maybe<Scalars['Int']>;
  user?: Maybe<Array<Maybe<User>>>;
};


export type AddUserPayloaduserArgs = {
  filter?: InputMaybe<UserFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UserOrder>;
};

export type AddUser_tokenInput = {
  code?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expiredAt: Scalars['DateTime'];
  id: Scalars['String'];
  type: User_tokenType;
  usedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserRef>;
};

export type AddUser_tokenPayload = {
  __typename?: 'AddUser_tokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  user_token?: Maybe<Array<Maybe<User_token>>>;
};


export type AddUser_tokenPayloaduser_tokenArgs = {
  filter?: InputMaybe<User_tokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<User_tokenOrder>;
};

export type AddVET_PACKAGEInput = {
  accounts: Array<VET_accountRef>;
  contacts: Array<VET_contactRef>;
  guid: Scalars['String'];
  name: Scalars['String'];
  org360: Org360Ref;
  pets: Array<VET_petRef>;
};

export type AddVET_PACKAGEPayload = {
  __typename?: 'AddVET_PACKAGEPayload';
  numUids?: Maybe<Scalars['Int']>;
  vET_PACKAGE?: Maybe<Array<Maybe<VET_PACKAGE>>>;
};


export type AddVET_PACKAGEPayloadvET_PACKAGEArgs = {
  filter?: InputMaybe<VET_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_PACKAGEOrder>;
};

export type AddVET_accountInput = {
  account: AccountRef;
  guid: Scalars['String'];
  package: VET_PACKAGERef;
  role: VET_role;
};

export type AddVET_accountPayload = {
  __typename?: 'AddVET_accountPayload';
  numUids?: Maybe<Scalars['Int']>;
  vET_account?: Maybe<Array<Maybe<VET_account>>>;
};


export type AddVET_accountPayloadvET_accountArgs = {
  filter?: InputMaybe<VET_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_accountOrder>;
};

export type AddVET_contactInput = {
  contact: ContactRef;
  guid: Scalars['String'];
  package: VET_PACKAGERef;
  pets: Array<VET_petRef>;
};

export type AddVET_contactPayload = {
  __typename?: 'AddVET_contactPayload';
  numUids?: Maybe<Scalars['Int']>;
  vET_contact?: Maybe<Array<Maybe<VET_contact>>>;
};


export type AddVET_contactPayloadvET_contactArgs = {
  filter?: InputMaybe<VET_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_contactOrder>;
};

export type AddVET_petInput = {
  guid: Scalars['String'];
  owner: VET_contactRef;
  package: VET_PACKAGERef;
  pet: PetRef;
};

export type AddVET_petPayload = {
  __typename?: 'AddVET_petPayload';
  numUids?: Maybe<Scalars['Int']>;
  vET_pet?: Maybe<Array<Maybe<VET_pet>>>;
};


export type AddVET_petPayloadvET_petArgs = {
  filter?: InputMaybe<VET_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_petOrder>;
};

export type AddWebhookInput = {
  org360: Org360Ref;
  origins: Array<Webhook_providerOriginRef>;
  providers: Array<Webhook_providerRef>;
};

export type AddWebhookPayload = {
  __typename?: 'AddWebhookPayload';
  numUids?: Maybe<Scalars['Int']>;
  webhook?: Maybe<Array<Maybe<Webhook>>>;
};


export type AddWebhookPayloadwebhookArgs = {
  filter?: InputMaybe<WebhookFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AddWebhook_providerInput = {
  name: Scalars['String'];
  origins: Array<Webhook_providerOriginRef>;
  webhook: WebhookRef;
};

export type AddWebhook_providerOriginInput = {
  enable?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  origin: Scalars['String'];
  provider: Webhook_providerRef;
  webhook: WebhookRef;
};

export type AddWebhook_providerOriginPayload = {
  __typename?: 'AddWebhook_providerOriginPayload';
  numUids?: Maybe<Scalars['Int']>;
  webhook_providerOrigin?: Maybe<Array<Maybe<Webhook_providerOrigin>>>;
};


export type AddWebhook_providerOriginPayloadwebhook_providerOriginArgs = {
  filter?: InputMaybe<Webhook_providerOriginFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOriginOrder>;
};

export type AddWebhook_providerPayload = {
  __typename?: 'AddWebhook_providerPayload';
  numUids?: Maybe<Scalars['Int']>;
  webhook_provider?: Maybe<Array<Maybe<Webhook_provider>>>;
};


export type AddWebhook_providerPayloadwebhook_providerArgs = {
  filter?: InputMaybe<Webhook_providerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOrder>;
};

export type Address = {
  __typename?: 'Address';
  address1: Scalars['String'];
  address2?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  contact?: Maybe<Contact>;
  country?: Maybe<Country>;
  fullAddress?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  number?: Maybe<Scalars['String']>;
  roadType?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  type: Array<Address_type>;
  zipCode?: Maybe<Scalars['String']>;
};


export type AddresscontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type AddresscountryArgs = {
  filter?: InputMaybe<CountryFilter>;
};

export type AddressAggregateResult = {
  __typename?: 'AddressAggregateResult';
  address1Max?: Maybe<Scalars['String']>;
  address1Min?: Maybe<Scalars['String']>;
  address2Max?: Maybe<Scalars['String']>;
  address2Min?: Maybe<Scalars['String']>;
  cityMax?: Maybe<Scalars['String']>;
  cityMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  fullAddressMax?: Maybe<Scalars['String']>;
  fullAddressMin?: Maybe<Scalars['String']>;
  numberMax?: Maybe<Scalars['String']>;
  numberMin?: Maybe<Scalars['String']>;
  roadTypeMax?: Maybe<Scalars['String']>;
  roadTypeMin?: Maybe<Scalars['String']>;
  stateMax?: Maybe<Scalars['String']>;
  stateMin?: Maybe<Scalars['String']>;
  zipCodeMax?: Maybe<Scalars['String']>;
  zipCodeMin?: Maybe<Scalars['String']>;
};

export type AddressFilter = {
  address1?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  address2?: InputMaybe<StringRegExpFilter>;
  and?: InputMaybe<Array<InputMaybe<AddressFilter>>>;
  city?: InputMaybe<StringRegExpFilter>;
  fullAddress?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  has?: InputMaybe<Array<InputMaybe<AddressHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<AddressFilter>;
  number?: InputMaybe<StringRegExpFilter>;
  or?: InputMaybe<Array<InputMaybe<AddressFilter>>>;
  state?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<Address_type_exact>;
  zipCode?: InputMaybe<StringRegExpFilter>;
};

export enum AddressHasFilter {
  address1 = 'address1',
  address2 = 'address2',
  city = 'city',
  contact = 'contact',
  country = 'country',
  fullAddress = 'fullAddress',
  number = 'number',
  roadType = 'roadType',
  state = 'state',
  type = 'type',
  zipCode = 'zipCode'
}

export type AddressOrder = {
  asc?: InputMaybe<AddressOrderable>;
  desc?: InputMaybe<AddressOrderable>;
  then?: InputMaybe<AddressOrder>;
};

export enum AddressOrderable {
  address1 = 'address1',
  address2 = 'address2',
  city = 'city',
  fullAddress = 'fullAddress',
  number = 'number',
  roadType = 'roadType',
  state = 'state',
  zipCode = 'zipCode'
}

export type AddressPatch = {
  address1?: InputMaybe<Scalars['String']>;
  address2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<ContactRef>;
  country?: InputMaybe<CountryRef>;
  fullAddress?: InputMaybe<Scalars['String']>;
  number?: InputMaybe<Scalars['String']>;
  roadType?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Array<Address_type>>;
  zipCode?: InputMaybe<Scalars['String']>;
};

export type AddressRef = {
  address1?: InputMaybe<Scalars['String']>;
  address2?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<ContactRef>;
  country?: InputMaybe<CountryRef>;
  fullAddress?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  number?: InputMaybe<Scalars['String']>;
  roadType?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Array<Address_type>>;
  zipCode?: InputMaybe<Scalars['String']>;
};

export enum Address_type {
  BILLING = 'BILLING',
  FISCAL = 'FISCAL',
  HOME = 'HOME',
  OTHER = 'OTHER',
  WORK = 'WORK'
}

export type Address_type_exact = {
  between?: InputMaybe<Address_type>;
  eq?: InputMaybe<Address_type>;
  ge?: InputMaybe<Address_type>;
  gt?: InputMaybe<Address_type>;
  in?: InputMaybe<Array<InputMaybe<Address_type>>>;
  le?: InputMaybe<Address_type>;
  lt?: InputMaybe<Address_type>;
};

export type AuthRule = {
  and?: InputMaybe<Array<InputMaybe<AuthRule>>>;
  not?: InputMaybe<AuthRule>;
  or?: InputMaybe<Array<InputMaybe<AuthRule>>>;
  rule?: InputMaybe<Scalars['String']>;
};

export type Bank = {
  __typename?: 'Bank';
  address: Scalars['String'];
  code: Scalars['String'];
  country: Country;
  createdAt: Scalars['DateTime'];
  euroCode?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name: Scalars['String'];
};


export type BankcountryArgs = {
  filter?: InputMaybe<CountryFilter>;
};

export type BankAccount = {
  __typename?: 'BankAccount';
  BIC?: Maybe<Scalars['String']>;
  IBAN: Scalars['String'];
  accountHolder?: Maybe<Scalars['String']>;
  bank?: Maybe<Bank>;
  bankAddress?: Maybe<Scalars['String']>;
  bankName?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
};


export type BankAccountbankArgs = {
  filter?: InputMaybe<BankFilter>;
};

export type BankAccountAggregateResult = {
  __typename?: 'BankAccountAggregateResult';
  BICMax?: Maybe<Scalars['String']>;
  BICMin?: Maybe<Scalars['String']>;
  IBANMax?: Maybe<Scalars['String']>;
  IBANMin?: Maybe<Scalars['String']>;
  accountHolderMax?: Maybe<Scalars['String']>;
  accountHolderMin?: Maybe<Scalars['String']>;
  bankAddressMax?: Maybe<Scalars['String']>;
  bankAddressMin?: Maybe<Scalars['String']>;
  bankNameMax?: Maybe<Scalars['String']>;
  bankNameMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
};

export type BankAccountFilter = {
  and?: InputMaybe<Array<InputMaybe<BankAccountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<BankAccountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<BankAccountFilter>;
  or?: InputMaybe<Array<InputMaybe<BankAccountFilter>>>;
};

export enum BankAccountHasFilter {
  BIC = 'BIC',
  IBAN = 'IBAN',
  accountHolder = 'accountHolder',
  bank = 'bank',
  bankAddress = 'bankAddress',
  bankName = 'bankName'
}

export type BankAccountOrder = {
  asc?: InputMaybe<BankAccountOrderable>;
  desc?: InputMaybe<BankAccountOrderable>;
  then?: InputMaybe<BankAccountOrder>;
};

export enum BankAccountOrderable {
  BIC = 'BIC',
  IBAN = 'IBAN',
  accountHolder = 'accountHolder',
  bankAddress = 'bankAddress',
  bankName = 'bankName'
}

export type BankAccountPatch = {
  BIC?: InputMaybe<Scalars['String']>;
  IBAN?: InputMaybe<Scalars['String']>;
  accountHolder?: InputMaybe<Scalars['String']>;
  bank?: InputMaybe<BankRef>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankName?: InputMaybe<Scalars['String']>;
};

export type BankAccountRef = {
  BIC?: InputMaybe<Scalars['String']>;
  IBAN?: InputMaybe<Scalars['String']>;
  accountHolder?: InputMaybe<Scalars['String']>;
  bank?: InputMaybe<BankRef>;
  bankAddress?: InputMaybe<Scalars['String']>;
  bankName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

export type BankAggregateResult = {
  __typename?: 'BankAggregateResult';
  addressMax?: Maybe<Scalars['String']>;
  addressMin?: Maybe<Scalars['String']>;
  codeMax?: Maybe<Scalars['String']>;
  codeMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  euroCodeMax?: Maybe<Scalars['String']>;
  euroCodeMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type BankFilter = {
  and?: InputMaybe<Array<InputMaybe<BankFilter>>>;
  code?: InputMaybe<StringExactFilter>;
  euroCode?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<BankHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<BankFilter>;
  or?: InputMaybe<Array<InputMaybe<BankFilter>>>;
};

export enum BankHasFilter {
  address = 'address',
  code = 'code',
  country = 'country',
  createdAt = 'createdAt',
  euroCode = 'euroCode',
  name = 'name'
}

export type BankOrder = {
  asc?: InputMaybe<BankOrderable>;
  desc?: InputMaybe<BankOrderable>;
  then?: InputMaybe<BankOrder>;
};

export enum BankOrderable {
  address = 'address',
  code = 'code',
  createdAt = 'createdAt',
  euroCode = 'euroCode',
  name = 'name'
}

export type BankPatch = {
  address?: InputMaybe<Scalars['String']>;
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<CountryRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  euroCode?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type BankRef = {
  address?: InputMaybe<Scalars['String']>;
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<CountryRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  euroCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
};

export type CMS_PACKAGE = {
  __typename?: 'CMS_PACKAGE';
  accounts: Array<CMS_account>;
  accountsAggregate?: Maybe<CMS_accountAggregateResult>;
  appContacts: Array<CMS_appContact>;
  appContactsAggregate?: Maybe<CMS_appContactAggregateResult>;
  apps: Array<CMS_app>;
  appsAggregate?: Maybe<CMS_appAggregateResult>;
  authorAliases: Array<CMS_authorAlias>;
  authorAliasesAggregate?: Maybe<CMS_authorAliasAggregateResult>;
  contacts: Array<CMS_contact>;
  contactsAggregate?: Maybe<CMS_contactAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  org360: Org360;
  websites: Array<CMS_website>;
  websitesAggregate?: Maybe<CMS_websiteAggregateResult>;
};


export type CMS_PACKAGEaccountsArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_accountOrder>;
};


export type CMS_PACKAGEaccountsAggregateArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};


export type CMS_PACKAGEappContactsArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appContactOrder>;
};


export type CMS_PACKAGEappContactsAggregateArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
};


export type CMS_PACKAGEappsArgs = {
  filter?: InputMaybe<CMS_appFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appOrder>;
};


export type CMS_PACKAGEappsAggregateArgs = {
  filter?: InputMaybe<CMS_appFilter>;
};


export type CMS_PACKAGEauthorAliasesArgs = {
  filter?: InputMaybe<CMS_authorAliasFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_authorAliasOrder>;
};


export type CMS_PACKAGEauthorAliasesAggregateArgs = {
  filter?: InputMaybe<CMS_authorAliasFilter>;
};


export type CMS_PACKAGEcontactsArgs = {
  filter?: InputMaybe<CMS_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_contactOrder>;
};


export type CMS_PACKAGEcontactsAggregateArgs = {
  filter?: InputMaybe<CMS_contactFilter>;
};


export type CMS_PACKAGEcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type CMS_PACKAGEorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type CMS_PACKAGEwebsitesArgs = {
  filter?: InputMaybe<CMS_websiteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_websiteOrder>;
};


export type CMS_PACKAGEwebsitesAggregateArgs = {
  filter?: InputMaybe<CMS_websiteFilter>;
};

export type CMS_PACKAGEAggregateResult = {
  __typename?: 'CMS_PACKAGEAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type CMS_PACKAGEFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_PACKAGEFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_PACKAGEHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_PACKAGEFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_PACKAGEFilter>>>;
};

export enum CMS_PACKAGEHasFilter {
  accounts = 'accounts',
  appContacts = 'appContacts',
  apps = 'apps',
  authorAliases = 'authorAliases',
  contacts = 'contacts',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  org360 = 'org360',
  websites = 'websites'
}

export type CMS_PACKAGEOrder = {
  asc?: InputMaybe<CMS_PACKAGEOrderable>;
  desc?: InputMaybe<CMS_PACKAGEOrderable>;
  then?: InputMaybe<CMS_PACKAGEOrder>;
};

export enum CMS_PACKAGEOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type CMS_PACKAGEPatch = {
  accounts?: InputMaybe<Array<CMS_accountRef>>;
  appContacts?: InputMaybe<Array<CMS_appContactRef>>;
  apps?: InputMaybe<Array<CMS_appRef>>;
  authorAliases?: InputMaybe<Array<CMS_authorAliasRef>>;
  contacts?: InputMaybe<Array<CMS_contactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  websites?: InputMaybe<Array<CMS_websiteRef>>;
};

export type CMS_PACKAGERef = {
  accounts?: InputMaybe<Array<CMS_accountRef>>;
  appContacts?: InputMaybe<Array<CMS_appContactRef>>;
  apps?: InputMaybe<Array<CMS_appRef>>;
  authorAliases?: InputMaybe<Array<CMS_authorAliasRef>>;
  contacts?: InputMaybe<Array<CMS_contactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  websites?: InputMaybe<Array<CMS_websiteRef>>;
};

export type CMS_account = {
  __typename?: 'CMS_account';
  account: Account;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: CMS_PACKAGE;
  roles: Array<CMS_roleType>;
};


export type CMS_accountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type CMS_accountcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type CMS_accountpackageArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
};

export type CMS_accountAggregateResult = {
  __typename?: 'CMS_accountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type CMS_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_accountFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_accountFilter>>>;
  roles?: InputMaybe<CMS_roleType_exact>;
};

export enum CMS_accountHasFilter {
  account = 'account',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  package = 'package',
  roles = 'roles'
}

export type CMS_accountOrder = {
  asc?: InputMaybe<CMS_accountOrderable>;
  desc?: InputMaybe<CMS_accountOrderable>;
  then?: InputMaybe<CMS_accountOrder>;
};

export enum CMS_accountOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type CMS_accountPatch = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CMS_PACKAGERef>;
  roles?: InputMaybe<Array<CMS_roleType>>;
};

export type CMS_accountRef = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<CMS_PACKAGERef>;
  roles?: InputMaybe<Array<CMS_roleType>>;
};

export type CMS_app = {
  __typename?: 'CMS_app';
  contacts: Array<CMS_appContact>;
  contactsAggregate?: Maybe<CMS_appContactAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: CMS_account;
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  package: CMS_PACKAGE;
  token: Scalars['String'];
};


export type CMS_appcontactsArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appContactOrder>;
};


export type CMS_appcontactsAggregateArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
};


export type CMS_appcreatedByArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};


export type CMS_apppackageArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
};

export type CMS_appAggregateResult = {
  __typename?: 'CMS_appAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  tokenMax?: Maybe<Scalars['String']>;
  tokenMin?: Maybe<Scalars['String']>;
};

export type CMS_appContact = {
  __typename?: 'CMS_appContact';
  app: CMS_app;
  contact: CMS_contact;
  createdAt: Scalars['DateTime'];
  createdBy: CMS_account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: CMS_PACKAGE;
};


export type CMS_appContactappArgs = {
  filter?: InputMaybe<CMS_appFilter>;
};


export type CMS_appContactcontactArgs = {
  filter?: InputMaybe<CMS_contactFilter>;
};


export type CMS_appContactcreatedByArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};


export type CMS_appContactpackageArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
};

export type CMS_appContactAggregateResult = {
  __typename?: 'CMS_appContactAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type CMS_appContactFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_appContactFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_appContactHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_appContactFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_appContactFilter>>>;
};

export enum CMS_appContactHasFilter {
  app = 'app',
  contact = 'contact',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  package = 'package'
}

export type CMS_appContactOrder = {
  asc?: InputMaybe<CMS_appContactOrderable>;
  desc?: InputMaybe<CMS_appContactOrderable>;
  then?: InputMaybe<CMS_appContactOrder>;
};

export enum CMS_appContactOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type CMS_appContactPatch = {
  app?: InputMaybe<CMS_appRef>;
  contact?: InputMaybe<CMS_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CMS_PACKAGERef>;
};

export type CMS_appContactRef = {
  app?: InputMaybe<CMS_appRef>;
  contact?: InputMaybe<CMS_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<CMS_PACKAGERef>;
};

export type CMS_appFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_appFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_appHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_appFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_appFilter>>>;
  token?: InputMaybe<StringHashFilter>;
};

export enum CMS_appHasFilter {
  contacts = 'contacts',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  guid = 'guid',
  name = 'name',
  package = 'package',
  token = 'token'
}

export type CMS_appOrder = {
  asc?: InputMaybe<CMS_appOrderable>;
  desc?: InputMaybe<CMS_appOrderable>;
  then?: InputMaybe<CMS_appOrder>;
};

export enum CMS_appOrderable {
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  name = 'name',
  token = 'token'
}

export type CMS_appPatch = {
  contacts?: InputMaybe<Array<CMS_appContactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CMS_PACKAGERef>;
  token?: InputMaybe<Scalars['String']>;
};

export type CMS_appRef = {
  contacts?: InputMaybe<Array<CMS_appContactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CMS_PACKAGERef>;
  token?: InputMaybe<Scalars['String']>;
};

export type CMS_authorAlias = {
  __typename?: 'CMS_authorAlias';
  cmsPackage: CMS_PACKAGE;
  createdAt: Scalars['DateTime'];
  createdBy: CMS_account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isDeleted: Scalars['Boolean'];
  name: Scalars['String'];
};


export type CMS_authorAliascmsPackageArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
};


export type CMS_authorAliascreatedByArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};

export type CMS_authorAliasAggregateResult = {
  __typename?: 'CMS_authorAliasAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CMS_authorAliasFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_authorAliasFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_authorAliasHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CMS_authorAliasFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_authorAliasFilter>>>;
};

export enum CMS_authorAliasHasFilter {
  cmsPackage = 'cmsPackage',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  isDeleted = 'isDeleted',
  name = 'name'
}

export type CMS_authorAliasOrder = {
  asc?: InputMaybe<CMS_authorAliasOrderable>;
  desc?: InputMaybe<CMS_authorAliasOrderable>;
  then?: InputMaybe<CMS_authorAliasOrder>;
};

export enum CMS_authorAliasOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type CMS_authorAliasPatch = {
  cmsPackage?: InputMaybe<CMS_PACKAGERef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
};

export type CMS_authorAliasRef = {
  cmsPackage?: InputMaybe<CMS_PACKAGERef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
};

export type CMS_contact = {
  __typename?: 'CMS_contact';
  appContacts: Array<CMS_appContact>;
  appContactsAggregate?: Maybe<CMS_appContactAggregateResult>;
  contact?: Maybe<Contact>;
  createdAt: Scalars['DateTime'];
  createdBy: CMS_account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: CMS_PACKAGE;
  token: Scalars['String'];
};


export type CMS_contactappContactsArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appContactOrder>;
};


export type CMS_contactappContactsAggregateArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
};


export type CMS_contactcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type CMS_contactcreatedByArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};


export type CMS_contactpackageArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
};

export type CMS_contactAggregateResult = {
  __typename?: 'CMS_contactAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  tokenMax?: Maybe<Scalars['String']>;
  tokenMin?: Maybe<Scalars['String']>;
};

export type CMS_contactFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_contactFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_contactHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_contactFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_contactFilter>>>;
  token?: InputMaybe<StringHashFilter>;
};

export enum CMS_contactHasFilter {
  appContacts = 'appContacts',
  contact = 'contact',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  package = 'package',
  token = 'token'
}

export type CMS_contactOrder = {
  asc?: InputMaybe<CMS_contactOrderable>;
  desc?: InputMaybe<CMS_contactOrderable>;
  then?: InputMaybe<CMS_contactOrder>;
};

export enum CMS_contactOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  token = 'token'
}

export type CMS_contactPatch = {
  appContacts?: InputMaybe<Array<CMS_appContactRef>>;
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CMS_PACKAGERef>;
  token?: InputMaybe<Scalars['String']>;
};

export type CMS_contactRef = {
  appContacts?: InputMaybe<Array<CMS_appContactRef>>;
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<CMS_PACKAGERef>;
  token?: InputMaybe<Scalars['String']>;
};

export type CMS_file = {
  __typename?: 'CMS_file';
  blockImage?: Maybe<CMS_website_page_blockImage>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<CMS_account>;
  file?: Maybe<E360Storage_file>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  label?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};


export type CMS_fileblockImageArgs = {
  filter?: InputMaybe<CMS_website_page_blockImageFilter>;
};


export type CMS_filecreatedByArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};


export type CMS_filefileArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
};

export type CMS_fileAggregateResult = {
  __typename?: 'CMS_fileAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
};

export type CMS_fileFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_fileFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_fileHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_fileFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_fileFilter>>>;
};

export enum CMS_fileHasFilter {
  blockImage = 'blockImage',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  file = 'file',
  guid = 'guid',
  label = 'label',
  url = 'url'
}

export type CMS_fileOrder = {
  asc?: InputMaybe<CMS_fileOrderable>;
  desc?: InputMaybe<CMS_fileOrderable>;
  then?: InputMaybe<CMS_fileOrder>;
};

export enum CMS_fileOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  label = 'label',
  url = 'url'
}

export type CMS_filePatch = {
  blockImage?: InputMaybe<CMS_website_page_blockImageRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type CMS_fileRef = {
  blockImage?: InputMaybe<CMS_website_page_blockImageRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export enum CMS_roleType {
  ADMIN = 'ADMIN',
  OVERSEER = 'OVERSEER'
}

export type CMS_roleType_exact = {
  between?: InputMaybe<CMS_roleType>;
  eq?: InputMaybe<CMS_roleType>;
  ge?: InputMaybe<CMS_roleType>;
  gt?: InputMaybe<CMS_roleType>;
  in?: InputMaybe<Array<InputMaybe<CMS_roleType>>>;
  le?: InputMaybe<CMS_roleType>;
  lt?: InputMaybe<CMS_roleType>;
};

export type CMS_website = {
  __typename?: 'CMS_website';
  cmsPackage: CMS_PACKAGE;
  createdAt: Scalars['DateTime'];
  createdBy: CMS_account;
  description?: Maybe<Scalars['String']>;
  domain?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isDeleted: Scalars['Boolean'];
  name: Scalars['String'];
  pages: Array<CMS_website_page>;
  pagesAggregate?: Maybe<CMS_website_pageAggregateResult>;
  title?: Maybe<Scalars['String']>;
};


export type CMS_websitecmsPackageArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
};


export type CMS_websitecreatedByArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};


export type CMS_websitepagesArgs = {
  filter?: InputMaybe<CMS_website_pageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_pageOrder>;
};


export type CMS_websitepagesAggregateArgs = {
  filter?: InputMaybe<CMS_website_pageFilter>;
};

export type CMS_websiteAggregateResult = {
  __typename?: 'CMS_websiteAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  domainMax?: Maybe<Scalars['String']>;
  domainMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
};

export type CMS_websiteFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_websiteFilter>>>;
  description?: InputMaybe<StringRegExpFilter>;
  domain?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_websiteHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CMS_websiteFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_websiteFilter>>>;
  title?: InputMaybe<StringRegExpFilter>;
};

export enum CMS_websiteHasFilter {
  cmsPackage = 'cmsPackage',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  domain = 'domain',
  guid = 'guid',
  isDeleted = 'isDeleted',
  name = 'name',
  pages = 'pages',
  title = 'title'
}

export type CMS_websiteOrder = {
  asc?: InputMaybe<CMS_websiteOrderable>;
  desc?: InputMaybe<CMS_websiteOrderable>;
  then?: InputMaybe<CMS_websiteOrder>;
};

export enum CMS_websiteOrderable {
  createdAt = 'createdAt',
  description = 'description',
  domain = 'domain',
  guid = 'guid',
  name = 'name',
  title = 'title'
}

export type CMS_websitePatch = {
  cmsPackage?: InputMaybe<CMS_PACKAGERef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  domain?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<Array<CMS_website_pageRef>>;
  title?: InputMaybe<Scalars['String']>;
};

export type CMS_websiteRef = {
  cmsPackage?: InputMaybe<CMS_PACKAGERef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  domain?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<Array<CMS_website_pageRef>>;
  title?: InputMaybe<Scalars['String']>;
};

export type CMS_website_page = {
  __typename?: 'CMS_website_page';
  authorAlias?: Maybe<Scalars['String']>;
  blocks: Array<CMS_website_page_block>;
  blocksAggregate?: Maybe<CMS_website_page_blockAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: CMS_account;
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isDeleted: Scalars['Boolean'];
  keywords?: Maybe<Array<Scalars['String']>>;
  lastPublish?: Maybe<Scalars['DateTime']>;
  name: Scalars['String'];
  path: Scalars['String'];
  published: Scalars['Boolean'];
  thumb?: Maybe<Scalars['String']>;
  thumbAlt?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  website: CMS_website;
};


export type CMS_website_pageblocksArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockOrder>;
};


export type CMS_website_pageblocksAggregateArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
};


export type CMS_website_pagecreatedByArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};


export type CMS_website_pagewebsiteArgs = {
  filter?: InputMaybe<CMS_websiteFilter>;
};

export type CMS_website_pageAggregateResult = {
  __typename?: 'CMS_website_pageAggregateResult';
  authorAliasMax?: Maybe<Scalars['String']>;
  authorAliasMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  lastPublishMax?: Maybe<Scalars['DateTime']>;
  lastPublishMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  pathMax?: Maybe<Scalars['String']>;
  pathMin?: Maybe<Scalars['String']>;
  thumbAltMax?: Maybe<Scalars['String']>;
  thumbAltMin?: Maybe<Scalars['String']>;
  thumbMax?: Maybe<Scalars['String']>;
  thumbMin?: Maybe<Scalars['String']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
};

export type CMS_website_pageFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_website_pageFilter>>>;
  authorAlias?: InputMaybe<StringRegExpFilter>;
  description?: InputMaybe<StringRegExpFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_website_pageHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  keywords?: InputMaybe<StringRegExpFilter>;
  lastPublish?: InputMaybe<DateTimeFilter>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CMS_website_pageFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_website_pageFilter>>>;
  path?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  published?: InputMaybe<Scalars['Boolean']>;
  title?: InputMaybe<StringRegExpFilter>;
};

export enum CMS_website_pageHasFilter {
  authorAlias = 'authorAlias',
  blocks = 'blocks',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  guid = 'guid',
  isDeleted = 'isDeleted',
  keywords = 'keywords',
  lastPublish = 'lastPublish',
  name = 'name',
  path = 'path',
  published = 'published',
  thumb = 'thumb',
  thumbAlt = 'thumbAlt',
  title = 'title',
  website = 'website'
}

export type CMS_website_pageOrder = {
  asc?: InputMaybe<CMS_website_pageOrderable>;
  desc?: InputMaybe<CMS_website_pageOrderable>;
  then?: InputMaybe<CMS_website_pageOrder>;
};

export enum CMS_website_pageOrderable {
  authorAlias = 'authorAlias',
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  lastPublish = 'lastPublish',
  name = 'name',
  path = 'path',
  thumb = 'thumb',
  thumbAlt = 'thumbAlt',
  title = 'title'
}

export type CMS_website_pagePatch = {
  authorAlias?: InputMaybe<Scalars['String']>;
  blocks?: InputMaybe<Array<CMS_website_page_blockRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  keywords?: InputMaybe<Array<Scalars['String']>>;
  lastPublish?: InputMaybe<Scalars['DateTime']>;
  name?: InputMaybe<Scalars['String']>;
  path?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['Boolean']>;
  thumb?: InputMaybe<Scalars['String']>;
  thumbAlt?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<CMS_websiteRef>;
};

export type CMS_website_pageRef = {
  authorAlias?: InputMaybe<Scalars['String']>;
  blocks?: InputMaybe<Array<CMS_website_page_blockRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  keywords?: InputMaybe<Array<Scalars['String']>>;
  lastPublish?: InputMaybe<Scalars['DateTime']>;
  name?: InputMaybe<Scalars['String']>;
  path?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['Boolean']>;
  thumb?: InputMaybe<Scalars['String']>;
  thumbAlt?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<CMS_websiteRef>;
};

export type CMS_website_page_block = {
  __typename?: 'CMS_website_page_block';
  combo?: Maybe<CMS_website_page_blockCombo>;
  content: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy: CMS_account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  image?: Maybe<CMS_website_page_blockImage>;
  index: Scalars['Int'];
  isDeleted: Scalars['Boolean'];
  link?: Maybe<CMS_website_page_blockLink>;
  page: CMS_website_page;
  text?: Maybe<CMS_website_page_blockText>;
  title?: Maybe<CMS_website_page_blockTitle>;
  type: CMS_website_page_blockType;
};


export type CMS_website_page_blockcomboArgs = {
  filter?: InputMaybe<CMS_website_page_blockComboFilter>;
};


export type CMS_website_page_blockcreatedByArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};


export type CMS_website_page_blockimageArgs = {
  filter?: InputMaybe<CMS_website_page_blockImageFilter>;
};


export type CMS_website_page_blocklinkArgs = {
  filter?: InputMaybe<CMS_website_page_blockLinkFilter>;
};


export type CMS_website_page_blockpageArgs = {
  filter?: InputMaybe<CMS_website_pageFilter>;
};


export type CMS_website_page_blocktextArgs = {
  filter?: InputMaybe<CMS_website_page_blockTextFilter>;
};


export type CMS_website_page_blocktitleArgs = {
  filter?: InputMaybe<CMS_website_page_blockTitleFilter>;
};

export type CMS_website_page_blockAggregateResult = {
  __typename?: 'CMS_website_page_blockAggregateResult';
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type CMS_website_page_blockCombo = {
  __typename?: 'CMS_website_page_blockCombo';
  guid: Scalars['String'];
  id: Scalars['ID'];
  pageBlock: CMS_website_page_block;
  type: CMS_website_page_blockComboType;
};


export type CMS_website_page_blockCombopageBlockArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
};

export type CMS_website_page_blockComboAggregateResult = {
  __typename?: 'CMS_website_page_blockComboAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type CMS_website_page_blockComboFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_website_page_blockComboFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_website_page_blockComboHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_website_page_blockComboFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_website_page_blockComboFilter>>>;
};

export enum CMS_website_page_blockComboHasFilter {
  guid = 'guid',
  pageBlock = 'pageBlock',
  type = 'type'
}

export type CMS_website_page_blockComboOrder = {
  asc?: InputMaybe<CMS_website_page_blockComboOrderable>;
  desc?: InputMaybe<CMS_website_page_blockComboOrderable>;
  then?: InputMaybe<CMS_website_page_blockComboOrder>;
};

export enum CMS_website_page_blockComboOrderable {
  guid = 'guid'
}

export type CMS_website_page_blockComboPatch = {
  guid?: InputMaybe<Scalars['String']>;
  pageBlock?: InputMaybe<CMS_website_page_blockRef>;
  type?: InputMaybe<CMS_website_page_blockComboType>;
};

export type CMS_website_page_blockComboRef = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  pageBlock?: InputMaybe<CMS_website_page_blockRef>;
  type?: InputMaybe<CMS_website_page_blockComboType>;
};

export enum CMS_website_page_blockComboType {
  IMAGE_LEFT = 'IMAGE_LEFT',
  IMAGE_RIGHT = 'IMAGE_RIGHT'
}

export type CMS_website_page_blockFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_website_page_blockFilter>>>;
  content?: InputMaybe<StringRegExpFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_website_page_blockHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<CMS_website_page_blockFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_website_page_blockFilter>>>;
  type?: InputMaybe<CMS_website_page_blockType_exact>;
};

export enum CMS_website_page_blockHasFilter {
  combo = 'combo',
  content = 'content',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  image = 'image',
  index = 'index',
  isDeleted = 'isDeleted',
  link = 'link',
  page = 'page',
  text = 'text',
  title = 'title',
  type = 'type'
}

export type CMS_website_page_blockImage = {
  __typename?: 'CMS_website_page_blockImage';
  alt: Scalars['String'];
  file?: Maybe<CMS_file>;
  format: CMS_website_page_blockImageFormat;
  guid: Scalars['String'];
  id: Scalars['ID'];
  orientation: CMS_website_page_blockImageOrientation;
  pageBlock: CMS_website_page_block;
  src: Scalars['String'];
};


export type CMS_website_page_blockImagefileArgs = {
  filter?: InputMaybe<CMS_fileFilter>;
};


export type CMS_website_page_blockImagepageBlockArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
};

export type CMS_website_page_blockImageAggregateResult = {
  __typename?: 'CMS_website_page_blockImageAggregateResult';
  altMax?: Maybe<Scalars['String']>;
  altMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  srcMax?: Maybe<Scalars['String']>;
  srcMin?: Maybe<Scalars['String']>;
};

export type CMS_website_page_blockImageFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_website_page_blockImageFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_website_page_blockImageHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_website_page_blockImageFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_website_page_blockImageFilter>>>;
};

export enum CMS_website_page_blockImageFormat {
  RECTANGLE = 'RECTANGLE',
  SQUARE = 'SQUARE'
}

export enum CMS_website_page_blockImageHasFilter {
  alt = 'alt',
  file = 'file',
  format = 'format',
  guid = 'guid',
  orientation = 'orientation',
  pageBlock = 'pageBlock',
  src = 'src'
}

export type CMS_website_page_blockImageOrder = {
  asc?: InputMaybe<CMS_website_page_blockImageOrderable>;
  desc?: InputMaybe<CMS_website_page_blockImageOrderable>;
  then?: InputMaybe<CMS_website_page_blockImageOrder>;
};

export enum CMS_website_page_blockImageOrderable {
  alt = 'alt',
  guid = 'guid',
  src = 'src'
}

export enum CMS_website_page_blockImageOrientation {
  HORIZONTAL = 'HORIZONTAL',
  VERTICAL = 'VERTICAL'
}

export type CMS_website_page_blockImagePatch = {
  alt?: InputMaybe<Scalars['String']>;
  file?: InputMaybe<CMS_fileRef>;
  format?: InputMaybe<CMS_website_page_blockImageFormat>;
  guid?: InputMaybe<Scalars['String']>;
  orientation?: InputMaybe<CMS_website_page_blockImageOrientation>;
  pageBlock?: InputMaybe<CMS_website_page_blockRef>;
  src?: InputMaybe<Scalars['String']>;
};

export type CMS_website_page_blockImageRef = {
  alt?: InputMaybe<Scalars['String']>;
  file?: InputMaybe<CMS_fileRef>;
  format?: InputMaybe<CMS_website_page_blockImageFormat>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  orientation?: InputMaybe<CMS_website_page_blockImageOrientation>;
  pageBlock?: InputMaybe<CMS_website_page_blockRef>;
  src?: InputMaybe<Scalars['String']>;
};

export type CMS_website_page_blockLink = {
  __typename?: 'CMS_website_page_blockLink';
  guid: Scalars['String'];
  id: Scalars['ID'];
  pageBlock: CMS_website_page_block;
  text: Scalars['String'];
  type: CMS_website_page_blockLinkType;
  url: Scalars['String'];
};


export type CMS_website_page_blockLinkpageBlockArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
};

export type CMS_website_page_blockLinkAggregateResult = {
  __typename?: 'CMS_website_page_blockLinkAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  textMax?: Maybe<Scalars['String']>;
  textMin?: Maybe<Scalars['String']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
};

export type CMS_website_page_blockLinkFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_website_page_blockLinkFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_website_page_blockLinkHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_website_page_blockLinkFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_website_page_blockLinkFilter>>>;
};

export enum CMS_website_page_blockLinkHasFilter {
  guid = 'guid',
  pageBlock = 'pageBlock',
  text = 'text',
  type = 'type',
  url = 'url'
}

export type CMS_website_page_blockLinkOrder = {
  asc?: InputMaybe<CMS_website_page_blockLinkOrderable>;
  desc?: InputMaybe<CMS_website_page_blockLinkOrderable>;
  then?: InputMaybe<CMS_website_page_blockLinkOrder>;
};

export enum CMS_website_page_blockLinkOrderable {
  guid = 'guid',
  text = 'text',
  url = 'url'
}

export type CMS_website_page_blockLinkPatch = {
  guid?: InputMaybe<Scalars['String']>;
  pageBlock?: InputMaybe<CMS_website_page_blockRef>;
  text?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<CMS_website_page_blockLinkType>;
  url?: InputMaybe<Scalars['String']>;
};

export type CMS_website_page_blockLinkRef = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  pageBlock?: InputMaybe<CMS_website_page_blockRef>;
  text?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<CMS_website_page_blockLinkType>;
  url?: InputMaybe<Scalars['String']>;
};

export enum CMS_website_page_blockLinkType {
  BUTTON = 'BUTTON',
  LINK = 'LINK'
}

export type CMS_website_page_blockOrder = {
  asc?: InputMaybe<CMS_website_page_blockOrderable>;
  desc?: InputMaybe<CMS_website_page_blockOrderable>;
  then?: InputMaybe<CMS_website_page_blockOrder>;
};

export enum CMS_website_page_blockOrderable {
  content = 'content',
  createdAt = 'createdAt',
  guid = 'guid',
  index = 'index'
}

export type CMS_website_page_blockPatch = {
  combo?: InputMaybe<CMS_website_page_blockComboRef>;
  content?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<CMS_website_page_blockImageRef>;
  index?: InputMaybe<Scalars['Int']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  link?: InputMaybe<CMS_website_page_blockLinkRef>;
  page?: InputMaybe<CMS_website_pageRef>;
  text?: InputMaybe<CMS_website_page_blockTextRef>;
  title?: InputMaybe<CMS_website_page_blockTitleRef>;
  type?: InputMaybe<CMS_website_page_blockType>;
};

export type CMS_website_page_blockRef = {
  combo?: InputMaybe<CMS_website_page_blockComboRef>;
  content?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CMS_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  image?: InputMaybe<CMS_website_page_blockImageRef>;
  index?: InputMaybe<Scalars['Int']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  link?: InputMaybe<CMS_website_page_blockLinkRef>;
  page?: InputMaybe<CMS_website_pageRef>;
  text?: InputMaybe<CMS_website_page_blockTextRef>;
  title?: InputMaybe<CMS_website_page_blockTitleRef>;
  type?: InputMaybe<CMS_website_page_blockType>;
};

export type CMS_website_page_blockText = {
  __typename?: 'CMS_website_page_blockText';
  content: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  pageBlock: CMS_website_page_block;
  type: CMS_website_page_blockTextType;
};


export type CMS_website_page_blockTextpageBlockArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
};

export type CMS_website_page_blockTextAggregateResult = {
  __typename?: 'CMS_website_page_blockTextAggregateResult';
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type CMS_website_page_blockTextFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_website_page_blockTextFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_website_page_blockTextHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_website_page_blockTextFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_website_page_blockTextFilter>>>;
};

export enum CMS_website_page_blockTextHasFilter {
  content = 'content',
  guid = 'guid',
  pageBlock = 'pageBlock',
  type = 'type'
}

export type CMS_website_page_blockTextOrder = {
  asc?: InputMaybe<CMS_website_page_blockTextOrderable>;
  desc?: InputMaybe<CMS_website_page_blockTextOrderable>;
  then?: InputMaybe<CMS_website_page_blockTextOrder>;
};

export enum CMS_website_page_blockTextOrderable {
  content = 'content',
  guid = 'guid'
}

export type CMS_website_page_blockTextPatch = {
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  pageBlock?: InputMaybe<CMS_website_page_blockRef>;
  type?: InputMaybe<CMS_website_page_blockTextType>;
};

export type CMS_website_page_blockTextRef = {
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  pageBlock?: InputMaybe<CMS_website_page_blockRef>;
  type?: InputMaybe<CMS_website_page_blockTextType>;
};

export enum CMS_website_page_blockTextType {
  HTML = 'HTML',
  TEXT = 'TEXT'
}

export type CMS_website_page_blockTitle = {
  __typename?: 'CMS_website_page_blockTitle';
  content: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  pageBlock: CMS_website_page_block;
  type: CMS_website_page_blockTitleType;
};


export type CMS_website_page_blockTitlepageBlockArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
};

export type CMS_website_page_blockTitleAggregateResult = {
  __typename?: 'CMS_website_page_blockTitleAggregateResult';
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type CMS_website_page_blockTitleFilter = {
  and?: InputMaybe<Array<InputMaybe<CMS_website_page_blockTitleFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CMS_website_page_blockTitleHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CMS_website_page_blockTitleFilter>;
  or?: InputMaybe<Array<InputMaybe<CMS_website_page_blockTitleFilter>>>;
};

export enum CMS_website_page_blockTitleHasFilter {
  content = 'content',
  guid = 'guid',
  pageBlock = 'pageBlock',
  type = 'type'
}

export type CMS_website_page_blockTitleOrder = {
  asc?: InputMaybe<CMS_website_page_blockTitleOrderable>;
  desc?: InputMaybe<CMS_website_page_blockTitleOrderable>;
  then?: InputMaybe<CMS_website_page_blockTitleOrder>;
};

export enum CMS_website_page_blockTitleOrderable {
  content = 'content',
  guid = 'guid'
}

export type CMS_website_page_blockTitlePatch = {
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  pageBlock?: InputMaybe<CMS_website_page_blockRef>;
  type?: InputMaybe<CMS_website_page_blockTitleType>;
};

export type CMS_website_page_blockTitleRef = {
  content?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  pageBlock?: InputMaybe<CMS_website_page_blockRef>;
  type?: InputMaybe<CMS_website_page_blockTitleType>;
};

export enum CMS_website_page_blockTitleType {
  H1 = 'H1',
  H2 = 'H2',
  H3 = 'H3',
  H4 = 'H4',
  H5 = 'H5',
  H6 = 'H6'
}

export enum CMS_website_page_blockType {
  COMBO = 'COMBO',
  IMAGE = 'IMAGE',
  LINK = 'LINK',
  TABLE = 'TABLE',
  TEXT = 'TEXT',
  TITLE = 'TITLE',
  VIDEO = 'VIDEO'
}

export type CMS_website_page_blockType_exact = {
  between?: InputMaybe<CMS_website_page_blockType>;
  eq?: InputMaybe<CMS_website_page_blockType>;
  ge?: InputMaybe<CMS_website_page_blockType>;
  gt?: InputMaybe<CMS_website_page_blockType>;
  in?: InputMaybe<Array<InputMaybe<CMS_website_page_blockType>>>;
  le?: InputMaybe<CMS_website_page_blockType>;
  lt?: InputMaybe<CMS_website_page_blockType>;
};

export type CRM_PACKAGE = {
  __typename?: 'CRM_PACKAGE';
  accounts: Array<CRM_account>;
  accountsAggregate?: Maybe<CRM_accountAggregateResult>;
  actions: Array<CRM_action>;
  actionsAggregate?: Maybe<CRM_actionAggregateResult>;
  areas: Array<CRM_area>;
  areasAggregate?: Maybe<CRM_areaAggregateResult>;
  campaignContactEvents: Array<CRM_campaignContactEvent>;
  campaignContactEventsAggregate?: Maybe<CRM_campaignContactEventAggregateResult>;
  campaignContacts: Array<CRM_campaignContact>;
  campaignContactsAggregate?: Maybe<CRM_campaignContactAggregateResult>;
  campaignDelivers: Array<CRM_campaignDeliver>;
  campaignDeliversAggregate?: Maybe<CRM_campaignDeliverAggregateResult>;
  campaignEmailTemplates: Array<CRM_campaignEmailTemplate>;
  campaignEmailTemplatesAggregate?: Maybe<CRM_campaignEmailTemplateAggregateResult>;
  campaigns: Array<CRM_campaign>;
  campaignsAggregate?: Maybe<CRM_campaignAggregateResult>;
  contactActions: Array<CRM_contactAction>;
  contactActionsAggregate?: Maybe<CRM_contactActionAggregateResult>;
  contactInputSubStatuses: Array<CRM_contactInputSubStatus>;
  contactInputSubStatusesAggregate?: Maybe<CRM_contactInputSubStatusAggregateResult>;
  contactLists: Array<CRM_contactList>;
  contactListsAggregate?: Maybe<CRM_contactListAggregateResult>;
  contacts: Array<CRM_contact>;
  contactsAggregate?: Maybe<CRM_contactAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<Account>;
  emailTemplates: Array<CRM_emailTemplate>;
  emailTemplatesAggregate?: Maybe<CRM_emailTemplateAggregateResult>;
  events: Array<CRM_event>;
  eventsAggregate?: Maybe<CRM_eventAggregateResult>;
  funnels: Array<CRM_funnel>;
  funnelsAggregate?: Maybe<CRM_funnelAggregateResult>;
  id: Scalars['ID'];
  inputs: Array<CRM_contactInput>;
  inputsAggregate?: Maybe<CRM_contactInputAggregateResult>;
  name: Scalars['String'];
  opportunityLogs: Array<CRM_opportunityLog>;
  opportunityLogsAggregate?: Maybe<CRM_opportunityLogAggregateResult>;
  opportunityPaymentPlanItems: Array<CRM_opportunityPaymentPlanItem>;
  opportunityPaymentPlanItemsAggregate?: Maybe<CRM_opportunityPaymentPlanItemAggregateResult>;
  org360: Org360;
  overview: CRM_overview;
  proposals: Array<CRM_proposal>;
  proposalsAggregate?: Maybe<CRM_proposalAggregateResult>;
  roles: Array<Maybe<CRM_role>>;
  rolesAggregate?: Maybe<CRM_roleAggregateResult>;
  socialMediaCampaignMedia: Array<CRM_socialMediaCampaign_media>;
  socialMediaCampaignMediaAggregate?: Maybe<CRM_socialMediaCampaign_mediaAggregateResult>;
  socialMediaCampaignPosts: Array<CRM_socialMediaCampaign_post>;
  socialMediaCampaignPostsAggregate?: Maybe<CRM_socialMediaCampaign_postAggregateResult>;
  socialMediaCampaigns: Array<CRM_socialMediaCampaign>;
  socialMediaCampaignsAggregate?: Maybe<CRM_socialMediaCampaignAggregateResult>;
  sourceCategories: Array<CRM_sourceCategory>;
  sourceCategoriesAggregate?: Maybe<CRM_sourceCategoryAggregateResult>;
  sourceFormEmailTemplates: Array<CRM_sourceForm_emailTemplate>;
  sourceFormEmailTemplatesAggregate?: Maybe<CRM_sourceForm_emailTemplateAggregateResult>;
  sourceFormReasons: Array<CRM_sourceFormReason>;
  sourceFormReasonsAggregate?: Maybe<CRM_sourceFormReasonAggregateResult>;
  sourceForms: Array<CRM_sourceForm>;
  sourceFormsAggregate?: Maybe<CRM_sourceFormAggregateResult>;
  sources: Array<CRM_source>;
  sourcesAggregate?: Maybe<CRM_sourceAggregateResult>;
  teamAccounts: Array<CRM_teamAccount>;
  teamAccountsAggregate?: Maybe<CRM_teamAccountAggregateResult>;
  teamActionBoardEffects: Array<CRM_teamActionBoardEffect>;
  teamActionBoardEffectsAggregate?: Maybe<CRM_teamActionBoardEffectAggregateResult>;
  teamActions: Array<CRM_teamAction>;
  teamActionsAggregate?: Maybe<CRM_teamActionAggregateResult>;
  teamBoardItems: Array<CRM_teamBoardItem>;
  teamBoardItemsAggregate?: Maybe<CRM_teamBoardItemAggregateResult>;
  teamBoardStatuses: Array<CRM_teamBoardStatus>;
  teamBoardStatusesAggregate?: Maybe<CRM_teamBoardStatusAggregateResult>;
  teamBoardSubStatuses: Array<CRM_teamBoardSubStatus>;
  teamBoardSubStatusesAggregate?: Maybe<CRM_teamBoardSubStatusAggregateResult>;
  teamBoardTasks: Array<CRM_teamBoardTask>;
  teamBoardTasksAggregate?: Maybe<CRM_teamBoardTaskAggregateResult>;
  teamBoards: Array<CRM_teamBoard>;
  teamBoardsAggregate?: Maybe<CRM_teamBoardAggregateResult>;
  teams: Array<CRM_team>;
  teamsAggregate?: Maybe<CRM_teamAggregateResult>;
  updatedAt: Scalars['DateTime'];
};


export type CRM_PACKAGEaccountsArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_PACKAGEaccountsAggregateArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_PACKAGEactionsArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionOrder>;
};


export type CRM_PACKAGEactionsAggregateArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};


export type CRM_PACKAGEareasArgs = {
  filter?: InputMaybe<CRM_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_areaOrder>;
};


export type CRM_PACKAGEareasAggregateArgs = {
  filter?: InputMaybe<CRM_areaFilter>;
};


export type CRM_PACKAGEcampaignContactEventsArgs = {
  filter?: InputMaybe<CRM_campaignContactEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactEventOrder>;
};


export type CRM_PACKAGEcampaignContactEventsAggregateArgs = {
  filter?: InputMaybe<CRM_campaignContactEventFilter>;
};


export type CRM_PACKAGEcampaignContactsArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactOrder>;
};


export type CRM_PACKAGEcampaignContactsAggregateArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
};


export type CRM_PACKAGEcampaignDeliversArgs = {
  filter?: InputMaybe<CRM_campaignDeliverFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignDeliverOrder>;
};


export type CRM_PACKAGEcampaignDeliversAggregateArgs = {
  filter?: InputMaybe<CRM_campaignDeliverFilter>;
};


export type CRM_PACKAGEcampaignEmailTemplatesArgs = {
  filter?: InputMaybe<CRM_campaignEmailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignEmailTemplateOrder>;
};


export type CRM_PACKAGEcampaignEmailTemplatesAggregateArgs = {
  filter?: InputMaybe<CRM_campaignEmailTemplateFilter>;
};


export type CRM_PACKAGEcampaignsArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignOrder>;
};


export type CRM_PACKAGEcampaignsAggregateArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
};


export type CRM_PACKAGEcontactActionsArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionOrder>;
};


export type CRM_PACKAGEcontactActionsAggregateArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};


export type CRM_PACKAGEcontactInputSubStatusesArgs = {
  filter?: InputMaybe<CRM_contactInputSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputSubStatusOrder>;
};


export type CRM_PACKAGEcontactInputSubStatusesAggregateArgs = {
  filter?: InputMaybe<CRM_contactInputSubStatusFilter>;
};


export type CRM_PACKAGEcontactListsArgs = {
  filter?: InputMaybe<CRM_contactListFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactListOrder>;
};


export type CRM_PACKAGEcontactListsAggregateArgs = {
  filter?: InputMaybe<CRM_contactListFilter>;
};


export type CRM_PACKAGEcontactsArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_PACKAGEcontactsAggregateArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type CRM_PACKAGEcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type CRM_PACKAGEemailTemplatesArgs = {
  filter?: InputMaybe<CRM_emailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_PACKAGEemailTemplatesAggregateArgs = {
  filter?: InputMaybe<CRM_emailTemplateFilter>;
};


export type CRM_PACKAGEeventsArgs = {
  filter?: InputMaybe<CRM_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_PACKAGEeventsAggregateArgs = {
  filter?: InputMaybe<CRM_eventFilter>;
};


export type CRM_PACKAGEfunnelsArgs = {
  filter?: InputMaybe<CRM_funnelFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelOrder>;
};


export type CRM_PACKAGEfunnelsAggregateArgs = {
  filter?: InputMaybe<CRM_funnelFilter>;
};


export type CRM_PACKAGEinputsArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};


export type CRM_PACKAGEinputsAggregateArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_PACKAGEopportunityLogsArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityLogOrder>;
};


export type CRM_PACKAGEopportunityLogsAggregateArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
};


export type CRM_PACKAGEopportunityPaymentPlanItemsArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityPaymentPlanItemOrder>;
};


export type CRM_PACKAGEopportunityPaymentPlanItemsAggregateArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
};


export type CRM_PACKAGEorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type CRM_PACKAGEoverviewArgs = {
  filter?: InputMaybe<CRM_overviewFilter>;
};


export type CRM_PACKAGEproposalsArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_PACKAGEproposalsAggregateArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
};


export type CRM_PACKAGErolesArgs = {
  filter?: InputMaybe<CRM_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_PACKAGErolesAggregateArgs = {
  filter?: InputMaybe<CRM_roleFilter>;
};


export type CRM_PACKAGEsocialMediaCampaignMediaArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_mediaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_mediaOrder>;
};


export type CRM_PACKAGEsocialMediaCampaignMediaAggregateArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_mediaFilter>;
};


export type CRM_PACKAGEsocialMediaCampaignPostsArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_postFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_postOrder>;
};


export type CRM_PACKAGEsocialMediaCampaignPostsAggregateArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_postFilter>;
};


export type CRM_PACKAGEsocialMediaCampaignsArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaignOrder>;
};


export type CRM_PACKAGEsocialMediaCampaignsAggregateArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaignFilter>;
};


export type CRM_PACKAGEsourceCategoriesArgs = {
  filter?: InputMaybe<CRM_sourceCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceCategoryOrder>;
};


export type CRM_PACKAGEsourceCategoriesAggregateArgs = {
  filter?: InputMaybe<CRM_sourceCategoryFilter>;
};


export type CRM_PACKAGEsourceFormEmailTemplatesArgs = {
  filter?: InputMaybe<CRM_sourceForm_emailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceForm_emailTemplateOrder>;
};


export type CRM_PACKAGEsourceFormEmailTemplatesAggregateArgs = {
  filter?: InputMaybe<CRM_sourceForm_emailTemplateFilter>;
};


export type CRM_PACKAGEsourceFormReasonsArgs = {
  filter?: InputMaybe<CRM_sourceFormReasonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormReasonOrder>;
};


export type CRM_PACKAGEsourceFormReasonsAggregateArgs = {
  filter?: InputMaybe<CRM_sourceFormReasonFilter>;
};


export type CRM_PACKAGEsourceFormsArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormOrder>;
};


export type CRM_PACKAGEsourceFormsAggregateArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
};


export type CRM_PACKAGEsourcesArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceOrder>;
};


export type CRM_PACKAGEsourcesAggregateArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
};


export type CRM_PACKAGEteamAccountsArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamAccountOrder>;
};


export type CRM_PACKAGEteamAccountsAggregateArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
};


export type CRM_PACKAGEteamActionBoardEffectsArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionBoardEffectOrder>;
};


export type CRM_PACKAGEteamActionBoardEffectsAggregateArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
};


export type CRM_PACKAGEteamActionsArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionOrder>;
};


export type CRM_PACKAGEteamActionsAggregateArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
};


export type CRM_PACKAGEteamBoardItemsArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardItemOrder>;
};


export type CRM_PACKAGEteamBoardItemsAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
};


export type CRM_PACKAGEteamBoardStatusesArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardStatusOrder>;
};


export type CRM_PACKAGEteamBoardStatusesAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
};


export type CRM_PACKAGEteamBoardSubStatusesArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardSubStatusOrder>;
};


export type CRM_PACKAGEteamBoardSubStatusesAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
};


export type CRM_PACKAGEteamBoardTasksArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardTaskOrder>;
};


export type CRM_PACKAGEteamBoardTasksAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
};


export type CRM_PACKAGEteamBoardsArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardOrder>;
};


export type CRM_PACKAGEteamBoardsAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
};


export type CRM_PACKAGEteamsArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamOrder>;
};


export type CRM_PACKAGEteamsAggregateArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
};

export type CRM_PACKAGEAggregateResult = {
  __typename?: 'CRM_PACKAGEAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type CRM_PACKAGEFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_PACKAGEFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_PACKAGEHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_PACKAGEFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_PACKAGEFilter>>>;
};

export enum CRM_PACKAGEHasFilter {
  accounts = 'accounts',
  actions = 'actions',
  areas = 'areas',
  campaignContactEvents = 'campaignContactEvents',
  campaignContacts = 'campaignContacts',
  campaignDelivers = 'campaignDelivers',
  campaignEmailTemplates = 'campaignEmailTemplates',
  campaigns = 'campaigns',
  contactActions = 'contactActions',
  contactInputSubStatuses = 'contactInputSubStatuses',
  contactLists = 'contactLists',
  contacts = 'contacts',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  emailTemplates = 'emailTemplates',
  events = 'events',
  funnels = 'funnels',
  inputs = 'inputs',
  name = 'name',
  opportunityLogs = 'opportunityLogs',
  opportunityPaymentPlanItems = 'opportunityPaymentPlanItems',
  org360 = 'org360',
  overview = 'overview',
  proposals = 'proposals',
  roles = 'roles',
  socialMediaCampaignMedia = 'socialMediaCampaignMedia',
  socialMediaCampaignPosts = 'socialMediaCampaignPosts',
  socialMediaCampaigns = 'socialMediaCampaigns',
  sourceCategories = 'sourceCategories',
  sourceFormEmailTemplates = 'sourceFormEmailTemplates',
  sourceFormReasons = 'sourceFormReasons',
  sourceForms = 'sourceForms',
  sources = 'sources',
  teamAccounts = 'teamAccounts',
  teamActionBoardEffects = 'teamActionBoardEffects',
  teamActions = 'teamActions',
  teamBoardItems = 'teamBoardItems',
  teamBoardStatuses = 'teamBoardStatuses',
  teamBoardSubStatuses = 'teamBoardSubStatuses',
  teamBoardTasks = 'teamBoardTasks',
  teamBoards = 'teamBoards',
  teams = 'teams',
  updatedAt = 'updatedAt'
}

export type CRM_PACKAGEOrder = {
  asc?: InputMaybe<CRM_PACKAGEOrderable>;
  desc?: InputMaybe<CRM_PACKAGEOrderable>;
  then?: InputMaybe<CRM_PACKAGEOrder>;
};

export enum CRM_PACKAGEOrderable {
  createdAt = 'createdAt',
  name = 'name',
  updatedAt = 'updatedAt'
}

export type CRM_PACKAGEPatch = {
  accounts?: InputMaybe<Array<CRM_accountRef>>;
  actions?: InputMaybe<Array<CRM_actionRef>>;
  areas?: InputMaybe<Array<CRM_areaRef>>;
  campaignContactEvents?: InputMaybe<Array<CRM_campaignContactEventRef>>;
  campaignContacts?: InputMaybe<Array<CRM_campaignContactRef>>;
  campaignDelivers?: InputMaybe<Array<CRM_campaignDeliverRef>>;
  campaignEmailTemplates?: InputMaybe<Array<CRM_campaignEmailTemplateRef>>;
  campaigns?: InputMaybe<Array<CRM_campaignRef>>;
  contactActions?: InputMaybe<Array<CRM_contactActionRef>>;
  contactInputSubStatuses?: InputMaybe<Array<CRM_contactInputSubStatusRef>>;
  contactLists?: InputMaybe<Array<CRM_contactListRef>>;
  contacts?: InputMaybe<Array<CRM_contactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  emailTemplates?: InputMaybe<Array<CRM_emailTemplateRef>>;
  events?: InputMaybe<Array<CRM_eventRef>>;
  funnels?: InputMaybe<Array<CRM_funnelRef>>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  name?: InputMaybe<Scalars['String']>;
  opportunityLogs?: InputMaybe<Array<CRM_opportunityLogRef>>;
  opportunityPaymentPlanItems?: InputMaybe<Array<CRM_opportunityPaymentPlanItemRef>>;
  org360?: InputMaybe<Org360Ref>;
  overview?: InputMaybe<CRM_overviewRef>;
  proposals?: InputMaybe<Array<CRM_proposalRef>>;
  roles?: InputMaybe<Array<InputMaybe<CRM_roleRef>>>;
  socialMediaCampaignMedia?: InputMaybe<Array<CRM_socialMediaCampaign_mediaRef>>;
  socialMediaCampaignPosts?: InputMaybe<Array<CRM_socialMediaCampaign_postRef>>;
  socialMediaCampaigns?: InputMaybe<Array<CRM_socialMediaCampaignRef>>;
  sourceCategories?: InputMaybe<Array<CRM_sourceCategoryRef>>;
  sourceFormEmailTemplates?: InputMaybe<Array<CRM_sourceForm_emailTemplateRef>>;
  sourceFormReasons?: InputMaybe<Array<CRM_sourceFormReasonRef>>;
  sourceForms?: InputMaybe<Array<CRM_sourceFormRef>>;
  sources?: InputMaybe<Array<CRM_sourceRef>>;
  teamAccounts?: InputMaybe<Array<CRM_teamAccountRef>>;
  teamActionBoardEffects?: InputMaybe<Array<CRM_teamActionBoardEffectRef>>;
  teamActions?: InputMaybe<Array<CRM_teamActionRef>>;
  teamBoardItems?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  teamBoardStatuses?: InputMaybe<Array<CRM_teamBoardStatusRef>>;
  teamBoardSubStatuses?: InputMaybe<Array<CRM_teamBoardSubStatusRef>>;
  teamBoardTasks?: InputMaybe<Array<CRM_teamBoardTaskRef>>;
  teamBoards?: InputMaybe<Array<CRM_teamBoardRef>>;
  teams?: InputMaybe<Array<CRM_teamRef>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CRM_PACKAGERef = {
  accounts?: InputMaybe<Array<CRM_accountRef>>;
  actions?: InputMaybe<Array<CRM_actionRef>>;
  areas?: InputMaybe<Array<CRM_areaRef>>;
  campaignContactEvents?: InputMaybe<Array<CRM_campaignContactEventRef>>;
  campaignContacts?: InputMaybe<Array<CRM_campaignContactRef>>;
  campaignDelivers?: InputMaybe<Array<CRM_campaignDeliverRef>>;
  campaignEmailTemplates?: InputMaybe<Array<CRM_campaignEmailTemplateRef>>;
  campaigns?: InputMaybe<Array<CRM_campaignRef>>;
  contactActions?: InputMaybe<Array<CRM_contactActionRef>>;
  contactInputSubStatuses?: InputMaybe<Array<CRM_contactInputSubStatusRef>>;
  contactLists?: InputMaybe<Array<CRM_contactListRef>>;
  contacts?: InputMaybe<Array<CRM_contactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  emailTemplates?: InputMaybe<Array<CRM_emailTemplateRef>>;
  events?: InputMaybe<Array<CRM_eventRef>>;
  funnels?: InputMaybe<Array<CRM_funnelRef>>;
  id?: InputMaybe<Scalars['ID']>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  name?: InputMaybe<Scalars['String']>;
  opportunityLogs?: InputMaybe<Array<CRM_opportunityLogRef>>;
  opportunityPaymentPlanItems?: InputMaybe<Array<CRM_opportunityPaymentPlanItemRef>>;
  org360?: InputMaybe<Org360Ref>;
  overview?: InputMaybe<CRM_overviewRef>;
  proposals?: InputMaybe<Array<CRM_proposalRef>>;
  roles?: InputMaybe<Array<InputMaybe<CRM_roleRef>>>;
  socialMediaCampaignMedia?: InputMaybe<Array<CRM_socialMediaCampaign_mediaRef>>;
  socialMediaCampaignPosts?: InputMaybe<Array<CRM_socialMediaCampaign_postRef>>;
  socialMediaCampaigns?: InputMaybe<Array<CRM_socialMediaCampaignRef>>;
  sourceCategories?: InputMaybe<Array<CRM_sourceCategoryRef>>;
  sourceFormEmailTemplates?: InputMaybe<Array<CRM_sourceForm_emailTemplateRef>>;
  sourceFormReasons?: InputMaybe<Array<CRM_sourceFormReasonRef>>;
  sourceForms?: InputMaybe<Array<CRM_sourceFormRef>>;
  sources?: InputMaybe<Array<CRM_sourceRef>>;
  teamAccounts?: InputMaybe<Array<CRM_teamAccountRef>>;
  teamActionBoardEffects?: InputMaybe<Array<CRM_teamActionBoardEffectRef>>;
  teamActions?: InputMaybe<Array<CRM_teamActionRef>>;
  teamBoardItems?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  teamBoardStatuses?: InputMaybe<Array<CRM_teamBoardStatusRef>>;
  teamBoardSubStatuses?: InputMaybe<Array<CRM_teamBoardSubStatusRef>>;
  teamBoardTasks?: InputMaybe<Array<CRM_teamBoardTaskRef>>;
  teamBoards?: InputMaybe<Array<CRM_teamBoardRef>>;
  teams?: InputMaybe<Array<CRM_teamRef>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CRM_account = {
  __typename?: 'CRM_account';
  account: Account;
  assignedContacts: Array<Maybe<CRM_contact>>;
  assignedContactsAggregate?: Maybe<CRM_contactAggregateResult>;
  contactsTableColumns: Array<CRM_accountContactsTableColumn>;
  contactsTableColumnsAggregate?: Maybe<CRM_accountContactsTableColumnAggregateResult>;
  contactsTableFilters: Array<CRM_accountContactsTableFilter>;
  contactsTableFiltersAggregate?: Maybe<CRM_accountContactsTableFilterAggregateResult>;
  createdBy: Account;
  createdCampaigns: Array<Maybe<CRM_campaign>>;
  createdCampaignsAggregate?: Maybe<CRM_campaignAggregateResult>;
  events: Array<CRM_accountEvent>;
  eventsAggregate?: Maybe<CRM_accountEventAggregateResult>;
  id: Scalars['ID'];
  org360: Org360;
  package: CRM_PACKAGE;
  role: CRM_role;
  teams: Array<CRM_teamAccount>;
  teamsAggregate?: Maybe<CRM_teamAccountAggregateResult>;
};


export type CRM_accountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type CRM_accountassignedContactsArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_accountassignedContactsAggregateArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type CRM_accountcontactsTableColumnsArgs = {
  filter?: InputMaybe<CRM_accountContactsTableColumnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_accountContactsTableColumnOrder>;
};


export type CRM_accountcontactsTableColumnsAggregateArgs = {
  filter?: InputMaybe<CRM_accountContactsTableColumnFilter>;
};


export type CRM_accountcontactsTableFiltersArgs = {
  filter?: InputMaybe<CRM_accountContactsTableFilterFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_accountContactsTableFilterOrder>;
};


export type CRM_accountcontactsTableFiltersAggregateArgs = {
  filter?: InputMaybe<CRM_accountContactsTableFilterFilter>;
};


export type CRM_accountcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type CRM_accountcreatedCampaignsArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignOrder>;
};


export type CRM_accountcreatedCampaignsAggregateArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
};


export type CRM_accounteventsArgs = {
  filter?: InputMaybe<CRM_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_accounteventsAggregateArgs = {
  filter?: InputMaybe<CRM_accountEventFilter>;
};


export type CRM_accountorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type CRM_accountpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_accountroleArgs = {
  filter?: InputMaybe<CRM_roleFilter>;
};


export type CRM_accountteamsArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamAccountOrder>;
};


export type CRM_accountteamsAggregateArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
};

export type CRM_accountAggregateResult = {
  __typename?: 'CRM_accountAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_accountContactsTableColumn = {
  __typename?: 'CRM_accountContactsTableColumn';
  account: CRM_account;
  id: Scalars['ID'];
  index: Scalars['Int'];
  isChecked: Scalars['Boolean'];
  type: CRM_accountContactsTableColumnType;
};


export type CRM_accountContactsTableColumnaccountArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};

export type CRM_accountContactsTableColumnAggregateResult = {
  __typename?: 'CRM_accountContactsTableColumnAggregateResult';
  count?: Maybe<Scalars['Int']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type CRM_accountContactsTableColumnFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_accountContactsTableColumnFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_accountContactsTableColumnHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  not?: InputMaybe<CRM_accountContactsTableColumnFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_accountContactsTableColumnFilter>>>;
  type?: InputMaybe<CRM_accountContactsTableColumnType_hash>;
};

export enum CRM_accountContactsTableColumnHasFilter {
  account = 'account',
  index = 'index',
  isChecked = 'isChecked',
  type = 'type'
}

export type CRM_accountContactsTableColumnOrder = {
  asc?: InputMaybe<CRM_accountContactsTableColumnOrderable>;
  desc?: InputMaybe<CRM_accountContactsTableColumnOrderable>;
  then?: InputMaybe<CRM_accountContactsTableColumnOrder>;
};

export enum CRM_accountContactsTableColumnOrderable {
  index = 'index'
}

export type CRM_accountContactsTableColumnPatch = {
  account?: InputMaybe<CRM_accountRef>;
  index?: InputMaybe<Scalars['Int']>;
  isChecked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<CRM_accountContactsTableColumnType>;
};

export type CRM_accountContactsTableColumnRef = {
  account?: InputMaybe<CRM_accountRef>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  isChecked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<CRM_accountContactsTableColumnType>;
};

export enum CRM_accountContactsTableColumnType {
  ACTIONS_BAR = 'ACTIONS_BAR',
  AGENTS = 'AGENTS',
  AREAS = 'AREAS',
  COMERCIAL_NAME = 'COMERCIAL_NAME',
  CONTACT_TYPE = 'CONTACT_TYPE',
  EMAILS = 'EMAILS',
  EMPLOYMENT_TYPE = 'EMPLOYMENT_TYPE',
  GUID = 'GUID',
  INVOICES_LENGTH = 'INVOICES_LENGTH',
  JOB_POSITION_DEPARTMENT = 'JOB_POSITION_DEPARTMENT',
  JOB_POSITION_ROLE = 'JOB_POSITION_ROLE',
  NAME = 'NAME',
  OPPORTUNITY_LENGTH = 'OPPORTUNITY_LENGTH',
  ORGANIZATIONS = 'ORGANIZATIONS',
  PEOPLE = 'PEOPLE',
  PHONES = 'PHONES',
  SECTOR = 'SECTOR',
  SOURCES = 'SOURCES',
  STATUS = 'STATUS',
  SURNAME = 'SURNAME',
  YEARS_OF_EXPERIENCE = 'YEARS_OF_EXPERIENCE'
}

export type CRM_accountContactsTableColumnType_hash = {
  eq?: InputMaybe<CRM_accountContactsTableColumnType>;
  in?: InputMaybe<Array<InputMaybe<CRM_accountContactsTableColumnType>>>;
};

export type CRM_accountContactsTableFilter = {
  __typename?: 'CRM_accountContactsTableFilter';
  account: CRM_account;
  id: Scalars['ID'];
  index: Scalars['Int'];
  isChecked: Scalars['Boolean'];
  type: CRM_accountContactsTableFilterType;
};


export type CRM_accountContactsTableFilteraccountArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};

export type CRM_accountContactsTableFilterAggregateResult = {
  __typename?: 'CRM_accountContactsTableFilterAggregateResult';
  count?: Maybe<Scalars['Int']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type CRM_accountContactsTableFilterFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_accountContactsTableFilterFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_accountContactsTableFilterHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  not?: InputMaybe<CRM_accountContactsTableFilterFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_accountContactsTableFilterFilter>>>;
  type?: InputMaybe<CRM_accountContactsTableFilterType_hash>;
};

export enum CRM_accountContactsTableFilterHasFilter {
  account = 'account',
  index = 'index',
  isChecked = 'isChecked',
  type = 'type'
}

export type CRM_accountContactsTableFilterOrder = {
  asc?: InputMaybe<CRM_accountContactsTableFilterOrderable>;
  desc?: InputMaybe<CRM_accountContactsTableFilterOrderable>;
  then?: InputMaybe<CRM_accountContactsTableFilterOrder>;
};

export enum CRM_accountContactsTableFilterOrderable {
  index = 'index'
}

export type CRM_accountContactsTableFilterPatch = {
  account?: InputMaybe<CRM_accountRef>;
  index?: InputMaybe<Scalars['Int']>;
  isChecked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<CRM_accountContactsTableFilterType>;
};

export type CRM_accountContactsTableFilterRef = {
  account?: InputMaybe<CRM_accountRef>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  isChecked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<CRM_accountContactsTableFilterType>;
};

export enum CRM_accountContactsTableFilterType {
  AGENTS = 'AGENTS',
  AREAS = 'AREAS',
  EMPLOYMENT_TYPE = 'EMPLOYMENT_TYPE',
  FULL_SEARCH = 'FULL_SEARCH',
  INVOICES_LENGTH = 'INVOICES_LENGTH',
  JOB_POSITION = 'JOB_POSITION',
  JOB_POSITION_DEPARTMENT = 'JOB_POSITION_DEPARTMENT',
  JOB_POSITION_ROLE = 'JOB_POSITION_ROLE',
  OPPORTUNITY_LENGTH = 'OPPORTUNITY_LENGTH',
  SECTOR = 'SECTOR',
  SOURCES = 'SOURCES',
  STATUS = 'STATUS',
  YEARS_OF_EXPERIENCE = 'YEARS_OF_EXPERIENCE'
}

export type CRM_accountContactsTableFilterType_hash = {
  eq?: InputMaybe<CRM_accountContactsTableFilterType>;
  in?: InputMaybe<Array<InputMaybe<CRM_accountContactsTableFilterType>>>;
};

export type CRM_accountEvent = {
  __typename?: 'CRM_accountEvent';
  account: CRM_account;
  accountEvent: Account_event;
  event: CRM_event;
  id: Scalars['ID'];
};


export type CRM_accountEventaccountArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_accountEventaccountEventArgs = {
  filter?: InputMaybe<Account_eventFilter>;
};


export type CRM_accountEventeventArgs = {
  filter?: InputMaybe<CRM_eventFilter>;
};

export type CRM_accountEventAggregateResult = {
  __typename?: 'CRM_accountEventAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_accountEventFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_accountEventFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_accountEventHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_accountEventFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_accountEventFilter>>>;
};

export enum CRM_accountEventHasFilter {
  account = 'account',
  accountEvent = 'accountEvent',
  event = 'event'
}

export type CRM_accountEventPatch = {
  account?: InputMaybe<CRM_accountRef>;
  accountEvent?: InputMaybe<Account_eventRef>;
  event?: InputMaybe<CRM_eventRef>;
};

export type CRM_accountEventRef = {
  account?: InputMaybe<CRM_accountRef>;
  accountEvent?: InputMaybe<Account_eventRef>;
  event?: InputMaybe<CRM_eventRef>;
  id?: InputMaybe<Scalars['ID']>;
};

export type CRM_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_accountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_accountFilter>>>;
};

export enum CRM_accountHasFilter {
  account = 'account',
  assignedContacts = 'assignedContacts',
  contactsTableColumns = 'contactsTableColumns',
  contactsTableFilters = 'contactsTableFilters',
  createdBy = 'createdBy',
  createdCampaigns = 'createdCampaigns',
  events = 'events',
  org360 = 'org360',
  package = 'package',
  role = 'role',
  teams = 'teams'
}

export type CRM_accountPatch = {
  account?: InputMaybe<AccountRef>;
  assignedContacts?: InputMaybe<Array<InputMaybe<CRM_contactRef>>>;
  contactsTableColumns?: InputMaybe<Array<CRM_accountContactsTableColumnRef>>;
  contactsTableFilters?: InputMaybe<Array<CRM_accountContactsTableFilterRef>>;
  createdBy?: InputMaybe<AccountRef>;
  createdCampaigns?: InputMaybe<Array<InputMaybe<CRM_campaignRef>>>;
  events?: InputMaybe<Array<CRM_accountEventRef>>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<CRM_PACKAGERef>;
  role?: InputMaybe<CRM_roleRef>;
  teams?: InputMaybe<Array<CRM_teamAccountRef>>;
};

export type CRM_accountRef = {
  account?: InputMaybe<AccountRef>;
  assignedContacts?: InputMaybe<Array<InputMaybe<CRM_contactRef>>>;
  contactsTableColumns?: InputMaybe<Array<CRM_accountContactsTableColumnRef>>;
  contactsTableFilters?: InputMaybe<Array<CRM_accountContactsTableFilterRef>>;
  createdBy?: InputMaybe<AccountRef>;
  createdCampaigns?: InputMaybe<Array<InputMaybe<CRM_campaignRef>>>;
  events?: InputMaybe<Array<CRM_accountEventRef>>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<CRM_PACKAGERef>;
  role?: InputMaybe<CRM_roleRef>;
  teams?: InputMaybe<Array<CRM_teamAccountRef>>;
};

export type CRM_action = {
  __typename?: 'CRM_action';
  allowStatus: Array<CRM_contactInputStatus>;
  call?: Maybe<CRM_actionCall>;
  chat?: Maybe<CRM_actionChat>;
  createdAt: Scalars['DateTime'];
  email?: Maybe<CRM_actionEmail>;
  id: Scalars['ID'];
  jumpToStatus?: Maybe<CRM_contactInputStatus>;
  meeting?: Maybe<CRM_actionMeeting>;
  name: Scalars['String'];
  org360: Org360;
  package: CRM_PACKAGE;
  type: CRM_actionType;
};


export type CRM_actioncallArgs = {
  filter?: InputMaybe<CRM_actionCallFilter>;
};


export type CRM_actionchatArgs = {
  filter?: InputMaybe<CRM_actionChatFilter>;
};


export type CRM_actionemailArgs = {
  filter?: InputMaybe<CRM_actionEmailFilter>;
};


export type CRM_actionmeetingArgs = {
  filter?: InputMaybe<CRM_actionMeetingFilter>;
};


export type CRM_actionorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type CRM_actionpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_actionAggregateResult = {
  __typename?: 'CRM_actionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_actionCall = {
  __typename?: 'CRM_actionCall';
  action: CRM_action;
  id: Scalars['ID'];
};


export type CRM_actionCallactionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};

export type CRM_actionCallAggregateResult = {
  __typename?: 'CRM_actionCallAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_actionCallFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_actionCallFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_actionCallHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_actionCallFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_actionCallFilter>>>;
};

export enum CRM_actionCallHasFilter {
  action = 'action'
}

export type CRM_actionCallPatch = {
  action?: InputMaybe<CRM_actionRef>;
};

export type CRM_actionCallRef = {
  action?: InputMaybe<CRM_actionRef>;
  id?: InputMaybe<Scalars['ID']>;
};

export enum CRM_actionCallType {
  FACETIME = 'FACETIME',
  OTHER = 'OTHER',
  TELEGRAM = 'TELEGRAM',
  VIDEO = 'VIDEO',
  VOICE = 'VOICE',
  WHATSAPP = 'WHATSAPP'
}

export type CRM_actionChat = {
  __typename?: 'CRM_actionChat';
  action: CRM_action;
  body: Scalars['String'];
  id: Scalars['ID'];
  raw: Scalars['String'];
};


export type CRM_actionChatactionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};

export type CRM_actionChatAggregateResult = {
  __typename?: 'CRM_actionChatAggregateResult';
  bodyMax?: Maybe<Scalars['String']>;
  bodyMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  rawMax?: Maybe<Scalars['String']>;
  rawMin?: Maybe<Scalars['String']>;
};

export type CRM_actionChatFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_actionChatFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_actionChatHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_actionChatFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_actionChatFilter>>>;
};

export enum CRM_actionChatHasFilter {
  action = 'action',
  body = 'body',
  raw = 'raw'
}

export type CRM_actionChatOrder = {
  asc?: InputMaybe<CRM_actionChatOrderable>;
  desc?: InputMaybe<CRM_actionChatOrderable>;
  then?: InputMaybe<CRM_actionChatOrder>;
};

export enum CRM_actionChatOrderable {
  body = 'body',
  raw = 'raw'
}

export type CRM_actionChatPatch = {
  action?: InputMaybe<CRM_actionRef>;
  body?: InputMaybe<Scalars['String']>;
  raw?: InputMaybe<Scalars['String']>;
};

export type CRM_actionChatRef = {
  action?: InputMaybe<CRM_actionRef>;
  body?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  raw?: InputMaybe<Scalars['String']>;
};

export enum CRM_actionChatType {
  FACEBOOK = 'FACEBOOK',
  IMESSENGER = 'IMESSENGER',
  INSTAGRAM = 'INSTAGRAM',
  OTHER = 'OTHER',
  TELEGRAM = 'TELEGRAM',
  WHATSAPP = 'WHATSAPP'
}

export type CRM_actionEmail = {
  __typename?: 'CRM_actionEmail';
  action: CRM_action;
  body: Scalars['String'];
  id: Scalars['ID'];
  raw: Scalars['String'];
  subject: Scalars['String'];
};


export type CRM_actionEmailactionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};

export type CRM_actionEmailAggregateResult = {
  __typename?: 'CRM_actionEmailAggregateResult';
  bodyMax?: Maybe<Scalars['String']>;
  bodyMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  rawMax?: Maybe<Scalars['String']>;
  rawMin?: Maybe<Scalars['String']>;
  subjectMax?: Maybe<Scalars['String']>;
  subjectMin?: Maybe<Scalars['String']>;
};

export type CRM_actionEmailFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_actionEmailFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_actionEmailHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_actionEmailFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_actionEmailFilter>>>;
};

export enum CRM_actionEmailHasFilter {
  action = 'action',
  body = 'body',
  raw = 'raw',
  subject = 'subject'
}

export type CRM_actionEmailOrder = {
  asc?: InputMaybe<CRM_actionEmailOrderable>;
  desc?: InputMaybe<CRM_actionEmailOrderable>;
  then?: InputMaybe<CRM_actionEmailOrder>;
};

export enum CRM_actionEmailOrderable {
  body = 'body',
  raw = 'raw',
  subject = 'subject'
}

export type CRM_actionEmailPatch = {
  action?: InputMaybe<CRM_actionRef>;
  body?: InputMaybe<Scalars['String']>;
  raw?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
};

export type CRM_actionEmailRef = {
  action?: InputMaybe<CRM_actionRef>;
  body?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  raw?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
};

export type CRM_actionFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_actionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_actionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_actionFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_actionFilter>>>;
};

export enum CRM_actionHasFilter {
  allowStatus = 'allowStatus',
  call = 'call',
  chat = 'chat',
  createdAt = 'createdAt',
  email = 'email',
  jumpToStatus = 'jumpToStatus',
  meeting = 'meeting',
  name = 'name',
  org360 = 'org360',
  package = 'package',
  type = 'type'
}

export type CRM_actionMeeting = {
  __typename?: 'CRM_actionMeeting';
  action: CRM_action;
  id: Scalars['ID'];
};


export type CRM_actionMeetingactionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};

export type CRM_actionMeetingAggregateResult = {
  __typename?: 'CRM_actionMeetingAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_actionMeetingFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_actionMeetingFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_actionMeetingHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_actionMeetingFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_actionMeetingFilter>>>;
};

export enum CRM_actionMeetingHasFilter {
  action = 'action'
}

export type CRM_actionMeetingPatch = {
  action?: InputMaybe<CRM_actionRef>;
};

export type CRM_actionMeetingRef = {
  action?: InputMaybe<CRM_actionRef>;
  id?: InputMaybe<Scalars['ID']>;
};

export enum CRM_actionMeetingType {
  GOOGLE_MEET = 'GOOGLE_MEET',
  MSFT_SKYPE = 'MSFT_SKYPE',
  MSFT_TEAMS = 'MSFT_TEAMS',
  OTHER = 'OTHER'
}

export type CRM_actionOrder = {
  asc?: InputMaybe<CRM_actionOrderable>;
  desc?: InputMaybe<CRM_actionOrderable>;
  then?: InputMaybe<CRM_actionOrder>;
};

export enum CRM_actionOrderable {
  createdAt = 'createdAt',
  name = 'name'
}

export type CRM_actionPatch = {
  allowStatus?: InputMaybe<Array<CRM_contactInputStatus>>;
  call?: InputMaybe<CRM_actionCallRef>;
  chat?: InputMaybe<CRM_actionChatRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<CRM_actionEmailRef>;
  jumpToStatus?: InputMaybe<CRM_contactInputStatus>;
  meeting?: InputMaybe<CRM_actionMeetingRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<CRM_PACKAGERef>;
  type?: InputMaybe<CRM_actionType>;
};

export type CRM_actionRef = {
  allowStatus?: InputMaybe<Array<CRM_contactInputStatus>>;
  call?: InputMaybe<CRM_actionCallRef>;
  chat?: InputMaybe<CRM_actionChatRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<CRM_actionEmailRef>;
  id?: InputMaybe<Scalars['ID']>;
  jumpToStatus?: InputMaybe<CRM_contactInputStatus>;
  meeting?: InputMaybe<CRM_actionMeetingRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<CRM_PACKAGERef>;
  type?: InputMaybe<CRM_actionType>;
};

export enum CRM_actionType {
  CALL = 'CALL',
  CHAT = 'CHAT',
  EMAIL = 'EMAIL',
  FORM = 'FORM',
  MEETING = 'MEETING',
  OPPORTUNITY_CHANGE = 'OPPORTUNITY_CHANGE',
  OTHER = 'OTHER',
  PROPOSAL = 'PROPOSAL',
  STATUS_CHANGE = 'STATUS_CHANGE',
  VISIT = 'VISIT'
}

export type CRM_area = {
  __typename?: 'CRM_area';
  color: Scalars['String'];
  contacts: Array<CRM_contact>;
  contactsAggregate?: Maybe<CRM_contactAggregateResult>;
  createdAt: Scalars['DateTime'];
  description: Scalars['String'];
  icon: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  package: CRM_PACKAGE;
};


export type CRM_areacontactsArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_areacontactsAggregateArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type CRM_areapackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_areaAggregateResult = {
  __typename?: 'CRM_areaAggregateResult';
  colorMax?: Maybe<Scalars['String']>;
  colorMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  iconMax?: Maybe<Scalars['String']>;
  iconMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_areaFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_areaFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_areaHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_areaFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_areaFilter>>>;
};

export enum CRM_areaHasFilter {
  color = 'color',
  contacts = 'contacts',
  createdAt = 'createdAt',
  description = 'description',
  icon = 'icon',
  name = 'name',
  package = 'package'
}

export type CRM_areaOrder = {
  asc?: InputMaybe<CRM_areaOrderable>;
  desc?: InputMaybe<CRM_areaOrderable>;
  then?: InputMaybe<CRM_areaOrder>;
};

export enum CRM_areaOrderable {
  color = 'color',
  createdAt = 'createdAt',
  description = 'description',
  icon = 'icon',
  name = 'name'
}

export type CRM_areaPatch = {
  color?: InputMaybe<Scalars['String']>;
  contacts?: InputMaybe<Array<CRM_contactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
};

export type CRM_areaRef = {
  color?: InputMaybe<Scalars['String']>;
  contacts?: InputMaybe<Array<CRM_contactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
};

export type CRM_campaign = {
  __typename?: 'CRM_campaign';
  confirmedAt?: Maybe<Scalars['DateTime']>;
  confirmedBy?: Maybe<CRM_account>;
  contacts: Array<CRM_campaignContact>;
  contactsAggregate?: Maybe<CRM_campaignContactAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: CRM_account;
  delivers: Array<CRM_campaignDeliver>;
  deliversAggregate?: Maybe<CRM_campaignDeliverAggregateResult>;
  html?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  integrationsAccount?: Maybe<Integrations_account>;
  isConfirmed: Scalars['Boolean'];
  name: Scalars['String'];
  package: CRM_PACKAGE;
  status: CRM_campaignStatus;
  subject?: Maybe<Scalars['String']>;
  template?: Maybe<CRM_campaignEmailTemplate>;
  text?: Maybe<Scalars['String']>;
};


export type CRM_campaignconfirmedByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_campaigncontactsArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactOrder>;
};


export type CRM_campaigncontactsAggregateArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
};


export type CRM_campaigncreatedByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_campaigndeliversArgs = {
  filter?: InputMaybe<CRM_campaignDeliverFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignDeliverOrder>;
};


export type CRM_campaigndeliversAggregateArgs = {
  filter?: InputMaybe<CRM_campaignDeliverFilter>;
};


export type CRM_campaignintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type CRM_campaignpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_campaigntemplateArgs = {
  filter?: InputMaybe<CRM_campaignEmailTemplateFilter>;
};

export type CRM_campaignAggregateResult = {
  __typename?: 'CRM_campaignAggregateResult';
  confirmedAtMax?: Maybe<Scalars['DateTime']>;
  confirmedAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  htmlMax?: Maybe<Scalars['String']>;
  htmlMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  subjectMax?: Maybe<Scalars['String']>;
  subjectMin?: Maybe<Scalars['String']>;
  textMax?: Maybe<Scalars['String']>;
  textMin?: Maybe<Scalars['String']>;
};

export type CRM_campaignContact = {
  __typename?: 'CRM_campaignContact';
  campaign: CRM_campaign;
  clickDate?: Maybe<Scalars['DateTime']>;
  contact: CRM_contact;
  created: Scalars['DateTime'];
  createdBy: CRM_account;
  deliver?: Maybe<CRM_campaignDeliver>;
  deliveredDate?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  events: Array<CRM_campaignContactEvent>;
  eventsAggregate?: Maybe<CRM_campaignContactEventAggregateResult>;
  failedDate?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  inputs: Array<CRM_contactInput>;
  inputsAggregate?: Maybe<CRM_contactInputAggregateResult>;
  invalidReasons: Array<CRM_campaignContactInvalidReason>;
  openDate?: Maybe<Scalars['DateTime']>;
  package: CRM_PACKAGE;
  sentDate?: Maybe<Scalars['DateTime']>;
  status: CRM_campaignContactStatus;
};


export type CRM_campaignContactcampaignArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
};


export type CRM_campaignContactcontactArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type CRM_campaignContactcreatedByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_campaignContactdeliverArgs = {
  filter?: InputMaybe<CRM_campaignDeliverFilter>;
};


export type CRM_campaignContacteventsArgs = {
  filter?: InputMaybe<CRM_campaignContactEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactEventOrder>;
};


export type CRM_campaignContacteventsAggregateArgs = {
  filter?: InputMaybe<CRM_campaignContactEventFilter>;
};


export type CRM_campaignContactinputsArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};


export type CRM_campaignContactinputsAggregateArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_campaignContactpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_campaignContactAggregateResult = {
  __typename?: 'CRM_campaignContactAggregateResult';
  clickDateMax?: Maybe<Scalars['DateTime']>;
  clickDateMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdMax?: Maybe<Scalars['DateTime']>;
  createdMin?: Maybe<Scalars['DateTime']>;
  deliveredDateMax?: Maybe<Scalars['DateTime']>;
  deliveredDateMin?: Maybe<Scalars['DateTime']>;
  emailMax?: Maybe<Scalars['String']>;
  emailMin?: Maybe<Scalars['String']>;
  failedDateMax?: Maybe<Scalars['DateTime']>;
  failedDateMin?: Maybe<Scalars['DateTime']>;
  openDateMax?: Maybe<Scalars['DateTime']>;
  openDateMin?: Maybe<Scalars['DateTime']>;
  sentDateMax?: Maybe<Scalars['DateTime']>;
  sentDateMin?: Maybe<Scalars['DateTime']>;
};

export type CRM_campaignContactEvent = {
  __typename?: 'CRM_campaignContactEvent';
  campaign: CRM_campaign;
  contact: CRM_campaignContact;
  date: Scalars['DateTime'];
  event: CRM_campaignContactEventType;
  id: Scalars['ID'];
  ip?: Maybe<Scalars['String']>;
  package: CRM_PACKAGE;
  sendGridProviderEvent?: Maybe<Integrations_Sendgrid_emailEvent>;
};


export type CRM_campaignContactEventcampaignArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
};


export type CRM_campaignContactEventcontactArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
};


export type CRM_campaignContactEventpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_campaignContactEventsendGridProviderEventArgs = {
  filter?: InputMaybe<Integrations_Sendgrid_emailEventFilter>;
};

export type CRM_campaignContactEventAggregateResult = {
  __typename?: 'CRM_campaignContactEventAggregateResult';
  count?: Maybe<Scalars['Int']>;
  dateMax?: Maybe<Scalars['DateTime']>;
  dateMin?: Maybe<Scalars['DateTime']>;
  ipMax?: Maybe<Scalars['String']>;
  ipMin?: Maybe<Scalars['String']>;
};

export type CRM_campaignContactEventFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_campaignContactEventFilter>>>;
  date?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_campaignContactEventHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_campaignContactEventFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_campaignContactEventFilter>>>;
};

export enum CRM_campaignContactEventHasFilter {
  campaign = 'campaign',
  contact = 'contact',
  date = 'date',
  event = 'event',
  ip = 'ip',
  package = 'package',
  sendGridProviderEvent = 'sendGridProviderEvent'
}

export type CRM_campaignContactEventOrder = {
  asc?: InputMaybe<CRM_campaignContactEventOrderable>;
  desc?: InputMaybe<CRM_campaignContactEventOrderable>;
  then?: InputMaybe<CRM_campaignContactEventOrder>;
};

export enum CRM_campaignContactEventOrderable {
  date = 'date',
  ip = 'ip'
}

export type CRM_campaignContactEventPatch = {
  campaign?: InputMaybe<CRM_campaignRef>;
  contact?: InputMaybe<CRM_campaignContactRef>;
  date?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<CRM_campaignContactEventType>;
  ip?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  sendGridProviderEvent?: InputMaybe<Integrations_Sendgrid_emailEventRef>;
};

export type CRM_campaignContactEventRef = {
  campaign?: InputMaybe<CRM_campaignRef>;
  contact?: InputMaybe<CRM_campaignContactRef>;
  date?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<CRM_campaignContactEventType>;
  id?: InputMaybe<Scalars['ID']>;
  ip?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  sendGridProviderEvent?: InputMaybe<Integrations_Sendgrid_emailEventRef>;
};

export enum CRM_campaignContactEventType {
  BOUNCED = 'BOUNCED',
  CLICKED = 'CLICKED',
  DEFERRED = 'DEFERRED',
  DELETING = 'DELETING',
  DELIVERED = 'DELIVERED',
  DROPPED = 'DROPPED',
  OPENED = 'OPENED',
  PROCESSED = 'PROCESSED',
  SPAMREPORT = 'SPAMREPORT',
  UNKNOWN = 'UNKNOWN',
  UNSUBSCRIBED = 'UNSUBSCRIBED'
}

export type CRM_campaignContactFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_campaignContactFilter>>>;
  email?: InputMaybe<StringRegExpFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_campaignContactHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  invalidReasons?: InputMaybe<CRM_campaignContactInvalidReason_exact>;
  not?: InputMaybe<CRM_campaignContactFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_campaignContactFilter>>>;
  status?: InputMaybe<CRM_campaignContactStatus_exact>;
};

export enum CRM_campaignContactHasFilter {
  campaign = 'campaign',
  clickDate = 'clickDate',
  contact = 'contact',
  created = 'created',
  createdBy = 'createdBy',
  deliver = 'deliver',
  deliveredDate = 'deliveredDate',
  email = 'email',
  events = 'events',
  failedDate = 'failedDate',
  inputs = 'inputs',
  invalidReasons = 'invalidReasons',
  openDate = 'openDate',
  package = 'package',
  sentDate = 'sentDate',
  status = 'status'
}

export enum CRM_campaignContactInvalidReason {
  INVALID_EMAIL = 'INVALID_EMAIL',
  IS_EMAIL_BOUNCED = 'IS_EMAIL_BOUNCED',
  IS_UNSUBSCRIBED = 'IS_UNSUBSCRIBED'
}

export type CRM_campaignContactInvalidReason_exact = {
  between?: InputMaybe<CRM_campaignContactInvalidReason>;
  eq?: InputMaybe<CRM_campaignContactInvalidReason>;
  ge?: InputMaybe<CRM_campaignContactInvalidReason>;
  gt?: InputMaybe<CRM_campaignContactInvalidReason>;
  in?: InputMaybe<Array<InputMaybe<CRM_campaignContactInvalidReason>>>;
  le?: InputMaybe<CRM_campaignContactInvalidReason>;
  lt?: InputMaybe<CRM_campaignContactInvalidReason>;
};

export type CRM_campaignContactOrder = {
  asc?: InputMaybe<CRM_campaignContactOrderable>;
  desc?: InputMaybe<CRM_campaignContactOrderable>;
  then?: InputMaybe<CRM_campaignContactOrder>;
};

export enum CRM_campaignContactOrderable {
  clickDate = 'clickDate',
  created = 'created',
  deliveredDate = 'deliveredDate',
  email = 'email',
  failedDate = 'failedDate',
  openDate = 'openDate',
  sentDate = 'sentDate'
}

export type CRM_campaignContactPatch = {
  campaign?: InputMaybe<CRM_campaignRef>;
  clickDate?: InputMaybe<Scalars['DateTime']>;
  contact?: InputMaybe<CRM_contactRef>;
  created?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  deliver?: InputMaybe<CRM_campaignDeliverRef>;
  deliveredDate?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<Array<CRM_campaignContactEventRef>>;
  failedDate?: InputMaybe<Scalars['DateTime']>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  invalidReasons?: InputMaybe<Array<CRM_campaignContactInvalidReason>>;
  openDate?: InputMaybe<Scalars['DateTime']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  sentDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<CRM_campaignContactStatus>;
};

export type CRM_campaignContactRef = {
  campaign?: InputMaybe<CRM_campaignRef>;
  clickDate?: InputMaybe<Scalars['DateTime']>;
  contact?: InputMaybe<CRM_contactRef>;
  created?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  deliver?: InputMaybe<CRM_campaignDeliverRef>;
  deliveredDate?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<Array<CRM_campaignContactEventRef>>;
  failedDate?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  invalidReasons?: InputMaybe<Array<CRM_campaignContactInvalidReason>>;
  openDate?: InputMaybe<Scalars['DateTime']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  sentDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<CRM_campaignContactStatus>;
};

export enum CRM_campaignContactStatus {
  CLICK = 'CLICK',
  DELETING = 'DELETING',
  DELIVERED = 'DELIVERED',
  FAILED = 'FAILED',
  INVALID = 'INVALID',
  OPEN = 'OPEN',
  READY_TO_SEND = 'READY_TO_SEND',
  SENT = 'SENT'
}

export type CRM_campaignContactStatus_exact = {
  between?: InputMaybe<CRM_campaignContactStatus>;
  eq?: InputMaybe<CRM_campaignContactStatus>;
  ge?: InputMaybe<CRM_campaignContactStatus>;
  gt?: InputMaybe<CRM_campaignContactStatus>;
  in?: InputMaybe<Array<InputMaybe<CRM_campaignContactStatus>>>;
  le?: InputMaybe<CRM_campaignContactStatus>;
  lt?: InputMaybe<CRM_campaignContactStatus>;
};

export type CRM_campaignDeliver = {
  __typename?: 'CRM_campaignDeliver';
  campaign: CRM_campaign;
  contacts: Array<CRM_campaignContact>;
  contactsAggregate?: Maybe<CRM_campaignContactAggregateResult>;
  endAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  package: CRM_PACKAGE;
  startAt?: Maybe<Scalars['DateTime']>;
  status: CRM_campaignDeliverStatus;
};


export type CRM_campaignDelivercampaignArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
};


export type CRM_campaignDelivercontactsArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactOrder>;
};


export type CRM_campaignDelivercontactsAggregateArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
};


export type CRM_campaignDeliverpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_campaignDeliverAggregateResult = {
  __typename?: 'CRM_campaignDeliverAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
};

export type CRM_campaignDeliverFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_campaignDeliverFilter>>>;
  endAt?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_campaignDeliverHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_campaignDeliverFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_campaignDeliverFilter>>>;
  startAt?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<CRM_campaignDeliverStatus_hash>;
};

export enum CRM_campaignDeliverHasFilter {
  campaign = 'campaign',
  contacts = 'contacts',
  endAt = 'endAt',
  package = 'package',
  startAt = 'startAt',
  status = 'status'
}

export type CRM_campaignDeliverOrder = {
  asc?: InputMaybe<CRM_campaignDeliverOrderable>;
  desc?: InputMaybe<CRM_campaignDeliverOrderable>;
  then?: InputMaybe<CRM_campaignDeliverOrder>;
};

export enum CRM_campaignDeliverOrderable {
  endAt = 'endAt',
  startAt = 'startAt'
}

export type CRM_campaignDeliverPatch = {
  campaign?: InputMaybe<CRM_campaignRef>;
  contacts?: InputMaybe<Array<CRM_campaignContactRef>>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<CRM_campaignDeliverStatus>;
};

export type CRM_campaignDeliverRef = {
  campaign?: InputMaybe<CRM_campaignRef>;
  contacts?: InputMaybe<Array<CRM_campaignContactRef>>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<CRM_campaignDeliverStatus>;
};

export enum CRM_campaignDeliverStatus {
  DELETING = 'DELETING',
  DELIVERY = 'DELIVERY',
  FAILED = 'FAILED',
  FINISHED = 'FINISHED',
  PENDING = 'PENDING',
  PROCESSING = 'PROCESSING'
}

export type CRM_campaignDeliverStatus_hash = {
  eq?: InputMaybe<CRM_campaignDeliverStatus>;
  in?: InputMaybe<Array<InputMaybe<CRM_campaignDeliverStatus>>>;
};

export type CRM_campaignEmailTemplate = {
  __typename?: 'CRM_campaignEmailTemplate';
  body: Scalars['String'];
  campaign: CRM_campaign;
  html: Scalars['String'];
  id: Scalars['ID'];
  package: CRM_PACKAGE;
  template?: Maybe<CRM_emailTemplate>;
  text: Scalars['String'];
};


export type CRM_campaignEmailTemplatecampaignArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
};


export type CRM_campaignEmailTemplatepackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_campaignEmailTemplatetemplateArgs = {
  filter?: InputMaybe<CRM_emailTemplateFilter>;
};

export type CRM_campaignEmailTemplateAggregateResult = {
  __typename?: 'CRM_campaignEmailTemplateAggregateResult';
  bodyMax?: Maybe<Scalars['String']>;
  bodyMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  htmlMax?: Maybe<Scalars['String']>;
  htmlMin?: Maybe<Scalars['String']>;
  textMax?: Maybe<Scalars['String']>;
  textMin?: Maybe<Scalars['String']>;
};

export type CRM_campaignEmailTemplateFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_campaignEmailTemplateFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_campaignEmailTemplateHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_campaignEmailTemplateFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_campaignEmailTemplateFilter>>>;
};

export enum CRM_campaignEmailTemplateHasFilter {
  body = 'body',
  campaign = 'campaign',
  html = 'html',
  package = 'package',
  template = 'template',
  text = 'text'
}

export type CRM_campaignEmailTemplateOrder = {
  asc?: InputMaybe<CRM_campaignEmailTemplateOrderable>;
  desc?: InputMaybe<CRM_campaignEmailTemplateOrderable>;
  then?: InputMaybe<CRM_campaignEmailTemplateOrder>;
};

export enum CRM_campaignEmailTemplateOrderable {
  body = 'body',
  html = 'html',
  text = 'text'
}

export type CRM_campaignEmailTemplatePatch = {
  body?: InputMaybe<Scalars['String']>;
  campaign?: InputMaybe<CRM_campaignRef>;
  html?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  template?: InputMaybe<CRM_emailTemplateRef>;
  text?: InputMaybe<Scalars['String']>;
};

export type CRM_campaignEmailTemplateRef = {
  body?: InputMaybe<Scalars['String']>;
  campaign?: InputMaybe<CRM_campaignRef>;
  html?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  template?: InputMaybe<CRM_emailTemplateRef>;
  text?: InputMaybe<Scalars['String']>;
};

export type CRM_campaignFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_campaignFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_campaignHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isConfirmed?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CRM_campaignFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_campaignFilter>>>;
  status?: InputMaybe<CRM_campaignStatus_exact>;
  subject?: InputMaybe<StringRegExpFilter>;
};

export enum CRM_campaignHasFilter {
  confirmedAt = 'confirmedAt',
  confirmedBy = 'confirmedBy',
  contacts = 'contacts',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  delivers = 'delivers',
  html = 'html',
  integrationsAccount = 'integrationsAccount',
  isConfirmed = 'isConfirmed',
  name = 'name',
  package = 'package',
  status = 'status',
  subject = 'subject',
  template = 'template',
  text = 'text'
}

export type CRM_campaignOrder = {
  asc?: InputMaybe<CRM_campaignOrderable>;
  desc?: InputMaybe<CRM_campaignOrderable>;
  then?: InputMaybe<CRM_campaignOrder>;
};

export enum CRM_campaignOrderable {
  confirmedAt = 'confirmedAt',
  createdAt = 'createdAt',
  html = 'html',
  name = 'name',
  subject = 'subject',
  text = 'text'
}

export type CRM_campaignPatch = {
  confirmedAt?: InputMaybe<Scalars['DateTime']>;
  confirmedBy?: InputMaybe<CRM_accountRef>;
  contacts?: InputMaybe<Array<CRM_campaignContactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  delivers?: InputMaybe<Array<CRM_campaignDeliverRef>>;
  html?: InputMaybe<Scalars['String']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  isConfirmed?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  status?: InputMaybe<CRM_campaignStatus>;
  subject?: InputMaybe<Scalars['String']>;
  template?: InputMaybe<CRM_campaignEmailTemplateRef>;
  text?: InputMaybe<Scalars['String']>;
};

export type CRM_campaignRef = {
  confirmedAt?: InputMaybe<Scalars['DateTime']>;
  confirmedBy?: InputMaybe<CRM_accountRef>;
  contacts?: InputMaybe<Array<CRM_campaignContactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  delivers?: InputMaybe<Array<CRM_campaignDeliverRef>>;
  html?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  isConfirmed?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  status?: InputMaybe<CRM_campaignStatus>;
  subject?: InputMaybe<Scalars['String']>;
  template?: InputMaybe<CRM_campaignEmailTemplateRef>;
  text?: InputMaybe<Scalars['String']>;
};

export enum CRM_campaignStatus {
  CANCELED = 'CANCELED',
  DELETING = 'DELETING',
  DRAFT = 'DRAFT',
  FINISHED = 'FINISHED',
  PROCESSING = 'PROCESSING',
  READY_TO_START = 'READY_TO_START',
  SCHEDULED = 'SCHEDULED'
}

export type CRM_campaignStatus_exact = {
  between?: InputMaybe<CRM_campaignStatus>;
  eq?: InputMaybe<CRM_campaignStatus>;
  ge?: InputMaybe<CRM_campaignStatus>;
  gt?: InputMaybe<CRM_campaignStatus>;
  in?: InputMaybe<Array<InputMaybe<CRM_campaignStatus>>>;
  le?: InputMaybe<CRM_campaignStatus>;
  lt?: InputMaybe<CRM_campaignStatus>;
};

export type CRM_contact = {
  __typename?: 'CRM_contact';
  actions: Array<CRM_contactAction>;
  actionsAggregate?: Maybe<CRM_contactActionAggregateResult>;
  areas: Array<CRM_area>;
  areasAggregate?: Maybe<CRM_areaAggregateResult>;
  assignedTo: Array<CRM_account>;
  assignedToAggregate?: Maybe<CRM_accountAggregateResult>;
  campaigns: Array<CRM_campaignContact>;
  campaignsAggregate?: Maybe<CRM_campaignContactAggregateResult>;
  contact: Contact;
  customerStatus?: Maybe<CRM_contactCustomerStatus>;
  customerType?: Maybe<CRM_contactCustomerType>;
  id: Scalars['ID'];
  inputs: Array<CRM_contactInput>;
  inputsAggregate?: Maybe<CRM_contactInputAggregateResult>;
  isEmailBounce: Scalars['Boolean'];
  isUnsubscribed: Scalars['Boolean'];
  org360: Org360;
  package: CRM_PACKAGE;
  roles: Array<CRM_contactRole>;
  sourceForms: Array<CRM_sourceForm>;
  sourceFormsAggregate?: Maybe<CRM_sourceFormAggregateResult>;
  sources: Array<CRM_source>;
  sourcesAggregate?: Maybe<CRM_sourceAggregateResult>;
  supplierStatus?: Maybe<CRM_contactSupplierStatus>;
  supplierType?: Maybe<CRM_contactSupplierType>;
  tokens: Array<Scalars['String']>;
};


export type CRM_contactactionsArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionOrder>;
};


export type CRM_contactactionsAggregateArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};


export type CRM_contactareasArgs = {
  filter?: InputMaybe<CRM_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_areaOrder>;
};


export type CRM_contactareasAggregateArgs = {
  filter?: InputMaybe<CRM_areaFilter>;
};


export type CRM_contactassignedToArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_contactassignedToAggregateArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_contactcampaignsArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactOrder>;
};


export type CRM_contactcampaignsAggregateArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
};


export type CRM_contactcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type CRM_contactinputsArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};


export type CRM_contactinputsAggregateArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_contactorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type CRM_contactpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_contactsourceFormsArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormOrder>;
};


export type CRM_contactsourceFormsAggregateArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
};


export type CRM_contactsourcesArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceOrder>;
};


export type CRM_contactsourcesAggregateArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
};

export type CRM_contactAction = {
  __typename?: 'CRM_contactAction';
  action?: Maybe<CRM_action>;
  answer?: Maybe<CRM_contactAnswer>;
  call?: Maybe<CRM_contactActionCall>;
  chat?: Maybe<CRM_contactActionChat>;
  contact: CRM_contact;
  createdAt: Scalars['DateTime'];
  createdBy: CRM_account;
  date: Scalars['DateTime'];
  email?: Maybe<CRM_contactActionEmail>;
  event?: Maybe<CRM_event>;
  id: Scalars['ID'];
  input?: Maybe<CRM_contactInput>;
  label?: Maybe<Scalars['String']>;
  meeting?: Maybe<CRM_contactActionMeeting>;
  package: CRM_PACKAGE;
  proposal?: Maybe<CRM_proposal>;
  reminder?: Maybe<Account_eventReminder>;
  status: CRM_contactActionStatus;
  statusChange?: Maybe<CRM_contactActionStatusChange>;
  type: CRM_actionType;
};


export type CRM_contactActionactionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};


export type CRM_contactActionanswerArgs = {
  filter?: InputMaybe<CRM_contactAnswerFilter>;
};


export type CRM_contactActioncallArgs = {
  filter?: InputMaybe<CRM_contactActionCallFilter>;
};


export type CRM_contactActionchatArgs = {
  filter?: InputMaybe<CRM_contactActionChatFilter>;
};


export type CRM_contactActioncontactArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type CRM_contactActioncreatedByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_contactActionemailArgs = {
  filter?: InputMaybe<CRM_contactActionEmailFilter>;
};


export type CRM_contactActioneventArgs = {
  filter?: InputMaybe<CRM_eventFilter>;
};


export type CRM_contactActioninputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_contactActionmeetingArgs = {
  filter?: InputMaybe<CRM_contactActionMeetingFilter>;
};


export type CRM_contactActionpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_contactActionproposalArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
};


export type CRM_contactActionstatusChangeArgs = {
  filter?: InputMaybe<CRM_contactActionStatusChangeFilter>;
};

export type CRM_contactActionAggregateResult = {
  __typename?: 'CRM_contactActionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  dateMax?: Maybe<Scalars['DateTime']>;
  dateMin?: Maybe<Scalars['DateTime']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type CRM_contactActionCall = {
  __typename?: 'CRM_contactActionCall';
  action?: Maybe<CRM_action>;
  contactAction: CRM_contactAction;
  endDate?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  startDate: Scalars['DateTime'];
};


export type CRM_contactActionCallactionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};


export type CRM_contactActionCallcontactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};

export type CRM_contactActionCallAggregateResult = {
  __typename?: 'CRM_contactActionCallAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endDateMax?: Maybe<Scalars['DateTime']>;
  endDateMin?: Maybe<Scalars['DateTime']>;
  startDateMax?: Maybe<Scalars['DateTime']>;
  startDateMin?: Maybe<Scalars['DateTime']>;
};

export type CRM_contactActionCallFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactActionCallFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactActionCallHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_contactActionCallFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactActionCallFilter>>>;
};

export enum CRM_contactActionCallHasFilter {
  action = 'action',
  contactAction = 'contactAction',
  endDate = 'endDate',
  startDate = 'startDate'
}

export type CRM_contactActionCallOrder = {
  asc?: InputMaybe<CRM_contactActionCallOrderable>;
  desc?: InputMaybe<CRM_contactActionCallOrderable>;
  then?: InputMaybe<CRM_contactActionCallOrder>;
};

export enum CRM_contactActionCallOrderable {
  endDate = 'endDate',
  startDate = 'startDate'
}

export type CRM_contactActionCallPatch = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
};

export type CRM_contactActionCallRef = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
};

export type CRM_contactActionChat = {
  __typename?: 'CRM_contactActionChat';
  action?: Maybe<CRM_action>;
  contactAction: CRM_contactAction;
  id: Scalars['ID'];
};


export type CRM_contactActionChatactionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};


export type CRM_contactActionChatcontactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};

export type CRM_contactActionChatAggregateResult = {
  __typename?: 'CRM_contactActionChatAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_contactActionChatFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactActionChatFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactActionChatHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_contactActionChatFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactActionChatFilter>>>;
};

export enum CRM_contactActionChatHasFilter {
  action = 'action',
  contactAction = 'contactAction'
}

export type CRM_contactActionChatPatch = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
};

export type CRM_contactActionChatRef = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
  id?: InputMaybe<Scalars['ID']>;
};

export type CRM_contactActionEmail = {
  __typename?: 'CRM_contactActionEmail';
  action?: Maybe<CRM_action>;
  contactAction: CRM_contactAction;
  email: Email;
  id: Scalars['ID'];
  type: CRM_contactActionEmailType;
};


export type CRM_contactActionEmailactionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};


export type CRM_contactActionEmailcontactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};


export type CRM_contactActionEmailemailArgs = {
  filter?: InputMaybe<EmailFilter>;
};

export type CRM_contactActionEmailAggregateResult = {
  __typename?: 'CRM_contactActionEmailAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_contactActionEmailFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactActionEmailFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactActionEmailHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_contactActionEmailFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactActionEmailFilter>>>;
  type?: InputMaybe<CRM_contactActionEmailType_exact>;
};

export enum CRM_contactActionEmailHasFilter {
  action = 'action',
  contactAction = 'contactAction',
  email = 'email',
  type = 'type'
}

export type CRM_contactActionEmailPatch = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
  email?: InputMaybe<EmailRef>;
  type?: InputMaybe<CRM_contactActionEmailType>;
};

export type CRM_contactActionEmailRef = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
  email?: InputMaybe<EmailRef>;
  id?: InputMaybe<Scalars['ID']>;
  type?: InputMaybe<CRM_contactActionEmailType>;
};

export enum CRM_contactActionEmailType {
  CAMPAIGN = 'CAMPAIGN',
  MANUAL = 'MANUAL'
}

export type CRM_contactActionEmailType_exact = {
  between?: InputMaybe<CRM_contactActionEmailType>;
  eq?: InputMaybe<CRM_contactActionEmailType>;
  ge?: InputMaybe<CRM_contactActionEmailType>;
  gt?: InputMaybe<CRM_contactActionEmailType>;
  in?: InputMaybe<Array<InputMaybe<CRM_contactActionEmailType>>>;
  le?: InputMaybe<CRM_contactActionEmailType>;
  lt?: InputMaybe<CRM_contactActionEmailType>;
};

export type CRM_contactActionFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactActionFilter>>>;
  date?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactActionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_contactActionFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactActionFilter>>>;
};

export enum CRM_contactActionHasFilter {
  action = 'action',
  answer = 'answer',
  call = 'call',
  chat = 'chat',
  contact = 'contact',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  date = 'date',
  email = 'email',
  event = 'event',
  input = 'input',
  label = 'label',
  meeting = 'meeting',
  package = 'package',
  proposal = 'proposal',
  reminder = 'reminder',
  status = 'status',
  statusChange = 'statusChange',
  type = 'type'
}

export type CRM_contactActionMeeting = {
  __typename?: 'CRM_contactActionMeeting';
  action?: Maybe<CRM_action>;
  contactAction: CRM_contactAction;
  endDate?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  meeting?: Maybe<Meeting>;
  startDate: Scalars['DateTime'];
};


export type CRM_contactActionMeetingactionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};


export type CRM_contactActionMeetingcontactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};


export type CRM_contactActionMeetingmeetingArgs = {
  filter?: InputMaybe<MeetingFilter>;
};

export type CRM_contactActionMeetingAggregateResult = {
  __typename?: 'CRM_contactActionMeetingAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endDateMax?: Maybe<Scalars['DateTime']>;
  endDateMin?: Maybe<Scalars['DateTime']>;
  startDateMax?: Maybe<Scalars['DateTime']>;
  startDateMin?: Maybe<Scalars['DateTime']>;
};

export type CRM_contactActionMeetingFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactActionMeetingFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactActionMeetingHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_contactActionMeetingFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactActionMeetingFilter>>>;
};

export enum CRM_contactActionMeetingHasFilter {
  action = 'action',
  contactAction = 'contactAction',
  endDate = 'endDate',
  meeting = 'meeting',
  startDate = 'startDate'
}

export type CRM_contactActionMeetingOrder = {
  asc?: InputMaybe<CRM_contactActionMeetingOrderable>;
  desc?: InputMaybe<CRM_contactActionMeetingOrderable>;
  then?: InputMaybe<CRM_contactActionMeetingOrder>;
};

export enum CRM_contactActionMeetingOrderable {
  endDate = 'endDate',
  startDate = 'startDate'
}

export type CRM_contactActionMeetingPatch = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  meeting?: InputMaybe<MeetingRef>;
  startDate?: InputMaybe<Scalars['DateTime']>;
};

export type CRM_contactActionMeetingRef = {
  action?: InputMaybe<CRM_actionRef>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  meeting?: InputMaybe<MeetingRef>;
  startDate?: InputMaybe<Scalars['DateTime']>;
};

export type CRM_contactActionOrder = {
  asc?: InputMaybe<CRM_contactActionOrderable>;
  desc?: InputMaybe<CRM_contactActionOrderable>;
  then?: InputMaybe<CRM_contactActionOrder>;
};

export enum CRM_contactActionOrderable {
  createdAt = 'createdAt',
  date = 'date',
  label = 'label'
}

export type CRM_contactActionPatch = {
  action?: InputMaybe<CRM_actionRef>;
  answer?: InputMaybe<CRM_contactAnswerRef>;
  call?: InputMaybe<CRM_contactActionCallRef>;
  chat?: InputMaybe<CRM_contactActionChatRef>;
  contact?: InputMaybe<CRM_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  date?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<CRM_contactActionEmailRef>;
  event?: InputMaybe<CRM_eventRef>;
  input?: InputMaybe<CRM_contactInputRef>;
  label?: InputMaybe<Scalars['String']>;
  meeting?: InputMaybe<CRM_contactActionMeetingRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  proposal?: InputMaybe<CRM_proposalRef>;
  reminder?: InputMaybe<Account_eventReminder>;
  status?: InputMaybe<CRM_contactActionStatus>;
  statusChange?: InputMaybe<CRM_contactActionStatusChangeRef>;
  type?: InputMaybe<CRM_actionType>;
};

export type CRM_contactActionRef = {
  action?: InputMaybe<CRM_actionRef>;
  answer?: InputMaybe<CRM_contactAnswerRef>;
  call?: InputMaybe<CRM_contactActionCallRef>;
  chat?: InputMaybe<CRM_contactActionChatRef>;
  contact?: InputMaybe<CRM_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  date?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<CRM_contactActionEmailRef>;
  event?: InputMaybe<CRM_eventRef>;
  id?: InputMaybe<Scalars['ID']>;
  input?: InputMaybe<CRM_contactInputRef>;
  label?: InputMaybe<Scalars['String']>;
  meeting?: InputMaybe<CRM_contactActionMeetingRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  proposal?: InputMaybe<CRM_proposalRef>;
  reminder?: InputMaybe<Account_eventReminder>;
  status?: InputMaybe<CRM_contactActionStatus>;
  statusChange?: InputMaybe<CRM_contactActionStatusChangeRef>;
  type?: InputMaybe<CRM_actionType>;
};

export enum CRM_contactActionStatus {
  CANCELLED = 'CANCELLED',
  DONE = 'DONE',
  PENDING = 'PENDING'
}

export type CRM_contactActionStatusChange = {
  __typename?: 'CRM_contactActionStatusChange';
  contactAction: CRM_contactAction;
  id: Scalars['ID'];
  newStatus: CRM_contactInputStatus;
  newSubStatus?: Maybe<CRM_contactInputSubStatus>;
  status: CRM_contactInputStatus;
  subStatus?: Maybe<CRM_contactInputSubStatus>;
};


export type CRM_contactActionStatusChangecontactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};


export type CRM_contactActionStatusChangenewSubStatusArgs = {
  filter?: InputMaybe<CRM_contactInputSubStatusFilter>;
};


export type CRM_contactActionStatusChangesubStatusArgs = {
  filter?: InputMaybe<CRM_contactInputSubStatusFilter>;
};

export type CRM_contactActionStatusChangeAggregateResult = {
  __typename?: 'CRM_contactActionStatusChangeAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_contactActionStatusChangeFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactActionStatusChangeFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactActionStatusChangeHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_contactActionStatusChangeFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactActionStatusChangeFilter>>>;
};

export enum CRM_contactActionStatusChangeHasFilter {
  contactAction = 'contactAction',
  newStatus = 'newStatus',
  newSubStatus = 'newSubStatus',
  status = 'status',
  subStatus = 'subStatus'
}

export type CRM_contactActionStatusChangePatch = {
  contactAction?: InputMaybe<CRM_contactActionRef>;
  newStatus?: InputMaybe<CRM_contactInputStatus>;
  newSubStatus?: InputMaybe<CRM_contactInputSubStatusRef>;
  status?: InputMaybe<CRM_contactInputStatus>;
  subStatus?: InputMaybe<CRM_contactInputSubStatusRef>;
};

export type CRM_contactActionStatusChangeRef = {
  contactAction?: InputMaybe<CRM_contactActionRef>;
  id?: InputMaybe<Scalars['ID']>;
  newStatus?: InputMaybe<CRM_contactInputStatus>;
  newSubStatus?: InputMaybe<CRM_contactInputSubStatusRef>;
  status?: InputMaybe<CRM_contactInputStatus>;
  subStatus?: InputMaybe<CRM_contactInputSubStatusRef>;
};

export type CRM_contactAggregateResult = {
  __typename?: 'CRM_contactAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_contactAnswer = {
  __typename?: 'CRM_contactAnswer';
  action: CRM_contactAction;
  answer?: Maybe<Scalars['String']>;
  contact: CRM_contact;
  createdAt: Scalars['DateTime'];
  id: Scalars['ID'];
  input?: Maybe<CRM_contactInput>;
  type: CRM_contactAnswerType;
};


export type CRM_contactAnsweractionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};


export type CRM_contactAnswercontactArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type CRM_contactAnswerinputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};

export type CRM_contactAnswerAggregateResult = {
  __typename?: 'CRM_contactAnswerAggregateResult';
  answerMax?: Maybe<Scalars['String']>;
  answerMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
};

export type CRM_contactAnswerFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactAnswerFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactAnswerHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_contactAnswerFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactAnswerFilter>>>;
};

export enum CRM_contactAnswerHasFilter {
  action = 'action',
  answer = 'answer',
  contact = 'contact',
  createdAt = 'createdAt',
  input = 'input',
  type = 'type'
}

export type CRM_contactAnswerOrder = {
  asc?: InputMaybe<CRM_contactAnswerOrderable>;
  desc?: InputMaybe<CRM_contactAnswerOrderable>;
  then?: InputMaybe<CRM_contactAnswerOrder>;
};

export enum CRM_contactAnswerOrderable {
  answer = 'answer',
  createdAt = 'createdAt'
}

export type CRM_contactAnswerPatch = {
  action?: InputMaybe<CRM_contactActionRef>;
  answer?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<CRM_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  input?: InputMaybe<CRM_contactInputRef>;
  type?: InputMaybe<CRM_contactAnswerType>;
};

export type CRM_contactAnswerRef = {
  action?: InputMaybe<CRM_contactActionRef>;
  answer?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<CRM_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  input?: InputMaybe<CRM_contactInputRef>;
  type?: InputMaybe<CRM_contactAnswerType>;
};

export enum CRM_contactAnswerType {
  INTERESTED = 'INTERESTED',
  MAYBE = 'MAYBE',
  NO = 'NO',
  NOT_ANSEWERED_YET = 'NOT_ANSEWERED_YET',
  NOT_INTERESTED = 'NOT_INTERESTED',
  YES = 'YES'
}

export enum CRM_contactCustomerStatus {
  ANONYMOUS = 'ANONYMOUS',
  CUSTOMER = 'CUSTOMER',
  DISCARDED = 'DISCARDED',
  LEAD = 'LEAD',
  LEAD_PLUS = 'LEAD_PLUS',
  PROSPECT = 'PROSPECT'
}

export type CRM_contactCustomerStatus_exact = {
  between?: InputMaybe<CRM_contactCustomerStatus>;
  eq?: InputMaybe<CRM_contactCustomerStatus>;
  ge?: InputMaybe<CRM_contactCustomerStatus>;
  gt?: InputMaybe<CRM_contactCustomerStatus>;
  in?: InputMaybe<Array<InputMaybe<CRM_contactCustomerStatus>>>;
  le?: InputMaybe<CRM_contactCustomerStatus>;
  lt?: InputMaybe<CRM_contactCustomerStatus>;
};

export enum CRM_contactCustomerType {
  ADMIN = 'ADMIN',
  PAYING = 'PAYING',
  PRESCRIBER = 'PRESCRIBER',
  USER = 'USER'
}

export type CRM_contactCustomerType_exact = {
  between?: InputMaybe<CRM_contactCustomerType>;
  eq?: InputMaybe<CRM_contactCustomerType>;
  ge?: InputMaybe<CRM_contactCustomerType>;
  gt?: InputMaybe<CRM_contactCustomerType>;
  in?: InputMaybe<Array<InputMaybe<CRM_contactCustomerType>>>;
  le?: InputMaybe<CRM_contactCustomerType>;
  lt?: InputMaybe<CRM_contactCustomerType>;
};

export type CRM_contactFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactFilter>>>;
  customerStatus?: InputMaybe<CRM_contactCustomerStatus_exact>;
  customerType?: InputMaybe<CRM_contactCustomerType_exact>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_contactFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactFilter>>>;
  roles?: InputMaybe<CRM_contactRole_exact>;
  supplierStatus?: InputMaybe<CRM_contactSupplierStatus_exact>;
  supplierType?: InputMaybe<CRM_contactSupplierType_exact>;
  tokens?: InputMaybe<StringExactFilter>;
};

export enum CRM_contactHasFilter {
  actions = 'actions',
  areas = 'areas',
  assignedTo = 'assignedTo',
  campaigns = 'campaigns',
  contact = 'contact',
  customerStatus = 'customerStatus',
  customerType = 'customerType',
  inputs = 'inputs',
  isEmailBounce = 'isEmailBounce',
  isUnsubscribed = 'isUnsubscribed',
  org360 = 'org360',
  package = 'package',
  roles = 'roles',
  sourceForms = 'sourceForms',
  sources = 'sources',
  supplierStatus = 'supplierStatus',
  supplierType = 'supplierType',
  tokens = 'tokens'
}

export type CRM_contactInput = {
  __typename?: 'CRM_contactInput';
  actions: Array<CRM_contactAction>;
  actionsAggregate?: Maybe<CRM_contactActionAggregateResult>;
  addedBy?: Maybe<CRM_account>;
  answers: Array<CRM_contactAnswer>;
  answersAggregate?: Maybe<CRM_contactAnswerAggregateResult>;
  campaignContact?: Maybe<CRM_campaignContact>;
  contact?: Maybe<CRM_contact>;
  contactSuggestions: Array<Contact>;
  contactSuggestionsAggregate?: Maybe<ContactAggregateResult>;
  createdAt: Scalars['DateTime'];
  form: CRM_sourceForm;
  id: Scalars['ID'];
  index?: Maybe<Scalars['Int']>;
  isManual: Scalars['Boolean'];
  opportunityLogs?: Maybe<Array<CRM_opportunityLog>>;
  opportunityLogsAggregate?: Maybe<CRM_opportunityLogAggregateResult>;
  opportunityRate: Scalars['Int'];
  opportunityValue: Scalars['Int'];
  org360: Org360;
  package: CRM_PACKAGE;
  paymentPlanItems?: Maybe<Array<CRM_opportunityPaymentPlanItem>>;
  paymentPlanItemsAggregate?: Maybe<CRM_opportunityPaymentPlanItemAggregateResult>;
  products: Array<Product>;
  productsAggregate?: Maybe<ProductAggregateResult>;
  proposals: Array<CRM_proposal>;
  proposalsAggregate?: Maybe<CRM_proposalAggregateResult>;
  source: CRM_source;
  status: CRM_contactInputStatus;
  subStatus?: Maybe<CRM_contactInputSubStatus>;
  teamBoardItem?: Maybe<CRM_teamBoardItem>;
  values: Array<CRM_contactInputValue>;
  valuesAggregate?: Maybe<CRM_contactInputValueAggregateResult>;
};


export type CRM_contactInputactionsArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionOrder>;
};


export type CRM_contactInputactionsAggregateArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};


export type CRM_contactInputaddedByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_contactInputanswersArgs = {
  filter?: InputMaybe<CRM_contactAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactAnswerOrder>;
};


export type CRM_contactInputanswersAggregateArgs = {
  filter?: InputMaybe<CRM_contactAnswerFilter>;
};


export type CRM_contactInputcampaignContactArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
};


export type CRM_contactInputcontactArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type CRM_contactInputcontactSuggestionsArgs = {
  filter?: InputMaybe<ContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ContactOrder>;
};


export type CRM_contactInputcontactSuggestionsAggregateArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type CRM_contactInputformArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
};


export type CRM_contactInputopportunityLogsArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityLogOrder>;
};


export type CRM_contactInputopportunityLogsAggregateArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
};


export type CRM_contactInputorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type CRM_contactInputpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_contactInputpaymentPlanItemsArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityPaymentPlanItemOrder>;
};


export type CRM_contactInputpaymentPlanItemsAggregateArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
};


export type CRM_contactInputproductsArgs = {
  filter?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProductOrder>;
};


export type CRM_contactInputproductsAggregateArgs = {
  filter?: InputMaybe<ProductFilter>;
};


export type CRM_contactInputproposalsArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_contactInputproposalsAggregateArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
};


export type CRM_contactInputsourceArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
};


export type CRM_contactInputsubStatusArgs = {
  filter?: InputMaybe<CRM_contactInputSubStatusFilter>;
};


export type CRM_contactInputteamBoardItemArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
};


export type CRM_contactInputvaluesArgs = {
  filter?: InputMaybe<CRM_contactInputValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputValueOrder>;
};


export type CRM_contactInputvaluesAggregateArgs = {
  filter?: InputMaybe<CRM_contactInputValueFilter>;
};

export type CRM_contactInputAggregateResult = {
  __typename?: 'CRM_contactInputAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  opportunityRateAvg?: Maybe<Scalars['Float']>;
  opportunityRateMax?: Maybe<Scalars['Int']>;
  opportunityRateMin?: Maybe<Scalars['Int']>;
  opportunityRateSum?: Maybe<Scalars['Int']>;
  opportunityValueAvg?: Maybe<Scalars['Float']>;
  opportunityValueMax?: Maybe<Scalars['Int']>;
  opportunityValueMin?: Maybe<Scalars['Int']>;
  opportunityValueSum?: Maybe<Scalars['Int']>;
};

export type CRM_contactInputFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactInputFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactInputHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  not?: InputMaybe<CRM_contactInputFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactInputFilter>>>;
  status?: InputMaybe<CRM_contactInputStatus_exact>;
};

export enum CRM_contactInputHasFilter {
  actions = 'actions',
  addedBy = 'addedBy',
  answers = 'answers',
  campaignContact = 'campaignContact',
  contact = 'contact',
  contactSuggestions = 'contactSuggestions',
  createdAt = 'createdAt',
  form = 'form',
  index = 'index',
  isManual = 'isManual',
  opportunityLogs = 'opportunityLogs',
  opportunityRate = 'opportunityRate',
  opportunityValue = 'opportunityValue',
  org360 = 'org360',
  package = 'package',
  paymentPlanItems = 'paymentPlanItems',
  products = 'products',
  proposals = 'proposals',
  source = 'source',
  status = 'status',
  subStatus = 'subStatus',
  teamBoardItem = 'teamBoardItem',
  values = 'values'
}

export type CRM_contactInputOrder = {
  asc?: InputMaybe<CRM_contactInputOrderable>;
  desc?: InputMaybe<CRM_contactInputOrderable>;
  then?: InputMaybe<CRM_contactInputOrder>;
};

export enum CRM_contactInputOrderable {
  createdAt = 'createdAt',
  index = 'index',
  opportunityRate = 'opportunityRate',
  opportunityValue = 'opportunityValue'
}

export type CRM_contactInputPatch = {
  actions?: InputMaybe<Array<CRM_contactActionRef>>;
  addedBy?: InputMaybe<CRM_accountRef>;
  answers?: InputMaybe<Array<CRM_contactAnswerRef>>;
  campaignContact?: InputMaybe<CRM_campaignContactRef>;
  contact?: InputMaybe<CRM_contactRef>;
  contactSuggestions?: InputMaybe<Array<ContactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  form?: InputMaybe<CRM_sourceFormRef>;
  index?: InputMaybe<Scalars['Int']>;
  isManual?: InputMaybe<Scalars['Boolean']>;
  opportunityLogs?: InputMaybe<Array<CRM_opportunityLogRef>>;
  opportunityRate?: InputMaybe<Scalars['Int']>;
  opportunityValue?: InputMaybe<Scalars['Int']>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<CRM_PACKAGERef>;
  paymentPlanItems?: InputMaybe<Array<CRM_opportunityPaymentPlanItemRef>>;
  products?: InputMaybe<Array<ProductRef>>;
  proposals?: InputMaybe<Array<CRM_proposalRef>>;
  source?: InputMaybe<CRM_sourceRef>;
  status?: InputMaybe<CRM_contactInputStatus>;
  subStatus?: InputMaybe<CRM_contactInputSubStatusRef>;
  teamBoardItem?: InputMaybe<CRM_teamBoardItemRef>;
  values?: InputMaybe<Array<CRM_contactInputValueRef>>;
};

export type CRM_contactInputRef = {
  actions?: InputMaybe<Array<CRM_contactActionRef>>;
  addedBy?: InputMaybe<CRM_accountRef>;
  answers?: InputMaybe<Array<CRM_contactAnswerRef>>;
  campaignContact?: InputMaybe<CRM_campaignContactRef>;
  contact?: InputMaybe<CRM_contactRef>;
  contactSuggestions?: InputMaybe<Array<ContactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  form?: InputMaybe<CRM_sourceFormRef>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  isManual?: InputMaybe<Scalars['Boolean']>;
  opportunityLogs?: InputMaybe<Array<CRM_opportunityLogRef>>;
  opportunityRate?: InputMaybe<Scalars['Int']>;
  opportunityValue?: InputMaybe<Scalars['Int']>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<CRM_PACKAGERef>;
  paymentPlanItems?: InputMaybe<Array<CRM_opportunityPaymentPlanItemRef>>;
  products?: InputMaybe<Array<ProductRef>>;
  proposals?: InputMaybe<Array<CRM_proposalRef>>;
  source?: InputMaybe<CRM_sourceRef>;
  status?: InputMaybe<CRM_contactInputStatus>;
  subStatus?: InputMaybe<CRM_contactInputSubStatusRef>;
  teamBoardItem?: InputMaybe<CRM_teamBoardItemRef>;
  values?: InputMaybe<Array<CRM_contactInputValueRef>>;
};

export enum CRM_contactInputStatus {
  COMPLETED = 'COMPLETED',
  DEPOSIT_COMPLETED = 'DEPOSIT_COMPLETED',
  DISCARDED = 'DISCARDED',
  FOLLOWING = 'FOLLOWING',
  NEW = 'NEW',
  PENDING = 'PENDING',
  PROPOSAL = 'PROPOSAL'
}

export type CRM_contactInputStatus_exact = {
  between?: InputMaybe<CRM_contactInputStatus>;
  eq?: InputMaybe<CRM_contactInputStatus>;
  ge?: InputMaybe<CRM_contactInputStatus>;
  gt?: InputMaybe<CRM_contactInputStatus>;
  in?: InputMaybe<Array<InputMaybe<CRM_contactInputStatus>>>;
  le?: InputMaybe<CRM_contactInputStatus>;
  lt?: InputMaybe<CRM_contactInputStatus>;
};

export type CRM_contactInputSubStatus = {
  __typename?: 'CRM_contactInputSubStatus';
  icon: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  package: CRM_PACKAGE;
  status: CRM_contactInputStatus;
};


export type CRM_contactInputSubStatuspackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_contactInputSubStatusAggregateResult = {
  __typename?: 'CRM_contactInputSubStatusAggregateResult';
  count?: Maybe<Scalars['Int']>;
  iconMax?: Maybe<Scalars['String']>;
  iconMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_contactInputSubStatusFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactInputSubStatusFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactInputSubStatusHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_contactInputSubStatusFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactInputSubStatusFilter>>>;
  status?: InputMaybe<CRM_contactInputStatus_exact>;
};

export enum CRM_contactInputSubStatusHasFilter {
  icon = 'icon',
  name = 'name',
  package = 'package',
  status = 'status'
}

export type CRM_contactInputSubStatusOrder = {
  asc?: InputMaybe<CRM_contactInputSubStatusOrderable>;
  desc?: InputMaybe<CRM_contactInputSubStatusOrderable>;
  then?: InputMaybe<CRM_contactInputSubStatusOrder>;
};

export enum CRM_contactInputSubStatusOrderable {
  icon = 'icon',
  name = 'name'
}

export type CRM_contactInputSubStatusPatch = {
  icon?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  status?: InputMaybe<CRM_contactInputStatus>;
};

export type CRM_contactInputSubStatusRef = {
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  status?: InputMaybe<CRM_contactInputStatus>;
};

export type CRM_contactInputValue = {
  __typename?: 'CRM_contactInputValue';
  field: CRM_sourceFormField;
  id: Scalars['ID'];
  input: CRM_contactInput;
  organization?: Maybe<Contact>;
  product?: Maybe<Product>;
  value?: Maybe<Scalars['String']>;
};


export type CRM_contactInputValuefieldArgs = {
  filter?: InputMaybe<CRM_sourceFormFieldFilter>;
};


export type CRM_contactInputValueinputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_contactInputValueorganizationArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type CRM_contactInputValueproductArgs = {
  filter?: InputMaybe<ProductFilter>;
};

export type CRM_contactInputValueAggregateResult = {
  __typename?: 'CRM_contactInputValueAggregateResult';
  count?: Maybe<Scalars['Int']>;
  valueMax?: Maybe<Scalars['String']>;
  valueMin?: Maybe<Scalars['String']>;
};

export type CRM_contactInputValueFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactInputValueFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactInputValueHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_contactInputValueFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactInputValueFilter>>>;
  value?: InputMaybe<StringExactFilter>;
};

export enum CRM_contactInputValueHasFilter {
  field = 'field',
  input = 'input',
  organization = 'organization',
  product = 'product',
  value = 'value'
}

export type CRM_contactInputValueOrder = {
  asc?: InputMaybe<CRM_contactInputValueOrderable>;
  desc?: InputMaybe<CRM_contactInputValueOrderable>;
  then?: InputMaybe<CRM_contactInputValueOrder>;
};

export enum CRM_contactInputValueOrderable {
  value = 'value'
}

export type CRM_contactInputValuePatch = {
  field?: InputMaybe<CRM_sourceFormFieldRef>;
  input?: InputMaybe<CRM_contactInputRef>;
  organization?: InputMaybe<ContactRef>;
  product?: InputMaybe<ProductRef>;
  value?: InputMaybe<Scalars['String']>;
};

export type CRM_contactInputValueRef = {
  field?: InputMaybe<CRM_sourceFormFieldRef>;
  id?: InputMaybe<Scalars['ID']>;
  input?: InputMaybe<CRM_contactInputRef>;
  organization?: InputMaybe<ContactRef>;
  product?: InputMaybe<ProductRef>;
  value?: InputMaybe<Scalars['String']>;
};

export type CRM_contactList = {
  __typename?: 'CRM_contactList';
  contacts: Array<Contact>;
  contactsAggregate?: Maybe<ContactAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: CRM_contact;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  package: CRM_PACKAGE;
};


export type CRM_contactListcontactsArgs = {
  filter?: InputMaybe<ContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ContactOrder>;
};


export type CRM_contactListcontactsAggregateArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type CRM_contactListcreatedByArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type CRM_contactListpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_contactListAggregateResult = {
  __typename?: 'CRM_contactListAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_contactListFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_contactListFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_contactListHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<CRM_contactListFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_contactListFilter>>>;
};

export enum CRM_contactListHasFilter {
  contacts = 'contacts',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  name = 'name',
  package = 'package'
}

export type CRM_contactListOrder = {
  asc?: InputMaybe<CRM_contactListOrderable>;
  desc?: InputMaybe<CRM_contactListOrderable>;
  then?: InputMaybe<CRM_contactListOrder>;
};

export enum CRM_contactListOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type CRM_contactListPatch = {
  contacts?: InputMaybe<Array<ContactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_contactRef>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
};

export type CRM_contactListRef = {
  contacts?: InputMaybe<Array<ContactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_contactRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
};

export type CRM_contactPatch = {
  actions?: InputMaybe<Array<CRM_contactActionRef>>;
  areas?: InputMaybe<Array<CRM_areaRef>>;
  assignedTo?: InputMaybe<Array<CRM_accountRef>>;
  campaigns?: InputMaybe<Array<CRM_campaignContactRef>>;
  contact?: InputMaybe<ContactRef>;
  customerStatus?: InputMaybe<CRM_contactCustomerStatus>;
  customerType?: InputMaybe<CRM_contactCustomerType>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  isEmailBounce?: InputMaybe<Scalars['Boolean']>;
  isUnsubscribed?: InputMaybe<Scalars['Boolean']>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<CRM_PACKAGERef>;
  roles?: InputMaybe<Array<CRM_contactRole>>;
  sourceForms?: InputMaybe<Array<CRM_sourceFormRef>>;
  sources?: InputMaybe<Array<CRM_sourceRef>>;
  supplierStatus?: InputMaybe<CRM_contactSupplierStatus>;
  supplierType?: InputMaybe<CRM_contactSupplierType>;
  tokens?: InputMaybe<Array<Scalars['String']>>;
};

export type CRM_contactRef = {
  actions?: InputMaybe<Array<CRM_contactActionRef>>;
  areas?: InputMaybe<Array<CRM_areaRef>>;
  assignedTo?: InputMaybe<Array<CRM_accountRef>>;
  campaigns?: InputMaybe<Array<CRM_campaignContactRef>>;
  contact?: InputMaybe<ContactRef>;
  customerStatus?: InputMaybe<CRM_contactCustomerStatus>;
  customerType?: InputMaybe<CRM_contactCustomerType>;
  id?: InputMaybe<Scalars['ID']>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  isEmailBounce?: InputMaybe<Scalars['Boolean']>;
  isUnsubscribed?: InputMaybe<Scalars['Boolean']>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<CRM_PACKAGERef>;
  roles?: InputMaybe<Array<CRM_contactRole>>;
  sourceForms?: InputMaybe<Array<CRM_sourceFormRef>>;
  sources?: InputMaybe<Array<CRM_sourceRef>>;
  supplierStatus?: InputMaybe<CRM_contactSupplierStatus>;
  supplierType?: InputMaybe<CRM_contactSupplierType>;
  tokens?: InputMaybe<Array<Scalars['String']>>;
};

export enum CRM_contactRole {
  CUSTOMER = 'CUSTOMER',
  SUPPLIER = 'SUPPLIER'
}

export type CRM_contactRole_exact = {
  between?: InputMaybe<CRM_contactRole>;
  eq?: InputMaybe<CRM_contactRole>;
  ge?: InputMaybe<CRM_contactRole>;
  gt?: InputMaybe<CRM_contactRole>;
  in?: InputMaybe<Array<InputMaybe<CRM_contactRole>>>;
  le?: InputMaybe<CRM_contactRole>;
  lt?: InputMaybe<CRM_contactRole>;
};

export enum CRM_contactSupplierStatus {
  DISCARDED = 'DISCARDED',
  SUPPLIER = 'SUPPLIER'
}

export type CRM_contactSupplierStatus_exact = {
  between?: InputMaybe<CRM_contactSupplierStatus>;
  eq?: InputMaybe<CRM_contactSupplierStatus>;
  ge?: InputMaybe<CRM_contactSupplierStatus>;
  gt?: InputMaybe<CRM_contactSupplierStatus>;
  in?: InputMaybe<Array<InputMaybe<CRM_contactSupplierStatus>>>;
  le?: InputMaybe<CRM_contactSupplierStatus>;
  lt?: InputMaybe<CRM_contactSupplierStatus>;
};

export enum CRM_contactSupplierType {
  GENERAL = 'GENERAL',
  LEARNING = 'LEARNING',
  MARKETING = 'MARKETING'
}

export type CRM_contactSupplierType_exact = {
  between?: InputMaybe<CRM_contactSupplierType>;
  eq?: InputMaybe<CRM_contactSupplierType>;
  ge?: InputMaybe<CRM_contactSupplierType>;
  gt?: InputMaybe<CRM_contactSupplierType>;
  in?: InputMaybe<Array<InputMaybe<CRM_contactSupplierType>>>;
  le?: InputMaybe<CRM_contactSupplierType>;
  lt?: InputMaybe<CRM_contactSupplierType>;
};

export type CRM_emailTemplate = {
  __typename?: 'CRM_emailTemplate';
  campaignTemplates: Array<CRM_campaignEmailTemplate>;
  campaignTemplatesAggregate?: Maybe<CRM_campaignEmailTemplateAggregateResult>;
  id: Scalars['ID'];
  package: CRM_PACKAGE;
  template: EmailEditor_template;
};


export type CRM_emailTemplatecampaignTemplatesArgs = {
  filter?: InputMaybe<CRM_campaignEmailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignEmailTemplateOrder>;
};


export type CRM_emailTemplatecampaignTemplatesAggregateArgs = {
  filter?: InputMaybe<CRM_campaignEmailTemplateFilter>;
};


export type CRM_emailTemplatepackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_emailTemplatetemplateArgs = {
  filter?: InputMaybe<EmailEditor_templateFilter>;
};

export type CRM_emailTemplateAggregateResult = {
  __typename?: 'CRM_emailTemplateAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_emailTemplateFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_emailTemplateFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_emailTemplateHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_emailTemplateFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_emailTemplateFilter>>>;
};

export enum CRM_emailTemplateHasFilter {
  campaignTemplates = 'campaignTemplates',
  package = 'package',
  template = 'template'
}

export type CRM_emailTemplatePatch = {
  campaignTemplates?: InputMaybe<Array<CRM_campaignEmailTemplateRef>>;
  package?: InputMaybe<CRM_PACKAGERef>;
  template?: InputMaybe<EmailEditor_templateRef>;
};

export type CRM_emailTemplateRef = {
  campaignTemplates?: InputMaybe<Array<CRM_campaignEmailTemplateRef>>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  template?: InputMaybe<EmailEditor_templateRef>;
};

export type CRM_event = {
  __typename?: 'CRM_event';
  accounts: Array<CRM_accountEvent>;
  accountsAggregate?: Maybe<CRM_accountEventAggregateResult>;
  contactAction?: Maybe<CRM_contactAction>;
  event: Event;
  id: Scalars['ID'];
  package: CRM_PACKAGE;
};


export type CRM_eventaccountsArgs = {
  filter?: InputMaybe<CRM_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_eventaccountsAggregateArgs = {
  filter?: InputMaybe<CRM_accountEventFilter>;
};


export type CRM_eventcontactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};


export type CRM_eventeventArgs = {
  filter?: InputMaybe<EventFilter>;
};


export type CRM_eventpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_eventAggregateResult = {
  __typename?: 'CRM_eventAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_eventFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_eventFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_eventHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_eventFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_eventFilter>>>;
};

export enum CRM_eventHasFilter {
  accounts = 'accounts',
  contactAction = 'contactAction',
  event = 'event',
  package = 'package'
}

export type CRM_eventPatch = {
  accounts?: InputMaybe<Array<CRM_accountEventRef>>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
  event?: InputMaybe<EventRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
};

export type CRM_eventRef = {
  accounts?: InputMaybe<Array<CRM_accountEventRef>>;
  contactAction?: InputMaybe<CRM_contactActionRef>;
  event?: InputMaybe<EventRef>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<CRM_PACKAGERef>;
};

export type CRM_funnel = {
  __typename?: 'CRM_funnel';
  actions: Array<CRM_funnelAction>;
  actionsAggregate?: Maybe<CRM_funnelActionAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: CRM_account;
  id: Scalars['ID'];
  name: Scalars['String'];
  package: CRM_PACKAGE;
  statuses: Array<CRM_funnelStatus>;
  statusesAggregate?: Maybe<CRM_funnelStatusAggregateResult>;
};


export type CRM_funnelactionsArgs = {
  filter?: InputMaybe<CRM_funnelActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelActionOrder>;
};


export type CRM_funnelactionsAggregateArgs = {
  filter?: InputMaybe<CRM_funnelActionFilter>;
};


export type CRM_funnelcreatedByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_funnelpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_funnelstatusesArgs = {
  filter?: InputMaybe<CRM_funnelStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelStatusOrder>;
};


export type CRM_funnelstatusesAggregateArgs = {
  filter?: InputMaybe<CRM_funnelStatusFilter>;
};

export type CRM_funnelAction = {
  __typename?: 'CRM_funnelAction';
  action: CRM_action;
  createdAt: Scalars['DateTime'];
  createdBy: CRM_account;
  funnel: CRM_funnel;
  id: Scalars['ID'];
};


export type CRM_funnelActionactionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};


export type CRM_funnelActioncreatedByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_funnelActionfunnelArgs = {
  filter?: InputMaybe<CRM_funnelFilter>;
};

export type CRM_funnelActionAggregateResult = {
  __typename?: 'CRM_funnelActionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
};

export type CRM_funnelActionFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_funnelActionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_funnelActionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_funnelActionFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_funnelActionFilter>>>;
};

export enum CRM_funnelActionHasFilter {
  action = 'action',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  funnel = 'funnel'
}

export type CRM_funnelActionOrder = {
  asc?: InputMaybe<CRM_funnelActionOrderable>;
  desc?: InputMaybe<CRM_funnelActionOrderable>;
  then?: InputMaybe<CRM_funnelActionOrder>;
};

export enum CRM_funnelActionOrderable {
  createdAt = 'createdAt'
}

export type CRM_funnelActionPatch = {
  action?: InputMaybe<CRM_actionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  funnel?: InputMaybe<CRM_funnelRef>;
};

export type CRM_funnelActionRef = {
  action?: InputMaybe<CRM_actionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  funnel?: InputMaybe<CRM_funnelRef>;
  id?: InputMaybe<Scalars['ID']>;
};

export type CRM_funnelAggregateResult = {
  __typename?: 'CRM_funnelAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_funnelFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_funnelFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_funnelHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CRM_funnelFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_funnelFilter>>>;
};

export enum CRM_funnelHasFilter {
  actions = 'actions',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  name = 'name',
  package = 'package',
  statuses = 'statuses'
}

export type CRM_funnelOrder = {
  asc?: InputMaybe<CRM_funnelOrderable>;
  desc?: InputMaybe<CRM_funnelOrderable>;
  then?: InputMaybe<CRM_funnelOrder>;
};

export enum CRM_funnelOrderable {
  createdAt = 'createdAt',
  name = 'name'
}

export type CRM_funnelPatch = {
  actions?: InputMaybe<Array<CRM_funnelActionRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  statuses?: InputMaybe<Array<CRM_funnelStatusRef>>;
};

export type CRM_funnelRef = {
  actions?: InputMaybe<Array<CRM_funnelActionRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  statuses?: InputMaybe<Array<CRM_funnelStatusRef>>;
};

export type CRM_funnelStatus = {
  __typename?: 'CRM_funnelStatus';
  createdAt: Scalars['DateTime'];
  createdBy: CRM_account;
  funnel: CRM_funnel;
  id: Scalars['ID'];
  index: Scalars['Int'];
  name: Scalars['String'];
};


export type CRM_funnelStatuscreatedByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_funnelStatusfunnelArgs = {
  filter?: InputMaybe<CRM_funnelFilter>;
};

export type CRM_funnelStatusAggregateResult = {
  __typename?: 'CRM_funnelStatusAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_funnelStatusFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_funnelStatusFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_funnelStatusHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CRM_funnelStatusFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_funnelStatusFilter>>>;
};

export enum CRM_funnelStatusHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  funnel = 'funnel',
  index = 'index',
  name = 'name'
}

export type CRM_funnelStatusOrder = {
  asc?: InputMaybe<CRM_funnelStatusOrderable>;
  desc?: InputMaybe<CRM_funnelStatusOrderable>;
  then?: InputMaybe<CRM_funnelStatusOrder>;
};

export enum CRM_funnelStatusOrderable {
  createdAt = 'createdAt',
  index = 'index',
  name = 'name'
}

export type CRM_funnelStatusPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  funnel?: InputMaybe<CRM_funnelRef>;
  index?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
};

export type CRM_funnelStatusRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  funnel?: InputMaybe<CRM_funnelRef>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
};

export type CRM_opportunityLog = {
  __typename?: 'CRM_opportunityLog';
  changeBy?: Maybe<CRM_account>;
  createdAt: Scalars['DateTime'];
  id: Scalars['ID'];
  input: CRM_contactInput;
  package: CRM_PACKAGE;
  paymentPlanItems: Array<CRM_opportunityPaymentPlanItem>;
  paymentPlanItemsAggregate?: Maybe<CRM_opportunityPaymentPlanItemAggregateResult>;
  rate: Scalars['Int'];
  value: Scalars['Int'];
};


export type CRM_opportunityLogchangeByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_opportunityLoginputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_opportunityLogpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_opportunityLogpaymentPlanItemsArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityPaymentPlanItemOrder>;
};


export type CRM_opportunityLogpaymentPlanItemsAggregateArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
};

export type CRM_opportunityLogAggregateResult = {
  __typename?: 'CRM_opportunityLogAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  rateAvg?: Maybe<Scalars['Float']>;
  rateMax?: Maybe<Scalars['Int']>;
  rateMin?: Maybe<Scalars['Int']>;
  rateSum?: Maybe<Scalars['Int']>;
  valueAvg?: Maybe<Scalars['Float']>;
  valueMax?: Maybe<Scalars['Int']>;
  valueMin?: Maybe<Scalars['Int']>;
  valueSum?: Maybe<Scalars['Int']>;
};

export type CRM_opportunityLogFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_opportunityLogFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_opportunityLogHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_opportunityLogFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_opportunityLogFilter>>>;
};

export enum CRM_opportunityLogHasFilter {
  changeBy = 'changeBy',
  createdAt = 'createdAt',
  input = 'input',
  package = 'package',
  paymentPlanItems = 'paymentPlanItems',
  rate = 'rate',
  value = 'value'
}

export type CRM_opportunityLogOrder = {
  asc?: InputMaybe<CRM_opportunityLogOrderable>;
  desc?: InputMaybe<CRM_opportunityLogOrderable>;
  then?: InputMaybe<CRM_opportunityLogOrder>;
};

export enum CRM_opportunityLogOrderable {
  createdAt = 'createdAt',
  rate = 'rate',
  value = 'value'
}

export type CRM_opportunityLogPatch = {
  changeBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  input?: InputMaybe<CRM_contactInputRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  paymentPlanItems?: InputMaybe<Array<CRM_opportunityPaymentPlanItemRef>>;
  rate?: InputMaybe<Scalars['Int']>;
  value?: InputMaybe<Scalars['Int']>;
};

export type CRM_opportunityLogRef = {
  changeBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  input?: InputMaybe<CRM_contactInputRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  paymentPlanItems?: InputMaybe<Array<CRM_opportunityPaymentPlanItemRef>>;
  rate?: InputMaybe<Scalars['Int']>;
  value?: InputMaybe<Scalars['Int']>;
};

export type CRM_opportunityPaymentPlanItem = {
  __typename?: 'CRM_opportunityPaymentPlanItem';
  date: Scalars['DateTime'];
  id: Scalars['ID'];
  input: CRM_contactInput;
  label?: Maybe<Scalars['String']>;
  log: CRM_opportunityLog;
  package: CRM_PACKAGE;
  value: Scalars['Int'];
};


export type CRM_opportunityPaymentPlanIteminputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_opportunityPaymentPlanItemlogArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
};


export type CRM_opportunityPaymentPlanItempackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_opportunityPaymentPlanItemAggregateResult = {
  __typename?: 'CRM_opportunityPaymentPlanItemAggregateResult';
  count?: Maybe<Scalars['Int']>;
  dateMax?: Maybe<Scalars['DateTime']>;
  dateMin?: Maybe<Scalars['DateTime']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
  valueAvg?: Maybe<Scalars['Float']>;
  valueMax?: Maybe<Scalars['Int']>;
  valueMin?: Maybe<Scalars['Int']>;
  valueSum?: Maybe<Scalars['Int']>;
};

export type CRM_opportunityPaymentPlanItemFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_opportunityPaymentPlanItemFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_opportunityPaymentPlanItemHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_opportunityPaymentPlanItemFilter>>>;
};

export enum CRM_opportunityPaymentPlanItemHasFilter {
  date = 'date',
  input = 'input',
  label = 'label',
  log = 'log',
  package = 'package',
  value = 'value'
}

export type CRM_opportunityPaymentPlanItemOrder = {
  asc?: InputMaybe<CRM_opportunityPaymentPlanItemOrderable>;
  desc?: InputMaybe<CRM_opportunityPaymentPlanItemOrderable>;
  then?: InputMaybe<CRM_opportunityPaymentPlanItemOrder>;
};

export enum CRM_opportunityPaymentPlanItemOrderable {
  date = 'date',
  label = 'label',
  value = 'value'
}

export type CRM_opportunityPaymentPlanItemPatch = {
  date?: InputMaybe<Scalars['DateTime']>;
  input?: InputMaybe<CRM_contactInputRef>;
  label?: InputMaybe<Scalars['String']>;
  log?: InputMaybe<CRM_opportunityLogRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  value?: InputMaybe<Scalars['Int']>;
};

export type CRM_opportunityPaymentPlanItemRef = {
  date?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  input?: InputMaybe<CRM_contactInputRef>;
  label?: InputMaybe<Scalars['String']>;
  log?: InputMaybe<CRM_opportunityLogRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  value?: InputMaybe<Scalars['Int']>;
};

export type CRM_overview = {
  __typename?: 'CRM_overview';
  id: Scalars['ID'];
  package: CRM_PACKAGE;
  table: DynamicTable;
};


export type CRM_overviewpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_overviewtableArgs = {
  filter?: InputMaybe<DynamicTableFilter>;
};

export type CRM_overviewAggregateResult = {
  __typename?: 'CRM_overviewAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_overviewFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_overviewFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_overviewHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_overviewFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_overviewFilter>>>;
};

export enum CRM_overviewHasFilter {
  package = 'package',
  table = 'table'
}

export type CRM_overviewPatch = {
  package?: InputMaybe<CRM_PACKAGERef>;
  table?: InputMaybe<DynamicTableRef>;
};

export type CRM_overviewRef = {
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  table?: InputMaybe<DynamicTableRef>;
};

export type CRM_proposal = {
  __typename?: 'CRM_proposal';
  contactAction?: Maybe<CRM_contactAction>;
  id: Scalars['ID'];
  input: Array<CRM_contactInput>;
  inputAggregate?: Maybe<CRM_contactInputAggregateResult>;
  item?: Maybe<CRM_teamBoardItem>;
  itemTask?: Maybe<CRM_teamBoardTask>;
  opportunityLog?: Maybe<CRM_opportunityLog>;
  package: CRM_PACKAGE;
  proposal: Proposal;
};


export type CRM_proposalcontactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};


export type CRM_proposalinputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};


export type CRM_proposalinputAggregateArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_proposalitemArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
};


export type CRM_proposalitemTaskArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
};


export type CRM_proposalopportunityLogArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
};


export type CRM_proposalpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_proposalproposalArgs = {
  filter?: InputMaybe<ProposalFilter>;
};

export type CRM_proposalAggregateResult = {
  __typename?: 'CRM_proposalAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_proposalFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_proposalFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_proposalHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_proposalFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_proposalFilter>>>;
};

export enum CRM_proposalHasFilter {
  contactAction = 'contactAction',
  input = 'input',
  item = 'item',
  itemTask = 'itemTask',
  opportunityLog = 'opportunityLog',
  package = 'package',
  proposal = 'proposal'
}

export type CRM_proposalPatch = {
  contactAction?: InputMaybe<CRM_contactActionRef>;
  input?: InputMaybe<Array<CRM_contactInputRef>>;
  item?: InputMaybe<CRM_teamBoardItemRef>;
  itemTask?: InputMaybe<CRM_teamBoardTaskRef>;
  opportunityLog?: InputMaybe<CRM_opportunityLogRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  proposal?: InputMaybe<ProposalRef>;
};

export type CRM_proposalRef = {
  contactAction?: InputMaybe<CRM_contactActionRef>;
  id?: InputMaybe<Scalars['ID']>;
  input?: InputMaybe<Array<CRM_contactInputRef>>;
  item?: InputMaybe<CRM_teamBoardItemRef>;
  itemTask?: InputMaybe<CRM_teamBoardTaskRef>;
  opportunityLog?: InputMaybe<CRM_opportunityLogRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  proposal?: InputMaybe<ProposalRef>;
};

export type CRM_role = {
  __typename?: 'CRM_role';
  accounts: Array<Maybe<CRM_account>>;
  accountsAggregate?: Maybe<CRM_accountAggregateResult>;
  id: Scalars['ID'];
  org360: Org360;
  package: CRM_PACKAGE;
  type: CRM_roleType;
};


export type CRM_roleaccountsArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_roleaccountsAggregateArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_roleorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type CRM_rolepackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_roleAggregateResult = {
  __typename?: 'CRM_roleAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type CRM_roleFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_roleFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_roleHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_roleFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_roleFilter>>>;
  type?: InputMaybe<CRM_roleType_hash>;
};

export enum CRM_roleHasFilter {
  accounts = 'accounts',
  org360 = 'org360',
  package = 'package',
  type = 'type'
}

export type CRM_rolePatch = {
  accounts?: InputMaybe<Array<InputMaybe<CRM_accountRef>>>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<CRM_PACKAGERef>;
  type?: InputMaybe<CRM_roleType>;
};

export type CRM_roleRef = {
  accounts?: InputMaybe<Array<InputMaybe<CRM_accountRef>>>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<CRM_PACKAGERef>;
  type?: InputMaybe<CRM_roleType>;
};

export enum CRM_roleType {
  ADMIN = 'ADMIN',
  AGENT = 'AGENT',
  DISABLED = 'DISABLED',
  MANAGER = 'MANAGER',
  admin = 'admin',
  agent = 'agent',
  disabled = 'disabled',
  manager = 'manager'
}

export type CRM_roleType_hash = {
  eq?: InputMaybe<CRM_roleType>;
  in?: InputMaybe<Array<InputMaybe<CRM_roleType>>>;
};

export type CRM_socialMediaCampaign = {
  __typename?: 'CRM_socialMediaCampaign';
  content: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy: CRM_account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  media: Array<CRM_socialMediaCampaign_media>;
  mediaAggregate?: Maybe<CRM_socialMediaCampaign_mediaAggregateResult>;
  package: CRM_PACKAGE;
  posts: Array<CRM_socialMediaCampaign_post>;
  postsAggregate?: Maybe<CRM_socialMediaCampaign_postAggregateResult>;
  profileId: Scalars['String'];
  status: CRM_socialMediaCampaign_status;
  title: Scalars['String'];
};


export type CRM_socialMediaCampaigncreatedByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_socialMediaCampaignmediaArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_mediaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_mediaOrder>;
};


export type CRM_socialMediaCampaignmediaAggregateArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_mediaFilter>;
};


export type CRM_socialMediaCampaignpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_socialMediaCampaignpostsArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_postFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_postOrder>;
};


export type CRM_socialMediaCampaignpostsAggregateArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_postFilter>;
};

export type CRM_socialMediaCampaignAggregateResult = {
  __typename?: 'CRM_socialMediaCampaignAggregateResult';
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  profileIdMax?: Maybe<Scalars['String']>;
  profileIdMin?: Maybe<Scalars['String']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
};

export type CRM_socialMediaCampaignFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_socialMediaCampaignFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_socialMediaCampaignHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_socialMediaCampaignFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_socialMediaCampaignFilter>>>;
  profileId?: InputMaybe<StringExactFilter>;
  status?: InputMaybe<CRM_socialMediaCampaign_status_exact>;
  title?: InputMaybe<StringRegExpFilter>;
};

export enum CRM_socialMediaCampaignHasFilter {
  content = 'content',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  media = 'media',
  package = 'package',
  posts = 'posts',
  profileId = 'profileId',
  status = 'status',
  title = 'title'
}

export type CRM_socialMediaCampaignOrder = {
  asc?: InputMaybe<CRM_socialMediaCampaignOrderable>;
  desc?: InputMaybe<CRM_socialMediaCampaignOrderable>;
  then?: InputMaybe<CRM_socialMediaCampaignOrder>;
};

export enum CRM_socialMediaCampaignOrderable {
  content = 'content',
  createdAt = 'createdAt',
  guid = 'guid',
  profileId = 'profileId',
  title = 'title'
}

export type CRM_socialMediaCampaignPatch = {
  content?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Array<CRM_socialMediaCampaign_mediaRef>>;
  package?: InputMaybe<CRM_PACKAGERef>;
  posts?: InputMaybe<Array<CRM_socialMediaCampaign_postRef>>;
  profileId?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<CRM_socialMediaCampaign_status>;
  title?: InputMaybe<Scalars['String']>;
};

export type CRM_socialMediaCampaignRef = {
  content?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<CRM_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  media?: InputMaybe<Array<CRM_socialMediaCampaign_mediaRef>>;
  package?: InputMaybe<CRM_PACKAGERef>;
  posts?: InputMaybe<Array<CRM_socialMediaCampaign_postRef>>;
  profileId?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<CRM_socialMediaCampaign_status>;
  title?: InputMaybe<Scalars['String']>;
};

export type CRM_socialMediaCampaign_media = {
  __typename?: 'CRM_socialMediaCampaign_media';
  campaign: CRM_socialMediaCampaign;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: CRM_PACKAGE;
  type: Scalars['String'];
  url: Scalars['String'];
};


export type CRM_socialMediaCampaign_mediacampaignArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaignFilter>;
};


export type CRM_socialMediaCampaign_mediapackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_socialMediaCampaign_mediaAggregateResult = {
  __typename?: 'CRM_socialMediaCampaign_mediaAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
};

export type CRM_socialMediaCampaign_mediaFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_socialMediaCampaign_mediaFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_socialMediaCampaign_mediaHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_socialMediaCampaign_mediaFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_socialMediaCampaign_mediaFilter>>>;
  type?: InputMaybe<StringRegExpFilter>;
};

export enum CRM_socialMediaCampaign_mediaHasFilter {
  campaign = 'campaign',
  guid = 'guid',
  package = 'package',
  type = 'type',
  url = 'url'
}

export type CRM_socialMediaCampaign_mediaOrder = {
  asc?: InputMaybe<CRM_socialMediaCampaign_mediaOrderable>;
  desc?: InputMaybe<CRM_socialMediaCampaign_mediaOrderable>;
  then?: InputMaybe<CRM_socialMediaCampaign_mediaOrder>;
};

export enum CRM_socialMediaCampaign_mediaOrderable {
  guid = 'guid',
  type = 'type',
  url = 'url'
}

export type CRM_socialMediaCampaign_mediaPatch = {
  campaign?: InputMaybe<CRM_socialMediaCampaignRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  type?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type CRM_socialMediaCampaign_mediaRef = {
  campaign?: InputMaybe<CRM_socialMediaCampaignRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  type?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type CRM_socialMediaCampaign_post = {
  __typename?: 'CRM_socialMediaCampaign_post';
  campaign: CRM_socialMediaCampaign;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: CRM_PACKAGE;
  ref: Scalars['String'];
  scheduledAt: Scalars['DateTime'];
  socialMedia: Scalars['String'];
};


export type CRM_socialMediaCampaign_postcampaignArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaignFilter>;
};


export type CRM_socialMediaCampaign_postpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_socialMediaCampaign_postAggregateResult = {
  __typename?: 'CRM_socialMediaCampaign_postAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  refMax?: Maybe<Scalars['String']>;
  refMin?: Maybe<Scalars['String']>;
  scheduledAtMax?: Maybe<Scalars['DateTime']>;
  scheduledAtMin?: Maybe<Scalars['DateTime']>;
  socialMediaMax?: Maybe<Scalars['String']>;
  socialMediaMin?: Maybe<Scalars['String']>;
};

export type CRM_socialMediaCampaign_postFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_socialMediaCampaign_postFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_socialMediaCampaign_postHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_socialMediaCampaign_postFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_socialMediaCampaign_postFilter>>>;
  ref?: InputMaybe<StringExactFilter>;
  scheduledAt?: InputMaybe<DateTimeFilter>;
  socialMedia?: InputMaybe<StringRegExpFilter>;
};

export enum CRM_socialMediaCampaign_postHasFilter {
  campaign = 'campaign',
  guid = 'guid',
  package = 'package',
  ref = 'ref',
  scheduledAt = 'scheduledAt',
  socialMedia = 'socialMedia'
}

export type CRM_socialMediaCampaign_postOrder = {
  asc?: InputMaybe<CRM_socialMediaCampaign_postOrderable>;
  desc?: InputMaybe<CRM_socialMediaCampaign_postOrderable>;
  then?: InputMaybe<CRM_socialMediaCampaign_postOrder>;
};

export enum CRM_socialMediaCampaign_postOrderable {
  guid = 'guid',
  ref = 'ref',
  scheduledAt = 'scheduledAt',
  socialMedia = 'socialMedia'
}

export type CRM_socialMediaCampaign_postPatch = {
  campaign?: InputMaybe<CRM_socialMediaCampaignRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  ref?: InputMaybe<Scalars['String']>;
  scheduledAt?: InputMaybe<Scalars['DateTime']>;
  socialMedia?: InputMaybe<Scalars['String']>;
};

export type CRM_socialMediaCampaign_postRef = {
  campaign?: InputMaybe<CRM_socialMediaCampaignRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  ref?: InputMaybe<Scalars['String']>;
  scheduledAt?: InputMaybe<Scalars['DateTime']>;
  socialMedia?: InputMaybe<Scalars['String']>;
};

export enum CRM_socialMediaCampaign_status {
  DRAFT = 'DRAFT',
  PUBLISHED = 'PUBLISHED',
  SCHEDULED = 'SCHEDULED'
}

export type CRM_socialMediaCampaign_status_exact = {
  between?: InputMaybe<CRM_socialMediaCampaign_status>;
  eq?: InputMaybe<CRM_socialMediaCampaign_status>;
  ge?: InputMaybe<CRM_socialMediaCampaign_status>;
  gt?: InputMaybe<CRM_socialMediaCampaign_status>;
  in?: InputMaybe<Array<InputMaybe<CRM_socialMediaCampaign_status>>>;
  le?: InputMaybe<CRM_socialMediaCampaign_status>;
  lt?: InputMaybe<CRM_socialMediaCampaign_status>;
};

export type CRM_source = {
  __typename?: 'CRM_source';
  categories: Array<CRM_sourceCategory>;
  categoriesAggregate?: Maybe<CRM_sourceCategoryAggregateResult>;
  contacts: Array<CRM_contact>;
  contactsAggregate?: Maybe<CRM_contactAggregateResult>;
  forms: Array<CRM_sourceForm>;
  formsAggregate?: Maybe<CRM_sourceFormAggregateResult>;
  id: Scalars['ID'];
  inputs: Array<CRM_contactInput>;
  inputsAggregate?: Maybe<CRM_contactInputAggregateResult>;
  isDefault: Scalars['Boolean'];
  name: Scalars['String'];
  oldId?: Maybe<Scalars['String']>;
  package: CRM_PACKAGE;
};


export type CRM_sourcecategoriesArgs = {
  filter?: InputMaybe<CRM_sourceCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceCategoryOrder>;
};


export type CRM_sourcecategoriesAggregateArgs = {
  filter?: InputMaybe<CRM_sourceCategoryFilter>;
};


export type CRM_sourcecontactsArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_sourcecontactsAggregateArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type CRM_sourceformsArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormOrder>;
};


export type CRM_sourceformsAggregateArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
};


export type CRM_sourceinputsArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};


export type CRM_sourceinputsAggregateArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_sourcepackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_sourceAggregateResult = {
  __typename?: 'CRM_sourceAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  oldIdMax?: Maybe<Scalars['String']>;
  oldIdMin?: Maybe<Scalars['String']>;
};

export type CRM_sourceCategory = {
  __typename?: 'CRM_sourceCategory';
  color: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  package: CRM_PACKAGE;
  sources: Array<CRM_source>;
  sourcesAggregate?: Maybe<CRM_sourceAggregateResult>;
};


export type CRM_sourceCategorypackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_sourceCategorysourcesArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceOrder>;
};


export type CRM_sourceCategorysourcesAggregateArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
};

export type CRM_sourceCategoryAggregateResult = {
  __typename?: 'CRM_sourceCategoryAggregateResult';
  colorMax?: Maybe<Scalars['String']>;
  colorMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_sourceCategoryFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_sourceCategoryFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_sourceCategoryHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_sourceCategoryFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_sourceCategoryFilter>>>;
};

export enum CRM_sourceCategoryHasFilter {
  color = 'color',
  name = 'name',
  package = 'package',
  sources = 'sources'
}

export type CRM_sourceCategoryOrder = {
  asc?: InputMaybe<CRM_sourceCategoryOrderable>;
  desc?: InputMaybe<CRM_sourceCategoryOrderable>;
  then?: InputMaybe<CRM_sourceCategoryOrder>;
};

export enum CRM_sourceCategoryOrderable {
  color = 'color',
  name = 'name'
}

export type CRM_sourceCategoryPatch = {
  color?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  sources?: InputMaybe<Array<CRM_sourceRef>>;
};

export type CRM_sourceCategoryRef = {
  color?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  sources?: InputMaybe<Array<CRM_sourceRef>>;
};

export type CRM_sourceFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_sourceFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_sourceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<CRM_sourceFilter>;
  oldId?: InputMaybe<StringExactFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_sourceFilter>>>;
};

export type CRM_sourceForm = {
  __typename?: 'CRM_sourceForm';
  contacts: Array<CRM_contact>;
  contactsAggregate?: Maybe<CRM_contactAggregateResult>;
  fields: Array<CRM_sourceFormField>;
  fieldsAggregate?: Maybe<CRM_sourceFormFieldAggregateResult>;
  id: Scalars['ID'];
  inputs: Array<CRM_contactInput>;
  inputsAggregate?: Maybe<CRM_contactInputAggregateResult>;
  name: Scalars['String'];
  oldId?: Maybe<Scalars['String']>;
  package: CRM_PACKAGE;
  reason: CRM_sourceFormReason;
  responseEmailTemplate?: Maybe<CRM_sourceForm_emailTemplate>;
  source: CRM_source;
};


export type CRM_sourceFormcontactsArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type CRM_sourceFormcontactsAggregateArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type CRM_sourceFormfieldsArgs = {
  filter?: InputMaybe<CRM_sourceFormFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormFieldOrder>;
};


export type CRM_sourceFormfieldsAggregateArgs = {
  filter?: InputMaybe<CRM_sourceFormFieldFilter>;
};


export type CRM_sourceForminputsArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};


export type CRM_sourceForminputsAggregateArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_sourceFormpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_sourceFormreasonArgs = {
  filter?: InputMaybe<CRM_sourceFormReasonFilter>;
};


export type CRM_sourceFormresponseEmailTemplateArgs = {
  filter?: InputMaybe<CRM_sourceForm_emailTemplateFilter>;
};


export type CRM_sourceFormsourceArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
};

export type CRM_sourceFormAggregateResult = {
  __typename?: 'CRM_sourceFormAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  oldIdMax?: Maybe<Scalars['String']>;
  oldIdMin?: Maybe<Scalars['String']>;
};

export type CRM_sourceFormField = {
  __typename?: 'CRM_sourceFormField';
  form: CRM_sourceForm;
  id: Scalars['ID'];
  label?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  type: CRM_sourceFormFieldType;
};


export type CRM_sourceFormFieldformArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
};

export type CRM_sourceFormFieldAggregateResult = {
  __typename?: 'CRM_sourceFormFieldAggregateResult';
  count?: Maybe<Scalars['Int']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_sourceFormFieldFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_sourceFormFieldFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_sourceFormFieldHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_sourceFormFieldFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_sourceFormFieldFilter>>>;
  type?: InputMaybe<CRM_sourceFormFieldType_exact>;
};

export enum CRM_sourceFormFieldHasFilter {
  form = 'form',
  label = 'label',
  name = 'name',
  type = 'type'
}

export type CRM_sourceFormFieldOrder = {
  asc?: InputMaybe<CRM_sourceFormFieldOrderable>;
  desc?: InputMaybe<CRM_sourceFormFieldOrderable>;
  then?: InputMaybe<CRM_sourceFormFieldOrder>;
};

export enum CRM_sourceFormFieldOrderable {
  label = 'label',
  name = 'name'
}

export type CRM_sourceFormFieldPatch = {
  form?: InputMaybe<CRM_sourceFormRef>;
  label?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<CRM_sourceFormFieldType>;
};

export type CRM_sourceFormFieldRef = {
  form?: InputMaybe<CRM_sourceFormRef>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<CRM_sourceFormFieldType>;
};

export enum CRM_sourceFormFieldType {
  ADDRESS = 'ADDRESS',
  ADDRESS_INFO = 'ADDRESS_INFO',
  ADDRESS_NUMBER = 'ADDRESS_NUMBER',
  BOOLEAN = 'BOOLEAN',
  CITY = 'CITY',
  COMPANY = 'COMPANY',
  COUNTRY = 'COUNTRY',
  DATE = 'DATE',
  DNI = 'DNI',
  EMAIL = 'EMAIL',
  EMPLOYMENT_TYPE = 'EMPLOYMENT_TYPE',
  JOB_POSITION = 'JOB_POSITION',
  NAME = 'NAME',
  NUMBER = 'NUMBER',
  PHONE = 'PHONE',
  PRODUCT = 'PRODUCT',
  PROVINCE = 'PROVINCE',
  ROAD_TYPE = 'ROAD_TYPE',
  SURNAME = 'SURNAME',
  TEXT = 'TEXT',
  URL = 'URL',
  ZIP_CODE = 'ZIP_CODE'
}

export type CRM_sourceFormFieldType_exact = {
  between?: InputMaybe<CRM_sourceFormFieldType>;
  eq?: InputMaybe<CRM_sourceFormFieldType>;
  ge?: InputMaybe<CRM_sourceFormFieldType>;
  gt?: InputMaybe<CRM_sourceFormFieldType>;
  in?: InputMaybe<Array<InputMaybe<CRM_sourceFormFieldType>>>;
  le?: InputMaybe<CRM_sourceFormFieldType>;
  lt?: InputMaybe<CRM_sourceFormFieldType>;
};

export type CRM_sourceFormFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_sourceFormFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_sourceFormHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_sourceFormFilter>;
  oldId?: InputMaybe<StringExactFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_sourceFormFilter>>>;
};

export enum CRM_sourceFormHasFilter {
  contacts = 'contacts',
  fields = 'fields',
  inputs = 'inputs',
  name = 'name',
  oldId = 'oldId',
  package = 'package',
  reason = 'reason',
  responseEmailTemplate = 'responseEmailTemplate',
  source = 'source'
}

export type CRM_sourceFormOrder = {
  asc?: InputMaybe<CRM_sourceFormOrderable>;
  desc?: InputMaybe<CRM_sourceFormOrderable>;
  then?: InputMaybe<CRM_sourceFormOrder>;
};

export enum CRM_sourceFormOrderable {
  name = 'name',
  oldId = 'oldId'
}

export type CRM_sourceFormPatch = {
  contacts?: InputMaybe<Array<CRM_contactRef>>;
  fields?: InputMaybe<Array<CRM_sourceFormFieldRef>>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  name?: InputMaybe<Scalars['String']>;
  oldId?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  reason?: InputMaybe<CRM_sourceFormReasonRef>;
  responseEmailTemplate?: InputMaybe<CRM_sourceForm_emailTemplateRef>;
  source?: InputMaybe<CRM_sourceRef>;
};

export type CRM_sourceFormReason = {
  __typename?: 'CRM_sourceFormReason';
  color: Scalars['String'];
  forms?: Maybe<Array<CRM_sourceForm>>;
  formsAggregate?: Maybe<CRM_sourceFormAggregateResult>;
  id: Scalars['ID'];
  name: Scalars['String'];
  package: CRM_PACKAGE;
  toCustomerStatus: CRM_contactCustomerStatus;
};


export type CRM_sourceFormReasonformsArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormOrder>;
};


export type CRM_sourceFormReasonformsAggregateArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
};


export type CRM_sourceFormReasonpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_sourceFormReasonAggregateResult = {
  __typename?: 'CRM_sourceFormReasonAggregateResult';
  colorMax?: Maybe<Scalars['String']>;
  colorMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_sourceFormReasonFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_sourceFormReasonFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CRM_sourceFormReasonHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_sourceFormReasonFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_sourceFormReasonFilter>>>;
};

export enum CRM_sourceFormReasonHasFilter {
  color = 'color',
  forms = 'forms',
  name = 'name',
  package = 'package',
  toCustomerStatus = 'toCustomerStatus'
}

export type CRM_sourceFormReasonOrder = {
  asc?: InputMaybe<CRM_sourceFormReasonOrderable>;
  desc?: InputMaybe<CRM_sourceFormReasonOrderable>;
  then?: InputMaybe<CRM_sourceFormReasonOrder>;
};

export enum CRM_sourceFormReasonOrderable {
  color = 'color',
  name = 'name'
}

export type CRM_sourceFormReasonPatch = {
  color?: InputMaybe<Scalars['String']>;
  forms?: InputMaybe<Array<CRM_sourceFormRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  toCustomerStatus?: InputMaybe<CRM_contactCustomerStatus>;
};

export type CRM_sourceFormReasonRef = {
  color?: InputMaybe<Scalars['String']>;
  forms?: InputMaybe<Array<CRM_sourceFormRef>>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  toCustomerStatus?: InputMaybe<CRM_contactCustomerStatus>;
};

export type CRM_sourceFormRef = {
  contacts?: InputMaybe<Array<CRM_contactRef>>;
  fields?: InputMaybe<Array<CRM_sourceFormFieldRef>>;
  id?: InputMaybe<Scalars['ID']>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  name?: InputMaybe<Scalars['String']>;
  oldId?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  reason?: InputMaybe<CRM_sourceFormReasonRef>;
  responseEmailTemplate?: InputMaybe<CRM_sourceForm_emailTemplateRef>;
  source?: InputMaybe<CRM_sourceRef>;
};

export type CRM_sourceForm_emailTemplate = {
  __typename?: 'CRM_sourceForm_emailTemplate';
  form: Array<CRM_sourceForm>;
  formAggregate?: Maybe<CRM_sourceFormAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  integrationsAccount?: Maybe<Integrations_account>;
  package: CRM_PACKAGE;
  subject: Scalars['String'];
  template: Scalars['String'];
};


export type CRM_sourceForm_emailTemplateformArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormOrder>;
};


export type CRM_sourceForm_emailTemplateformAggregateArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
};


export type CRM_sourceForm_emailTemplateintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type CRM_sourceForm_emailTemplatepackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_sourceForm_emailTemplateAggregateResult = {
  __typename?: 'CRM_sourceForm_emailTemplateAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  subjectMax?: Maybe<Scalars['String']>;
  subjectMin?: Maybe<Scalars['String']>;
  templateMax?: Maybe<Scalars['String']>;
  templateMin?: Maybe<Scalars['String']>;
};

export type CRM_sourceForm_emailTemplateFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_sourceForm_emailTemplateFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_sourceForm_emailTemplateHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_sourceForm_emailTemplateFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_sourceForm_emailTemplateFilter>>>;
};

export enum CRM_sourceForm_emailTemplateHasFilter {
  form = 'form',
  guid = 'guid',
  integrationsAccount = 'integrationsAccount',
  package = 'package',
  subject = 'subject',
  template = 'template'
}

export type CRM_sourceForm_emailTemplateOrder = {
  asc?: InputMaybe<CRM_sourceForm_emailTemplateOrderable>;
  desc?: InputMaybe<CRM_sourceForm_emailTemplateOrderable>;
  then?: InputMaybe<CRM_sourceForm_emailTemplateOrder>;
};

export enum CRM_sourceForm_emailTemplateOrderable {
  guid = 'guid',
  subject = 'subject',
  template = 'template'
}

export type CRM_sourceForm_emailTemplatePatch = {
  form?: InputMaybe<Array<CRM_sourceFormRef>>;
  guid?: InputMaybe<Scalars['String']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  subject?: InputMaybe<Scalars['String']>;
  template?: InputMaybe<Scalars['String']>;
};

export type CRM_sourceForm_emailTemplateRef = {
  form?: InputMaybe<Array<CRM_sourceFormRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  subject?: InputMaybe<Scalars['String']>;
  template?: InputMaybe<Scalars['String']>;
};

export enum CRM_sourceHasFilter {
  categories = 'categories',
  contacts = 'contacts',
  forms = 'forms',
  inputs = 'inputs',
  isDefault = 'isDefault',
  name = 'name',
  oldId = 'oldId',
  package = 'package'
}

export type CRM_sourceOrder = {
  asc?: InputMaybe<CRM_sourceOrderable>;
  desc?: InputMaybe<CRM_sourceOrderable>;
  then?: InputMaybe<CRM_sourceOrder>;
};

export enum CRM_sourceOrderable {
  name = 'name',
  oldId = 'oldId'
}

export type CRM_sourcePatch = {
  categories?: InputMaybe<Array<CRM_sourceCategoryRef>>;
  contacts?: InputMaybe<Array<CRM_contactRef>>;
  forms?: InputMaybe<Array<CRM_sourceFormRef>>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  oldId?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
};

export type CRM_sourceRef = {
  categories?: InputMaybe<Array<CRM_sourceCategoryRef>>;
  contacts?: InputMaybe<Array<CRM_contactRef>>;
  forms?: InputMaybe<Array<CRM_sourceFormRef>>;
  id?: InputMaybe<Scalars['ID']>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  oldId?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
};

export type CRM_team = {
  __typename?: 'CRM_team';
  accounts: Array<CRM_teamAccount>;
  accountsAggregate?: Maybe<CRM_teamAccountAggregateResult>;
  actionBoardEffects: Array<CRM_teamActionBoardEffect>;
  actionBoardEffectsAggregate?: Maybe<CRM_teamActionBoardEffectAggregateResult>;
  actions: Array<CRM_teamAction>;
  actionsAggregate?: Maybe<CRM_teamActionAggregateResult>;
  boardTasks: Array<CRM_teamBoardTask>;
  boardTasksAggregate?: Maybe<CRM_teamBoardTaskAggregateResult>;
  boards: Array<CRM_teamBoard>;
  boardsAggregate?: Maybe<CRM_teamBoardAggregateResult>;
  createBy: CRM_account;
  createdAt: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  isDefault: Scalars['Boolean'];
  items: Array<CRM_teamBoardItem>;
  itemsAggregate?: Maybe<CRM_teamBoardItemAggregateResult>;
  name: Scalars['String'];
  package: CRM_PACKAGE;
};


export type CRM_teamaccountsArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamAccountOrder>;
};


export type CRM_teamaccountsAggregateArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
};


export type CRM_teamactionBoardEffectsArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionBoardEffectOrder>;
};


export type CRM_teamactionBoardEffectsAggregateArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
};


export type CRM_teamactionsArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionOrder>;
};


export type CRM_teamactionsAggregateArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
};


export type CRM_teamboardTasksArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardTaskOrder>;
};


export type CRM_teamboardTasksAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
};


export type CRM_teamboardsArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardOrder>;
};


export type CRM_teamboardsAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
};


export type CRM_teamcreateByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_teamitemsArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardItemOrder>;
};


export type CRM_teamitemsAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
};


export type CRM_teampackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};

export type CRM_teamAccount = {
  __typename?: 'CRM_teamAccount';
  account: CRM_account;
  activeSince: Scalars['DateTime'];
  assignedItems: Array<CRM_teamBoardItem>;
  assignedItemsAggregate?: Maybe<CRM_teamBoardItemAggregateResult>;
  createBy: CRM_account;
  createdAt: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  inactiveSince?: Maybe<Scalars['DateTime']>;
  kickedSince?: Maybe<Scalars['DateTime']>;
  package: CRM_PACKAGE;
  role: CRM_teamAccountRole;
  status: CRM_teamAccountStatus;
  tasks: Array<CRM_teamBoardTask>;
  tasksAggregate?: Maybe<CRM_teamBoardTaskAggregateResult>;
  team: CRM_team;
};


export type CRM_teamAccountaccountArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_teamAccountassignedItemsArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardItemOrder>;
};


export type CRM_teamAccountassignedItemsAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
};


export type CRM_teamAccountcreateByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_teamAccountpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_teamAccounttasksArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardTaskOrder>;
};


export type CRM_teamAccounttasksAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
};


export type CRM_teamAccountteamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
};

export type CRM_teamAccountAggregateResult = {
  __typename?: 'CRM_teamAccountAggregateResult';
  activeSinceMax?: Maybe<Scalars['DateTime']>;
  activeSinceMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  inactiveSinceMax?: Maybe<Scalars['DateTime']>;
  inactiveSinceMin?: Maybe<Scalars['DateTime']>;
  kickedSinceMax?: Maybe<Scalars['DateTime']>;
  kickedSinceMin?: Maybe<Scalars['DateTime']>;
};

export type CRM_teamAccountFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_teamAccountFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_teamAccountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_teamAccountFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_teamAccountFilter>>>;
  role?: InputMaybe<CRM_teamAccountRole_exact>;
  status?: InputMaybe<CRM_teamAccountStatus_exact>;
};

export enum CRM_teamAccountHasFilter {
  account = 'account',
  activeSince = 'activeSince',
  assignedItems = 'assignedItems',
  createBy = 'createBy',
  createdAt = 'createdAt',
  guid = 'guid',
  inactiveSince = 'inactiveSince',
  kickedSince = 'kickedSince',
  package = 'package',
  role = 'role',
  status = 'status',
  tasks = 'tasks',
  team = 'team'
}

export type CRM_teamAccountOrder = {
  asc?: InputMaybe<CRM_teamAccountOrderable>;
  desc?: InputMaybe<CRM_teamAccountOrderable>;
  then?: InputMaybe<CRM_teamAccountOrder>;
};

export enum CRM_teamAccountOrderable {
  activeSince = 'activeSince',
  createdAt = 'createdAt',
  guid = 'guid',
  inactiveSince = 'inactiveSince',
  kickedSince = 'kickedSince'
}

export type CRM_teamAccountPatch = {
  account?: InputMaybe<CRM_accountRef>;
  activeSince?: InputMaybe<Scalars['DateTime']>;
  assignedItems?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  inactiveSince?: InputMaybe<Scalars['DateTime']>;
  kickedSince?: InputMaybe<Scalars['DateTime']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  role?: InputMaybe<CRM_teamAccountRole>;
  status?: InputMaybe<CRM_teamAccountStatus>;
  tasks?: InputMaybe<Array<CRM_teamBoardTaskRef>>;
  team?: InputMaybe<CRM_teamRef>;
};

export type CRM_teamAccountRef = {
  account?: InputMaybe<CRM_accountRef>;
  activeSince?: InputMaybe<Scalars['DateTime']>;
  assignedItems?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  inactiveSince?: InputMaybe<Scalars['DateTime']>;
  kickedSince?: InputMaybe<Scalars['DateTime']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  role?: InputMaybe<CRM_teamAccountRole>;
  status?: InputMaybe<CRM_teamAccountStatus>;
  tasks?: InputMaybe<Array<CRM_teamBoardTaskRef>>;
  team?: InputMaybe<CRM_teamRef>;
};

export enum CRM_teamAccountRole {
  COLLABORATOR = 'COLLABORATOR',
  MEMBER = 'MEMBER'
}

export type CRM_teamAccountRole_exact = {
  between?: InputMaybe<CRM_teamAccountRole>;
  eq?: InputMaybe<CRM_teamAccountRole>;
  ge?: InputMaybe<CRM_teamAccountRole>;
  gt?: InputMaybe<CRM_teamAccountRole>;
  in?: InputMaybe<Array<InputMaybe<CRM_teamAccountRole>>>;
  le?: InputMaybe<CRM_teamAccountRole>;
  lt?: InputMaybe<CRM_teamAccountRole>;
};

export enum CRM_teamAccountStatus {
  ACTIVE = 'ACTIVE',
  INACTIVE = 'INACTIVE',
  KICKED = 'KICKED'
}

export type CRM_teamAccountStatus_exact = {
  between?: InputMaybe<CRM_teamAccountStatus>;
  eq?: InputMaybe<CRM_teamAccountStatus>;
  ge?: InputMaybe<CRM_teamAccountStatus>;
  gt?: InputMaybe<CRM_teamAccountStatus>;
  in?: InputMaybe<Array<InputMaybe<CRM_teamAccountStatus>>>;
  le?: InputMaybe<CRM_teamAccountStatus>;
  lt?: InputMaybe<CRM_teamAccountStatus>;
};

export type CRM_teamAction = {
  __typename?: 'CRM_teamAction';
  boardEffects: Array<CRM_teamActionBoardEffect>;
  boardEffectsAggregate?: Maybe<CRM_teamActionBoardEffectAggregateResult>;
  createBy: CRM_account;
  createdAt: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  package: CRM_PACKAGE;
  team: CRM_team;
  type: CRM_teamActionType;
};


export type CRM_teamActionboardEffectsArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionBoardEffectOrder>;
};


export type CRM_teamActionboardEffectsAggregateArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
};


export type CRM_teamActioncreateByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_teamActionpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_teamActionteamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
};

export type CRM_teamActionAggregateResult = {
  __typename?: 'CRM_teamActionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_teamActionBoardEffect = {
  __typename?: 'CRM_teamActionBoardEffect';
  action: CRM_teamAction;
  board?: Maybe<CRM_teamBoard>;
  createBy: CRM_account;
  createdAt: Scalars['DateTime'];
  event: CRM_teamActionBoardEffectEvent;
  finalStatus?: Maybe<CRM_teamBoardStatus>;
  finalSubStatus?: Maybe<CRM_teamBoardSubStatus>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  initialStatuses: Array<CRM_teamBoardStatus>;
  initialStatusesAggregate?: Maybe<CRM_teamBoardStatusAggregateResult>;
  initialSubStatuses: Array<CRM_teamBoardSubStatus>;
  initialSubStatusesAggregate?: Maybe<CRM_teamBoardSubStatusAggregateResult>;
  isDisabled: Scalars['Boolean'];
  package: CRM_PACKAGE;
  team: CRM_team;
};


export type CRM_teamActionBoardEffectactionArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
};


export type CRM_teamActionBoardEffectboardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
};


export type CRM_teamActionBoardEffectcreateByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_teamActionBoardEffectfinalStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
};


export type CRM_teamActionBoardEffectfinalSubStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
};


export type CRM_teamActionBoardEffectinitialStatusesArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardStatusOrder>;
};


export type CRM_teamActionBoardEffectinitialStatusesAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
};


export type CRM_teamActionBoardEffectinitialSubStatusesArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardSubStatusOrder>;
};


export type CRM_teamActionBoardEffectinitialSubStatusesAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
};


export type CRM_teamActionBoardEffectpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_teamActionBoardEffectteamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
};

export type CRM_teamActionBoardEffectAggregateResult = {
  __typename?: 'CRM_teamActionBoardEffectAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export enum CRM_teamActionBoardEffectEvent {
  ON_CANCEL_TASK = 'ON_CANCEL_TASK',
  ON_COMPLETE_TASK = 'ON_COMPLETE_TASK',
  ON_CREATE_TASK = 'ON_CREATE_TASK'
}

export type CRM_teamActionBoardEffectEvent_exact = {
  between?: InputMaybe<CRM_teamActionBoardEffectEvent>;
  eq?: InputMaybe<CRM_teamActionBoardEffectEvent>;
  ge?: InputMaybe<CRM_teamActionBoardEffectEvent>;
  gt?: InputMaybe<CRM_teamActionBoardEffectEvent>;
  in?: InputMaybe<Array<InputMaybe<CRM_teamActionBoardEffectEvent>>>;
  le?: InputMaybe<CRM_teamActionBoardEffectEvent>;
  lt?: InputMaybe<CRM_teamActionBoardEffectEvent>;
};

export type CRM_teamActionBoardEffectFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_teamActionBoardEffectFilter>>>;
  event?: InputMaybe<CRM_teamActionBoardEffectEvent_exact>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_teamActionBoardEffectHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_teamActionBoardEffectFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_teamActionBoardEffectFilter>>>;
};

export enum CRM_teamActionBoardEffectHasFilter {
  action = 'action',
  board = 'board',
  createBy = 'createBy',
  createdAt = 'createdAt',
  event = 'event',
  finalStatus = 'finalStatus',
  finalSubStatus = 'finalSubStatus',
  guid = 'guid',
  initialStatuses = 'initialStatuses',
  initialSubStatuses = 'initialSubStatuses',
  isDisabled = 'isDisabled',
  package = 'package',
  team = 'team'
}

export type CRM_teamActionBoardEffectOrder = {
  asc?: InputMaybe<CRM_teamActionBoardEffectOrderable>;
  desc?: InputMaybe<CRM_teamActionBoardEffectOrderable>;
  then?: InputMaybe<CRM_teamActionBoardEffectOrder>;
};

export enum CRM_teamActionBoardEffectOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type CRM_teamActionBoardEffectPatch = {
  action?: InputMaybe<CRM_teamActionRef>;
  board?: InputMaybe<CRM_teamBoardRef>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<CRM_teamActionBoardEffectEvent>;
  finalStatus?: InputMaybe<CRM_teamBoardStatusRef>;
  finalSubStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  guid?: InputMaybe<Scalars['String']>;
  initialStatuses?: InputMaybe<Array<CRM_teamBoardStatusRef>>;
  initialSubStatuses?: InputMaybe<Array<CRM_teamBoardSubStatusRef>>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  team?: InputMaybe<CRM_teamRef>;
};

export type CRM_teamActionBoardEffectRef = {
  action?: InputMaybe<CRM_teamActionRef>;
  board?: InputMaybe<CRM_teamBoardRef>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<CRM_teamActionBoardEffectEvent>;
  finalStatus?: InputMaybe<CRM_teamBoardStatusRef>;
  finalSubStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  initialStatuses?: InputMaybe<Array<CRM_teamBoardStatusRef>>;
  initialSubStatuses?: InputMaybe<Array<CRM_teamBoardSubStatusRef>>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  team?: InputMaybe<CRM_teamRef>;
};

export type CRM_teamActionFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_teamActionFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_teamActionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CRM_teamActionFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_teamActionFilter>>>;
  type?: InputMaybe<CRM_teamActionType_exact>;
};

export enum CRM_teamActionHasFilter {
  boardEffects = 'boardEffects',
  createBy = 'createBy',
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name',
  package = 'package',
  team = 'team',
  type = 'type'
}

export type CRM_teamActionOrder = {
  asc?: InputMaybe<CRM_teamActionOrderable>;
  desc?: InputMaybe<CRM_teamActionOrderable>;
  then?: InputMaybe<CRM_teamActionOrder>;
};

export enum CRM_teamActionOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type CRM_teamActionPatch = {
  boardEffects?: InputMaybe<Array<CRM_teamActionBoardEffectRef>>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  team?: InputMaybe<CRM_teamRef>;
  type?: InputMaybe<CRM_teamActionType>;
};

export type CRM_teamActionRef = {
  boardEffects?: InputMaybe<Array<CRM_teamActionBoardEffectRef>>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  team?: InputMaybe<CRM_teamRef>;
  type?: InputMaybe<CRM_teamActionType>;
};

export enum CRM_teamActionType {
  BOARD_CHANGE = 'BOARD_CHANGE',
  CALL = 'CALL',
  EMAIL = 'EMAIL',
  NOT_DEFINED = 'NOT_DEFINED',
  PROPOSAL = 'PROPOSAL',
  SMS = 'SMS',
  STATUS_CHANGE = 'STATUS_CHANGE',
  VIDEO_CALL = 'VIDEO_CALL',
  VISIT = 'VISIT'
}

export type CRM_teamActionType_exact = {
  between?: InputMaybe<CRM_teamActionType>;
  eq?: InputMaybe<CRM_teamActionType>;
  ge?: InputMaybe<CRM_teamActionType>;
  gt?: InputMaybe<CRM_teamActionType>;
  in?: InputMaybe<Array<InputMaybe<CRM_teamActionType>>>;
  le?: InputMaybe<CRM_teamActionType>;
  lt?: InputMaybe<CRM_teamActionType>;
};

export type CRM_teamAggregateResult = {
  __typename?: 'CRM_teamAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_teamBoard = {
  __typename?: 'CRM_teamBoard';
  actionEffects: Array<CRM_teamActionBoardEffect>;
  actionEffectsAggregate?: Maybe<CRM_teamActionBoardEffectAggregateResult>;
  createBy: CRM_account;
  createdAt: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  items: Array<CRM_teamBoardItem>;
  itemsAggregate?: Maybe<CRM_teamBoardItemAggregateResult>;
  name: Scalars['String'];
  package: CRM_PACKAGE;
  products: Array<Product>;
  productsAggregate?: Maybe<ProductAggregateResult>;
  statuses: Array<CRM_teamBoardStatus>;
  statusesAggregate?: Maybe<CRM_teamBoardStatusAggregateResult>;
  subStatuses: Array<CRM_teamBoardSubStatus>;
  subStatusesAggregate?: Maybe<CRM_teamBoardSubStatusAggregateResult>;
  tasks: Array<CRM_teamBoardTask>;
  tasksAggregate?: Maybe<CRM_teamBoardTaskAggregateResult>;
  team: CRM_team;
  type: CRM_teamBoardType;
};


export type CRM_teamBoardactionEffectsArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionBoardEffectOrder>;
};


export type CRM_teamBoardactionEffectsAggregateArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
};


export type CRM_teamBoardcreateByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_teamBoarditemsArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardItemOrder>;
};


export type CRM_teamBoarditemsAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
};


export type CRM_teamBoardpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_teamBoardproductsArgs = {
  filter?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProductOrder>;
};


export type CRM_teamBoardproductsAggregateArgs = {
  filter?: InputMaybe<ProductFilter>;
};


export type CRM_teamBoardstatusesArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardStatusOrder>;
};


export type CRM_teamBoardstatusesAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
};


export type CRM_teamBoardsubStatusesArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardSubStatusOrder>;
};


export type CRM_teamBoardsubStatusesAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
};


export type CRM_teamBoardtasksArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardTaskOrder>;
};


export type CRM_teamBoardtasksAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
};


export type CRM_teamBoardteamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
};

export type CRM_teamBoardAggregateResult = {
  __typename?: 'CRM_teamBoardAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_teamBoardFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_teamBoardFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_teamBoardHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CRM_teamBoardFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_teamBoardFilter>>>;
  type?: InputMaybe<CRM_teamBoardType_exact>;
};

export enum CRM_teamBoardHasFilter {
  actionEffects = 'actionEffects',
  createBy = 'createBy',
  createdAt = 'createdAt',
  guid = 'guid',
  items = 'items',
  name = 'name',
  package = 'package',
  products = 'products',
  statuses = 'statuses',
  subStatuses = 'subStatuses',
  tasks = 'tasks',
  team = 'team',
  type = 'type'
}

export type CRM_teamBoardItem = {
  __typename?: 'CRM_teamBoardItem';
  assignedTo: Array<CRM_teamAccount>;
  assignedToAggregate?: Maybe<CRM_teamAccountAggregateResult>;
  board: CRM_teamBoard;
  createBy?: Maybe<CRM_account>;
  createdAt: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  label?: Maybe<Scalars['String']>;
  opportunity?: Maybe<CRM_contactInput>;
  package: CRM_PACKAGE;
  proposal?: Maybe<CRM_proposal>;
  status: CRM_teamBoardStatus;
  subStatus?: Maybe<CRM_teamBoardSubStatus>;
  tasks: Array<CRM_teamBoardTask>;
  tasksAggregate?: Maybe<CRM_teamBoardTaskAggregateResult>;
  team: CRM_team;
  type: CRM_teamBoardType;
};


export type CRM_teamBoardItemassignedToArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamAccountOrder>;
};


export type CRM_teamBoardItemassignedToAggregateArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
};


export type CRM_teamBoardItemboardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
};


export type CRM_teamBoardItemcreateByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_teamBoardItemopportunityArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type CRM_teamBoardItempackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_teamBoardItemproposalArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
};


export type CRM_teamBoardItemstatusArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
};


export type CRM_teamBoardItemsubStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
};


export type CRM_teamBoardItemtasksArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardTaskOrder>;
};


export type CRM_teamBoardItemtasksAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
};


export type CRM_teamBoardItemteamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
};

export type CRM_teamBoardItemAggregateResult = {
  __typename?: 'CRM_teamBoardItemAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type CRM_teamBoardItemFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_teamBoardItemFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_teamBoardItemHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CRM_teamBoardItemFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_teamBoardItemFilter>>>;
  type?: InputMaybe<CRM_teamBoardType_exact>;
};

export enum CRM_teamBoardItemHasFilter {
  assignedTo = 'assignedTo',
  board = 'board',
  createBy = 'createBy',
  createdAt = 'createdAt',
  guid = 'guid',
  label = 'label',
  opportunity = 'opportunity',
  package = 'package',
  proposal = 'proposal',
  status = 'status',
  subStatus = 'subStatus',
  tasks = 'tasks',
  team = 'team',
  type = 'type'
}

export type CRM_teamBoardItemOrder = {
  asc?: InputMaybe<CRM_teamBoardItemOrderable>;
  desc?: InputMaybe<CRM_teamBoardItemOrderable>;
  then?: InputMaybe<CRM_teamBoardItemOrder>;
};

export enum CRM_teamBoardItemOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  label = 'label'
}

export type CRM_teamBoardItemPatch = {
  assignedTo?: InputMaybe<Array<CRM_teamAccountRef>>;
  board?: InputMaybe<CRM_teamBoardRef>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  opportunity?: InputMaybe<CRM_contactInputRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  proposal?: InputMaybe<CRM_proposalRef>;
  status?: InputMaybe<CRM_teamBoardStatusRef>;
  subStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  tasks?: InputMaybe<Array<CRM_teamBoardTaskRef>>;
  team?: InputMaybe<CRM_teamRef>;
  type?: InputMaybe<CRM_teamBoardType>;
};

export type CRM_teamBoardItemRef = {
  assignedTo?: InputMaybe<Array<CRM_teamAccountRef>>;
  board?: InputMaybe<CRM_teamBoardRef>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  opportunity?: InputMaybe<CRM_contactInputRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  proposal?: InputMaybe<CRM_proposalRef>;
  status?: InputMaybe<CRM_teamBoardStatusRef>;
  subStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  tasks?: InputMaybe<Array<CRM_teamBoardTaskRef>>;
  team?: InputMaybe<CRM_teamRef>;
  type?: InputMaybe<CRM_teamBoardType>;
};

export type CRM_teamBoardOrder = {
  asc?: InputMaybe<CRM_teamBoardOrderable>;
  desc?: InputMaybe<CRM_teamBoardOrderable>;
  then?: InputMaybe<CRM_teamBoardOrder>;
};

export enum CRM_teamBoardOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type CRM_teamBoardPatch = {
  actionEffects?: InputMaybe<Array<CRM_teamActionBoardEffectRef>>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  products?: InputMaybe<Array<ProductRef>>;
  statuses?: InputMaybe<Array<CRM_teamBoardStatusRef>>;
  subStatuses?: InputMaybe<Array<CRM_teamBoardSubStatusRef>>;
  tasks?: InputMaybe<Array<CRM_teamBoardTaskRef>>;
  team?: InputMaybe<CRM_teamRef>;
  type?: InputMaybe<CRM_teamBoardType>;
};

export type CRM_teamBoardRef = {
  actionEffects?: InputMaybe<Array<CRM_teamActionBoardEffectRef>>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  items?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  products?: InputMaybe<Array<ProductRef>>;
  statuses?: InputMaybe<Array<CRM_teamBoardStatusRef>>;
  subStatuses?: InputMaybe<Array<CRM_teamBoardSubStatusRef>>;
  tasks?: InputMaybe<Array<CRM_teamBoardTaskRef>>;
  team?: InputMaybe<CRM_teamRef>;
  type?: InputMaybe<CRM_teamBoardType>;
};

export type CRM_teamBoardStatus = {
  __typename?: 'CRM_teamBoardStatus';
  board: CRM_teamBoard;
  color: Scalars['String'];
  createBy: CRM_account;
  createdAt: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  items: Array<CRM_teamBoardItem>;
  itemsAggregate?: Maybe<CRM_teamBoardItemAggregateResult>;
  name: Scalars['String'];
  package: CRM_PACKAGE;
  subStatuses: Array<CRM_teamBoardSubStatus>;
  subStatusesAggregate?: Maybe<CRM_teamBoardSubStatusAggregateResult>;
  type: CRM_teamBoardType;
};


export type CRM_teamBoardStatusboardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
};


export type CRM_teamBoardStatuscreateByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_teamBoardStatusitemsArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardItemOrder>;
};


export type CRM_teamBoardStatusitemsAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
};


export type CRM_teamBoardStatuspackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_teamBoardStatussubStatusesArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardSubStatusOrder>;
};


export type CRM_teamBoardStatussubStatusesAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
};

export type CRM_teamBoardStatusAggregateResult = {
  __typename?: 'CRM_teamBoardStatusAggregateResult';
  colorMax?: Maybe<Scalars['String']>;
  colorMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_teamBoardStatusFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_teamBoardStatusFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_teamBoardStatusHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CRM_teamBoardStatusFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_teamBoardStatusFilter>>>;
  type?: InputMaybe<CRM_teamBoardType_exact>;
};

export enum CRM_teamBoardStatusHasFilter {
  board = 'board',
  color = 'color',
  createBy = 'createBy',
  createdAt = 'createdAt',
  guid = 'guid',
  index = 'index',
  items = 'items',
  name = 'name',
  package = 'package',
  subStatuses = 'subStatuses',
  type = 'type'
}

export type CRM_teamBoardStatusOrder = {
  asc?: InputMaybe<CRM_teamBoardStatusOrderable>;
  desc?: InputMaybe<CRM_teamBoardStatusOrderable>;
  then?: InputMaybe<CRM_teamBoardStatusOrder>;
};

export enum CRM_teamBoardStatusOrderable {
  color = 'color',
  createdAt = 'createdAt',
  guid = 'guid',
  index = 'index',
  name = 'name'
}

export type CRM_teamBoardStatusPatch = {
  board?: InputMaybe<CRM_teamBoardRef>;
  color?: InputMaybe<Scalars['String']>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  items?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  subStatuses?: InputMaybe<Array<CRM_teamBoardSubStatusRef>>;
  type?: InputMaybe<CRM_teamBoardType>;
};

export type CRM_teamBoardStatusRef = {
  board?: InputMaybe<CRM_teamBoardRef>;
  color?: InputMaybe<Scalars['String']>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  items?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  subStatuses?: InputMaybe<Array<CRM_teamBoardSubStatusRef>>;
  type?: InputMaybe<CRM_teamBoardType>;
};

export type CRM_teamBoardSubStatus = {
  __typename?: 'CRM_teamBoardSubStatus';
  board: CRM_teamBoard;
  createBy: CRM_account;
  createdAt: Scalars['DateTime'];
  guid: Scalars['String'];
  icon: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  items: Array<CRM_teamBoardItem>;
  itemsAggregate?: Maybe<CRM_teamBoardItemAggregateResult>;
  name: Scalars['String'];
  package: CRM_PACKAGE;
  status: CRM_teamBoardStatus;
  type: CRM_teamBoardType;
};


export type CRM_teamBoardSubStatusboardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
};


export type CRM_teamBoardSubStatuscreateByArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type CRM_teamBoardSubStatusitemsArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardItemOrder>;
};


export type CRM_teamBoardSubStatusitemsAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
};


export type CRM_teamBoardSubStatuspackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_teamBoardSubStatusstatusArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
};

export type CRM_teamBoardSubStatusAggregateResult = {
  __typename?: 'CRM_teamBoardSubStatusAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  iconMax?: Maybe<Scalars['String']>;
  iconMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CRM_teamBoardSubStatusFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_teamBoardSubStatusFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_teamBoardSubStatusHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CRM_teamBoardSubStatusFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_teamBoardSubStatusFilter>>>;
  type?: InputMaybe<CRM_teamBoardType_exact>;
};

export enum CRM_teamBoardSubStatusHasFilter {
  board = 'board',
  createBy = 'createBy',
  createdAt = 'createdAt',
  guid = 'guid',
  icon = 'icon',
  index = 'index',
  items = 'items',
  name = 'name',
  package = 'package',
  status = 'status',
  type = 'type'
}

export type CRM_teamBoardSubStatusOrder = {
  asc?: InputMaybe<CRM_teamBoardSubStatusOrderable>;
  desc?: InputMaybe<CRM_teamBoardSubStatusOrderable>;
  then?: InputMaybe<CRM_teamBoardSubStatusOrder>;
};

export enum CRM_teamBoardSubStatusOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  icon = 'icon',
  index = 'index',
  name = 'name'
}

export type CRM_teamBoardSubStatusPatch = {
  board?: InputMaybe<CRM_teamBoardRef>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  items?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  status?: InputMaybe<CRM_teamBoardStatusRef>;
  type?: InputMaybe<CRM_teamBoardType>;
};

export type CRM_teamBoardSubStatusRef = {
  board?: InputMaybe<CRM_teamBoardRef>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  items?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
  status?: InputMaybe<CRM_teamBoardStatusRef>;
  type?: InputMaybe<CRM_teamBoardType>;
};

export type CRM_teamBoardTask = {
  __typename?: 'CRM_teamBoardTask';
  action?: Maybe<CRM_teamAction>;
  addressTo?: Maybe<Scalars['String']>;
  assignedTo: Array<CRM_teamAccount>;
  assignedToAggregate?: Maybe<CRM_teamAccountAggregateResult>;
  board: CRM_teamBoard;
  cancelledAt?: Maybe<Scalars['DateTime']>;
  cancelledBy?: Maybe<CRM_teamAccount>;
  createBy: CRM_teamAccount;
  createdAt: Scalars['DateTime'];
  description?: Maybe<Scalars['String']>;
  destinyBoard?: Maybe<CRM_teamBoard>;
  doneAt?: Maybe<Scalars['DateTime']>;
  doneBy?: Maybe<CRM_teamAccount>;
  guid: Scalars['String'];
  html?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  integrationsAccount?: Maybe<Integrations_account>;
  item: CRM_teamBoardItem;
  label: Scalars['String'];
  nextStatus?: Maybe<CRM_teamBoardStatus>;
  nextSubStatus?: Maybe<CRM_teamBoardSubStatus>;
  package: CRM_PACKAGE;
  previousStatus?: Maybe<CRM_teamBoardStatus>;
  previousSubStatus?: Maybe<CRM_teamBoardSubStatus>;
  proposal?: Maybe<CRM_proposal>;
  scheduledAt?: Maybe<Scalars['DateTime']>;
  status: CRM_teamBoardTaskStatus;
  team: CRM_team;
  type: CRM_teamActionType;
};


export type CRM_teamBoardTaskactionArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
};


export type CRM_teamBoardTaskassignedToArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamAccountOrder>;
};


export type CRM_teamBoardTaskassignedToAggregateArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
};


export type CRM_teamBoardTaskboardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
};


export type CRM_teamBoardTaskcancelledByArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
};


export type CRM_teamBoardTaskcreateByArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
};


export type CRM_teamBoardTaskdestinyBoardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
};


export type CRM_teamBoardTaskdoneByArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
};


export type CRM_teamBoardTaskintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type CRM_teamBoardTaskitemArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
};


export type CRM_teamBoardTasknextStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
};


export type CRM_teamBoardTasknextSubStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
};


export type CRM_teamBoardTaskpackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type CRM_teamBoardTaskpreviousStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
};


export type CRM_teamBoardTaskpreviousSubStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
};


export type CRM_teamBoardTaskproposalArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
};


export type CRM_teamBoardTaskteamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
};

export type CRM_teamBoardTaskAggregateResult = {
  __typename?: 'CRM_teamBoardTaskAggregateResult';
  addressToMax?: Maybe<Scalars['String']>;
  addressToMin?: Maybe<Scalars['String']>;
  cancelledAtMax?: Maybe<Scalars['DateTime']>;
  cancelledAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  doneAtMax?: Maybe<Scalars['DateTime']>;
  doneAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  htmlMax?: Maybe<Scalars['String']>;
  htmlMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
  scheduledAtMax?: Maybe<Scalars['DateTime']>;
  scheduledAtMin?: Maybe<Scalars['DateTime']>;
};

export type CRM_teamBoardTaskFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_teamBoardTaskFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_teamBoardTaskHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  label?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CRM_teamBoardTaskFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_teamBoardTaskFilter>>>;
  status?: InputMaybe<CRM_teamBoardTaskStatus_exact>;
  type?: InputMaybe<CRM_teamActionType_exact>;
};

export enum CRM_teamBoardTaskHasFilter {
  action = 'action',
  addressTo = 'addressTo',
  assignedTo = 'assignedTo',
  board = 'board',
  cancelledAt = 'cancelledAt',
  cancelledBy = 'cancelledBy',
  createBy = 'createBy',
  createdAt = 'createdAt',
  description = 'description',
  destinyBoard = 'destinyBoard',
  doneAt = 'doneAt',
  doneBy = 'doneBy',
  guid = 'guid',
  html = 'html',
  integrationsAccount = 'integrationsAccount',
  item = 'item',
  label = 'label',
  nextStatus = 'nextStatus',
  nextSubStatus = 'nextSubStatus',
  package = 'package',
  previousStatus = 'previousStatus',
  previousSubStatus = 'previousSubStatus',
  proposal = 'proposal',
  scheduledAt = 'scheduledAt',
  status = 'status',
  team = 'team',
  type = 'type'
}

export type CRM_teamBoardTaskOrder = {
  asc?: InputMaybe<CRM_teamBoardTaskOrderable>;
  desc?: InputMaybe<CRM_teamBoardTaskOrderable>;
  then?: InputMaybe<CRM_teamBoardTaskOrder>;
};

export enum CRM_teamBoardTaskOrderable {
  addressTo = 'addressTo',
  cancelledAt = 'cancelledAt',
  createdAt = 'createdAt',
  description = 'description',
  doneAt = 'doneAt',
  guid = 'guid',
  html = 'html',
  label = 'label',
  scheduledAt = 'scheduledAt'
}

export type CRM_teamBoardTaskPatch = {
  action?: InputMaybe<CRM_teamActionRef>;
  addressTo?: InputMaybe<Scalars['String']>;
  assignedTo?: InputMaybe<Array<CRM_teamAccountRef>>;
  board?: InputMaybe<CRM_teamBoardRef>;
  cancelledAt?: InputMaybe<Scalars['DateTime']>;
  cancelledBy?: InputMaybe<CRM_teamAccountRef>;
  createBy?: InputMaybe<CRM_teamAccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  destinyBoard?: InputMaybe<CRM_teamBoardRef>;
  doneAt?: InputMaybe<Scalars['DateTime']>;
  doneBy?: InputMaybe<CRM_teamAccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  html?: InputMaybe<Scalars['String']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  item?: InputMaybe<CRM_teamBoardItemRef>;
  label?: InputMaybe<Scalars['String']>;
  nextStatus?: InputMaybe<CRM_teamBoardStatusRef>;
  nextSubStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  previousStatus?: InputMaybe<CRM_teamBoardStatusRef>;
  previousSubStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  proposal?: InputMaybe<CRM_proposalRef>;
  scheduledAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<CRM_teamBoardTaskStatus>;
  team?: InputMaybe<CRM_teamRef>;
  type?: InputMaybe<CRM_teamActionType>;
};

export type CRM_teamBoardTaskRef = {
  action?: InputMaybe<CRM_teamActionRef>;
  addressTo?: InputMaybe<Scalars['String']>;
  assignedTo?: InputMaybe<Array<CRM_teamAccountRef>>;
  board?: InputMaybe<CRM_teamBoardRef>;
  cancelledAt?: InputMaybe<Scalars['DateTime']>;
  cancelledBy?: InputMaybe<CRM_teamAccountRef>;
  createBy?: InputMaybe<CRM_teamAccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  destinyBoard?: InputMaybe<CRM_teamBoardRef>;
  doneAt?: InputMaybe<Scalars['DateTime']>;
  doneBy?: InputMaybe<CRM_teamAccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  html?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  item?: InputMaybe<CRM_teamBoardItemRef>;
  label?: InputMaybe<Scalars['String']>;
  nextStatus?: InputMaybe<CRM_teamBoardStatusRef>;
  nextSubStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  package?: InputMaybe<CRM_PACKAGERef>;
  previousStatus?: InputMaybe<CRM_teamBoardStatusRef>;
  previousSubStatus?: InputMaybe<CRM_teamBoardSubStatusRef>;
  proposal?: InputMaybe<CRM_proposalRef>;
  scheduledAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<CRM_teamBoardTaskStatus>;
  team?: InputMaybe<CRM_teamRef>;
  type?: InputMaybe<CRM_teamActionType>;
};

export enum CRM_teamBoardTaskStatus {
  BLOCKED = 'BLOCKED',
  CANCELLED = 'CANCELLED',
  DONE = 'DONE',
  PENDING = 'PENDING'
}

export type CRM_teamBoardTaskStatus_exact = {
  between?: InputMaybe<CRM_teamBoardTaskStatus>;
  eq?: InputMaybe<CRM_teamBoardTaskStatus>;
  ge?: InputMaybe<CRM_teamBoardTaskStatus>;
  gt?: InputMaybe<CRM_teamBoardTaskStatus>;
  in?: InputMaybe<Array<InputMaybe<CRM_teamBoardTaskStatus>>>;
  le?: InputMaybe<CRM_teamBoardTaskStatus>;
  lt?: InputMaybe<CRM_teamBoardTaskStatus>;
};

export enum CRM_teamBoardType {
  OPPORTUNITY = 'OPPORTUNITY',
  PROPOSAL = 'PROPOSAL',
  TASK = 'TASK'
}

export type CRM_teamBoardType_exact = {
  between?: InputMaybe<CRM_teamBoardType>;
  eq?: InputMaybe<CRM_teamBoardType>;
  ge?: InputMaybe<CRM_teamBoardType>;
  gt?: InputMaybe<CRM_teamBoardType>;
  in?: InputMaybe<Array<InputMaybe<CRM_teamBoardType>>>;
  le?: InputMaybe<CRM_teamBoardType>;
  lt?: InputMaybe<CRM_teamBoardType>;
};

export type CRM_teamFilter = {
  and?: InputMaybe<Array<InputMaybe<CRM_teamFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<CRM_teamHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CRM_teamFilter>;
  or?: InputMaybe<Array<InputMaybe<CRM_teamFilter>>>;
};

export enum CRM_teamHasFilter {
  accounts = 'accounts',
  actionBoardEffects = 'actionBoardEffects',
  actions = 'actions',
  boardTasks = 'boardTasks',
  boards = 'boards',
  createBy = 'createBy',
  createdAt = 'createdAt',
  guid = 'guid',
  isDefault = 'isDefault',
  items = 'items',
  name = 'name',
  package = 'package'
}

export type CRM_teamOrder = {
  asc?: InputMaybe<CRM_teamOrderable>;
  desc?: InputMaybe<CRM_teamOrderable>;
  then?: InputMaybe<CRM_teamOrder>;
};

export enum CRM_teamOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type CRM_teamPatch = {
  accounts?: InputMaybe<Array<CRM_teamAccountRef>>;
  actionBoardEffects?: InputMaybe<Array<CRM_teamActionBoardEffectRef>>;
  actions?: InputMaybe<Array<CRM_teamActionRef>>;
  boardTasks?: InputMaybe<Array<CRM_teamBoardTaskRef>>;
  boards?: InputMaybe<Array<CRM_teamBoardRef>>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
};

export type CRM_teamRef = {
  accounts?: InputMaybe<Array<CRM_teamAccountRef>>;
  actionBoardEffects?: InputMaybe<Array<CRM_teamActionBoardEffectRef>>;
  actions?: InputMaybe<Array<CRM_teamActionRef>>;
  boardTasks?: InputMaybe<Array<CRM_teamBoardTaskRef>>;
  boards?: InputMaybe<Array<CRM_teamBoardRef>>;
  createBy?: InputMaybe<CRM_accountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<CRM_teamBoardItemRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<CRM_PACKAGERef>;
};

export enum Chatbots_OperationLogAction {
  DOWNLOAD = 'DOWNLOAD',
  OPEN = 'OPEN',
  REQUEST = 'REQUEST'
}

export enum Chatbots_OperationLogElementType {
  FILE = 'FILE',
  TABLE = 'TABLE'
}

export type Chatbots_PACKAGE = {
  __typename?: 'Chatbots_PACKAGE';
  accounts: Array<Chatbots_account>;
  accountsAggregate?: Maybe<Chatbots_accountAggregateResult>;
  areaAccounts: Array<Chatbots_areaAccount>;
  areaAccountsAggregate?: Maybe<Chatbots_areaAccountAggregateResult>;
  areas: Array<Chatbots_area>;
  areasAggregate?: Maybe<Chatbots_areaAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  externalAPIs: Array<Chatbots_externalAPI>;
  externalAPIsAggregate?: Maybe<Chatbots_externalAPIAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  org360: Org360;
  processAPIs: Array<Chatbots_processAPI>;
  processAPIsAggregate?: Maybe<Chatbots_processAPIAggregateResult>;
  processAccounts: Array<Chatbots_processAccount>;
  processAccountsAggregate?: Maybe<Chatbots_processAccountAggregateResult>;
  processActions: Array<Chatbots_processAction>;
  processActionsAggregate?: Maybe<Chatbots_processActionAggregateResult>;
  processButtons: Array<Chatbots_processButton>;
  processButtonsAggregate?: Maybe<Chatbots_processButtonAggregateResult>;
  processFields: Array<Chatbots_processField>;
  processFieldsAggregate?: Maybe<Chatbots_processFieldAggregateResult>;
  processFilterParams: Array<Chatbots_processFilterParam>;
  processFilterParamsAggregate?: Maybe<Chatbots_processFilterParamAggregateResult>;
  processOperations: Array<Chatbots_processOperation>;
  processOperationsAggregate?: Maybe<Chatbots_processOperationAggregateResult>;
  processStatuses: Array<Chatbots_processStatus>;
  processStatusesAggregate?: Maybe<Chatbots_processStatusAggregateResult>;
  processTableHeadConfigs: Array<Chatbots_processTableHeadConfig>;
  processTableHeadConfigsAggregate?: Maybe<Chatbots_processTableHeadConfigAggregateResult>;
  processValidationOperationDocumentFiles: Array<Chatbots_processValidationOperation_document_file>;
  processValidationOperationDocumentFilesAggregate?: Maybe<Chatbots_processValidationOperation_document_fileAggregateResult>;
  processValidationOperationDocuments: Array<Chatbots_processValidationOperation_document>;
  processValidationOperationDocumentsAggregate?: Maybe<Chatbots_processValidationOperation_documentAggregateResult>;
  processValidationOperationFields: Array<Chatbots_processsValidationOperation_field>;
  processValidationOperationFieldsAggregate?: Maybe<Chatbots_processsValidationOperation_fieldAggregateResult>;
  processValidationOperations: Array<Chatbots_processValidationOperation>;
  processValidationOperationsAggregate?: Maybe<Chatbots_processValidationOperationAggregateResult>;
  processValidations: Array<Chatbots_processValidation>;
  processValidationsAggregate?: Maybe<Chatbots_processValidationAggregateResult>;
  processes: Array<Chatbots_process>;
  processesAggregate?: Maybe<Chatbots_processAggregateResult>;
  validationDocumenFiles: Array<Chatbots_validationDocument_file>;
  validationDocumenFilesAggregate?: Maybe<Chatbots_validationDocument_fileAggregateResult>;
  validationDocuments: Array<Chatbots_validationDocument>;
  validationDocumentsAggregate?: Maybe<Chatbots_validationDocumentAggregateResult>;
  validations: Array<Chatbots_validation>;
  validationsAggregate?: Maybe<Chatbots_validationAggregateResult>;
  validationsFields: Array<Chatbots_validationField>;
  validationsFieldsAggregate?: Maybe<Chatbots_validationFieldAggregateResult>;
};


export type Chatbots_PACKAGEaccountsArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_accountOrder>;
};


export type Chatbots_PACKAGEaccountsAggregateArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_PACKAGEareaAccountsArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaAccountOrder>;
};


export type Chatbots_PACKAGEareaAccountsAggregateArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
};


export type Chatbots_PACKAGEareasArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaOrder>;
};


export type Chatbots_PACKAGEareasAggregateArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
};


export type Chatbots_PACKAGEcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Chatbots_PACKAGEexternalAPIsArgs = {
  filter?: InputMaybe<Chatbots_externalAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_externalAPIOrder>;
};


export type Chatbots_PACKAGEexternalAPIsAggregateArgs = {
  filter?: InputMaybe<Chatbots_externalAPIFilter>;
};


export type Chatbots_PACKAGEorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type Chatbots_PACKAGEprocessAPIsArgs = {
  filter?: InputMaybe<Chatbots_processAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAPIOrder>;
};


export type Chatbots_PACKAGEprocessAPIsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processAPIFilter>;
};


export type Chatbots_PACKAGEprocessAccountsArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAccountOrder>;
};


export type Chatbots_PACKAGEprocessAccountsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
};


export type Chatbots_PACKAGEprocessActionsArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processActionOrder>;
};


export type Chatbots_PACKAGEprocessActionsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
};


export type Chatbots_PACKAGEprocessButtonsArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processButtonOrder>;
};


export type Chatbots_PACKAGEprocessButtonsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
};


export type Chatbots_PACKAGEprocessFieldsArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFieldOrder>;
};


export type Chatbots_PACKAGEprocessFieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
};


export type Chatbots_PACKAGEprocessFilterParamsArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFilterParamOrder>;
};


export type Chatbots_PACKAGEprocessFilterParamsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
};


export type Chatbots_PACKAGEprocessOperationsArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOperationOrder>;
};


export type Chatbots_PACKAGEprocessOperationsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
};


export type Chatbots_PACKAGEprocessStatusesArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processStatusOrder>;
};


export type Chatbots_PACKAGEprocessStatusesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
};


export type Chatbots_PACKAGEprocessTableHeadConfigsArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadConfigOrder>;
};


export type Chatbots_PACKAGEprocessTableHeadConfigsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
};


export type Chatbots_PACKAGEprocessValidationOperationDocumentFilesArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_document_fileOrder>;
};


export type Chatbots_PACKAGEprocessValidationOperationDocumentFilesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
};


export type Chatbots_PACKAGEprocessValidationOperationDocumentsArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_documentOrder>;
};


export type Chatbots_PACKAGEprocessValidationOperationDocumentsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
};


export type Chatbots_PACKAGEprocessValidationOperationFieldsArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processsValidationOperation_fieldOrder>;
};


export type Chatbots_PACKAGEprocessValidationOperationFieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
};


export type Chatbots_PACKAGEprocessValidationOperationsArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperationOrder>;
};


export type Chatbots_PACKAGEprocessValidationOperationsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
};


export type Chatbots_PACKAGEprocessValidationsArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOrder>;
};


export type Chatbots_PACKAGEprocessValidationsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
};


export type Chatbots_PACKAGEprocessesArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOrder>;
};


export type Chatbots_PACKAGEprocessesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};


export type Chatbots_PACKAGEvalidationDocumenFilesArgs = {
  filter?: InputMaybe<Chatbots_validationDocument_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocument_fileOrder>;
};


export type Chatbots_PACKAGEvalidationDocumenFilesAggregateArgs = {
  filter?: InputMaybe<Chatbots_validationDocument_fileFilter>;
};


export type Chatbots_PACKAGEvalidationDocumentsArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocumentOrder>;
};


export type Chatbots_PACKAGEvalidationDocumentsAggregateArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
};


export type Chatbots_PACKAGEvalidationsArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationOrder>;
};


export type Chatbots_PACKAGEvalidationsAggregateArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
};


export type Chatbots_PACKAGEvalidationsFieldsArgs = {
  filter?: InputMaybe<Chatbots_validationFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationFieldOrder>;
};


export type Chatbots_PACKAGEvalidationsFieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_validationFieldFilter>;
};

export type Chatbots_PACKAGEAggregateResult = {
  __typename?: 'Chatbots_PACKAGEAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Chatbots_PACKAGEFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_PACKAGEFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_PACKAGEHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_PACKAGEFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_PACKAGEFilter>>>;
};

export enum Chatbots_PACKAGEHasFilter {
  accounts = 'accounts',
  areaAccounts = 'areaAccounts',
  areas = 'areas',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  externalAPIs = 'externalAPIs',
  guid = 'guid',
  name = 'name',
  org360 = 'org360',
  processAPIs = 'processAPIs',
  processAccounts = 'processAccounts',
  processActions = 'processActions',
  processButtons = 'processButtons',
  processFields = 'processFields',
  processFilterParams = 'processFilterParams',
  processOperations = 'processOperations',
  processStatuses = 'processStatuses',
  processTableHeadConfigs = 'processTableHeadConfigs',
  processValidationOperationDocumentFiles = 'processValidationOperationDocumentFiles',
  processValidationOperationDocuments = 'processValidationOperationDocuments',
  processValidationOperationFields = 'processValidationOperationFields',
  processValidationOperations = 'processValidationOperations',
  processValidations = 'processValidations',
  processes = 'processes',
  validationDocumenFiles = 'validationDocumenFiles',
  validationDocuments = 'validationDocuments',
  validations = 'validations',
  validationsFields = 'validationsFields'
}

export type Chatbots_PACKAGEOrder = {
  asc?: InputMaybe<Chatbots_PACKAGEOrderable>;
  desc?: InputMaybe<Chatbots_PACKAGEOrderable>;
  then?: InputMaybe<Chatbots_PACKAGEOrder>;
};

export enum Chatbots_PACKAGEOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type Chatbots_PACKAGEPatch = {
  accounts?: InputMaybe<Array<Chatbots_accountRef>>;
  areaAccounts?: InputMaybe<Array<Chatbots_areaAccountRef>>;
  areas?: InputMaybe<Array<Chatbots_areaRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  externalAPIs?: InputMaybe<Array<Chatbots_externalAPIRef>>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  processAPIs?: InputMaybe<Array<Chatbots_processAPIRef>>;
  processAccounts?: InputMaybe<Array<Chatbots_processAccountRef>>;
  processActions?: InputMaybe<Array<Chatbots_processActionRef>>;
  processButtons?: InputMaybe<Array<Chatbots_processButtonRef>>;
  processFields?: InputMaybe<Array<Chatbots_processFieldRef>>;
  processFilterParams?: InputMaybe<Array<Chatbots_processFilterParamRef>>;
  processOperations?: InputMaybe<Array<Chatbots_processOperationRef>>;
  processStatuses?: InputMaybe<Array<Chatbots_processStatusRef>>;
  processTableHeadConfigs?: InputMaybe<Array<Chatbots_processTableHeadConfigRef>>;
  processValidationOperationDocumentFiles?: InputMaybe<Array<Chatbots_processValidationOperation_document_fileRef>>;
  processValidationOperationDocuments?: InputMaybe<Array<Chatbots_processValidationOperation_documentRef>>;
  processValidationOperationFields?: InputMaybe<Array<Chatbots_processsValidationOperation_fieldRef>>;
  processValidationOperations?: InputMaybe<Array<Chatbots_processValidationOperationRef>>;
  processValidations?: InputMaybe<Array<Chatbots_processValidationRef>>;
  processes?: InputMaybe<Array<Chatbots_processRef>>;
  validationDocumenFiles?: InputMaybe<Array<Chatbots_validationDocument_fileRef>>;
  validationDocuments?: InputMaybe<Array<Chatbots_validationDocumentRef>>;
  validations?: InputMaybe<Array<Chatbots_validationRef>>;
  validationsFields?: InputMaybe<Array<Chatbots_validationFieldRef>>;
};

export type Chatbots_PACKAGERef = {
  accounts?: InputMaybe<Array<Chatbots_accountRef>>;
  areaAccounts?: InputMaybe<Array<Chatbots_areaAccountRef>>;
  areas?: InputMaybe<Array<Chatbots_areaRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  externalAPIs?: InputMaybe<Array<Chatbots_externalAPIRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  processAPIs?: InputMaybe<Array<Chatbots_processAPIRef>>;
  processAccounts?: InputMaybe<Array<Chatbots_processAccountRef>>;
  processActions?: InputMaybe<Array<Chatbots_processActionRef>>;
  processButtons?: InputMaybe<Array<Chatbots_processButtonRef>>;
  processFields?: InputMaybe<Array<Chatbots_processFieldRef>>;
  processFilterParams?: InputMaybe<Array<Chatbots_processFilterParamRef>>;
  processOperations?: InputMaybe<Array<Chatbots_processOperationRef>>;
  processStatuses?: InputMaybe<Array<Chatbots_processStatusRef>>;
  processTableHeadConfigs?: InputMaybe<Array<Chatbots_processTableHeadConfigRef>>;
  processValidationOperationDocumentFiles?: InputMaybe<Array<Chatbots_processValidationOperation_document_fileRef>>;
  processValidationOperationDocuments?: InputMaybe<Array<Chatbots_processValidationOperation_documentRef>>;
  processValidationOperationFields?: InputMaybe<Array<Chatbots_processsValidationOperation_fieldRef>>;
  processValidationOperations?: InputMaybe<Array<Chatbots_processValidationOperationRef>>;
  processValidations?: InputMaybe<Array<Chatbots_processValidationRef>>;
  processes?: InputMaybe<Array<Chatbots_processRef>>;
  validationDocumenFiles?: InputMaybe<Array<Chatbots_validationDocument_fileRef>>;
  validationDocuments?: InputMaybe<Array<Chatbots_validationDocumentRef>>;
  validations?: InputMaybe<Array<Chatbots_validationRef>>;
  validationsFields?: InputMaybe<Array<Chatbots_validationFieldRef>>;
};

export type Chatbots_account = {
  __typename?: 'Chatbots_account';
  account: Account;
  areas: Array<Chatbots_areaAccount>;
  areasAggregate?: Maybe<Chatbots_areaAccountAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: Chatbots_PACKAGE;
  processes: Array<Chatbots_processAccount>;
  processesAggregate?: Maybe<Chatbots_processAccountAggregateResult>;
  role: Chatbots_role;
};


export type Chatbots_accountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Chatbots_accountareasArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaAccountOrder>;
};


export type Chatbots_accountareasAggregateArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
};


export type Chatbots_accountcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Chatbots_accountpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_accountprocessesArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAccountOrder>;
};


export type Chatbots_accountprocessesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
};

export type Chatbots_accountAggregateResult = {
  __typename?: 'Chatbots_accountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Chatbots_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_accountFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_accountFilter>>>;
  role?: InputMaybe<Chatbots_role_hash>;
};

export enum Chatbots_accountHasFilter {
  account = 'account',
  areas = 'areas',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  package = 'package',
  processes = 'processes',
  role = 'role'
}

export type Chatbots_accountOrder = {
  asc?: InputMaybe<Chatbots_accountOrderable>;
  desc?: InputMaybe<Chatbots_accountOrderable>;
  then?: InputMaybe<Chatbots_accountOrder>;
};

export enum Chatbots_accountOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type Chatbots_accountPatch = {
  account?: InputMaybe<AccountRef>;
  areas?: InputMaybe<Array<Chatbots_areaAccountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processes?: InputMaybe<Array<Chatbots_processAccountRef>>;
  role?: InputMaybe<Chatbots_role>;
};

export type Chatbots_accountRef = {
  account?: InputMaybe<AccountRef>;
  areas?: InputMaybe<Array<Chatbots_areaAccountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processes?: InputMaybe<Array<Chatbots_processAccountRef>>;
  role?: InputMaybe<Chatbots_role>;
};

export type Chatbots_area = {
  __typename?: 'Chatbots_area';
  accounts: Array<Chatbots_areaAccount>;
  accountsAggregate?: Maybe<Chatbots_areaAccountAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  fields: Array<Chatbots_processField>;
  fieldsAggregate?: Maybe<Chatbots_processFieldAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  operations: Array<Chatbots_processOperation>;
  operationsAggregate?: Maybe<Chatbots_processOperationAggregateResult>;
  package: Chatbots_PACKAGE;
  processes: Array<Chatbots_process>;
  processesAggregate?: Maybe<Chatbots_processAggregateResult>;
};


export type Chatbots_areaaccountsArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaAccountOrder>;
};


export type Chatbots_areaaccountsAggregateArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
};


export type Chatbots_areacreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_areafieldsArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFieldOrder>;
};


export type Chatbots_areafieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
};


export type Chatbots_areaoperationsArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOperationOrder>;
};


export type Chatbots_areaoperationsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
};


export type Chatbots_areapackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_areaprocessesArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOrder>;
};


export type Chatbots_areaprocessesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};

export type Chatbots_areaAccount = {
  __typename?: 'Chatbots_areaAccount';
  account: Chatbots_account;
  area: Chatbots_area;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: Chatbots_PACKAGE;
  processes: Array<Chatbots_processAccount>;
  processesAggregate?: Maybe<Chatbots_processAccountAggregateResult>;
  role: Chatbots_role;
};


export type Chatbots_areaAccountaccountArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_areaAccountareaArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
};


export type Chatbots_areaAccountcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_areaAccountpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_areaAccountprocessesArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAccountOrder>;
};


export type Chatbots_areaAccountprocessesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
};

export type Chatbots_areaAccountAggregateResult = {
  __typename?: 'Chatbots_areaAccountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Chatbots_areaAccountFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_areaAccountFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_areaAccountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_areaAccountFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_areaAccountFilter>>>;
};

export enum Chatbots_areaAccountHasFilter {
  account = 'account',
  area = 'area',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  package = 'package',
  processes = 'processes',
  role = 'role'
}

export type Chatbots_areaAccountOrder = {
  asc?: InputMaybe<Chatbots_areaAccountOrderable>;
  desc?: InputMaybe<Chatbots_areaAccountOrderable>;
  then?: InputMaybe<Chatbots_areaAccountOrder>;
};

export enum Chatbots_areaAccountOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type Chatbots_areaAccountPatch = {
  account?: InputMaybe<Chatbots_accountRef>;
  area?: InputMaybe<Chatbots_areaRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processes?: InputMaybe<Array<Chatbots_processAccountRef>>;
  role?: InputMaybe<Chatbots_role>;
};

export type Chatbots_areaAccountRef = {
  account?: InputMaybe<Chatbots_accountRef>;
  area?: InputMaybe<Chatbots_areaRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processes?: InputMaybe<Array<Chatbots_processAccountRef>>;
  role?: InputMaybe<Chatbots_role>;
};

export type Chatbots_areaAggregateResult = {
  __typename?: 'Chatbots_areaAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Chatbots_areaFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_areaFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_areaHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<Chatbots_areaFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_areaFilter>>>;
};

export enum Chatbots_areaHasFilter {
  accounts = 'accounts',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  fields = 'fields',
  guid = 'guid',
  name = 'name',
  operations = 'operations',
  package = 'package',
  processes = 'processes'
}

export type Chatbots_areaOrder = {
  asc?: InputMaybe<Chatbots_areaOrderable>;
  desc?: InputMaybe<Chatbots_areaOrderable>;
  then?: InputMaybe<Chatbots_areaOrder>;
};

export enum Chatbots_areaOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type Chatbots_areaPatch = {
  accounts?: InputMaybe<Array<Chatbots_areaAccountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  fields?: InputMaybe<Array<Chatbots_processFieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<Chatbots_processOperationRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processes?: InputMaybe<Array<Chatbots_processRef>>;
};

export type Chatbots_areaRef = {
  accounts?: InputMaybe<Array<Chatbots_areaAccountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  fields?: InputMaybe<Array<Chatbots_processFieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<Chatbots_processOperationRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processes?: InputMaybe<Array<Chatbots_processRef>>;
};

export type Chatbots_externalAPI = {
  __typename?: 'Chatbots_externalAPI';
  fields: Array<Chatbots_externalAPI_field>;
  fieldsAggregate?: Maybe<Chatbots_externalAPI_fieldAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  method: Scalars['String'];
  name: Scalars['String'];
  package: Chatbots_PACKAGE;
  processActions: Array<Chatbots_processAction>;
  processActionsAggregate?: Maybe<Chatbots_processActionAggregateResult>;
  processes: Array<Chatbots_processAPI>;
  processesAggregate?: Maybe<Chatbots_processAPIAggregateResult>;
  rootKey?: Maybe<Scalars['String']>;
  type: Chatbots_externalAPIResponseType;
  url: Scalars['String'];
};


export type Chatbots_externalAPIfieldsArgs = {
  filter?: InputMaybe<Chatbots_externalAPI_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_externalAPI_fieldOrder>;
};


export type Chatbots_externalAPIfieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_externalAPI_fieldFilter>;
};


export type Chatbots_externalAPIpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_externalAPIprocessActionsArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processActionOrder>;
};


export type Chatbots_externalAPIprocessActionsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
};


export type Chatbots_externalAPIprocessesArgs = {
  filter?: InputMaybe<Chatbots_processAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAPIOrder>;
};


export type Chatbots_externalAPIprocessesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processAPIFilter>;
};

export type Chatbots_externalAPIAggregateResult = {
  __typename?: 'Chatbots_externalAPIAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  methodMax?: Maybe<Scalars['String']>;
  methodMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  rootKeyMax?: Maybe<Scalars['String']>;
  rootKeyMin?: Maybe<Scalars['String']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
};

export type Chatbots_externalAPIFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_externalAPIFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_externalAPIHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_externalAPIFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_externalAPIFilter>>>;
  type?: InputMaybe<Chatbots_externalAPIResponseType_exact>;
};

export enum Chatbots_externalAPIHasFilter {
  fields = 'fields',
  guid = 'guid',
  method = 'method',
  name = 'name',
  package = 'package',
  processActions = 'processActions',
  processes = 'processes',
  rootKey = 'rootKey',
  type = 'type',
  url = 'url'
}

export type Chatbots_externalAPIOrder = {
  asc?: InputMaybe<Chatbots_externalAPIOrderable>;
  desc?: InputMaybe<Chatbots_externalAPIOrderable>;
  then?: InputMaybe<Chatbots_externalAPIOrder>;
};

export enum Chatbots_externalAPIOrderable {
  guid = 'guid',
  method = 'method',
  name = 'name',
  rootKey = 'rootKey',
  url = 'url'
}

export type Chatbots_externalAPIPatch = {
  fields?: InputMaybe<Array<Chatbots_externalAPI_fieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  method?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processActions?: InputMaybe<Array<Chatbots_processActionRef>>;
  processes?: InputMaybe<Array<Chatbots_processAPIRef>>;
  rootKey?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Chatbots_externalAPIResponseType>;
  url?: InputMaybe<Scalars['String']>;
};

export type Chatbots_externalAPIRef = {
  fields?: InputMaybe<Array<Chatbots_externalAPI_fieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  method?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processActions?: InputMaybe<Array<Chatbots_processActionRef>>;
  processes?: InputMaybe<Array<Chatbots_processAPIRef>>;
  rootKey?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Chatbots_externalAPIResponseType>;
  url?: InputMaybe<Scalars['String']>;
};

export enum Chatbots_externalAPIResponseType {
  BOOLEAN = 'BOOLEAN',
  FILE = 'FILE',
  LIST = 'LIST',
  OBJECT = 'OBJECT'
}

export type Chatbots_externalAPIResponseType_exact = {
  between?: InputMaybe<Chatbots_externalAPIResponseType>;
  eq?: InputMaybe<Chatbots_externalAPIResponseType>;
  ge?: InputMaybe<Chatbots_externalAPIResponseType>;
  gt?: InputMaybe<Chatbots_externalAPIResponseType>;
  in?: InputMaybe<Array<InputMaybe<Chatbots_externalAPIResponseType>>>;
  le?: InputMaybe<Chatbots_externalAPIResponseType>;
  lt?: InputMaybe<Chatbots_externalAPIResponseType>;
};

export type Chatbots_externalAPI_field = {
  __typename?: 'Chatbots_externalAPI_field';
  authEndpoint?: Maybe<Scalars['String']>;
  authLogin?: Maybe<Scalars['String']>;
  authMethod?: Maybe<Scalars['String']>;
  authTokenRequestField?: Maybe<Scalars['String']>;
  authTokenResponseField?: Maybe<Scalars['String']>;
  externalAPI: Chatbots_externalAPI;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  type: Chatbots_externalAPI_fieldType;
  useAuth?: Maybe<Scalars['Boolean']>;
};


export type Chatbots_externalAPI_fieldexternalAPIArgs = {
  filter?: InputMaybe<Chatbots_externalAPIFilter>;
};

export type Chatbots_externalAPI_fieldAggregateResult = {
  __typename?: 'Chatbots_externalAPI_fieldAggregateResult';
  authEndpointMax?: Maybe<Scalars['String']>;
  authEndpointMin?: Maybe<Scalars['String']>;
  authLoginMax?: Maybe<Scalars['String']>;
  authLoginMin?: Maybe<Scalars['String']>;
  authMethodMax?: Maybe<Scalars['String']>;
  authMethodMin?: Maybe<Scalars['String']>;
  authTokenRequestFieldMax?: Maybe<Scalars['String']>;
  authTokenRequestFieldMin?: Maybe<Scalars['String']>;
  authTokenResponseFieldMax?: Maybe<Scalars['String']>;
  authTokenResponseFieldMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Chatbots_externalAPI_fieldFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_externalAPI_fieldFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_externalAPI_fieldHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_externalAPI_fieldFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_externalAPI_fieldFilter>>>;
  type?: InputMaybe<Chatbots_externalAPI_fieldType_exact>;
};

export enum Chatbots_externalAPI_fieldHasFilter {
  authEndpoint = 'authEndpoint',
  authLogin = 'authLogin',
  authMethod = 'authMethod',
  authTokenRequestField = 'authTokenRequestField',
  authTokenResponseField = 'authTokenResponseField',
  externalAPI = 'externalAPI',
  guid = 'guid',
  name = 'name',
  type = 'type',
  useAuth = 'useAuth'
}

export type Chatbots_externalAPI_fieldOrder = {
  asc?: InputMaybe<Chatbots_externalAPI_fieldOrderable>;
  desc?: InputMaybe<Chatbots_externalAPI_fieldOrderable>;
  then?: InputMaybe<Chatbots_externalAPI_fieldOrder>;
};

export enum Chatbots_externalAPI_fieldOrderable {
  authEndpoint = 'authEndpoint',
  authLogin = 'authLogin',
  authMethod = 'authMethod',
  authTokenRequestField = 'authTokenRequestField',
  authTokenResponseField = 'authTokenResponseField',
  guid = 'guid',
  name = 'name'
}

export type Chatbots_externalAPI_fieldPatch = {
  authEndpoint?: InputMaybe<Scalars['String']>;
  authLogin?: InputMaybe<Scalars['String']>;
  authMethod?: InputMaybe<Scalars['String']>;
  authTokenRequestField?: InputMaybe<Scalars['String']>;
  authTokenResponseField?: InputMaybe<Scalars['String']>;
  externalAPI?: InputMaybe<Chatbots_externalAPIRef>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Chatbots_externalAPI_fieldType>;
  useAuth?: InputMaybe<Scalars['Boolean']>;
};

export type Chatbots_externalAPI_fieldRef = {
  authEndpoint?: InputMaybe<Scalars['String']>;
  authLogin?: InputMaybe<Scalars['String']>;
  authMethod?: InputMaybe<Scalars['String']>;
  authTokenRequestField?: InputMaybe<Scalars['String']>;
  authTokenResponseField?: InputMaybe<Scalars['String']>;
  externalAPI?: InputMaybe<Chatbots_externalAPIRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Chatbots_externalAPI_fieldType>;
  useAuth?: InputMaybe<Scalars['Boolean']>;
};

export enum Chatbots_externalAPI_fieldType {
  BOOLEAN = 'BOOLEAN',
  LIST = 'LIST',
  NUMBER = 'NUMBER',
  OBJECT = 'OBJECT',
  STRING = 'STRING'
}

export type Chatbots_externalAPI_fieldType_exact = {
  between?: InputMaybe<Chatbots_externalAPI_fieldType>;
  eq?: InputMaybe<Chatbots_externalAPI_fieldType>;
  ge?: InputMaybe<Chatbots_externalAPI_fieldType>;
  gt?: InputMaybe<Chatbots_externalAPI_fieldType>;
  in?: InputMaybe<Array<InputMaybe<Chatbots_externalAPI_fieldType>>>;
  le?: InputMaybe<Chatbots_externalAPI_fieldType>;
  lt?: InputMaybe<Chatbots_externalAPI_fieldType>;
};

export enum Chatbots_operationFileType {
  IMG = 'IMG',
  PDF = 'PDF',
  SHEET = 'SHEET'
}

export type Chatbots_process = {
  __typename?: 'Chatbots_process';
  accounts: Array<Chatbots_processAccount>;
  accountsAggregate?: Maybe<Chatbots_processAccountAggregateResult>;
  actions: Array<Chatbots_processAction>;
  actionsAggregate?: Maybe<Chatbots_processActionAggregateResult>;
  api: Chatbots_processAPI;
  area: Chatbots_area;
  buttons: Array<Chatbots_processButton>;
  buttonsAggregate?: Maybe<Chatbots_processButtonAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  description?: Maybe<Scalars['String']>;
  fields: Array<Chatbots_processField>;
  fieldsAggregate?: Maybe<Chatbots_processFieldAggregateResult>;
  filterParams: Array<Chatbots_processFilterParam>;
  filterParamsAggregate?: Maybe<Chatbots_processFilterParamAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  operations: Array<Chatbots_processOperation>;
  operationsAggregate?: Maybe<Chatbots_processOperationAggregateResult>;
  package: Chatbots_PACKAGE;
  statuses: Array<Chatbots_processStatus>;
  statusesAggregate?: Maybe<Chatbots_processStatusAggregateResult>;
  tableHeadConfigs: Array<Chatbots_processTableHeadConfig>;
  tableHeadConfigsAggregate?: Maybe<Chatbots_processTableHeadConfigAggregateResult>;
  tableHeads: Array<Chatbots_processTableHead>;
  tableHeadsAggregate?: Maybe<Chatbots_processTableHeadAggregateResult>;
  tableMatchReplaces: Array<Chatbots_processTableMatchReplace>;
  tableMatchReplacesAggregate?: Maybe<Chatbots_processTableMatchReplaceAggregateResult>;
  temporalForm?: Maybe<Scalars['String']>;
  validations: Array<Chatbots_processValidation>;
  validationsAggregate?: Maybe<Chatbots_processValidationAggregateResult>;
};


export type Chatbots_processaccountsArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAccountOrder>;
};


export type Chatbots_processaccountsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
};


export type Chatbots_processactionsArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processActionOrder>;
};


export type Chatbots_processactionsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
};


export type Chatbots_processapiArgs = {
  filter?: InputMaybe<Chatbots_processAPIFilter>;
};


export type Chatbots_processareaArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
};


export type Chatbots_processbuttonsArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processButtonOrder>;
};


export type Chatbots_processbuttonsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
};


export type Chatbots_processcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processfieldsArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFieldOrder>;
};


export type Chatbots_processfieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
};


export type Chatbots_processfilterParamsArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFilterParamOrder>;
};


export type Chatbots_processfilterParamsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
};


export type Chatbots_processoperationsArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOperationOrder>;
};


export type Chatbots_processoperationsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
};


export type Chatbots_processpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processstatusesArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processStatusOrder>;
};


export type Chatbots_processstatusesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
};


export type Chatbots_processtableHeadConfigsArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadConfigOrder>;
};


export type Chatbots_processtableHeadConfigsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
};


export type Chatbots_processtableHeadsArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadOrder>;
};


export type Chatbots_processtableHeadsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
};


export type Chatbots_processtableMatchReplacesArgs = {
  filter?: InputMaybe<Chatbots_processTableMatchReplaceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableMatchReplaceOrder>;
};


export type Chatbots_processtableMatchReplacesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processTableMatchReplaceFilter>;
};


export type Chatbots_processvalidationsArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOrder>;
};


export type Chatbots_processvalidationsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
};

export type Chatbots_processAPI = {
  __typename?: 'Chatbots_processAPI';
  externalAPI?: Maybe<Chatbots_externalAPI>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: Chatbots_PACKAGE;
  process: Chatbots_process;
};


export type Chatbots_processAPIexternalAPIArgs = {
  filter?: InputMaybe<Chatbots_externalAPIFilter>;
};


export type Chatbots_processAPIpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processAPIprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};

export type Chatbots_processAPIAggregateResult = {
  __typename?: 'Chatbots_processAPIAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processAPIFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processAPIFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processAPIHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processAPIFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processAPIFilter>>>;
};

export enum Chatbots_processAPIHasFilter {
  externalAPI = 'externalAPI',
  guid = 'guid',
  package = 'package',
  process = 'process'
}

export type Chatbots_processAPIOrder = {
  asc?: InputMaybe<Chatbots_processAPIOrderable>;
  desc?: InputMaybe<Chatbots_processAPIOrderable>;
  then?: InputMaybe<Chatbots_processAPIOrder>;
};

export enum Chatbots_processAPIOrderable {
  guid = 'guid'
}

export type Chatbots_processAPIPatch = {
  externalAPI?: InputMaybe<Chatbots_externalAPIRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
};

export type Chatbots_processAPIRef = {
  externalAPI?: InputMaybe<Chatbots_externalAPIRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
};

export type Chatbots_processAccount = {
  __typename?: 'Chatbots_processAccount';
  account: Chatbots_account;
  areaAccount: Chatbots_areaAccount;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: Chatbots_PACKAGE;
  process: Chatbots_process;
  role: Chatbots_role;
  tableHeadConfigs: Array<Chatbots_processTableHeadConfig>;
  tableHeadConfigsAggregate?: Maybe<Chatbots_processTableHeadConfigAggregateResult>;
};


export type Chatbots_processAccountaccountArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processAccountareaAccountArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
};


export type Chatbots_processAccountcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processAccountpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processAccountprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};


export type Chatbots_processAccounttableHeadConfigsArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadConfigOrder>;
};


export type Chatbots_processAccounttableHeadConfigsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
};

export type Chatbots_processAccountAggregateResult = {
  __typename?: 'Chatbots_processAccountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processAccountFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processAccountFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processAccountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processAccountFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processAccountFilter>>>;
};

export enum Chatbots_processAccountHasFilter {
  account = 'account',
  areaAccount = 'areaAccount',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  package = 'package',
  process = 'process',
  role = 'role',
  tableHeadConfigs = 'tableHeadConfigs'
}

export type Chatbots_processAccountOrder = {
  asc?: InputMaybe<Chatbots_processAccountOrderable>;
  desc?: InputMaybe<Chatbots_processAccountOrderable>;
  then?: InputMaybe<Chatbots_processAccountOrder>;
};

export enum Chatbots_processAccountOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type Chatbots_processAccountPatch = {
  account?: InputMaybe<Chatbots_accountRef>;
  areaAccount?: InputMaybe<Chatbots_areaAccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  role?: InputMaybe<Chatbots_role>;
  tableHeadConfigs?: InputMaybe<Array<Chatbots_processTableHeadConfigRef>>;
};

export type Chatbots_processAccountRef = {
  account?: InputMaybe<Chatbots_accountRef>;
  areaAccount?: InputMaybe<Chatbots_areaAccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  role?: InputMaybe<Chatbots_role>;
  tableHeadConfigs?: InputMaybe<Array<Chatbots_processTableHeadConfigRef>>;
};

export type Chatbots_processAction = {
  __typename?: 'Chatbots_processAction';
  buttons: Array<Chatbots_processButton>;
  buttonsAggregate?: Maybe<Chatbots_processButtonAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  description: Scalars['String'];
  externalAPI?: Maybe<Chatbots_externalAPI>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  package: Chatbots_PACKAGE;
  process: Chatbots_process;
  tableHeads: Array<Chatbots_processTableHead>;
  tableHeadsAggregate?: Maybe<Chatbots_processTableHeadAggregateResult>;
  type: Chatbots_processActionType;
};


export type Chatbots_processActionbuttonsArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processButtonOrder>;
};


export type Chatbots_processActionbuttonsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
};


export type Chatbots_processActioncreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processActionexternalAPIArgs = {
  filter?: InputMaybe<Chatbots_externalAPIFilter>;
};


export type Chatbots_processActionpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processActionprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};


export type Chatbots_processActiontableHeadsArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadOrder>;
};


export type Chatbots_processActiontableHeadsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
};

export type Chatbots_processActionAggregateResult = {
  __typename?: 'Chatbots_processActionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processActionFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processActionFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processActionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processActionFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processActionFilter>>>;
};

export enum Chatbots_processActionHasFilter {
  buttons = 'buttons',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  externalAPI = 'externalAPI',
  guid = 'guid',
  name = 'name',
  package = 'package',
  process = 'process',
  tableHeads = 'tableHeads',
  type = 'type'
}

export type Chatbots_processActionOrder = {
  asc?: InputMaybe<Chatbots_processActionOrderable>;
  desc?: InputMaybe<Chatbots_processActionOrderable>;
  then?: InputMaybe<Chatbots_processActionOrder>;
};

export enum Chatbots_processActionOrderable {
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  name = 'name'
}

export type Chatbots_processActionPatch = {
  buttons?: InputMaybe<Array<Chatbots_processButtonRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  externalAPI?: InputMaybe<Chatbots_externalAPIRef>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  tableHeads?: InputMaybe<Array<Chatbots_processTableHeadRef>>;
  type?: InputMaybe<Chatbots_processActionType>;
};

export type Chatbots_processActionRef = {
  buttons?: InputMaybe<Array<Chatbots_processButtonRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  externalAPI?: InputMaybe<Chatbots_externalAPIRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  tableHeads?: InputMaybe<Array<Chatbots_processTableHeadRef>>;
  type?: InputMaybe<Chatbots_processActionType>;
};

export enum Chatbots_processActionType {
  EXTERNAL = 'EXTERNAL',
  SEND_EMAIL = 'SEND_EMAIL',
  TEMPORAL_DOWNLOAD_CSV = 'TEMPORAL_DOWNLOAD_CSV',
  TEMPORAL_DOWNLOAD_ZIP = 'TEMPORAL_DOWNLOAD_ZIP'
}

export type Chatbots_processAggregateResult = {
  __typename?: 'Chatbots_processAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  temporalFormMax?: Maybe<Scalars['String']>;
  temporalFormMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processButton = {
  __typename?: 'Chatbots_processButton';
  action: Chatbots_processAction;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  filtersParams: Array<Chatbots_processFilterParam>;
  filtersParamsAggregate?: Maybe<Chatbots_processFilterParamAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  label: Scalars['String'];
  package: Chatbots_PACKAGE;
  process: Chatbots_process;
};


export type Chatbots_processButtonactionArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
};


export type Chatbots_processButtoncreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processButtonfiltersParamsArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFilterParamOrder>;
};


export type Chatbots_processButtonfiltersParamsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
};


export type Chatbots_processButtonpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processButtonprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};

export type Chatbots_processButtonAggregateResult = {
  __typename?: 'Chatbots_processButtonAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processButtonFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processButtonFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processButtonHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processButtonFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processButtonFilter>>>;
};

export enum Chatbots_processButtonHasFilter {
  action = 'action',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  filtersParams = 'filtersParams',
  guid = 'guid',
  label = 'label',
  package = 'package',
  process = 'process'
}

export type Chatbots_processButtonOrder = {
  asc?: InputMaybe<Chatbots_processButtonOrderable>;
  desc?: InputMaybe<Chatbots_processButtonOrderable>;
  then?: InputMaybe<Chatbots_processButtonOrder>;
};

export enum Chatbots_processButtonOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  label = 'label'
}

export type Chatbots_processButtonPatch = {
  action?: InputMaybe<Chatbots_processActionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  filtersParams?: InputMaybe<Array<Chatbots_processFilterParamRef>>;
  guid?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
};

export type Chatbots_processButtonRef = {
  action?: InputMaybe<Chatbots_processActionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  filtersParams?: InputMaybe<Array<Chatbots_processFilterParamRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
};

export type Chatbots_processField = {
  __typename?: 'Chatbots_processField';
  area: Chatbots_area;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  guid: Scalars['String'];
  hiddenLevel: Chatbots_processFieldHiddenLevel;
  id: Scalars['ID'];
  key: Scalars['String'];
  package: Chatbots_PACKAGE;
  process: Chatbots_process;
  tableHeaders: Array<Chatbots_processTableHead>;
  tableHeadersAggregate?: Maybe<Chatbots_processTableHeadAggregateResult>;
  type: Chatbots_processFieldType;
};


export type Chatbots_processFieldareaArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
};


export type Chatbots_processFieldcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processFieldpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processFieldprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};


export type Chatbots_processFieldtableHeadersArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadOrder>;
};


export type Chatbots_processFieldtableHeadersAggregateArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
};

export type Chatbots_processFieldAggregateResult = {
  __typename?: 'Chatbots_processFieldAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  keyMax?: Maybe<Scalars['String']>;
  keyMin?: Maybe<Scalars['String']>;
};

export enum Chatbots_processFieldCurrencyType {
  EUR = 'EUR',
  USD = 'USD'
}

export enum Chatbots_processFieldDateType {
  DD_MM_YYYY = 'DD_MM_YYYY',
  DD_MM_YYYY_HH_mm = 'DD_MM_YYYY_HH_mm',
  HH_mm = 'HH_mm'
}

export type Chatbots_processFieldFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processFieldFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processFieldHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  key?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<Chatbots_processFieldFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processFieldFilter>>>;
};

export enum Chatbots_processFieldHasFilter {
  area = 'area',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  hiddenLevel = 'hiddenLevel',
  key = 'key',
  package = 'package',
  process = 'process',
  tableHeaders = 'tableHeaders',
  type = 'type'
}

export enum Chatbots_processFieldHiddenLevel {
  FULL = 'FULL',
  NONE = 'NONE',
  PARTIAL = 'PARTIAL'
}

export type Chatbots_processFieldOrder = {
  asc?: InputMaybe<Chatbots_processFieldOrderable>;
  desc?: InputMaybe<Chatbots_processFieldOrderable>;
  then?: InputMaybe<Chatbots_processFieldOrder>;
};

export enum Chatbots_processFieldOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  key = 'key'
}

export type Chatbots_processFieldPatch = {
  area?: InputMaybe<Chatbots_areaRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  hiddenLevel?: InputMaybe<Chatbots_processFieldHiddenLevel>;
  key?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  tableHeaders?: InputMaybe<Array<Chatbots_processTableHeadRef>>;
  type?: InputMaybe<Chatbots_processFieldType>;
};

export type Chatbots_processFieldRef = {
  area?: InputMaybe<Chatbots_areaRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  hiddenLevel?: InputMaybe<Chatbots_processFieldHiddenLevel>;
  id?: InputMaybe<Scalars['ID']>;
  key?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  tableHeaders?: InputMaybe<Array<Chatbots_processTableHeadRef>>;
  type?: InputMaybe<Chatbots_processFieldType>;
};

export enum Chatbots_processFieldType {
  BOOLEAN = 'BOOLEAN',
  CURRENCY = 'CURRENCY',
  DATETIME = 'DATETIME',
  EMAIL = 'EMAIL',
  FILE = 'FILE',
  LOCATION = 'LOCATION',
  NUMBER = 'NUMBER',
  PHONE = 'PHONE',
  STATUS = 'STATUS',
  TEXT = 'TEXT',
  UNKNOWN = 'UNKNOWN',
  URL = 'URL'
}

export type Chatbots_processFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<Chatbots_processFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processFilter>>>;
};

export type Chatbots_processFilterParam = {
  __typename?: 'Chatbots_processFilterParam';
  buttons: Array<Chatbots_processButton>;
  buttonsAggregate?: Maybe<Chatbots_processButtonAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  defaultValue?: Maybe<Scalars['String']>;
  fields: Array<Chatbots_processField>;
  fieldsAggregate?: Maybe<Chatbots_processFieldAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isHidden: Scalars['Boolean'];
  max?: Maybe<Scalars['Int']>;
  min?: Maybe<Scalars['Int']>;
  package: Chatbots_PACKAGE;
  param: Scalars['String'];
  paramType: Chatbots_processParamType;
  process: Chatbots_process;
  scope: Chatbots_processFilterParamScope;
  type: Chatbots_processFilterParamType;
};


export type Chatbots_processFilterParambuttonsArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processButtonOrder>;
};


export type Chatbots_processFilterParambuttonsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
};


export type Chatbots_processFilterParamcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processFilterParamfieldsArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFieldOrder>;
};


export type Chatbots_processFilterParamfieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
};


export type Chatbots_processFilterParampackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processFilterParamprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};

export type Chatbots_processFilterParamAggregateResult = {
  __typename?: 'Chatbots_processFilterParamAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  defaultValueMax?: Maybe<Scalars['String']>;
  defaultValueMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  maxAvg?: Maybe<Scalars['Float']>;
  maxMax?: Maybe<Scalars['Int']>;
  maxMin?: Maybe<Scalars['Int']>;
  maxSum?: Maybe<Scalars['Int']>;
  minAvg?: Maybe<Scalars['Float']>;
  minMax?: Maybe<Scalars['Int']>;
  minMin?: Maybe<Scalars['Int']>;
  minSum?: Maybe<Scalars['Int']>;
  paramMax?: Maybe<Scalars['String']>;
  paramMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processFilterParamFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processFilterParamFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processFilterParamHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processFilterParamFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processFilterParamFilter>>>;
  paramType?: InputMaybe<Chatbots_processParamType_exact>;
  scope?: InputMaybe<Chatbots_processFilterParamScope_exact>;
  type?: InputMaybe<Chatbots_processFilterParamType_exact>;
};

export enum Chatbots_processFilterParamHasFilter {
  buttons = 'buttons',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  defaultValue = 'defaultValue',
  fields = 'fields',
  guid = 'guid',
  isHidden = 'isHidden',
  max = 'max',
  min = 'min',
  package = 'package',
  param = 'param',
  paramType = 'paramType',
  process = 'process',
  scope = 'scope',
  type = 'type'
}

export type Chatbots_processFilterParamOrder = {
  asc?: InputMaybe<Chatbots_processFilterParamOrderable>;
  desc?: InputMaybe<Chatbots_processFilterParamOrderable>;
  then?: InputMaybe<Chatbots_processFilterParamOrder>;
};

export enum Chatbots_processFilterParamOrderable {
  createdAt = 'createdAt',
  defaultValue = 'defaultValue',
  guid = 'guid',
  max = 'max',
  min = 'min',
  param = 'param'
}

export type Chatbots_processFilterParamPatch = {
  buttons?: InputMaybe<Array<Chatbots_processButtonRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  defaultValue?: InputMaybe<Scalars['String']>;
  fields?: InputMaybe<Array<Chatbots_processFieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  max?: InputMaybe<Scalars['Int']>;
  min?: InputMaybe<Scalars['Int']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  param?: InputMaybe<Scalars['String']>;
  paramType?: InputMaybe<Chatbots_processParamType>;
  process?: InputMaybe<Chatbots_processRef>;
  scope?: InputMaybe<Chatbots_processFilterParamScope>;
  type?: InputMaybe<Chatbots_processFilterParamType>;
};

export type Chatbots_processFilterParamRef = {
  buttons?: InputMaybe<Array<Chatbots_processButtonRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  defaultValue?: InputMaybe<Scalars['String']>;
  fields?: InputMaybe<Array<Chatbots_processFieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  max?: InputMaybe<Scalars['Int']>;
  min?: InputMaybe<Scalars['Int']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  param?: InputMaybe<Scalars['String']>;
  paramType?: InputMaybe<Chatbots_processParamType>;
  process?: InputMaybe<Chatbots_processRef>;
  scope?: InputMaybe<Chatbots_processFilterParamScope>;
  type?: InputMaybe<Chatbots_processFilterParamType>;
};

export enum Chatbots_processFilterParamScope {
  FILTER_RESULT = 'FILTER_RESULT',
  NO_SEND = 'NO_SEND',
  SEND_PARAM = 'SEND_PARAM'
}

export type Chatbots_processFilterParamScope_exact = {
  between?: InputMaybe<Chatbots_processFilterParamScope>;
  eq?: InputMaybe<Chatbots_processFilterParamScope>;
  ge?: InputMaybe<Chatbots_processFilterParamScope>;
  gt?: InputMaybe<Chatbots_processFilterParamScope>;
  in?: InputMaybe<Array<InputMaybe<Chatbots_processFilterParamScope>>>;
  le?: InputMaybe<Chatbots_processFilterParamScope>;
  lt?: InputMaybe<Chatbots_processFilterParamScope>;
};

export enum Chatbots_processFilterParamType {
  DATE = 'DATE',
  END_DATE = 'END_DATE',
  EXACT = 'EXACT',
  FULL_SEARCH = 'FULL_SEARCH',
  NUMBER = 'NUMBER',
  SELECT = 'SELECT',
  START_DATE = 'START_DATE'
}

export type Chatbots_processFilterParamType_exact = {
  between?: InputMaybe<Chatbots_processFilterParamType>;
  eq?: InputMaybe<Chatbots_processFilterParamType>;
  ge?: InputMaybe<Chatbots_processFilterParamType>;
  gt?: InputMaybe<Chatbots_processFilterParamType>;
  in?: InputMaybe<Array<InputMaybe<Chatbots_processFilterParamType>>>;
  le?: InputMaybe<Chatbots_processFilterParamType>;
  lt?: InputMaybe<Chatbots_processFilterParamType>;
};

export enum Chatbots_processHasFilter {
  accounts = 'accounts',
  actions = 'actions',
  api = 'api',
  area = 'area',
  buttons = 'buttons',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  fields = 'fields',
  filterParams = 'filterParams',
  guid = 'guid',
  name = 'name',
  operations = 'operations',
  package = 'package',
  statuses = 'statuses',
  tableHeadConfigs = 'tableHeadConfigs',
  tableHeads = 'tableHeads',
  tableMatchReplaces = 'tableMatchReplaces',
  temporalForm = 'temporalForm',
  validations = 'validations'
}

export type Chatbots_processOperation = {
  __typename?: 'Chatbots_processOperation';
  area: Chatbots_area;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  exId: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: Chatbots_PACKAGE;
  process: Chatbots_process;
  validations: Array<Chatbots_processValidationOperation>;
  validationsAggregate?: Maybe<Chatbots_processValidationOperationAggregateResult>;
};


export type Chatbots_processOperationareaArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
};


export type Chatbots_processOperationcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processOperationpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processOperationprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};


export type Chatbots_processOperationvalidationsArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperationOrder>;
};


export type Chatbots_processOperationvalidationsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
};

export type Chatbots_processOperationAggregateResult = {
  __typename?: 'Chatbots_processOperationAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  exIdMax?: Maybe<Scalars['String']>;
  exIdMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processOperationFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processOperationFilter>>>;
  exId?: InputMaybe<StringExactFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processOperationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processOperationFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processOperationFilter>>>;
};

export enum Chatbots_processOperationHasFilter {
  area = 'area',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  exId = 'exId',
  guid = 'guid',
  package = 'package',
  process = 'process',
  validations = 'validations'
}

export type Chatbots_processOperationOrder = {
  asc?: InputMaybe<Chatbots_processOperationOrderable>;
  desc?: InputMaybe<Chatbots_processOperationOrderable>;
  then?: InputMaybe<Chatbots_processOperationOrder>;
};

export enum Chatbots_processOperationOrderable {
  createdAt = 'createdAt',
  exId = 'exId',
  guid = 'guid'
}

export type Chatbots_processOperationPatch = {
  area?: InputMaybe<Chatbots_areaRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  exId?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  validations?: InputMaybe<Array<Chatbots_processValidationOperationRef>>;
};

export type Chatbots_processOperationRef = {
  area?: InputMaybe<Chatbots_areaRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  exId?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  validations?: InputMaybe<Array<Chatbots_processValidationOperationRef>>;
};

export type Chatbots_processOrder = {
  asc?: InputMaybe<Chatbots_processOrderable>;
  desc?: InputMaybe<Chatbots_processOrderable>;
  then?: InputMaybe<Chatbots_processOrder>;
};

export enum Chatbots_processOrderable {
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  name = 'name',
  temporalForm = 'temporalForm'
}

export enum Chatbots_processParamType {
  BOOLEAN = 'BOOLEAN',
  DATE_DDMMYYYY = 'DATE_DDMMYYYY',
  DATE_DD_MM_YYYY = 'DATE_DD_MM_YYYY',
  DATE_YYYYMMDD = 'DATE_YYYYMMDD',
  DATE_YYYY_MM_DD = 'DATE_YYYY_MM_DD',
  ISO_DATE = 'ISO_DATE',
  NUMBER = 'NUMBER',
  STATUS = 'STATUS',
  TEXT = 'TEXT'
}

export type Chatbots_processParamType_exact = {
  between?: InputMaybe<Chatbots_processParamType>;
  eq?: InputMaybe<Chatbots_processParamType>;
  ge?: InputMaybe<Chatbots_processParamType>;
  gt?: InputMaybe<Chatbots_processParamType>;
  in?: InputMaybe<Array<InputMaybe<Chatbots_processParamType>>>;
  le?: InputMaybe<Chatbots_processParamType>;
  lt?: InputMaybe<Chatbots_processParamType>;
};

export type Chatbots_processPatch = {
  accounts?: InputMaybe<Array<Chatbots_processAccountRef>>;
  actions?: InputMaybe<Array<Chatbots_processActionRef>>;
  api?: InputMaybe<Chatbots_processAPIRef>;
  area?: InputMaybe<Chatbots_areaRef>;
  buttons?: InputMaybe<Array<Chatbots_processButtonRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  fields?: InputMaybe<Array<Chatbots_processFieldRef>>;
  filterParams?: InputMaybe<Array<Chatbots_processFilterParamRef>>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<Chatbots_processOperationRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  statuses?: InputMaybe<Array<Chatbots_processStatusRef>>;
  tableHeadConfigs?: InputMaybe<Array<Chatbots_processTableHeadConfigRef>>;
  tableHeads?: InputMaybe<Array<Chatbots_processTableHeadRef>>;
  tableMatchReplaces?: InputMaybe<Array<Chatbots_processTableMatchReplaceRef>>;
  temporalForm?: InputMaybe<Scalars['String']>;
  validations?: InputMaybe<Array<Chatbots_processValidationRef>>;
};

export type Chatbots_processRef = {
  accounts?: InputMaybe<Array<Chatbots_processAccountRef>>;
  actions?: InputMaybe<Array<Chatbots_processActionRef>>;
  api?: InputMaybe<Chatbots_processAPIRef>;
  area?: InputMaybe<Chatbots_areaRef>;
  buttons?: InputMaybe<Array<Chatbots_processButtonRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  fields?: InputMaybe<Array<Chatbots_processFieldRef>>;
  filterParams?: InputMaybe<Array<Chatbots_processFilterParamRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<Chatbots_processOperationRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  statuses?: InputMaybe<Array<Chatbots_processStatusRef>>;
  tableHeadConfigs?: InputMaybe<Array<Chatbots_processTableHeadConfigRef>>;
  tableHeads?: InputMaybe<Array<Chatbots_processTableHeadRef>>;
  tableMatchReplaces?: InputMaybe<Array<Chatbots_processTableMatchReplaceRef>>;
  temporalForm?: InputMaybe<Scalars['String']>;
  validations?: InputMaybe<Array<Chatbots_processValidationRef>>;
};

export type Chatbots_processStatus = {
  __typename?: 'Chatbots_processStatus';
  color: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  guid: Scalars['String'];
  icon?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name: Scalars['String'];
  package: Chatbots_PACKAGE;
  process: Chatbots_process;
  value: Scalars['String'];
};


export type Chatbots_processStatuscreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processStatuspackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processStatusprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};

export type Chatbots_processStatusAggregateResult = {
  __typename?: 'Chatbots_processStatusAggregateResult';
  colorMax?: Maybe<Scalars['String']>;
  colorMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  iconMax?: Maybe<Scalars['String']>;
  iconMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  valueMax?: Maybe<Scalars['String']>;
  valueMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processStatusFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processStatusFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processStatusHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processStatusFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processStatusFilter>>>;
};

export enum Chatbots_processStatusHasFilter {
  color = 'color',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  icon = 'icon',
  name = 'name',
  package = 'package',
  process = 'process',
  value = 'value'
}

export type Chatbots_processStatusOrder = {
  asc?: InputMaybe<Chatbots_processStatusOrderable>;
  desc?: InputMaybe<Chatbots_processStatusOrderable>;
  then?: InputMaybe<Chatbots_processStatusOrder>;
};

export enum Chatbots_processStatusOrderable {
  color = 'color',
  createdAt = 'createdAt',
  guid = 'guid',
  icon = 'icon',
  name = 'name',
  value = 'value'
}

export type Chatbots_processStatusPatch = {
  color?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  value?: InputMaybe<Scalars['String']>;
};

export type Chatbots_processStatusRef = {
  color?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  value?: InputMaybe<Scalars['String']>;
};

export type Chatbots_processTableHead = {
  __typename?: 'Chatbots_processTableHead';
  action?: Maybe<Chatbots_processAction>;
  allowActionByStatuses?: Maybe<Array<Chatbots_processStatus>>;
  allowActionByStatusesAggregate?: Maybe<Chatbots_processStatusAggregateResult>;
  configs: Array<Chatbots_processTableHeadConfig>;
  configsAggregate?: Maybe<Chatbots_processTableHeadConfigAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  fields: Array<Chatbots_processField>;
  fieldsAggregate?: Maybe<Chatbots_processFieldAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  matchReplaces: Array<Chatbots_processTableMatchReplace>;
  matchReplacesAggregate?: Maybe<Chatbots_processTableMatchReplaceAggregateResult>;
  name: Scalars['String'];
  process?: Maybe<Chatbots_process>;
};


export type Chatbots_processTableHeadactionArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
};


export type Chatbots_processTableHeadallowActionByStatusesArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processStatusOrder>;
};


export type Chatbots_processTableHeadallowActionByStatusesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
};


export type Chatbots_processTableHeadconfigsArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadConfigOrder>;
};


export type Chatbots_processTableHeadconfigsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
};


export type Chatbots_processTableHeadcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processTableHeadfieldsArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFieldOrder>;
};


export type Chatbots_processTableHeadfieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
};


export type Chatbots_processTableHeadmatchReplacesArgs = {
  filter?: InputMaybe<Chatbots_processTableMatchReplaceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableMatchReplaceOrder>;
};


export type Chatbots_processTableHeadmatchReplacesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processTableMatchReplaceFilter>;
};


export type Chatbots_processTableHeadprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};

export type Chatbots_processTableHeadAggregateResult = {
  __typename?: 'Chatbots_processTableHeadAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processTableHeadConfig = {
  __typename?: 'Chatbots_processTableHeadConfig';
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  isDisabled: Scalars['Boolean'];
  isHidden: Scalars['Boolean'];
  package: Chatbots_PACKAGE;
  process: Chatbots_process;
  processAccount: Chatbots_processAccount;
  tableHead: Chatbots_processTableHead;
};


export type Chatbots_processTableHeadConfigpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processTableHeadConfigprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};


export type Chatbots_processTableHeadConfigprocessAccountArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
};


export type Chatbots_processTableHeadConfigtableHeadArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
};

export type Chatbots_processTableHeadConfigAggregateResult = {
  __typename?: 'Chatbots_processTableHeadConfigAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type Chatbots_processTableHeadConfigFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processTableHeadConfigFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processTableHeadConfigHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  not?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processTableHeadConfigFilter>>>;
};

export enum Chatbots_processTableHeadConfigHasFilter {
  guid = 'guid',
  index = 'index',
  isDisabled = 'isDisabled',
  isHidden = 'isHidden',
  package = 'package',
  process = 'process',
  processAccount = 'processAccount',
  tableHead = 'tableHead'
}

export type Chatbots_processTableHeadConfigOrder = {
  asc?: InputMaybe<Chatbots_processTableHeadConfigOrderable>;
  desc?: InputMaybe<Chatbots_processTableHeadConfigOrderable>;
  then?: InputMaybe<Chatbots_processTableHeadConfigOrder>;
};

export enum Chatbots_processTableHeadConfigOrderable {
  guid = 'guid',
  index = 'index'
}

export type Chatbots_processTableHeadConfigPatch = {
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  processAccount?: InputMaybe<Chatbots_processAccountRef>;
  tableHead?: InputMaybe<Chatbots_processTableHeadRef>;
};

export type Chatbots_processTableHeadConfigRef = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  processAccount?: InputMaybe<Chatbots_processAccountRef>;
  tableHead?: InputMaybe<Chatbots_processTableHeadRef>;
};

export type Chatbots_processTableHeadFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processTableHeadFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processTableHeadHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  not?: InputMaybe<Chatbots_processTableHeadFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processTableHeadFilter>>>;
};

export enum Chatbots_processTableHeadHasFilter {
  action = 'action',
  allowActionByStatuses = 'allowActionByStatuses',
  configs = 'configs',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  fields = 'fields',
  guid = 'guid',
  index = 'index',
  matchReplaces = 'matchReplaces',
  name = 'name',
  process = 'process'
}

export type Chatbots_processTableHeadOrder = {
  asc?: InputMaybe<Chatbots_processTableHeadOrderable>;
  desc?: InputMaybe<Chatbots_processTableHeadOrderable>;
  then?: InputMaybe<Chatbots_processTableHeadOrder>;
};

export enum Chatbots_processTableHeadOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  index = 'index',
  name = 'name'
}

export type Chatbots_processTableHeadPatch = {
  action?: InputMaybe<Chatbots_processActionRef>;
  allowActionByStatuses?: InputMaybe<Array<Chatbots_processStatusRef>>;
  configs?: InputMaybe<Array<Chatbots_processTableHeadConfigRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  fields?: InputMaybe<Array<Chatbots_processFieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  matchReplaces?: InputMaybe<Array<Chatbots_processTableMatchReplaceRef>>;
  name?: InputMaybe<Scalars['String']>;
  process?: InputMaybe<Chatbots_processRef>;
};

export type Chatbots_processTableHeadRef = {
  action?: InputMaybe<Chatbots_processActionRef>;
  allowActionByStatuses?: InputMaybe<Array<Chatbots_processStatusRef>>;
  configs?: InputMaybe<Array<Chatbots_processTableHeadConfigRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  fields?: InputMaybe<Array<Chatbots_processFieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  matchReplaces?: InputMaybe<Array<Chatbots_processTableMatchReplaceRef>>;
  name?: InputMaybe<Scalars['String']>;
  process?: InputMaybe<Chatbots_processRef>;
};

export enum Chatbots_processTableMatchOperator {
  CONTAINS = 'CONTAINS',
  EQUAL = 'EQUAL'
}

export type Chatbots_processTableMatchReplace = {
  __typename?: 'Chatbots_processTableMatchReplace';
  color?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  match: Scalars['String'];
  operator: Chatbots_processTableMatchOperator;
  process: Chatbots_process;
  replace: Scalars['String'];
  tableHead: Chatbots_processTableHead;
  tooltip?: Maybe<Scalars['String']>;
  type: Chatbots_processTableMatchReplaceType;
};


export type Chatbots_processTableMatchReplacecreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processTableMatchReplaceprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};


export type Chatbots_processTableMatchReplacetableHeadArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
};

export type Chatbots_processTableMatchReplaceAggregateResult = {
  __typename?: 'Chatbots_processTableMatchReplaceAggregateResult';
  colorMax?: Maybe<Scalars['String']>;
  colorMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  matchMax?: Maybe<Scalars['String']>;
  matchMin?: Maybe<Scalars['String']>;
  replaceMax?: Maybe<Scalars['String']>;
  replaceMin?: Maybe<Scalars['String']>;
  tooltipMax?: Maybe<Scalars['String']>;
  tooltipMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processTableMatchReplaceFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processTableMatchReplaceFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processTableMatchReplaceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processTableMatchReplaceFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processTableMatchReplaceFilter>>>;
};

export enum Chatbots_processTableMatchReplaceHasFilter {
  color = 'color',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  match = 'match',
  operator = 'operator',
  process = 'process',
  replace = 'replace',
  tableHead = 'tableHead',
  tooltip = 'tooltip',
  type = 'type'
}

export type Chatbots_processTableMatchReplaceOrder = {
  asc?: InputMaybe<Chatbots_processTableMatchReplaceOrderable>;
  desc?: InputMaybe<Chatbots_processTableMatchReplaceOrderable>;
  then?: InputMaybe<Chatbots_processTableMatchReplaceOrder>;
};

export enum Chatbots_processTableMatchReplaceOrderable {
  color = 'color',
  createdAt = 'createdAt',
  guid = 'guid',
  match = 'match',
  replace = 'replace',
  tooltip = 'tooltip'
}

export type Chatbots_processTableMatchReplacePatch = {
  color?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  match?: InputMaybe<Scalars['String']>;
  operator?: InputMaybe<Chatbots_processTableMatchOperator>;
  process?: InputMaybe<Chatbots_processRef>;
  replace?: InputMaybe<Scalars['String']>;
  tableHead?: InputMaybe<Chatbots_processTableHeadRef>;
  tooltip?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Chatbots_processTableMatchReplaceType>;
};

export type Chatbots_processTableMatchReplaceRef = {
  color?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  match?: InputMaybe<Scalars['String']>;
  operator?: InputMaybe<Chatbots_processTableMatchOperator>;
  process?: InputMaybe<Chatbots_processRef>;
  replace?: InputMaybe<Scalars['String']>;
  tableHead?: InputMaybe<Chatbots_processTableHeadRef>;
  tooltip?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Chatbots_processTableMatchReplaceType>;
};

export enum Chatbots_processTableMatchReplaceType {
  ICON = 'ICON',
  IMAGE = 'IMAGE',
  TEXT = 'TEXT'
}

export type Chatbots_processValidation = {
  __typename?: 'Chatbots_processValidation';
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  operations: Array<Chatbots_processValidationOperation>;
  operationsAggregate?: Maybe<Chatbots_processValidationOperationAggregateResult>;
  package: Chatbots_PACKAGE;
  process: Chatbots_process;
  validation: Chatbots_validation;
};


export type Chatbots_processValidationcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processValidationoperationsArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperationOrder>;
};


export type Chatbots_processValidationoperationsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
};


export type Chatbots_processValidationpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processValidationprocessArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};


export type Chatbots_processValidationvalidationArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
};

export type Chatbots_processValidationAggregateResult = {
  __typename?: 'Chatbots_processValidationAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processValidationFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processValidationFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processValidationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processValidationFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processValidationFilter>>>;
};

export enum Chatbots_processValidationHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  operations = 'operations',
  package = 'package',
  process = 'process',
  validation = 'validation'
}

export type Chatbots_processValidationOperation = {
  __typename?: 'Chatbots_processValidationOperation';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<Chatbots_account>;
  documents: Array<Chatbots_processValidationOperation_document>;
  documentsAggregate?: Maybe<Chatbots_processValidationOperation_documentAggregateResult>;
  endReviewDate?: Maybe<Scalars['DateTime']>;
  fields: Array<Chatbots_processsValidationOperation_field>;
  fieldsAggregate?: Maybe<Chatbots_processsValidationOperation_fieldAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  operation: Chatbots_processOperation;
  package: Chatbots_PACKAGE;
  process?: Maybe<Chatbots_processValidation>;
  reviewers: Array<Chatbots_account>;
  reviewersAggregate?: Maybe<Chatbots_accountAggregateResult>;
  startReviewDate?: Maybe<Scalars['DateTime']>;
  status: Chatbots_processsValidationOperation_status;
  validation?: Maybe<Chatbots_validation>;
};


export type Chatbots_processValidationOperationcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processValidationOperationdocumentsArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_documentOrder>;
};


export type Chatbots_processValidationOperationdocumentsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
};


export type Chatbots_processValidationOperationfieldsArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processsValidationOperation_fieldOrder>;
};


export type Chatbots_processValidationOperationfieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
};


export type Chatbots_processValidationOperationoperationArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
};


export type Chatbots_processValidationOperationpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processValidationOperationprocessArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
};


export type Chatbots_processValidationOperationreviewersArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_accountOrder>;
};


export type Chatbots_processValidationOperationreviewersAggregateArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_processValidationOperationvalidationArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
};

export type Chatbots_processValidationOperationAggregateResult = {
  __typename?: 'Chatbots_processValidationOperationAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  endReviewDateMax?: Maybe<Scalars['DateTime']>;
  endReviewDateMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  startReviewDateMax?: Maybe<Scalars['DateTime']>;
  startReviewDateMin?: Maybe<Scalars['DateTime']>;
};

export type Chatbots_processValidationOperationFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processValidationOperationFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processValidationOperationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processValidationOperationFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processValidationOperationFilter>>>;
};

export enum Chatbots_processValidationOperationHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  documents = 'documents',
  endReviewDate = 'endReviewDate',
  fields = 'fields',
  guid = 'guid',
  operation = 'operation',
  package = 'package',
  process = 'process',
  reviewers = 'reviewers',
  startReviewDate = 'startReviewDate',
  status = 'status',
  validation = 'validation'
}

export type Chatbots_processValidationOperationOrder = {
  asc?: InputMaybe<Chatbots_processValidationOperationOrderable>;
  desc?: InputMaybe<Chatbots_processValidationOperationOrderable>;
  then?: InputMaybe<Chatbots_processValidationOperationOrder>;
};

export enum Chatbots_processValidationOperationOrderable {
  createdAt = 'createdAt',
  endReviewDate = 'endReviewDate',
  guid = 'guid',
  startReviewDate = 'startReviewDate'
}

export type Chatbots_processValidationOperationPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  documents?: InputMaybe<Array<Chatbots_processValidationOperation_documentRef>>;
  endReviewDate?: InputMaybe<Scalars['DateTime']>;
  fields?: InputMaybe<Array<Chatbots_processsValidationOperation_fieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  operation?: InputMaybe<Chatbots_processOperationRef>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processValidationRef>;
  reviewers?: InputMaybe<Array<Chatbots_accountRef>>;
  startReviewDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
  validation?: InputMaybe<Chatbots_validationRef>;
};

export type Chatbots_processValidationOperationRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  documents?: InputMaybe<Array<Chatbots_processValidationOperation_documentRef>>;
  endReviewDate?: InputMaybe<Scalars['DateTime']>;
  fields?: InputMaybe<Array<Chatbots_processsValidationOperation_fieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  operation?: InputMaybe<Chatbots_processOperationRef>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processValidationRef>;
  reviewers?: InputMaybe<Array<Chatbots_accountRef>>;
  startReviewDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
  validation?: InputMaybe<Chatbots_validationRef>;
};

export type Chatbots_processValidationOperation_document = {
  __typename?: 'Chatbots_processValidationOperation_document';
  document?: Maybe<Chatbots_validationDocument>;
  endReviewDate?: Maybe<Scalars['DateTime']>;
  exId?: Maybe<Scalars['String']>;
  files: Array<Chatbots_processValidationOperation_document_file>;
  filesAggregate?: Maybe<Chatbots_processValidationOperation_document_fileAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  operation: Chatbots_processValidationOperation;
  package: Chatbots_PACKAGE;
  reviewers: Array<Chatbots_account>;
  reviewersAggregate?: Maybe<Chatbots_accountAggregateResult>;
  startReviewDate?: Maybe<Scalars['DateTime']>;
  status: Chatbots_processsValidationOperation_status;
};


export type Chatbots_processValidationOperation_documentdocumentArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
};


export type Chatbots_processValidationOperation_documentfilesArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_document_fileOrder>;
};


export type Chatbots_processValidationOperation_documentfilesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
};


export type Chatbots_processValidationOperation_documentoperationArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
};


export type Chatbots_processValidationOperation_documentpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processValidationOperation_documentreviewersArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_accountOrder>;
};


export type Chatbots_processValidationOperation_documentreviewersAggregateArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};

export type Chatbots_processValidationOperation_documentAggregateResult = {
  __typename?: 'Chatbots_processValidationOperation_documentAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endReviewDateMax?: Maybe<Scalars['DateTime']>;
  endReviewDateMin?: Maybe<Scalars['DateTime']>;
  exIdMax?: Maybe<Scalars['String']>;
  exIdMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  startReviewDateMax?: Maybe<Scalars['DateTime']>;
  startReviewDateMin?: Maybe<Scalars['DateTime']>;
};

export type Chatbots_processValidationOperation_documentFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processValidationOperation_documentFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processValidationOperation_documentHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processValidationOperation_documentFilter>>>;
};

export enum Chatbots_processValidationOperation_documentHasFilter {
  document = 'document',
  endReviewDate = 'endReviewDate',
  exId = 'exId',
  files = 'files',
  guid = 'guid',
  operation = 'operation',
  package = 'package',
  reviewers = 'reviewers',
  startReviewDate = 'startReviewDate',
  status = 'status'
}

export type Chatbots_processValidationOperation_documentOrder = {
  asc?: InputMaybe<Chatbots_processValidationOperation_documentOrderable>;
  desc?: InputMaybe<Chatbots_processValidationOperation_documentOrderable>;
  then?: InputMaybe<Chatbots_processValidationOperation_documentOrder>;
};

export enum Chatbots_processValidationOperation_documentOrderable {
  endReviewDate = 'endReviewDate',
  exId = 'exId',
  guid = 'guid',
  startReviewDate = 'startReviewDate'
}

export type Chatbots_processValidationOperation_documentPatch = {
  document?: InputMaybe<Chatbots_validationDocumentRef>;
  endReviewDate?: InputMaybe<Scalars['DateTime']>;
  exId?: InputMaybe<Scalars['String']>;
  files?: InputMaybe<Array<Chatbots_processValidationOperation_document_fileRef>>;
  guid?: InputMaybe<Scalars['String']>;
  operation?: InputMaybe<Chatbots_processValidationOperationRef>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  reviewers?: InputMaybe<Array<Chatbots_accountRef>>;
  startReviewDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
};

export type Chatbots_processValidationOperation_documentRef = {
  document?: InputMaybe<Chatbots_validationDocumentRef>;
  endReviewDate?: InputMaybe<Scalars['DateTime']>;
  exId?: InputMaybe<Scalars['String']>;
  files?: InputMaybe<Array<Chatbots_processValidationOperation_document_fileRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  operation?: InputMaybe<Chatbots_processValidationOperationRef>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  reviewers?: InputMaybe<Array<Chatbots_accountRef>>;
  startReviewDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
};

export type Chatbots_processValidationOperation_document_file = {
  __typename?: 'Chatbots_processValidationOperation_document_file';
  endReviewDate?: Maybe<Scalars['DateTime']>;
  exId?: Maybe<Scalars['String']>;
  fields: Array<Chatbots_processsValidationOperation_field>;
  fieldsAggregate?: Maybe<Chatbots_processsValidationOperation_fieldAggregateResult>;
  file?: Maybe<Chatbots_validationDocument_file>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  mimeType?: Maybe<Scalars['String']>;
  operationDocument: Chatbots_processValidationOperation_document;
  package: Chatbots_PACKAGE;
  reviewers: Array<Chatbots_account>;
  reviewersAggregate?: Maybe<Chatbots_accountAggregateResult>;
  startReviewDate?: Maybe<Scalars['DateTime']>;
  status: Chatbots_processsValidationOperation_status;
  url: Scalars['String'];
};


export type Chatbots_processValidationOperation_document_filefieldsArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processsValidationOperation_fieldOrder>;
};


export type Chatbots_processValidationOperation_document_filefieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
};


export type Chatbots_processValidationOperation_document_filefileArgs = {
  filter?: InputMaybe<Chatbots_validationDocument_fileFilter>;
};


export type Chatbots_processValidationOperation_document_fileoperationDocumentArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
};


export type Chatbots_processValidationOperation_document_filepackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processValidationOperation_document_filereviewersArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_accountOrder>;
};


export type Chatbots_processValidationOperation_document_filereviewersAggregateArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};

export type Chatbots_processValidationOperation_document_fileAggregateResult = {
  __typename?: 'Chatbots_processValidationOperation_document_fileAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endReviewDateMax?: Maybe<Scalars['DateTime']>;
  endReviewDateMin?: Maybe<Scalars['DateTime']>;
  exIdMax?: Maybe<Scalars['String']>;
  exIdMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  mimeTypeMax?: Maybe<Scalars['String']>;
  mimeTypeMin?: Maybe<Scalars['String']>;
  startReviewDateMax?: Maybe<Scalars['DateTime']>;
  startReviewDateMin?: Maybe<Scalars['DateTime']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processValidationOperation_document_fileFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processValidationOperation_document_fileFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processValidationOperation_document_fileHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processValidationOperation_document_fileFilter>>>;
};

export enum Chatbots_processValidationOperation_document_fileHasFilter {
  endReviewDate = 'endReviewDate',
  exId = 'exId',
  fields = 'fields',
  file = 'file',
  guid = 'guid',
  mimeType = 'mimeType',
  operationDocument = 'operationDocument',
  package = 'package',
  reviewers = 'reviewers',
  startReviewDate = 'startReviewDate',
  status = 'status',
  url = 'url'
}

export type Chatbots_processValidationOperation_document_fileOrder = {
  asc?: InputMaybe<Chatbots_processValidationOperation_document_fileOrderable>;
  desc?: InputMaybe<Chatbots_processValidationOperation_document_fileOrderable>;
  then?: InputMaybe<Chatbots_processValidationOperation_document_fileOrder>;
};

export enum Chatbots_processValidationOperation_document_fileOrderable {
  endReviewDate = 'endReviewDate',
  exId = 'exId',
  guid = 'guid',
  mimeType = 'mimeType',
  startReviewDate = 'startReviewDate',
  url = 'url'
}

export type Chatbots_processValidationOperation_document_filePatch = {
  endReviewDate?: InputMaybe<Scalars['DateTime']>;
  exId?: InputMaybe<Scalars['String']>;
  fields?: InputMaybe<Array<Chatbots_processsValidationOperation_fieldRef>>;
  file?: InputMaybe<Chatbots_validationDocument_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  mimeType?: InputMaybe<Scalars['String']>;
  operationDocument?: InputMaybe<Chatbots_processValidationOperation_documentRef>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  reviewers?: InputMaybe<Array<Chatbots_accountRef>>;
  startReviewDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
  url?: InputMaybe<Scalars['String']>;
};

export type Chatbots_processValidationOperation_document_fileRef = {
  endReviewDate?: InputMaybe<Scalars['DateTime']>;
  exId?: InputMaybe<Scalars['String']>;
  fields?: InputMaybe<Array<Chatbots_processsValidationOperation_fieldRef>>;
  file?: InputMaybe<Chatbots_validationDocument_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  mimeType?: InputMaybe<Scalars['String']>;
  operationDocument?: InputMaybe<Chatbots_processValidationOperation_documentRef>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  reviewers?: InputMaybe<Array<Chatbots_accountRef>>;
  startReviewDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
  url?: InputMaybe<Scalars['String']>;
};

export type Chatbots_processValidationOrder = {
  asc?: InputMaybe<Chatbots_processValidationOrderable>;
  desc?: InputMaybe<Chatbots_processValidationOrderable>;
  then?: InputMaybe<Chatbots_processValidationOrder>;
};

export enum Chatbots_processValidationOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type Chatbots_processValidationPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<Chatbots_processValidationOperationRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  validation?: InputMaybe<Chatbots_validationRef>;
};

export type Chatbots_processValidationRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  operations?: InputMaybe<Array<Chatbots_processValidationOperationRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  process?: InputMaybe<Chatbots_processRef>;
  validation?: InputMaybe<Chatbots_validationRef>;
};

export type Chatbots_processsValidationOperation_field = {
  __typename?: 'Chatbots_processsValidationOperation_field';
  extId?: Maybe<Scalars['String']>;
  field?: Maybe<Chatbots_validationField>;
  file: Chatbots_processValidationOperation_document_file;
  finalValue?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isAutoApproved: Scalars['Boolean'];
  isReviewed: Scalars['Boolean'];
  key: Scalars['String'];
  operation: Chatbots_processValidationOperation;
  package: Chatbots_PACKAGE;
  reliableRate?: Maybe<Scalars['Int']>;
  reviewedDate?: Maybe<Scalars['DateTime']>;
  reviewer?: Maybe<Chatbots_account>;
  reviewerValue?: Maybe<Scalars['String']>;
  status: Chatbots_processsValidationOperation_status;
  value: Scalars['String'];
};


export type Chatbots_processsValidationOperation_fieldfieldArgs = {
  filter?: InputMaybe<Chatbots_validationFieldFilter>;
};


export type Chatbots_processsValidationOperation_fieldfileArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
};


export type Chatbots_processsValidationOperation_fieldoperationArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
};


export type Chatbots_processsValidationOperation_fieldpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_processsValidationOperation_fieldreviewerArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};

export type Chatbots_processsValidationOperation_fieldAggregateResult = {
  __typename?: 'Chatbots_processsValidationOperation_fieldAggregateResult';
  count?: Maybe<Scalars['Int']>;
  extIdMax?: Maybe<Scalars['String']>;
  extIdMin?: Maybe<Scalars['String']>;
  finalValueMax?: Maybe<Scalars['String']>;
  finalValueMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  keyMax?: Maybe<Scalars['String']>;
  keyMin?: Maybe<Scalars['String']>;
  reliableRateAvg?: Maybe<Scalars['Float']>;
  reliableRateMax?: Maybe<Scalars['Int']>;
  reliableRateMin?: Maybe<Scalars['Int']>;
  reliableRateSum?: Maybe<Scalars['Int']>;
  reviewedDateMax?: Maybe<Scalars['DateTime']>;
  reviewedDateMin?: Maybe<Scalars['DateTime']>;
  reviewerValueMax?: Maybe<Scalars['String']>;
  reviewerValueMin?: Maybe<Scalars['String']>;
  valueMax?: Maybe<Scalars['String']>;
  valueMin?: Maybe<Scalars['String']>;
};

export type Chatbots_processsValidationOperation_fieldFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_processsValidationOperation_fieldFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_processsValidationOperation_fieldHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_processsValidationOperation_fieldFilter>>>;
};

export enum Chatbots_processsValidationOperation_fieldHasFilter {
  extId = 'extId',
  field = 'field',
  file = 'file',
  finalValue = 'finalValue',
  guid = 'guid',
  isAutoApproved = 'isAutoApproved',
  isReviewed = 'isReviewed',
  key = 'key',
  operation = 'operation',
  package = 'package',
  reliableRate = 'reliableRate',
  reviewedDate = 'reviewedDate',
  reviewer = 'reviewer',
  reviewerValue = 'reviewerValue',
  status = 'status',
  value = 'value'
}

export type Chatbots_processsValidationOperation_fieldOrder = {
  asc?: InputMaybe<Chatbots_processsValidationOperation_fieldOrderable>;
  desc?: InputMaybe<Chatbots_processsValidationOperation_fieldOrderable>;
  then?: InputMaybe<Chatbots_processsValidationOperation_fieldOrder>;
};

export enum Chatbots_processsValidationOperation_fieldOrderable {
  extId = 'extId',
  finalValue = 'finalValue',
  guid = 'guid',
  key = 'key',
  reliableRate = 'reliableRate',
  reviewedDate = 'reviewedDate',
  reviewerValue = 'reviewerValue',
  value = 'value'
}

export type Chatbots_processsValidationOperation_fieldPatch = {
  extId?: InputMaybe<Scalars['String']>;
  field?: InputMaybe<Chatbots_validationFieldRef>;
  file?: InputMaybe<Chatbots_processValidationOperation_document_fileRef>;
  finalValue?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  isAutoApproved?: InputMaybe<Scalars['Boolean']>;
  isReviewed?: InputMaybe<Scalars['Boolean']>;
  key?: InputMaybe<Scalars['String']>;
  operation?: InputMaybe<Chatbots_processValidationOperationRef>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  reliableRate?: InputMaybe<Scalars['Int']>;
  reviewedDate?: InputMaybe<Scalars['DateTime']>;
  reviewer?: InputMaybe<Chatbots_accountRef>;
  reviewerValue?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
  value?: InputMaybe<Scalars['String']>;
};

export type Chatbots_processsValidationOperation_fieldRef = {
  extId?: InputMaybe<Scalars['String']>;
  field?: InputMaybe<Chatbots_validationFieldRef>;
  file?: InputMaybe<Chatbots_processValidationOperation_document_fileRef>;
  finalValue?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isAutoApproved?: InputMaybe<Scalars['Boolean']>;
  isReviewed?: InputMaybe<Scalars['Boolean']>;
  key?: InputMaybe<Scalars['String']>;
  operation?: InputMaybe<Chatbots_processValidationOperationRef>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  reliableRate?: InputMaybe<Scalars['Int']>;
  reviewedDate?: InputMaybe<Scalars['DateTime']>;
  reviewer?: InputMaybe<Chatbots_accountRef>;
  reviewerValue?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Chatbots_processsValidationOperation_status>;
  value?: InputMaybe<Scalars['String']>;
};

export enum Chatbots_processsValidationOperation_status {
  APPROVED = 'APPROVED',
  AUTO_APPROVED = 'AUTO_APPROVED',
  PENDING = 'PENDING',
  REJECTED = 'REJECTED',
  REVIEWED = 'REVIEWED'
}

export enum Chatbots_role {
  ADMIN = 'ADMIN',
  AGENT = 'AGENT',
  DEV = 'DEV',
  DISABLED = 'DISABLED',
  MANAGER = 'MANAGER',
  OVERSEER = 'OVERSEER'
}

export type Chatbots_role_hash = {
  eq?: InputMaybe<Chatbots_role>;
  in?: InputMaybe<Array<InputMaybe<Chatbots_role>>>;
};

export type Chatbots_validation = {
  __typename?: 'Chatbots_validation';
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  description?: Maybe<Scalars['String']>;
  documents: Array<Chatbots_validationDocument>;
  documentsAggregate?: Maybe<Chatbots_validationDocumentAggregateResult>;
  fields: Array<Chatbots_validationField>;
  fieldsAggregate?: Maybe<Chatbots_validationFieldAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  operations: Array<Chatbots_processValidationOperation>;
  operationsAggregate?: Maybe<Chatbots_processValidationOperationAggregateResult>;
  package: Chatbots_PACKAGE;
  processes: Array<Chatbots_processValidation>;
  processesAggregate?: Maybe<Chatbots_processValidationAggregateResult>;
  type: Chatbots_validationType;
};


export type Chatbots_validationcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_validationdocumentsArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocumentOrder>;
};


export type Chatbots_validationdocumentsAggregateArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
};


export type Chatbots_validationfieldsArgs = {
  filter?: InputMaybe<Chatbots_validationFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationFieldOrder>;
};


export type Chatbots_validationfieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_validationFieldFilter>;
};


export type Chatbots_validationoperationsArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperationOrder>;
};


export type Chatbots_validationoperationsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
};


export type Chatbots_validationpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_validationprocessesArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOrder>;
};


export type Chatbots_validationprocessesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
};

export type Chatbots_validationAggregateResult = {
  __typename?: 'Chatbots_validationAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Chatbots_validationDocument = {
  __typename?: 'Chatbots_validationDocument';
  files: Array<Chatbots_validationDocument_file>;
  filesAggregate?: Maybe<Chatbots_validationDocument_fileAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  operationsDocuments: Array<Chatbots_processValidationOperation_document>;
  operationsDocumentsAggregate?: Maybe<Chatbots_processValidationOperation_documentAggregateResult>;
  package: Chatbots_PACKAGE;
  validation: Chatbots_validation;
};


export type Chatbots_validationDocumentfilesArgs = {
  filter?: InputMaybe<Chatbots_validationDocument_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocument_fileOrder>;
};


export type Chatbots_validationDocumentfilesAggregateArgs = {
  filter?: InputMaybe<Chatbots_validationDocument_fileFilter>;
};


export type Chatbots_validationDocumentoperationsDocumentsArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_documentOrder>;
};


export type Chatbots_validationDocumentoperationsDocumentsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
};


export type Chatbots_validationDocumentpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_validationDocumentvalidationArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
};

export type Chatbots_validationDocumentAggregateResult = {
  __typename?: 'Chatbots_validationDocumentAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Chatbots_validationDocumentFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_validationDocumentFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_validationDocumentHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<Chatbots_validationDocumentFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_validationDocumentFilter>>>;
};

export enum Chatbots_validationDocumentHasFilter {
  files = 'files',
  guid = 'guid',
  name = 'name',
  operationsDocuments = 'operationsDocuments',
  package = 'package',
  validation = 'validation'
}

export type Chatbots_validationDocumentOrder = {
  asc?: InputMaybe<Chatbots_validationDocumentOrderable>;
  desc?: InputMaybe<Chatbots_validationDocumentOrderable>;
  then?: InputMaybe<Chatbots_validationDocumentOrder>;
};

export enum Chatbots_validationDocumentOrderable {
  guid = 'guid',
  name = 'name'
}

export type Chatbots_validationDocumentPatch = {
  files?: InputMaybe<Array<Chatbots_validationDocument_fileRef>>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  operationsDocuments?: InputMaybe<Array<Chatbots_processValidationOperation_documentRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  validation?: InputMaybe<Chatbots_validationRef>;
};

export type Chatbots_validationDocumentRef = {
  files?: InputMaybe<Array<Chatbots_validationDocument_fileRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  operationsDocuments?: InputMaybe<Array<Chatbots_processValidationOperation_documentRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  validation?: InputMaybe<Chatbots_validationRef>;
};

export enum Chatbots_validationDocumentType {
  IMAGE = 'IMAGE',
  PDF = 'PDF'
}

export type Chatbots_validationDocumentType_hash = {
  eq?: InputMaybe<Chatbots_validationDocumentType>;
  in?: InputMaybe<Array<InputMaybe<Chatbots_validationDocumentType>>>;
};

export type Chatbots_validationDocument_file = {
  __typename?: 'Chatbots_validationDocument_file';
  document: Chatbots_validationDocument;
  fields: Array<Chatbots_processsValidationOperation_field>;
  fieldsAggregate?: Maybe<Chatbots_processsValidationOperation_fieldAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  operationFiles: Array<Chatbots_processValidationOperation_document_file>;
  operationFilesAggregate?: Maybe<Chatbots_processValidationOperation_document_fileAggregateResult>;
  package: Chatbots_PACKAGE;
  type: Chatbots_validationDocumentType;
};


export type Chatbots_validationDocument_filedocumentArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
};


export type Chatbots_validationDocument_filefieldsArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processsValidationOperation_fieldOrder>;
};


export type Chatbots_validationDocument_filefieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
};


export type Chatbots_validationDocument_fileoperationFilesArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_document_fileOrder>;
};


export type Chatbots_validationDocument_fileoperationFilesAggregateArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
};


export type Chatbots_validationDocument_filepackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};

export type Chatbots_validationDocument_fileAggregateResult = {
  __typename?: 'Chatbots_validationDocument_fileAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Chatbots_validationDocument_fileFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_validationDocument_fileFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_validationDocument_fileHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<Chatbots_validationDocument_fileFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_validationDocument_fileFilter>>>;
  type?: InputMaybe<Chatbots_validationDocumentType_hash>;
};

export enum Chatbots_validationDocument_fileHasFilter {
  document = 'document',
  fields = 'fields',
  guid = 'guid',
  name = 'name',
  operationFiles = 'operationFiles',
  package = 'package',
  type = 'type'
}

export type Chatbots_validationDocument_fileOrder = {
  asc?: InputMaybe<Chatbots_validationDocument_fileOrderable>;
  desc?: InputMaybe<Chatbots_validationDocument_fileOrderable>;
  then?: InputMaybe<Chatbots_validationDocument_fileOrder>;
};

export enum Chatbots_validationDocument_fileOrderable {
  guid = 'guid',
  name = 'name'
}

export type Chatbots_validationDocument_filePatch = {
  document?: InputMaybe<Chatbots_validationDocumentRef>;
  fields?: InputMaybe<Array<Chatbots_processsValidationOperation_fieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  operationFiles?: InputMaybe<Array<Chatbots_processValidationOperation_document_fileRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  type?: InputMaybe<Chatbots_validationDocumentType>;
};

export type Chatbots_validationDocument_fileRef = {
  document?: InputMaybe<Chatbots_validationDocumentRef>;
  fields?: InputMaybe<Array<Chatbots_processsValidationOperation_fieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  operationFiles?: InputMaybe<Array<Chatbots_processValidationOperation_document_fileRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  type?: InputMaybe<Chatbots_validationDocumentType>;
};

export type Chatbots_validationField = {
  __typename?: 'Chatbots_validationField';
  createdAt: Scalars['DateTime'];
  createdBy: Chatbots_account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  key: Scalars['String'];
  name: Scalars['String'];
  package: Chatbots_PACKAGE;
  processValidationOperationFields: Array<Chatbots_processsValidationOperation_field>;
  processValidationOperationFieldsAggregate?: Maybe<Chatbots_processsValidationOperation_fieldAggregateResult>;
  regexp?: Maybe<Scalars['String']>;
  type: Chatbots_validationFieldType;
  validation: Chatbots_validation;
};


export type Chatbots_validationFieldcreatedByArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type Chatbots_validationFieldpackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Chatbots_validationFieldprocessValidationOperationFieldsArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processsValidationOperation_fieldOrder>;
};


export type Chatbots_validationFieldprocessValidationOperationFieldsAggregateArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
};


export type Chatbots_validationFieldvalidationArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
};

export type Chatbots_validationFieldAggregateResult = {
  __typename?: 'Chatbots_validationFieldAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  keyMax?: Maybe<Scalars['String']>;
  keyMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  regexpMax?: Maybe<Scalars['String']>;
  regexpMin?: Maybe<Scalars['String']>;
};

export type Chatbots_validationFieldFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_validationFieldFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_validationFieldHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Chatbots_validationFieldFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_validationFieldFilter>>>;
  type?: InputMaybe<Chatbots_validationFieldType_hash>;
};

export enum Chatbots_validationFieldHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  key = 'key',
  name = 'name',
  package = 'package',
  processValidationOperationFields = 'processValidationOperationFields',
  regexp = 'regexp',
  type = 'type',
  validation = 'validation'
}

export type Chatbots_validationFieldOrder = {
  asc?: InputMaybe<Chatbots_validationFieldOrderable>;
  desc?: InputMaybe<Chatbots_validationFieldOrderable>;
  then?: InputMaybe<Chatbots_validationFieldOrder>;
};

export enum Chatbots_validationFieldOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  key = 'key',
  name = 'name',
  regexp = 'regexp'
}

export type Chatbots_validationFieldPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  key?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processValidationOperationFields?: InputMaybe<Array<Chatbots_processsValidationOperation_fieldRef>>;
  regexp?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Chatbots_validationFieldType>;
  validation?: InputMaybe<Chatbots_validationRef>;
};

export type Chatbots_validationFieldRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  key?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processValidationOperationFields?: InputMaybe<Array<Chatbots_processsValidationOperation_fieldRef>>;
  regexp?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Chatbots_validationFieldType>;
  validation?: InputMaybe<Chatbots_validationRef>;
};

export enum Chatbots_validationFieldType {
  BOOLEAN = 'BOOLEAN',
  DATE = 'DATE',
  EMAIL = 'EMAIL',
  NUMBER = 'NUMBER',
  PHONE = 'PHONE',
  PHONE_PREFIX = 'PHONE_PREFIX',
  PRICE = 'PRICE',
  SIGNATURE = 'SIGNATURE',
  TEXT = 'TEXT',
  URL = 'URL'
}

export type Chatbots_validationFieldType_hash = {
  eq?: InputMaybe<Chatbots_validationFieldType>;
  in?: InputMaybe<Array<InputMaybe<Chatbots_validationFieldType>>>;
};

export type Chatbots_validationFilter = {
  and?: InputMaybe<Array<InputMaybe<Chatbots_validationFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Chatbots_validationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<Chatbots_validationFilter>;
  or?: InputMaybe<Array<InputMaybe<Chatbots_validationFilter>>>;
  type?: InputMaybe<Chatbots_validationType_hash>;
};

export enum Chatbots_validationHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  documents = 'documents',
  fields = 'fields',
  guid = 'guid',
  name = 'name',
  operations = 'operations',
  package = 'package',
  processes = 'processes',
  type = 'type'
}

export type Chatbots_validationOrder = {
  asc?: InputMaybe<Chatbots_validationOrderable>;
  desc?: InputMaybe<Chatbots_validationOrderable>;
  then?: InputMaybe<Chatbots_validationOrder>;
};

export enum Chatbots_validationOrderable {
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  name = 'name'
}

export type Chatbots_validationPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<Array<Chatbots_validationDocumentRef>>;
  fields?: InputMaybe<Array<Chatbots_validationFieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<Chatbots_processValidationOperationRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processes?: InputMaybe<Array<Chatbots_processValidationRef>>;
  type?: InputMaybe<Chatbots_validationType>;
};

export type Chatbots_validationRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Chatbots_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<Array<Chatbots_validationDocumentRef>>;
  fields?: InputMaybe<Array<Chatbots_validationFieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<Chatbots_processValidationOperationRef>>;
  package?: InputMaybe<Chatbots_PACKAGERef>;
  processes?: InputMaybe<Array<Chatbots_processValidationRef>>;
  type?: InputMaybe<Chatbots_validationType>;
};

export enum Chatbots_validationType {
  DOCUMENT = 'DOCUMENT',
  FORM = 'FORM'
}

export type Chatbots_validationType_hash = {
  eq?: InputMaybe<Chatbots_validationType>;
  in?: InputMaybe<Array<InputMaybe<Chatbots_validationType>>>;
};

export type CompanySector = {
  __typename?: 'CompanySector';
  id: Scalars['ID'];
  name: Scalars['String'];
};

export type CompanySectorAggregateResult = {
  __typename?: 'CompanySectorAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type CompanySectorFilter = {
  and?: InputMaybe<Array<InputMaybe<CompanySectorFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CompanySectorHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<CompanySectorFilter>;
  or?: InputMaybe<Array<InputMaybe<CompanySectorFilter>>>;
};

export enum CompanySectorHasFilter {
  name = 'name'
}

export type CompanySectorOrder = {
  asc?: InputMaybe<CompanySectorOrderable>;
  desc?: InputMaybe<CompanySectorOrderable>;
  then?: InputMaybe<CompanySectorOrder>;
};

export enum CompanySectorOrderable {
  name = 'name'
}

export type CompanySectorPatch = {
  name?: InputMaybe<Scalars['String']>;
};

export type CompanySectorRef = {
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Contact = {
  __typename?: 'Contact';
  account?: Maybe<Account>;
  addresses: Array<Address>;
  addressesAggregate?: Maybe<AddressAggregateResult>;
  billing?: Maybe<Contact_billingInfo>;
  business?: Maybe<Contact_businessInfo>;
  cmsContact?: Maybe<CMS_contact>;
  comercialName: Scalars['String'];
  contactLists?: Maybe<Array<CRM_contactList>>;
  contactListsAggregate?: Maybe<CRM_contactListAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  crmContact?: Maybe<CRM_contact>;
  dni?: Maybe<Scalars['String']>;
  emails: Array<Contact_email>;
  emailsAggregate?: Maybe<Contact_emailAggregateResult>;
  erpContact?: Maybe<ERP_contact>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  importLogs: Array<Contact_importLog>;
  importLogsAggregate?: Maybe<Contact_importLogAggregateResult>;
  ips: Array<Scalars['String']>;
  isCorporate?: Maybe<Scalars['Boolean']>;
  isDeleted?: Maybe<Scalars['Boolean']>;
  jobPositions?: Maybe<Array<Contact_jobPosition>>;
  jobPositionsAggregate?: Maybe<Contact_jobPositionAggregateResult>;
  lmsContact?: Maybe<LMS_contact>;
  oldId?: Maybe<Scalars['String']>;
  org?: Maybe<Org>;
  org360: Org360;
  organizations?: Maybe<Array<Contact_jobPosition>>;
  organizationsAggregate?: Maybe<Contact_jobPositionAggregateResult>;
  person?: Maybe<Person>;
  phones: Array<Contact_phone>;
  phonesAggregate?: Maybe<Contact_phoneAggregateResult>;
  proposalStakeholders: Array<Proposal_stakeholder>;
  proposalStakeholdersAggregate?: Maybe<Proposal_stakeholderAggregateResult>;
  publicToken?: Maybe<Scalars['String']>;
  vetContact?: Maybe<VET_contact>;
};


export type ContactaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ContactaddressesArgs = {
  filter?: InputMaybe<AddressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AddressOrder>;
};


export type ContactaddressesAggregateArgs = {
  filter?: InputMaybe<AddressFilter>;
};


export type ContactbillingArgs = {
  filter?: InputMaybe<Contact_billingInfoFilter>;
};


export type ContactbusinessArgs = {
  filter?: InputMaybe<Contact_businessInfoFilter>;
};


export type ContactcmsContactArgs = {
  filter?: InputMaybe<CMS_contactFilter>;
};


export type ContactcontactListsArgs = {
  filter?: InputMaybe<CRM_contactListFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactListOrder>;
};


export type ContactcontactListsAggregateArgs = {
  filter?: InputMaybe<CRM_contactListFilter>;
};


export type ContactcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ContactcrmContactArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type ContactemailsArgs = {
  filter?: InputMaybe<Contact_emailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_emailOrder>;
};


export type ContactemailsAggregateArgs = {
  filter?: InputMaybe<Contact_emailFilter>;
};


export type ContacterpContactArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
};


export type ContactimportLogsArgs = {
  filter?: InputMaybe<Contact_importLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_importLogOrder>;
};


export type ContactimportLogsAggregateArgs = {
  filter?: InputMaybe<Contact_importLogFilter>;
};


export type ContactjobPositionsArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_jobPositionOrder>;
};


export type ContactjobPositionsAggregateArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
};


export type ContactlmsContactArgs = {
  filter?: InputMaybe<LMS_contactFilter>;
};


export type ContactorgArgs = {
  filter?: InputMaybe<OrgFilter>;
};


export type Contactorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type ContactorganizationsArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_jobPositionOrder>;
};


export type ContactorganizationsAggregateArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
};


export type ContactpersonArgs = {
  filter?: InputMaybe<PersonFilter>;
};


export type ContactphonesArgs = {
  filter?: InputMaybe<Contact_phoneFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_phoneOrder>;
};


export type ContactphonesAggregateArgs = {
  filter?: InputMaybe<Contact_phoneFilter>;
};


export type ContactproposalStakeholdersArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderOrder>;
};


export type ContactproposalStakeholdersAggregateArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
};


export type ContactvetContactArgs = {
  filter?: InputMaybe<VET_contactFilter>;
};

export type ContactAggregateResult = {
  __typename?: 'ContactAggregateResult';
  comercialNameMax?: Maybe<Scalars['String']>;
  comercialNameMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  dniMax?: Maybe<Scalars['String']>;
  dniMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  oldIdMax?: Maybe<Scalars['String']>;
  oldIdMin?: Maybe<Scalars['String']>;
  publicTokenMax?: Maybe<Scalars['String']>;
  publicTokenMin?: Maybe<Scalars['String']>;
};

export type ContactFilter = {
  and?: InputMaybe<Array<InputMaybe<ContactFilter>>>;
  comercialName?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  dni?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<ContactHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<ContactFilter>;
  oldId?: InputMaybe<StringExactFilter>;
  or?: InputMaybe<Array<InputMaybe<ContactFilter>>>;
  publicToken?: InputMaybe<StringExactFilter>;
};

export enum ContactHasFilter {
  account = 'account',
  addresses = 'addresses',
  billing = 'billing',
  business = 'business',
  cmsContact = 'cmsContact',
  comercialName = 'comercialName',
  contactLists = 'contactLists',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  crmContact = 'crmContact',
  dni = 'dni',
  emails = 'emails',
  erpContact = 'erpContact',
  guid = 'guid',
  importLogs = 'importLogs',
  ips = 'ips',
  isCorporate = 'isCorporate',
  isDeleted = 'isDeleted',
  jobPositions = 'jobPositions',
  lmsContact = 'lmsContact',
  oldId = 'oldId',
  org = 'org',
  org360 = 'org360',
  organizations = 'organizations',
  person = 'person',
  phones = 'phones',
  proposalStakeholders = 'proposalStakeholders',
  publicToken = 'publicToken',
  vetContact = 'vetContact'
}

export type ContactOrder = {
  asc?: InputMaybe<ContactOrderable>;
  desc?: InputMaybe<ContactOrderable>;
  then?: InputMaybe<ContactOrder>;
};

export enum ContactOrderable {
  comercialName = 'comercialName',
  createdAt = 'createdAt',
  dni = 'dni',
  guid = 'guid',
  oldId = 'oldId',
  publicToken = 'publicToken'
}

export type ContactPatch = {
  account?: InputMaybe<AccountRef>;
  addresses?: InputMaybe<Array<AddressRef>>;
  billing?: InputMaybe<Contact_billingInfoRef>;
  business?: InputMaybe<Contact_businessInfoRef>;
  cmsContact?: InputMaybe<CMS_contactRef>;
  comercialName?: InputMaybe<Scalars['String']>;
  contactLists?: InputMaybe<Array<CRM_contactListRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  crmContact?: InputMaybe<CRM_contactRef>;
  dni?: InputMaybe<Scalars['String']>;
  emails?: InputMaybe<Array<Contact_emailRef>>;
  erpContact?: InputMaybe<ERP_contactRef>;
  guid?: InputMaybe<Scalars['String']>;
  importLogs?: InputMaybe<Array<Contact_importLogRef>>;
  ips?: InputMaybe<Array<Scalars['String']>>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  jobPositions?: InputMaybe<Array<Contact_jobPositionRef>>;
  lmsContact?: InputMaybe<LMS_contactRef>;
  oldId?: InputMaybe<Scalars['String']>;
  org?: InputMaybe<OrgRef>;
  org360?: InputMaybe<Org360Ref>;
  organizations?: InputMaybe<Array<Contact_jobPositionRef>>;
  person?: InputMaybe<PersonRef>;
  phones?: InputMaybe<Array<Contact_phoneRef>>;
  proposalStakeholders?: InputMaybe<Array<Proposal_stakeholderRef>>;
  publicToken?: InputMaybe<Scalars['String']>;
  vetContact?: InputMaybe<VET_contactRef>;
};

export type ContactRef = {
  account?: InputMaybe<AccountRef>;
  addresses?: InputMaybe<Array<AddressRef>>;
  billing?: InputMaybe<Contact_billingInfoRef>;
  business?: InputMaybe<Contact_businessInfoRef>;
  cmsContact?: InputMaybe<CMS_contactRef>;
  comercialName?: InputMaybe<Scalars['String']>;
  contactLists?: InputMaybe<Array<CRM_contactListRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  crmContact?: InputMaybe<CRM_contactRef>;
  dni?: InputMaybe<Scalars['String']>;
  emails?: InputMaybe<Array<Contact_emailRef>>;
  erpContact?: InputMaybe<ERP_contactRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  importLogs?: InputMaybe<Array<Contact_importLogRef>>;
  ips?: InputMaybe<Array<Scalars['String']>>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  jobPositions?: InputMaybe<Array<Contact_jobPositionRef>>;
  lmsContact?: InputMaybe<LMS_contactRef>;
  oldId?: InputMaybe<Scalars['String']>;
  org?: InputMaybe<OrgRef>;
  org360?: InputMaybe<Org360Ref>;
  organizations?: InputMaybe<Array<Contact_jobPositionRef>>;
  person?: InputMaybe<PersonRef>;
  phones?: InputMaybe<Array<Contact_phoneRef>>;
  proposalStakeholders?: InputMaybe<Array<Proposal_stakeholderRef>>;
  publicToken?: InputMaybe<Scalars['String']>;
  vetContact?: InputMaybe<VET_contactRef>;
};

export type Contact_billingInfo = {
  __typename?: 'Contact_billingInfo';
  banks: Array<BankAccount>;
  banksAggregate?: Maybe<BankAccountAggregateResult>;
  contact: Contact;
  employmentType?: Maybe<Contact_billingInfo_employmentType>;
  id: Scalars['ID'];
  taxID?: Maybe<Scalars['String']>;
};


export type Contact_billingInfobanksArgs = {
  filter?: InputMaybe<BankAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BankAccountOrder>;
};


export type Contact_billingInfobanksAggregateArgs = {
  filter?: InputMaybe<BankAccountFilter>;
};


export type Contact_billingInfocontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};

export type Contact_billingInfoAggregateResult = {
  __typename?: 'Contact_billingInfoAggregateResult';
  count?: Maybe<Scalars['Int']>;
  taxIDMax?: Maybe<Scalars['String']>;
  taxIDMin?: Maybe<Scalars['String']>;
};

export type Contact_billingInfoFilter = {
  and?: InputMaybe<Array<InputMaybe<Contact_billingInfoFilter>>>;
  employmentType?: InputMaybe<Contact_billingInfo_employmentType_hash>;
  has?: InputMaybe<Array<InputMaybe<Contact_billingInfoHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Contact_billingInfoFilter>;
  or?: InputMaybe<Array<InputMaybe<Contact_billingInfoFilter>>>;
};

export enum Contact_billingInfoHasFilter {
  banks = 'banks',
  contact = 'contact',
  employmentType = 'employmentType',
  taxID = 'taxID'
}

export type Contact_billingInfoOrder = {
  asc?: InputMaybe<Contact_billingInfoOrderable>;
  desc?: InputMaybe<Contact_billingInfoOrderable>;
  then?: InputMaybe<Contact_billingInfoOrder>;
};

export enum Contact_billingInfoOrderable {
  taxID = 'taxID'
}

export type Contact_billingInfoPatch = {
  banks?: InputMaybe<Array<BankAccountRef>>;
  contact?: InputMaybe<ContactRef>;
  employmentType?: InputMaybe<Contact_billingInfo_employmentType>;
  taxID?: InputMaybe<Scalars['String']>;
};

export type Contact_billingInfoRef = {
  banks?: InputMaybe<Array<BankAccountRef>>;
  contact?: InputMaybe<ContactRef>;
  employmentType?: InputMaybe<Contact_billingInfo_employmentType>;
  id?: InputMaybe<Scalars['ID']>;
  taxID?: InputMaybe<Scalars['String']>;
};

export enum Contact_billingInfo_employmentType {
  NOT_SPECIFIED = 'NOT_SPECIFIED',
  PROFESSIONAL_ACTIVITY = 'PROFESSIONAL_ACTIVITY',
  SALARY = 'SALARY'
}

export type Contact_billingInfo_employmentType_hash = {
  eq?: InputMaybe<Contact_billingInfo_employmentType>;
  in?: InputMaybe<Array<InputMaybe<Contact_billingInfo_employmentType>>>;
};

export type Contact_businessInfo = {
  __typename?: 'Contact_businessInfo';
  contact: Contact;
  id: Scalars['ID'];
  jobPosition?: Maybe<Scalars['String']>;
  linkedin?: Maybe<Scalars['String']>;
  sector?: Maybe<CompanySector>;
  website?: Maybe<Scalars['String']>;
  yearsOfExperience?: Maybe<Contact_yearsOfExperience>;
};


export type Contact_businessInfocontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type Contact_businessInfosectorArgs = {
  filter?: InputMaybe<CompanySectorFilter>;
};

export type Contact_businessInfoAggregateResult = {
  __typename?: 'Contact_businessInfoAggregateResult';
  count?: Maybe<Scalars['Int']>;
  jobPositionMax?: Maybe<Scalars['String']>;
  jobPositionMin?: Maybe<Scalars['String']>;
  linkedinMax?: Maybe<Scalars['String']>;
  linkedinMin?: Maybe<Scalars['String']>;
  websiteMax?: Maybe<Scalars['String']>;
  websiteMin?: Maybe<Scalars['String']>;
};

export type Contact_businessInfoFilter = {
  and?: InputMaybe<Array<InputMaybe<Contact_businessInfoFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Contact_businessInfoHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Contact_businessInfoFilter>;
  or?: InputMaybe<Array<InputMaybe<Contact_businessInfoFilter>>>;
  yearsOfExperience?: InputMaybe<Contact_yearsOfExperience_hash>;
};

export enum Contact_businessInfoHasFilter {
  contact = 'contact',
  jobPosition = 'jobPosition',
  linkedin = 'linkedin',
  sector = 'sector',
  website = 'website',
  yearsOfExperience = 'yearsOfExperience'
}

export type Contact_businessInfoOrder = {
  asc?: InputMaybe<Contact_businessInfoOrderable>;
  desc?: InputMaybe<Contact_businessInfoOrderable>;
  then?: InputMaybe<Contact_businessInfoOrder>;
};

export enum Contact_businessInfoOrderable {
  jobPosition = 'jobPosition',
  linkedin = 'linkedin',
  website = 'website'
}

export type Contact_businessInfoPatch = {
  contact?: InputMaybe<ContactRef>;
  jobPosition?: InputMaybe<Scalars['String']>;
  linkedin?: InputMaybe<Scalars['String']>;
  sector?: InputMaybe<CompanySectorRef>;
  website?: InputMaybe<Scalars['String']>;
  yearsOfExperience?: InputMaybe<Contact_yearsOfExperience>;
};

export type Contact_businessInfoRef = {
  contact?: InputMaybe<ContactRef>;
  id?: InputMaybe<Scalars['ID']>;
  jobPosition?: InputMaybe<Scalars['String']>;
  linkedin?: InputMaybe<Scalars['String']>;
  sector?: InputMaybe<CompanySectorRef>;
  website?: InputMaybe<Scalars['String']>;
  yearsOfExperience?: InputMaybe<Contact_yearsOfExperience>;
};

export type Contact_email = {
  __typename?: 'Contact_email';
  contact: Contact;
  email: Scalars['String'];
  id: Scalars['ID'];
  type: Contact_emailType;
};


export type Contact_emailcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};

export type Contact_emailAggregateResult = {
  __typename?: 'Contact_emailAggregateResult';
  count?: Maybe<Scalars['Int']>;
  emailMax?: Maybe<Scalars['String']>;
  emailMin?: Maybe<Scalars['String']>;
};

export type Contact_emailFilter = {
  and?: InputMaybe<Array<InputMaybe<Contact_emailFilter>>>;
  email?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  has?: InputMaybe<Array<InputMaybe<Contact_emailHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Contact_emailFilter>;
  or?: InputMaybe<Array<InputMaybe<Contact_emailFilter>>>;
};

export enum Contact_emailHasFilter {
  contact = 'contact',
  email = 'email',
  type = 'type'
}

export type Contact_emailOrder = {
  asc?: InputMaybe<Contact_emailOrderable>;
  desc?: InputMaybe<Contact_emailOrderable>;
  then?: InputMaybe<Contact_emailOrder>;
};

export enum Contact_emailOrderable {
  email = 'email'
}

export type Contact_emailPatch = {
  contact?: InputMaybe<ContactRef>;
  email?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Contact_emailType>;
};

export type Contact_emailRef = {
  contact?: InputMaybe<ContactRef>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  type?: InputMaybe<Contact_emailType>;
};

export enum Contact_emailType {
  HOME = 'HOME',
  MAIN = 'MAIN',
  OTHER = 'OTHER',
  PERSONAL = 'PERSONAL',
  WORK = 'WORK'
}

export type Contact_importLog = {
  __typename?: 'Contact_importLog';
  contact: Contact;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  id: Scalars['ID'];
  importGUID: Scalars['String'];
  type: Contact_importLogType;
};


export type Contact_importLogcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type Contact_importLogcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};

export type Contact_importLogAggregateResult = {
  __typename?: 'Contact_importLogAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  importGUIDMax?: Maybe<Scalars['String']>;
  importGUIDMin?: Maybe<Scalars['String']>;
};

export type Contact_importLogFilter = {
  and?: InputMaybe<Array<InputMaybe<Contact_importLogFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Contact_importLogHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  importGUID?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<Contact_importLogFilter>;
  or?: InputMaybe<Array<InputMaybe<Contact_importLogFilter>>>;
  type?: InputMaybe<Contact_importLogType_hash>;
};

export enum Contact_importLogHasFilter {
  contact = 'contact',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  importGUID = 'importGUID',
  type = 'type'
}

export type Contact_importLogOrder = {
  asc?: InputMaybe<Contact_importLogOrderable>;
  desc?: InputMaybe<Contact_importLogOrderable>;
  then?: InputMaybe<Contact_importLogOrder>;
};

export enum Contact_importLogOrderable {
  createdAt = 'createdAt',
  importGUID = 'importGUID'
}

export type Contact_importLogPatch = {
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  importGUID?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Contact_importLogType>;
};

export type Contact_importLogRef = {
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  id?: InputMaybe<Scalars['ID']>;
  importGUID?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Contact_importLogType>;
};

export enum Contact_importLogType {
  MERGED = 'MERGED',
  NEW = 'NEW'
}

export type Contact_importLogType_hash = {
  eq?: InputMaybe<Contact_importLogType>;
  in?: InputMaybe<Array<InputMaybe<Contact_importLogType>>>;
};

export type Contact_jobPosition = {
  __typename?: 'Contact_jobPosition';
  contact: Contact;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  department?: Maybe<Organization_department>;
  id: Scalars['ID'];
  isCurrent?: Maybe<Scalars['Boolean']>;
  jobPosition?: Maybe<JobPosition>;
  name: Scalars['String'];
  organization: Contact;
  role?: Maybe<Contact_jobPositionRole>;
};


export type Contact_jobPositioncontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type Contact_jobPositioncreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Contact_jobPositiondepartmentArgs = {
  filter?: InputMaybe<Organization_departmentFilter>;
};


export type Contact_jobPositionjobPositionArgs = {
  filter?: InputMaybe<JobPositionFilter>;
};


export type Contact_jobPositionorganizationArgs = {
  filter?: InputMaybe<ContactFilter>;
};

export type Contact_jobPositionAggregateResult = {
  __typename?: 'Contact_jobPositionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Contact_jobPositionFilter = {
  and?: InputMaybe<Array<InputMaybe<Contact_jobPositionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Contact_jobPositionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isCurrent?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<Contact_jobPositionFilter>;
  or?: InputMaybe<Array<InputMaybe<Contact_jobPositionFilter>>>;
  role?: InputMaybe<Contact_jobPositionRole_hash>;
};

export enum Contact_jobPositionHasFilter {
  contact = 'contact',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  department = 'department',
  isCurrent = 'isCurrent',
  jobPosition = 'jobPosition',
  name = 'name',
  organization = 'organization',
  role = 'role'
}

export type Contact_jobPositionOrder = {
  asc?: InputMaybe<Contact_jobPositionOrderable>;
  desc?: InputMaybe<Contact_jobPositionOrderable>;
  then?: InputMaybe<Contact_jobPositionOrder>;
};

export enum Contact_jobPositionOrderable {
  createdAt = 'createdAt',
  name = 'name'
}

export type Contact_jobPositionPatch = {
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  department?: InputMaybe<Organization_departmentRef>;
  isCurrent?: InputMaybe<Scalars['Boolean']>;
  jobPosition?: InputMaybe<JobPositionRef>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<ContactRef>;
  role?: InputMaybe<Contact_jobPositionRole>;
};

export type Contact_jobPositionRef = {
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  department?: InputMaybe<Organization_departmentRef>;
  id?: InputMaybe<Scalars['ID']>;
  isCurrent?: InputMaybe<Scalars['Boolean']>;
  jobPosition?: InputMaybe<JobPositionRef>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<ContactRef>;
  role?: InputMaybe<Contact_jobPositionRole>;
};

export enum Contact_jobPositionRole {
  BACKOFFICE = 'BACKOFFICE',
  CONSULTANT = 'CONSULTANT',
  HIGH_MANAGEMENT = 'HIGH_MANAGEMENT',
  MANAGEMENT = 'MANAGEMENT',
  MIDDLE_MANAGEMENT = 'MIDDLE_MANAGEMENT',
  NOT_SPECIFIED = 'NOT_SPECIFIED',
  SPECIALIST = 'SPECIALIST'
}

export type Contact_jobPositionRole_hash = {
  eq?: InputMaybe<Contact_jobPositionRole>;
  in?: InputMaybe<Array<InputMaybe<Contact_jobPositionRole>>>;
};

export type Contact_phone = {
  __typename?: 'Contact_phone';
  contact: Contact;
  id: Scalars['ID'];
  phone: Scalars['String'];
  prefix: Scalars['String'];
  type: Contact_phoneType;
};


export type Contact_phonecontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};

export type Contact_phoneAggregateResult = {
  __typename?: 'Contact_phoneAggregateResult';
  count?: Maybe<Scalars['Int']>;
  phoneMax?: Maybe<Scalars['String']>;
  phoneMin?: Maybe<Scalars['String']>;
  prefixMax?: Maybe<Scalars['String']>;
  prefixMin?: Maybe<Scalars['String']>;
};

export type Contact_phoneFilter = {
  and?: InputMaybe<Array<InputMaybe<Contact_phoneFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Contact_phoneHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Contact_phoneFilter>;
  or?: InputMaybe<Array<InputMaybe<Contact_phoneFilter>>>;
  phone?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  prefix?: InputMaybe<StringExactFilter_StringRegExpFilter>;
};

export enum Contact_phoneHasFilter {
  contact = 'contact',
  phone = 'phone',
  prefix = 'prefix',
  type = 'type'
}

export type Contact_phoneOrder = {
  asc?: InputMaybe<Contact_phoneOrderable>;
  desc?: InputMaybe<Contact_phoneOrderable>;
  then?: InputMaybe<Contact_phoneOrder>;
};

export enum Contact_phoneOrderable {
  phone = 'phone',
  prefix = 'prefix'
}

export type Contact_phonePatch = {
  contact?: InputMaybe<ContactRef>;
  phone?: InputMaybe<Scalars['String']>;
  prefix?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Contact_phoneType>;
};

export type Contact_phoneRef = {
  contact?: InputMaybe<ContactRef>;
  id?: InputMaybe<Scalars['ID']>;
  phone?: InputMaybe<Scalars['String']>;
  prefix?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Contact_phoneType>;
};

export enum Contact_phoneType {
  HOME = 'HOME',
  MAIN = 'MAIN',
  OTHER = 'OTHER',
  PERSONAL = 'PERSONAL',
  WORK = 'WORK'
}

export enum Contact_yearsOfExperience {
  LESS_THAN_5 = 'LESS_THAN_5',
  LESS_THAN_10 = 'LESS_THAN_10',
  MORE_THAN_10 = 'MORE_THAN_10',
  MORE_THAN_15 = 'MORE_THAN_15',
  MORE_THAN_25 = 'MORE_THAN_25',
  NOT_SPECIFIED = 'NOT_SPECIFIED'
}

export type Contact_yearsOfExperience_hash = {
  eq?: InputMaybe<Contact_yearsOfExperience>;
  in?: InputMaybe<Array<InputMaybe<Contact_yearsOfExperience>>>;
};

export type ContainsFilter = {
  point?: InputMaybe<PointRef>;
  polygon?: InputMaybe<PolygonRef>;
};

export type Country = {
  __typename?: 'Country';
  code: Scalars['String'];
  country: Scalars['String'];
  id: Scalars['ID'];
};

export type CountryAggregateResult = {
  __typename?: 'CountryAggregateResult';
  codeMax?: Maybe<Scalars['String']>;
  codeMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  countryMax?: Maybe<Scalars['String']>;
  countryMin?: Maybe<Scalars['String']>;
};

export type CountryFilter = {
  and?: InputMaybe<Array<InputMaybe<CountryFilter>>>;
  code?: InputMaybe<StringHashFilter>;
  country?: InputMaybe<StringHashFilter_StringRegExpFilter>;
  has?: InputMaybe<Array<InputMaybe<CountryHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CountryFilter>;
  or?: InputMaybe<Array<InputMaybe<CountryFilter>>>;
};

export enum CountryHasFilter {
  code = 'code',
  country = 'country'
}

export type CountryOrder = {
  asc?: InputMaybe<CountryOrderable>;
  desc?: InputMaybe<CountryOrderable>;
  then?: InputMaybe<CountryOrder>;
};

export enum CountryOrderable {
  code = 'code',
  country = 'country'
}

export type CountryPatch = {
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
};

export type CountryRef = {
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};

export type Currency = {
  __typename?: 'Currency';
  code: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  symbol: Scalars['String'];
};

export type CurrencyAggregateResult = {
  __typename?: 'CurrencyAggregateResult';
  codeMax?: Maybe<Scalars['String']>;
  codeMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  symbolMax?: Maybe<Scalars['String']>;
  symbolMin?: Maybe<Scalars['String']>;
};

export type CurrencyFilter = {
  and?: InputMaybe<Array<InputMaybe<CurrencyFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CurrencyHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<CurrencyFilter>;
  or?: InputMaybe<Array<InputMaybe<CurrencyFilter>>>;
};

export enum CurrencyHasFilter {
  code = 'code',
  name = 'name',
  symbol = 'symbol'
}

export type CurrencyOrder = {
  asc?: InputMaybe<CurrencyOrderable>;
  desc?: InputMaybe<CurrencyOrderable>;
  then?: InputMaybe<CurrencyOrder>;
};

export enum CurrencyOrderable {
  code = 'code',
  name = 'name',
  symbol = 'symbol'
}

export type CurrencyPatch = {
  code?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  symbol?: InputMaybe<Scalars['String']>;
};

export type CurrencyRef = {
  code?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  symbol?: InputMaybe<Scalars['String']>;
};

export type CustomHTTP = {
  body?: InputMaybe<Scalars['String']>;
  forwardHeaders?: InputMaybe<Array<Scalars['String']>>;
  graphql?: InputMaybe<Scalars['String']>;
  introspectionHeaders?: InputMaybe<Array<Scalars['String']>>;
  method: HTTPMethod;
  mode?: InputMaybe<Mode>;
  secretHeaders?: InputMaybe<Array<Scalars['String']>>;
  skipIntrospection?: InputMaybe<Scalars['Boolean']>;
  url: Scalars['String'];
};

export type DateTimeFilter = {
  between?: InputMaybe<DateTimeRange>;
  eq?: InputMaybe<Scalars['DateTime']>;
  ge?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  le?: InputMaybe<Scalars['DateTime']>;
  lt?: InputMaybe<Scalars['DateTime']>;
};

export type DateTimeRange = {
  max: Scalars['DateTime'];
  min: Scalars['DateTime'];
};

export type DeleteAUDITS_PACKAGEPayload = {
  __typename?: 'DeleteAUDITS_PACKAGEPayload';
  aUDITS_PACKAGE?: Maybe<Array<Maybe<AUDITS_PACKAGE>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_PACKAGEPayloadaUDITS_PACKAGEArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_PACKAGEOrder>;
};

export type DeleteAUDITS_accountPayload = {
  __typename?: 'DeleteAUDITS_accountPayload';
  aUDITS_account?: Maybe<Array<Maybe<AUDITS_account>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_accountPayloadaUDITS_accountArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_accountOrder>;
};

export type DeleteAUDITS_documentPayload = {
  __typename?: 'DeleteAUDITS_documentPayload';
  aUDITS_document?: Maybe<Array<Maybe<AUDITS_document>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_documentPayloadaUDITS_documentArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_documentOrder>;
};

export type DeleteAUDITS_document_blockImagePayload = {
  __typename?: 'DeleteAUDITS_document_blockImagePayload';
  aUDITS_document_blockImage?: Maybe<Array<Maybe<AUDITS_document_blockImage>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_document_blockImagePayloadaUDITS_document_blockImageArgs = {
  filter?: InputMaybe<AUDITS_document_blockImageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockImageOrder>;
};

export type DeleteAUDITS_document_blockPayload = {
  __typename?: 'DeleteAUDITS_document_blockPayload';
  aUDITS_document_block?: Maybe<Array<Maybe<AUDITS_document_block>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_document_blockPayloadaUDITS_document_blockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockOrder>;
};

export type DeleteAUDITS_document_blockQuotePayload = {
  __typename?: 'DeleteAUDITS_document_blockQuotePayload';
  aUDITS_document_blockQuote?: Maybe<Array<Maybe<AUDITS_document_blockQuote>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_document_blockQuotePayloadaUDITS_document_blockQuoteArgs = {
  filter?: InputMaybe<AUDITS_document_blockQuoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockQuoteOrder>;
};

export type DeleteAUDITS_document_blockTableCellPayload = {
  __typename?: 'DeleteAUDITS_document_blockTableCellPayload';
  aUDITS_document_blockTableCell?: Maybe<Array<Maybe<AUDITS_document_blockTableCell>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_document_blockTableCellPayloadaUDITS_document_blockTableCellArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableCellFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableCellOrder>;
};

export type DeleteAUDITS_document_blockTableColumnPayload = {
  __typename?: 'DeleteAUDITS_document_blockTableColumnPayload';
  aUDITS_document_blockTableColumn?: Maybe<Array<Maybe<AUDITS_document_blockTableColumn>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_document_blockTableColumnPayloadaUDITS_document_blockTableColumnArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableColumnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableColumnOrder>;
};

export type DeleteAUDITS_document_blockTablePayload = {
  __typename?: 'DeleteAUDITS_document_blockTablePayload';
  aUDITS_document_blockTable?: Maybe<Array<Maybe<AUDITS_document_blockTable>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_document_blockTablePayloadaUDITS_document_blockTableArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableOrder>;
};

export type DeleteAUDITS_document_blockTableRowPayload = {
  __typename?: 'DeleteAUDITS_document_blockTableRowPayload';
  aUDITS_document_blockTableRow?: Maybe<Array<Maybe<AUDITS_document_blockTableRow>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_document_blockTableRowPayloadaUDITS_document_blockTableRowArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableRowFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableRowOrder>;
};

export type DeleteAUDITS_document_blockTextPayload = {
  __typename?: 'DeleteAUDITS_document_blockTextPayload';
  aUDITS_document_blockText?: Maybe<Array<Maybe<AUDITS_document_blockText>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_document_blockTextPayloadaUDITS_document_blockTextArgs = {
  filter?: InputMaybe<AUDITS_document_blockTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTextOrder>;
};

export type DeleteAUDITS_document_blockTitlePayload = {
  __typename?: 'DeleteAUDITS_document_blockTitlePayload';
  aUDITS_document_blockTitle?: Maybe<Array<Maybe<AUDITS_document_blockTitle>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_document_blockTitlePayloadaUDITS_document_blockTitleArgs = {
  filter?: InputMaybe<AUDITS_document_blockTitleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTitleOrder>;
};

export type DeleteAUDITS_filePayload = {
  __typename?: 'DeleteAUDITS_filePayload';
  aUDITS_file?: Maybe<Array<Maybe<AUDITS_file>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_filePayloadaUDITS_fileArgs = {
  filter?: InputMaybe<AUDITS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_fileOrder>;
};

export type DeleteAUDITS_projectPayload = {
  __typename?: 'DeleteAUDITS_projectPayload';
  aUDITS_project?: Maybe<Array<Maybe<AUDITS_project>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_projectPayloadaUDITS_projectArgs = {
  filter?: InputMaybe<AUDITS_projectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_projectOrder>;
};

export type DeleteAUDITS_project_versionPayload = {
  __typename?: 'DeleteAUDITS_project_versionPayload';
  aUDITS_project_version?: Maybe<Array<Maybe<AUDITS_project_version>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_project_versionPayloadaUDITS_project_versionArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_project_versionOrder>;
};

export type DeleteAUDITS_reviewPayload = {
  __typename?: 'DeleteAUDITS_reviewPayload';
  aUDITS_review?: Maybe<Array<Maybe<AUDITS_review>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_reviewPayloadaUDITS_reviewArgs = {
  filter?: InputMaybe<AUDITS_reviewFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_reviewOrder>;
};

export type DeleteAUDITS_review_accountPayload = {
  __typename?: 'DeleteAUDITS_review_accountPayload';
  aUDITS_review_account?: Maybe<Array<Maybe<AUDITS_review_account>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_review_accountPayloadaUDITS_review_accountArgs = {
  filter?: InputMaybe<AUDITS_review_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_accountOrder>;
};

export type DeleteAUDITS_review_commentPayload = {
  __typename?: 'DeleteAUDITS_review_commentPayload';
  aUDITS_review_comment?: Maybe<Array<Maybe<AUDITS_review_comment>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAUDITS_review_commentPayloadaUDITS_review_commentArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_commentOrder>;
};

export type DeleteAccountPayload = {
  __typename?: 'DeleteAccountPayload';
  account?: Maybe<Array<Maybe<Account>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAccountPayloadaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AccountOrder>;
};

export type DeleteAccount_eventPayload = {
  __typename?: 'DeleteAccount_eventPayload';
  account_event?: Maybe<Array<Maybe<Account_event>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAccount_eventPayloadaccount_eventArgs = {
  filter?: InputMaybe<Account_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_eventOrder>;
};

export type DeleteAccount_logPayload = {
  __typename?: 'DeleteAccount_logPayload';
  account_log?: Maybe<Array<Maybe<Account_log>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAccount_logPayloadaccount_logArgs = {
  filter?: InputMaybe<Account_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_logOrder>;
};

export type DeleteAccount_notificationPayload = {
  __typename?: 'DeleteAccount_notificationPayload';
  account_notification?: Maybe<Array<Maybe<Account_notification>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAccount_notificationPayloadaccount_notificationArgs = {
  filter?: InputMaybe<Account_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_notificationOrder>;
};

export type DeleteAccount_sessionConnectionPayload = {
  __typename?: 'DeleteAccount_sessionConnectionPayload';
  account_sessionConnection?: Maybe<Array<Maybe<Account_sessionConnection>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAccount_sessionConnectionPayloadaccount_sessionConnectionArgs = {
  filter?: InputMaybe<Account_sessionConnectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionOrder>;
};

export type DeleteAccount_sessionConnectionTaskPayload = {
  __typename?: 'DeleteAccount_sessionConnectionTaskPayload';
  account_sessionConnectionTask?: Maybe<Array<Maybe<Account_sessionConnectionTask>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAccount_sessionConnectionTaskPayloadaccount_sessionConnectionTaskArgs = {
  filter?: InputMaybe<Account_sessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionTaskOrder>;
};

export type DeleteAccount_sessionPayload = {
  __typename?: 'DeleteAccount_sessionPayload';
  account_session?: Maybe<Array<Maybe<Account_session>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAccount_sessionPayloadaccount_sessionArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionOrder>;
};

export type DeleteAccount_sessionTaskPayload = {
  __typename?: 'DeleteAccount_sessionTaskPayload';
  account_sessionTask?: Maybe<Array<Maybe<Account_sessionTask>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAccount_sessionTaskPayloadaccount_sessionTaskArgs = {
  filter?: InputMaybe<Account_sessionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionTaskOrder>;
};

export type DeleteAddressPayload = {
  __typename?: 'DeleteAddressPayload';
  address?: Maybe<Array<Maybe<Address>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAddressPayloadaddressArgs = {
  filter?: InputMaybe<AddressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AddressOrder>;
};

export type DeleteBankAccountPayload = {
  __typename?: 'DeleteBankAccountPayload';
  bankAccount?: Maybe<Array<Maybe<BankAccount>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteBankAccountPayloadbankAccountArgs = {
  filter?: InputMaybe<BankAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BankAccountOrder>;
};

export type DeleteBankPayload = {
  __typename?: 'DeleteBankPayload';
  bank?: Maybe<Array<Maybe<Bank>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteBankPayloadbankArgs = {
  filter?: InputMaybe<BankFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BankOrder>;
};

export type DeleteCMS_PACKAGEPayload = {
  __typename?: 'DeleteCMS_PACKAGEPayload';
  cMS_PACKAGE?: Maybe<Array<Maybe<CMS_PACKAGE>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_PACKAGEPayloadcMS_PACKAGEArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_PACKAGEOrder>;
};

export type DeleteCMS_accountPayload = {
  __typename?: 'DeleteCMS_accountPayload';
  cMS_account?: Maybe<Array<Maybe<CMS_account>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_accountPayloadcMS_accountArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_accountOrder>;
};

export type DeleteCMS_appContactPayload = {
  __typename?: 'DeleteCMS_appContactPayload';
  cMS_appContact?: Maybe<Array<Maybe<CMS_appContact>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_appContactPayloadcMS_appContactArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appContactOrder>;
};

export type DeleteCMS_appPayload = {
  __typename?: 'DeleteCMS_appPayload';
  cMS_app?: Maybe<Array<Maybe<CMS_app>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_appPayloadcMS_appArgs = {
  filter?: InputMaybe<CMS_appFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appOrder>;
};

export type DeleteCMS_authorAliasPayload = {
  __typename?: 'DeleteCMS_authorAliasPayload';
  cMS_authorAlias?: Maybe<Array<Maybe<CMS_authorAlias>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_authorAliasPayloadcMS_authorAliasArgs = {
  filter?: InputMaybe<CMS_authorAliasFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_authorAliasOrder>;
};

export type DeleteCMS_contactPayload = {
  __typename?: 'DeleteCMS_contactPayload';
  cMS_contact?: Maybe<Array<Maybe<CMS_contact>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_contactPayloadcMS_contactArgs = {
  filter?: InputMaybe<CMS_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_contactOrder>;
};

export type DeleteCMS_filePayload = {
  __typename?: 'DeleteCMS_filePayload';
  cMS_file?: Maybe<Array<Maybe<CMS_file>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_filePayloadcMS_fileArgs = {
  filter?: InputMaybe<CMS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_fileOrder>;
};

export type DeleteCMS_websitePayload = {
  __typename?: 'DeleteCMS_websitePayload';
  cMS_website?: Maybe<Array<Maybe<CMS_website>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_websitePayloadcMS_websiteArgs = {
  filter?: InputMaybe<CMS_websiteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_websiteOrder>;
};

export type DeleteCMS_website_pagePayload = {
  __typename?: 'DeleteCMS_website_pagePayload';
  cMS_website_page?: Maybe<Array<Maybe<CMS_website_page>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_website_pagePayloadcMS_website_pageArgs = {
  filter?: InputMaybe<CMS_website_pageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_pageOrder>;
};

export type DeleteCMS_website_page_blockComboPayload = {
  __typename?: 'DeleteCMS_website_page_blockComboPayload';
  cMS_website_page_blockCombo?: Maybe<Array<Maybe<CMS_website_page_blockCombo>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_website_page_blockComboPayloadcMS_website_page_blockComboArgs = {
  filter?: InputMaybe<CMS_website_page_blockComboFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockComboOrder>;
};

export type DeleteCMS_website_page_blockImagePayload = {
  __typename?: 'DeleteCMS_website_page_blockImagePayload';
  cMS_website_page_blockImage?: Maybe<Array<Maybe<CMS_website_page_blockImage>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_website_page_blockImagePayloadcMS_website_page_blockImageArgs = {
  filter?: InputMaybe<CMS_website_page_blockImageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockImageOrder>;
};

export type DeleteCMS_website_page_blockLinkPayload = {
  __typename?: 'DeleteCMS_website_page_blockLinkPayload';
  cMS_website_page_blockLink?: Maybe<Array<Maybe<CMS_website_page_blockLink>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_website_page_blockLinkPayloadcMS_website_page_blockLinkArgs = {
  filter?: InputMaybe<CMS_website_page_blockLinkFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockLinkOrder>;
};

export type DeleteCMS_website_page_blockPayload = {
  __typename?: 'DeleteCMS_website_page_blockPayload';
  cMS_website_page_block?: Maybe<Array<Maybe<CMS_website_page_block>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_website_page_blockPayloadcMS_website_page_blockArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockOrder>;
};

export type DeleteCMS_website_page_blockTextPayload = {
  __typename?: 'DeleteCMS_website_page_blockTextPayload';
  cMS_website_page_blockText?: Maybe<Array<Maybe<CMS_website_page_blockText>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_website_page_blockTextPayloadcMS_website_page_blockTextArgs = {
  filter?: InputMaybe<CMS_website_page_blockTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockTextOrder>;
};

export type DeleteCMS_website_page_blockTitlePayload = {
  __typename?: 'DeleteCMS_website_page_blockTitlePayload';
  cMS_website_page_blockTitle?: Maybe<Array<Maybe<CMS_website_page_blockTitle>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCMS_website_page_blockTitlePayloadcMS_website_page_blockTitleArgs = {
  filter?: InputMaybe<CMS_website_page_blockTitleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockTitleOrder>;
};

export type DeleteCRM_PACKAGEPayload = {
  __typename?: 'DeleteCRM_PACKAGEPayload';
  cRM_PACKAGE?: Maybe<Array<Maybe<CRM_PACKAGE>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_PACKAGEPayloadcRM_PACKAGEArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_PACKAGEOrder>;
};

export type DeleteCRM_accountContactsTableColumnPayload = {
  __typename?: 'DeleteCRM_accountContactsTableColumnPayload';
  cRM_accountContactsTableColumn?: Maybe<Array<Maybe<CRM_accountContactsTableColumn>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_accountContactsTableColumnPayloadcRM_accountContactsTableColumnArgs = {
  filter?: InputMaybe<CRM_accountContactsTableColumnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_accountContactsTableColumnOrder>;
};

export type DeleteCRM_accountContactsTableFilterPayload = {
  __typename?: 'DeleteCRM_accountContactsTableFilterPayload';
  cRM_accountContactsTableFilter?: Maybe<Array<Maybe<CRM_accountContactsTableFilter>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_accountContactsTableFilterPayloadcRM_accountContactsTableFilterArgs = {
  filter?: InputMaybe<CRM_accountContactsTableFilterFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_accountContactsTableFilterOrder>;
};

export type DeleteCRM_accountEventPayload = {
  __typename?: 'DeleteCRM_accountEventPayload';
  cRM_accountEvent?: Maybe<Array<Maybe<CRM_accountEvent>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_accountEventPayloadcRM_accountEventArgs = {
  filter?: InputMaybe<CRM_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_accountPayload = {
  __typename?: 'DeleteCRM_accountPayload';
  cRM_account?: Maybe<Array<Maybe<CRM_account>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_accountPayloadcRM_accountArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_actionCallPayload = {
  __typename?: 'DeleteCRM_actionCallPayload';
  cRM_actionCall?: Maybe<Array<Maybe<CRM_actionCall>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_actionCallPayloadcRM_actionCallArgs = {
  filter?: InputMaybe<CRM_actionCallFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_actionChatPayload = {
  __typename?: 'DeleteCRM_actionChatPayload';
  cRM_actionChat?: Maybe<Array<Maybe<CRM_actionChat>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_actionChatPayloadcRM_actionChatArgs = {
  filter?: InputMaybe<CRM_actionChatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionChatOrder>;
};

export type DeleteCRM_actionEmailPayload = {
  __typename?: 'DeleteCRM_actionEmailPayload';
  cRM_actionEmail?: Maybe<Array<Maybe<CRM_actionEmail>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_actionEmailPayloadcRM_actionEmailArgs = {
  filter?: InputMaybe<CRM_actionEmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionEmailOrder>;
};

export type DeleteCRM_actionMeetingPayload = {
  __typename?: 'DeleteCRM_actionMeetingPayload';
  cRM_actionMeeting?: Maybe<Array<Maybe<CRM_actionMeeting>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_actionMeetingPayloadcRM_actionMeetingArgs = {
  filter?: InputMaybe<CRM_actionMeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_actionPayload = {
  __typename?: 'DeleteCRM_actionPayload';
  cRM_action?: Maybe<Array<Maybe<CRM_action>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_actionPayloadcRM_actionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionOrder>;
};

export type DeleteCRM_areaPayload = {
  __typename?: 'DeleteCRM_areaPayload';
  cRM_area?: Maybe<Array<Maybe<CRM_area>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_areaPayloadcRM_areaArgs = {
  filter?: InputMaybe<CRM_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_areaOrder>;
};

export type DeleteCRM_campaignContactEventPayload = {
  __typename?: 'DeleteCRM_campaignContactEventPayload';
  cRM_campaignContactEvent?: Maybe<Array<Maybe<CRM_campaignContactEvent>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_campaignContactEventPayloadcRM_campaignContactEventArgs = {
  filter?: InputMaybe<CRM_campaignContactEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactEventOrder>;
};

export type DeleteCRM_campaignContactPayload = {
  __typename?: 'DeleteCRM_campaignContactPayload';
  cRM_campaignContact?: Maybe<Array<Maybe<CRM_campaignContact>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_campaignContactPayloadcRM_campaignContactArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactOrder>;
};

export type DeleteCRM_campaignDeliverPayload = {
  __typename?: 'DeleteCRM_campaignDeliverPayload';
  cRM_campaignDeliver?: Maybe<Array<Maybe<CRM_campaignDeliver>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_campaignDeliverPayloadcRM_campaignDeliverArgs = {
  filter?: InputMaybe<CRM_campaignDeliverFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignDeliverOrder>;
};

export type DeleteCRM_campaignEmailTemplatePayload = {
  __typename?: 'DeleteCRM_campaignEmailTemplatePayload';
  cRM_campaignEmailTemplate?: Maybe<Array<Maybe<CRM_campaignEmailTemplate>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_campaignEmailTemplatePayloadcRM_campaignEmailTemplateArgs = {
  filter?: InputMaybe<CRM_campaignEmailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignEmailTemplateOrder>;
};

export type DeleteCRM_campaignPayload = {
  __typename?: 'DeleteCRM_campaignPayload';
  cRM_campaign?: Maybe<Array<Maybe<CRM_campaign>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_campaignPayloadcRM_campaignArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignOrder>;
};

export type DeleteCRM_contactActionCallPayload = {
  __typename?: 'DeleteCRM_contactActionCallPayload';
  cRM_contactActionCall?: Maybe<Array<Maybe<CRM_contactActionCall>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactActionCallPayloadcRM_contactActionCallArgs = {
  filter?: InputMaybe<CRM_contactActionCallFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionCallOrder>;
};

export type DeleteCRM_contactActionChatPayload = {
  __typename?: 'DeleteCRM_contactActionChatPayload';
  cRM_contactActionChat?: Maybe<Array<Maybe<CRM_contactActionChat>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactActionChatPayloadcRM_contactActionChatArgs = {
  filter?: InputMaybe<CRM_contactActionChatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_contactActionEmailPayload = {
  __typename?: 'DeleteCRM_contactActionEmailPayload';
  cRM_contactActionEmail?: Maybe<Array<Maybe<CRM_contactActionEmail>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactActionEmailPayloadcRM_contactActionEmailArgs = {
  filter?: InputMaybe<CRM_contactActionEmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_contactActionMeetingPayload = {
  __typename?: 'DeleteCRM_contactActionMeetingPayload';
  cRM_contactActionMeeting?: Maybe<Array<Maybe<CRM_contactActionMeeting>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactActionMeetingPayloadcRM_contactActionMeetingArgs = {
  filter?: InputMaybe<CRM_contactActionMeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionMeetingOrder>;
};

export type DeleteCRM_contactActionPayload = {
  __typename?: 'DeleteCRM_contactActionPayload';
  cRM_contactAction?: Maybe<Array<Maybe<CRM_contactAction>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactActionPayloadcRM_contactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionOrder>;
};

export type DeleteCRM_contactActionStatusChangePayload = {
  __typename?: 'DeleteCRM_contactActionStatusChangePayload';
  cRM_contactActionStatusChange?: Maybe<Array<Maybe<CRM_contactActionStatusChange>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactActionStatusChangePayloadcRM_contactActionStatusChangeArgs = {
  filter?: InputMaybe<CRM_contactActionStatusChangeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_contactAnswerPayload = {
  __typename?: 'DeleteCRM_contactAnswerPayload';
  cRM_contactAnswer?: Maybe<Array<Maybe<CRM_contactAnswer>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactAnswerPayloadcRM_contactAnswerArgs = {
  filter?: InputMaybe<CRM_contactAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactAnswerOrder>;
};

export type DeleteCRM_contactInputPayload = {
  __typename?: 'DeleteCRM_contactInputPayload';
  cRM_contactInput?: Maybe<Array<Maybe<CRM_contactInput>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactInputPayloadcRM_contactInputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};

export type DeleteCRM_contactInputSubStatusPayload = {
  __typename?: 'DeleteCRM_contactInputSubStatusPayload';
  cRM_contactInputSubStatus?: Maybe<Array<Maybe<CRM_contactInputSubStatus>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactInputSubStatusPayloadcRM_contactInputSubStatusArgs = {
  filter?: InputMaybe<CRM_contactInputSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputSubStatusOrder>;
};

export type DeleteCRM_contactInputValuePayload = {
  __typename?: 'DeleteCRM_contactInputValuePayload';
  cRM_contactInputValue?: Maybe<Array<Maybe<CRM_contactInputValue>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactInputValuePayloadcRM_contactInputValueArgs = {
  filter?: InputMaybe<CRM_contactInputValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputValueOrder>;
};

export type DeleteCRM_contactListPayload = {
  __typename?: 'DeleteCRM_contactListPayload';
  cRM_contactList?: Maybe<Array<Maybe<CRM_contactList>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactListPayloadcRM_contactListArgs = {
  filter?: InputMaybe<CRM_contactListFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactListOrder>;
};

export type DeleteCRM_contactPayload = {
  __typename?: 'DeleteCRM_contactPayload';
  cRM_contact?: Maybe<Array<Maybe<CRM_contact>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_contactPayloadcRM_contactArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_emailTemplatePayload = {
  __typename?: 'DeleteCRM_emailTemplatePayload';
  cRM_emailTemplate?: Maybe<Array<Maybe<CRM_emailTemplate>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_emailTemplatePayloadcRM_emailTemplateArgs = {
  filter?: InputMaybe<CRM_emailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_eventPayload = {
  __typename?: 'DeleteCRM_eventPayload';
  cRM_event?: Maybe<Array<Maybe<CRM_event>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_eventPayloadcRM_eventArgs = {
  filter?: InputMaybe<CRM_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_funnelActionPayload = {
  __typename?: 'DeleteCRM_funnelActionPayload';
  cRM_funnelAction?: Maybe<Array<Maybe<CRM_funnelAction>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_funnelActionPayloadcRM_funnelActionArgs = {
  filter?: InputMaybe<CRM_funnelActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelActionOrder>;
};

export type DeleteCRM_funnelPayload = {
  __typename?: 'DeleteCRM_funnelPayload';
  cRM_funnel?: Maybe<Array<Maybe<CRM_funnel>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_funnelPayloadcRM_funnelArgs = {
  filter?: InputMaybe<CRM_funnelFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelOrder>;
};

export type DeleteCRM_funnelStatusPayload = {
  __typename?: 'DeleteCRM_funnelStatusPayload';
  cRM_funnelStatus?: Maybe<Array<Maybe<CRM_funnelStatus>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_funnelStatusPayloadcRM_funnelStatusArgs = {
  filter?: InputMaybe<CRM_funnelStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelStatusOrder>;
};

export type DeleteCRM_opportunityLogPayload = {
  __typename?: 'DeleteCRM_opportunityLogPayload';
  cRM_opportunityLog?: Maybe<Array<Maybe<CRM_opportunityLog>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_opportunityLogPayloadcRM_opportunityLogArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityLogOrder>;
};

export type DeleteCRM_opportunityPaymentPlanItemPayload = {
  __typename?: 'DeleteCRM_opportunityPaymentPlanItemPayload';
  cRM_opportunityPaymentPlanItem?: Maybe<Array<Maybe<CRM_opportunityPaymentPlanItem>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_opportunityPaymentPlanItemPayloadcRM_opportunityPaymentPlanItemArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityPaymentPlanItemOrder>;
};

export type DeleteCRM_overviewPayload = {
  __typename?: 'DeleteCRM_overviewPayload';
  cRM_overview?: Maybe<Array<Maybe<CRM_overview>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_overviewPayloadcRM_overviewArgs = {
  filter?: InputMaybe<CRM_overviewFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_proposalPayload = {
  __typename?: 'DeleteCRM_proposalPayload';
  cRM_proposal?: Maybe<Array<Maybe<CRM_proposal>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_proposalPayloadcRM_proposalArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_rolePayload = {
  __typename?: 'DeleteCRM_rolePayload';
  cRM_role?: Maybe<Array<Maybe<CRM_role>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_rolePayloadcRM_roleArgs = {
  filter?: InputMaybe<CRM_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteCRM_socialMediaCampaignPayload = {
  __typename?: 'DeleteCRM_socialMediaCampaignPayload';
  cRM_socialMediaCampaign?: Maybe<Array<Maybe<CRM_socialMediaCampaign>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_socialMediaCampaignPayloadcRM_socialMediaCampaignArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaignOrder>;
};

export type DeleteCRM_socialMediaCampaign_mediaPayload = {
  __typename?: 'DeleteCRM_socialMediaCampaign_mediaPayload';
  cRM_socialMediaCampaign_media?: Maybe<Array<Maybe<CRM_socialMediaCampaign_media>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_socialMediaCampaign_mediaPayloadcRM_socialMediaCampaign_mediaArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_mediaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_mediaOrder>;
};

export type DeleteCRM_socialMediaCampaign_postPayload = {
  __typename?: 'DeleteCRM_socialMediaCampaign_postPayload';
  cRM_socialMediaCampaign_post?: Maybe<Array<Maybe<CRM_socialMediaCampaign_post>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_socialMediaCampaign_postPayloadcRM_socialMediaCampaign_postArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_postFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_postOrder>;
};

export type DeleteCRM_sourceCategoryPayload = {
  __typename?: 'DeleteCRM_sourceCategoryPayload';
  cRM_sourceCategory?: Maybe<Array<Maybe<CRM_sourceCategory>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_sourceCategoryPayloadcRM_sourceCategoryArgs = {
  filter?: InputMaybe<CRM_sourceCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceCategoryOrder>;
};

export type DeleteCRM_sourceFormFieldPayload = {
  __typename?: 'DeleteCRM_sourceFormFieldPayload';
  cRM_sourceFormField?: Maybe<Array<Maybe<CRM_sourceFormField>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_sourceFormFieldPayloadcRM_sourceFormFieldArgs = {
  filter?: InputMaybe<CRM_sourceFormFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormFieldOrder>;
};

export type DeleteCRM_sourceFormPayload = {
  __typename?: 'DeleteCRM_sourceFormPayload';
  cRM_sourceForm?: Maybe<Array<Maybe<CRM_sourceForm>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_sourceFormPayloadcRM_sourceFormArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormOrder>;
};

export type DeleteCRM_sourceFormReasonPayload = {
  __typename?: 'DeleteCRM_sourceFormReasonPayload';
  cRM_sourceFormReason?: Maybe<Array<Maybe<CRM_sourceFormReason>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_sourceFormReasonPayloadcRM_sourceFormReasonArgs = {
  filter?: InputMaybe<CRM_sourceFormReasonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormReasonOrder>;
};

export type DeleteCRM_sourceForm_emailTemplatePayload = {
  __typename?: 'DeleteCRM_sourceForm_emailTemplatePayload';
  cRM_sourceForm_emailTemplate?: Maybe<Array<Maybe<CRM_sourceForm_emailTemplate>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_sourceForm_emailTemplatePayloadcRM_sourceForm_emailTemplateArgs = {
  filter?: InputMaybe<CRM_sourceForm_emailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceForm_emailTemplateOrder>;
};

export type DeleteCRM_sourcePayload = {
  __typename?: 'DeleteCRM_sourcePayload';
  cRM_source?: Maybe<Array<Maybe<CRM_source>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_sourcePayloadcRM_sourceArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceOrder>;
};

export type DeleteCRM_teamAccountPayload = {
  __typename?: 'DeleteCRM_teamAccountPayload';
  cRM_teamAccount?: Maybe<Array<Maybe<CRM_teamAccount>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_teamAccountPayloadcRM_teamAccountArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamAccountOrder>;
};

export type DeleteCRM_teamActionBoardEffectPayload = {
  __typename?: 'DeleteCRM_teamActionBoardEffectPayload';
  cRM_teamActionBoardEffect?: Maybe<Array<Maybe<CRM_teamActionBoardEffect>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_teamActionBoardEffectPayloadcRM_teamActionBoardEffectArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionBoardEffectOrder>;
};

export type DeleteCRM_teamActionPayload = {
  __typename?: 'DeleteCRM_teamActionPayload';
  cRM_teamAction?: Maybe<Array<Maybe<CRM_teamAction>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_teamActionPayloadcRM_teamActionArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionOrder>;
};

export type DeleteCRM_teamBoardItemPayload = {
  __typename?: 'DeleteCRM_teamBoardItemPayload';
  cRM_teamBoardItem?: Maybe<Array<Maybe<CRM_teamBoardItem>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_teamBoardItemPayloadcRM_teamBoardItemArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardItemOrder>;
};

export type DeleteCRM_teamBoardPayload = {
  __typename?: 'DeleteCRM_teamBoardPayload';
  cRM_teamBoard?: Maybe<Array<Maybe<CRM_teamBoard>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_teamBoardPayloadcRM_teamBoardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardOrder>;
};

export type DeleteCRM_teamBoardStatusPayload = {
  __typename?: 'DeleteCRM_teamBoardStatusPayload';
  cRM_teamBoardStatus?: Maybe<Array<Maybe<CRM_teamBoardStatus>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_teamBoardStatusPayloadcRM_teamBoardStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardStatusOrder>;
};

export type DeleteCRM_teamBoardSubStatusPayload = {
  __typename?: 'DeleteCRM_teamBoardSubStatusPayload';
  cRM_teamBoardSubStatus?: Maybe<Array<Maybe<CRM_teamBoardSubStatus>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_teamBoardSubStatusPayloadcRM_teamBoardSubStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardSubStatusOrder>;
};

export type DeleteCRM_teamBoardTaskPayload = {
  __typename?: 'DeleteCRM_teamBoardTaskPayload';
  cRM_teamBoardTask?: Maybe<Array<Maybe<CRM_teamBoardTask>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_teamBoardTaskPayloadcRM_teamBoardTaskArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardTaskOrder>;
};

export type DeleteCRM_teamPayload = {
  __typename?: 'DeleteCRM_teamPayload';
  cRM_team?: Maybe<Array<Maybe<CRM_team>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCRM_teamPayloadcRM_teamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamOrder>;
};

export type DeleteChatbots_PACKAGEPayload = {
  __typename?: 'DeleteChatbots_PACKAGEPayload';
  chatbots_PACKAGE?: Maybe<Array<Maybe<Chatbots_PACKAGE>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_PACKAGEPayloadchatbots_PACKAGEArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_PACKAGEOrder>;
};

export type DeleteChatbots_accountPayload = {
  __typename?: 'DeleteChatbots_accountPayload';
  chatbots_account?: Maybe<Array<Maybe<Chatbots_account>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_accountPayloadchatbots_accountArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_accountOrder>;
};

export type DeleteChatbots_areaAccountPayload = {
  __typename?: 'DeleteChatbots_areaAccountPayload';
  chatbots_areaAccount?: Maybe<Array<Maybe<Chatbots_areaAccount>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_areaAccountPayloadchatbots_areaAccountArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaAccountOrder>;
};

export type DeleteChatbots_areaPayload = {
  __typename?: 'DeleteChatbots_areaPayload';
  chatbots_area?: Maybe<Array<Maybe<Chatbots_area>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_areaPayloadchatbots_areaArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaOrder>;
};

export type DeleteChatbots_externalAPIPayload = {
  __typename?: 'DeleteChatbots_externalAPIPayload';
  chatbots_externalAPI?: Maybe<Array<Maybe<Chatbots_externalAPI>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_externalAPIPayloadchatbots_externalAPIArgs = {
  filter?: InputMaybe<Chatbots_externalAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_externalAPIOrder>;
};

export type DeleteChatbots_externalAPI_fieldPayload = {
  __typename?: 'DeleteChatbots_externalAPI_fieldPayload';
  chatbots_externalAPI_field?: Maybe<Array<Maybe<Chatbots_externalAPI_field>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_externalAPI_fieldPayloadchatbots_externalAPI_fieldArgs = {
  filter?: InputMaybe<Chatbots_externalAPI_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_externalAPI_fieldOrder>;
};

export type DeleteChatbots_processAPIPayload = {
  __typename?: 'DeleteChatbots_processAPIPayload';
  chatbots_processAPI?: Maybe<Array<Maybe<Chatbots_processAPI>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processAPIPayloadchatbots_processAPIArgs = {
  filter?: InputMaybe<Chatbots_processAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAPIOrder>;
};

export type DeleteChatbots_processAccountPayload = {
  __typename?: 'DeleteChatbots_processAccountPayload';
  chatbots_processAccount?: Maybe<Array<Maybe<Chatbots_processAccount>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processAccountPayloadchatbots_processAccountArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAccountOrder>;
};

export type DeleteChatbots_processActionPayload = {
  __typename?: 'DeleteChatbots_processActionPayload';
  chatbots_processAction?: Maybe<Array<Maybe<Chatbots_processAction>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processActionPayloadchatbots_processActionArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processActionOrder>;
};

export type DeleteChatbots_processButtonPayload = {
  __typename?: 'DeleteChatbots_processButtonPayload';
  chatbots_processButton?: Maybe<Array<Maybe<Chatbots_processButton>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processButtonPayloadchatbots_processButtonArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processButtonOrder>;
};

export type DeleteChatbots_processFieldPayload = {
  __typename?: 'DeleteChatbots_processFieldPayload';
  chatbots_processField?: Maybe<Array<Maybe<Chatbots_processField>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processFieldPayloadchatbots_processFieldArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFieldOrder>;
};

export type DeleteChatbots_processFilterParamPayload = {
  __typename?: 'DeleteChatbots_processFilterParamPayload';
  chatbots_processFilterParam?: Maybe<Array<Maybe<Chatbots_processFilterParam>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processFilterParamPayloadchatbots_processFilterParamArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFilterParamOrder>;
};

export type DeleteChatbots_processOperationPayload = {
  __typename?: 'DeleteChatbots_processOperationPayload';
  chatbots_processOperation?: Maybe<Array<Maybe<Chatbots_processOperation>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processOperationPayloadchatbots_processOperationArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOperationOrder>;
};

export type DeleteChatbots_processPayload = {
  __typename?: 'DeleteChatbots_processPayload';
  chatbots_process?: Maybe<Array<Maybe<Chatbots_process>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processPayloadchatbots_processArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOrder>;
};

export type DeleteChatbots_processStatusPayload = {
  __typename?: 'DeleteChatbots_processStatusPayload';
  chatbots_processStatus?: Maybe<Array<Maybe<Chatbots_processStatus>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processStatusPayloadchatbots_processStatusArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processStatusOrder>;
};

export type DeleteChatbots_processTableHeadConfigPayload = {
  __typename?: 'DeleteChatbots_processTableHeadConfigPayload';
  chatbots_processTableHeadConfig?: Maybe<Array<Maybe<Chatbots_processTableHeadConfig>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processTableHeadConfigPayloadchatbots_processTableHeadConfigArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadConfigOrder>;
};

export type DeleteChatbots_processTableHeadPayload = {
  __typename?: 'DeleteChatbots_processTableHeadPayload';
  chatbots_processTableHead?: Maybe<Array<Maybe<Chatbots_processTableHead>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processTableHeadPayloadchatbots_processTableHeadArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadOrder>;
};

export type DeleteChatbots_processTableMatchReplacePayload = {
  __typename?: 'DeleteChatbots_processTableMatchReplacePayload';
  chatbots_processTableMatchReplace?: Maybe<Array<Maybe<Chatbots_processTableMatchReplace>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processTableMatchReplacePayloadchatbots_processTableMatchReplaceArgs = {
  filter?: InputMaybe<Chatbots_processTableMatchReplaceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableMatchReplaceOrder>;
};

export type DeleteChatbots_processValidationOperationPayload = {
  __typename?: 'DeleteChatbots_processValidationOperationPayload';
  chatbots_processValidationOperation?: Maybe<Array<Maybe<Chatbots_processValidationOperation>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processValidationOperationPayloadchatbots_processValidationOperationArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperationOrder>;
};

export type DeleteChatbots_processValidationOperation_documentPayload = {
  __typename?: 'DeleteChatbots_processValidationOperation_documentPayload';
  chatbots_processValidationOperation_document?: Maybe<Array<Maybe<Chatbots_processValidationOperation_document>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processValidationOperation_documentPayloadchatbots_processValidationOperation_documentArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_documentOrder>;
};

export type DeleteChatbots_processValidationOperation_document_filePayload = {
  __typename?: 'DeleteChatbots_processValidationOperation_document_filePayload';
  chatbots_processValidationOperation_document_file?: Maybe<Array<Maybe<Chatbots_processValidationOperation_document_file>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processValidationOperation_document_filePayloadchatbots_processValidationOperation_document_fileArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_document_fileOrder>;
};

export type DeleteChatbots_processValidationPayload = {
  __typename?: 'DeleteChatbots_processValidationPayload';
  chatbots_processValidation?: Maybe<Array<Maybe<Chatbots_processValidation>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processValidationPayloadchatbots_processValidationArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOrder>;
};

export type DeleteChatbots_processsValidationOperation_fieldPayload = {
  __typename?: 'DeleteChatbots_processsValidationOperation_fieldPayload';
  chatbots_processsValidationOperation_field?: Maybe<Array<Maybe<Chatbots_processsValidationOperation_field>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_processsValidationOperation_fieldPayloadchatbots_processsValidationOperation_fieldArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processsValidationOperation_fieldOrder>;
};

export type DeleteChatbots_validationDocumentPayload = {
  __typename?: 'DeleteChatbots_validationDocumentPayload';
  chatbots_validationDocument?: Maybe<Array<Maybe<Chatbots_validationDocument>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_validationDocumentPayloadchatbots_validationDocumentArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocumentOrder>;
};

export type DeleteChatbots_validationDocument_filePayload = {
  __typename?: 'DeleteChatbots_validationDocument_filePayload';
  chatbots_validationDocument_file?: Maybe<Array<Maybe<Chatbots_validationDocument_file>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_validationDocument_filePayloadchatbots_validationDocument_fileArgs = {
  filter?: InputMaybe<Chatbots_validationDocument_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocument_fileOrder>;
};

export type DeleteChatbots_validationFieldPayload = {
  __typename?: 'DeleteChatbots_validationFieldPayload';
  chatbots_validationField?: Maybe<Array<Maybe<Chatbots_validationField>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_validationFieldPayloadchatbots_validationFieldArgs = {
  filter?: InputMaybe<Chatbots_validationFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationFieldOrder>;
};

export type DeleteChatbots_validationPayload = {
  __typename?: 'DeleteChatbots_validationPayload';
  chatbots_validation?: Maybe<Array<Maybe<Chatbots_validation>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteChatbots_validationPayloadchatbots_validationArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationOrder>;
};

export type DeleteCompanySectorPayload = {
  __typename?: 'DeleteCompanySectorPayload';
  companySector?: Maybe<Array<Maybe<CompanySector>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCompanySectorPayloadcompanySectorArgs = {
  filter?: InputMaybe<CompanySectorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CompanySectorOrder>;
};

export type DeleteContactPayload = {
  __typename?: 'DeleteContactPayload';
  contact?: Maybe<Array<Maybe<Contact>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteContactPayloadcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ContactOrder>;
};

export type DeleteContact_billingInfoPayload = {
  __typename?: 'DeleteContact_billingInfoPayload';
  contact_billingInfo?: Maybe<Array<Maybe<Contact_billingInfo>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteContact_billingInfoPayloadcontact_billingInfoArgs = {
  filter?: InputMaybe<Contact_billingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_billingInfoOrder>;
};

export type DeleteContact_businessInfoPayload = {
  __typename?: 'DeleteContact_businessInfoPayload';
  contact_businessInfo?: Maybe<Array<Maybe<Contact_businessInfo>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteContact_businessInfoPayloadcontact_businessInfoArgs = {
  filter?: InputMaybe<Contact_businessInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_businessInfoOrder>;
};

export type DeleteContact_emailPayload = {
  __typename?: 'DeleteContact_emailPayload';
  contact_email?: Maybe<Array<Maybe<Contact_email>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteContact_emailPayloadcontact_emailArgs = {
  filter?: InputMaybe<Contact_emailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_emailOrder>;
};

export type DeleteContact_importLogPayload = {
  __typename?: 'DeleteContact_importLogPayload';
  contact_importLog?: Maybe<Array<Maybe<Contact_importLog>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteContact_importLogPayloadcontact_importLogArgs = {
  filter?: InputMaybe<Contact_importLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_importLogOrder>;
};

export type DeleteContact_jobPositionPayload = {
  __typename?: 'DeleteContact_jobPositionPayload';
  contact_jobPosition?: Maybe<Array<Maybe<Contact_jobPosition>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteContact_jobPositionPayloadcontact_jobPositionArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_jobPositionOrder>;
};

export type DeleteContact_phonePayload = {
  __typename?: 'DeleteContact_phonePayload';
  contact_phone?: Maybe<Array<Maybe<Contact_phone>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteContact_phonePayloadcontact_phoneArgs = {
  filter?: InputMaybe<Contact_phoneFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_phoneOrder>;
};

export type DeleteCountryPayload = {
  __typename?: 'DeleteCountryPayload';
  country?: Maybe<Array<Maybe<Country>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCountryPayloadcountryArgs = {
  filter?: InputMaybe<CountryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CountryOrder>;
};

export type DeleteCurrencyPayload = {
  __typename?: 'DeleteCurrencyPayload';
  currency?: Maybe<Array<Maybe<Currency>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCurrencyPayloadcurrencyArgs = {
  filter?: InputMaybe<CurrencyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CurrencyOrder>;
};

export type DeleteDynamicTablePayload = {
  __typename?: 'DeleteDynamicTablePayload';
  dynamicTable?: Maybe<Array<Maybe<DynamicTable>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDynamicTablePayloaddynamicTableArgs = {
  filter?: InputMaybe<DynamicTableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTableOrder>;
};

export type DeleteDynamicTable_accountPayload = {
  __typename?: 'DeleteDynamicTable_accountPayload';
  dynamicTable_account?: Maybe<Array<Maybe<DynamicTable_account>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDynamicTable_accountPayloaddynamicTable_accountArgs = {
  filter?: InputMaybe<DynamicTable_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteDynamicTable_headPayload = {
  __typename?: 'DeleteDynamicTable_headPayload';
  dynamicTable_head?: Maybe<Array<Maybe<DynamicTable_head>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDynamicTable_headPayloaddynamicTable_headArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headOrder>;
};

export type DeleteDynamicTable_headValueBooleanOptionsPayload = {
  __typename?: 'DeleteDynamicTable_headValueBooleanOptionsPayload';
  dynamicTable_headValueBooleanOptions?: Maybe<Array<Maybe<DynamicTable_headValueBooleanOptions>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDynamicTable_headValueBooleanOptionsPayloaddynamicTable_headValueBooleanOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueBooleanOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headValueBooleanOptionsOrder>;
};

export type DeleteDynamicTable_headValueCurrencyOptionsPayload = {
  __typename?: 'DeleteDynamicTable_headValueCurrencyOptionsPayload';
  dynamicTable_headValueCurrencyOptions?: Maybe<Array<Maybe<DynamicTable_headValueCurrencyOptions>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDynamicTable_headValueCurrencyOptionsPayloaddynamicTable_headValueCurrencyOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueCurrencyOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteDynamicTable_headValueDateOptionsPayload = {
  __typename?: 'DeleteDynamicTable_headValueDateOptionsPayload';
  dynamicTable_headValueDateOptions?: Maybe<Array<Maybe<DynamicTable_headValueDateOptions>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDynamicTable_headValueDateOptionsPayloaddynamicTable_headValueDateOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueDateOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headValueDateOptionsOrder>;
};

export type DeleteDynamicTable_headValueLinkOptionsPayload = {
  __typename?: 'DeleteDynamicTable_headValueLinkOptionsPayload';
  dynamicTable_headValueLinkOptions?: Maybe<Array<Maybe<DynamicTable_headValueLinkOptions>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDynamicTable_headValueLinkOptionsPayloaddynamicTable_headValueLinkOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueLinkOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteDynamicTable_headValueNumberOptionsPayload = {
  __typename?: 'DeleteDynamicTable_headValueNumberOptionsPayload';
  dynamicTable_headValueNumberOptions?: Maybe<Array<Maybe<DynamicTable_headValueNumberOptions>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDynamicTable_headValueNumberOptionsPayloaddynamicTable_headValueNumberOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueNumberOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteE360AppPayload = {
  __typename?: 'DeleteE360AppPayload';
  e360App?: Maybe<Array<Maybe<E360App>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360AppPayloade360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360AppOrder>;
};

export type DeleteE360App_domainPayload = {
  __typename?: 'DeleteE360App_domainPayload';
  e360App_domain?: Maybe<Array<Maybe<E360App_domain>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_domainPayloade360App_domainArgs = {
  filter?: InputMaybe<E360App_domainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_domainOrder>;
};

export type DeleteE360App_locationFilePayload = {
  __typename?: 'DeleteE360App_locationFilePayload';
  e360App_locationFile?: Maybe<Array<Maybe<E360App_locationFile>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_locationFilePayloade360App_locationFileArgs = {
  filter?: InputMaybe<E360App_locationFileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationFileOrder>;
};

export type DeleteE360App_locationPayload = {
  __typename?: 'DeleteE360App_locationPayload';
  e360App_location?: Maybe<Array<Maybe<E360App_location>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_locationPayloade360App_locationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationOrder>;
};

export type DeleteE360App_locationSchedulePayload = {
  __typename?: 'DeleteE360App_locationSchedulePayload';
  e360App_locationSchedule?: Maybe<Array<Maybe<E360App_locationSchedule>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_locationSchedulePayloade360App_locationScheduleArgs = {
  filter?: InputMaybe<E360App_locationScheduleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationScheduleOrder>;
};

export type DeleteE360App_location_appoinmentLotsPayload = {
  __typename?: 'DeleteE360App_location_appoinmentLotsPayload';
  e360App_location_appoinmentLots?: Maybe<Array<Maybe<E360App_location_appoinmentLots>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_appoinmentLotsPayloade360App_location_appoinmentLotsArgs = {
  filter?: InputMaybe<E360App_location_appoinmentLotsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentLotsOrder>;
};

export type DeleteE360App_location_appoinmentPayload = {
  __typename?: 'DeleteE360App_location_appoinmentPayload';
  e360App_location_appoinment?: Maybe<Array<Maybe<E360App_location_appoinment>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_appoinmentPayloade360App_location_appoinmentArgs = {
  filter?: InputMaybe<E360App_location_appoinmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentOrder>;
};

export type DeleteE360App_location_areaPayload = {
  __typename?: 'DeleteE360App_location_areaPayload';
  e360App_location_area?: Maybe<Array<Maybe<E360App_location_area>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_areaPayloade360App_location_areaArgs = {
  filter?: InputMaybe<E360App_location_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_areaOrder>;
};

export type DeleteE360App_location_area_resourcePayload = {
  __typename?: 'DeleteE360App_location_area_resourcePayload';
  e360App_location_area_resource?: Maybe<Array<Maybe<E360App_location_area_resource>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_area_resourcePayloade360App_location_area_resourceArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_resourceOrder>;
};

export type DeleteE360App_location_area_workShiftPayload = {
  __typename?: 'DeleteE360App_location_area_workShiftPayload';
  e360App_location_area_workShift?: Maybe<Array<Maybe<E360App_location_area_workShift>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_area_workShiftPayloade360App_location_area_workShiftArgs = {
  filter?: InputMaybe<E360App_location_area_workShiftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_workShiftOrder>;
};

export type DeleteE360App_location_menuPayload = {
  __typename?: 'DeleteE360App_location_menuPayload';
  e360App_location_menu?: Maybe<Array<Maybe<E360App_location_menu>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_menuPayloade360App_location_menuArgs = {
  filter?: InputMaybe<E360App_location_menuFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menuOrder>;
};

export type DeleteE360App_location_menu_comboPayload = {
  __typename?: 'DeleteE360App_location_menu_comboPayload';
  e360App_location_menu_combo?: Maybe<Array<Maybe<E360App_location_menu_combo>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_menu_comboPayloade360App_location_menu_comboArgs = {
  filter?: InputMaybe<E360App_location_menu_comboFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_comboOrder>;
};

export type DeleteE360App_location_menu_itemPayload = {
  __typename?: 'DeleteE360App_location_menu_itemPayload';
  e360App_location_menu_item?: Maybe<Array<Maybe<E360App_location_menu_item>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_menu_itemPayloade360App_location_menu_itemArgs = {
  filter?: InputMaybe<E360App_location_menu_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_itemOrder>;
};

export type DeleteE360App_location_menu_sectionPayload = {
  __typename?: 'DeleteE360App_location_menu_sectionPayload';
  e360App_location_menu_section?: Maybe<Array<Maybe<E360App_location_menu_section>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_menu_sectionPayloade360App_location_menu_sectionArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_sectionOrder>;
};

export type DeleteE360App_location_menu_section_itemPayload = {
  __typename?: 'DeleteE360App_location_menu_section_itemPayload';
  e360App_location_menu_section_item?: Maybe<Array<Maybe<E360App_location_menu_section_item>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_menu_section_itemPayloade360App_location_menu_section_itemArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_section_itemOrder>;
};

export type DeleteE360App_location_menu_subSectionPayload = {
  __typename?: 'DeleteE360App_location_menu_subSectionPayload';
  e360App_location_menu_subSection?: Maybe<Array<Maybe<E360App_location_menu_subSection>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_menu_subSectionPayloade360App_location_menu_subSectionArgs = {
  filter?: InputMaybe<E360App_location_menu_subSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_subSectionOrder>;
};

export type DeleteE360App_location_menu_tagPayload = {
  __typename?: 'DeleteE360App_location_menu_tagPayload';
  e360App_location_menu_tag?: Maybe<Array<Maybe<E360App_location_menu_tag>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_location_menu_tagPayloade360App_location_menu_tagArgs = {
  filter?: InputMaybe<E360App_location_menu_tagFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_tagOrder>;
};

export type DeleteE360App_notificationPayload = {
  __typename?: 'DeleteE360App_notificationPayload';
  e360App_notification?: Maybe<Array<Maybe<E360App_notification>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_notificationPayloade360App_notificationArgs = {
  filter?: InputMaybe<E360App_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_notificationOrder>;
};

export type DeleteE360App_organizationPayload = {
  __typename?: 'DeleteE360App_organizationPayload';
  e360App_organization?: Maybe<Array<Maybe<E360App_organization>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_organizationPayloade360App_organizationArgs = {
  filter?: InputMaybe<E360App_organizationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organizationOrder>;
};

export type DeleteE360App_organization_userPayload = {
  __typename?: 'DeleteE360App_organization_userPayload';
  e360App_organization_user?: Maybe<Array<Maybe<E360App_organization_user>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_organization_userPayloade360App_organization_userArgs = {
  filter?: InputMaybe<E360App_organization_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organization_userOrder>;
};

export type DeleteE360App_partnerPayload = {
  __typename?: 'DeleteE360App_partnerPayload';
  e360App_partner?: Maybe<Array<Maybe<E360App_partner>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_partnerPayloade360App_partnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partnerOrder>;
};

export type DeleteE360App_partner_webhookPayload = {
  __typename?: 'DeleteE360App_partner_webhookPayload';
  e360App_partner_webhook?: Maybe<Array<Maybe<E360App_partner_webhook>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_partner_webhookPayloade360App_partner_webhookArgs = {
  filter?: InputMaybe<E360App_partner_webhookFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partner_webhookOrder>;
};

export type DeleteE360App_shopPayload = {
  __typename?: 'DeleteE360App_shopPayload';
  e360App_shop?: Maybe<Array<Maybe<E360App_shop>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shopPayloade360App_shopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shopOrder>;
};

export type DeleteE360App_shop_contractPayload = {
  __typename?: 'DeleteE360App_shop_contractPayload';
  e360App_shop_contract?: Maybe<Array<Maybe<E360App_shop_contract>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_contractPayloade360App_shop_contractArgs = {
  filter?: InputMaybe<E360App_shop_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_contractOrder>;
};

export type DeleteE360App_shop_customer_contractPayload = {
  __typename?: 'DeleteE360App_shop_customer_contractPayload';
  e360App_shop_customer_contract?: Maybe<Array<Maybe<E360App_shop_customer_contract>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_customer_contractPayloade360App_shop_customer_contractArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractOrder>;
};

export type DeleteE360App_shop_customer_contractServicePayload = {
  __typename?: 'DeleteE360App_shop_customer_contractServicePayload';
  e360App_shop_customer_contractService?: Maybe<Array<Maybe<E360App_shop_customer_contractService>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_customer_contractServicePayloade360App_shop_customer_contractServiceArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractServiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractServiceOrder>;
};

export type DeleteE360App_shop_customer_contract_renewalPayload = {
  __typename?: 'DeleteE360App_shop_customer_contract_renewalPayload';
  e360App_shop_customer_contract_renewal?: Maybe<Array<Maybe<E360App_shop_customer_contract_renewal>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_customer_contract_renewalPayloade360App_shop_customer_contract_renewalArgs = {
  filter?: InputMaybe<E360App_shop_customer_contract_renewalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contract_renewalOrder>;
};

export type DeleteE360App_shop_operationPayload = {
  __typename?: 'DeleteE360App_shop_operationPayload';
  e360App_shop_operation?: Maybe<Array<Maybe<E360App_shop_operation>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_operationPayloade360App_shop_operationArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_operationOrder>;
};

export type DeleteE360App_shop_partner_contractPayload = {
  __typename?: 'DeleteE360App_shop_partner_contractPayload';
  e360App_shop_partner_contract?: Maybe<Array<Maybe<E360App_shop_partner_contract>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_partner_contractPayloade360App_shop_partner_contractArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_partner_contractOrder>;
};

export type DeleteE360App_shop_productItemPayload = {
  __typename?: 'DeleteE360App_shop_productItemPayload';
  e360App_shop_productItem?: Maybe<Array<Maybe<E360App_shop_productItem>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_productItemPayloade360App_shop_productItemArgs = {
  filter?: InputMaybe<E360App_shop_productItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productItemOrder>;
};

export type DeleteE360App_shop_productPayload = {
  __typename?: 'DeleteE360App_shop_productPayload';
  e360App_shop_product?: Maybe<Array<Maybe<E360App_shop_product>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_productPayloade360App_shop_productArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productOrder>;
};

export type DeleteE360App_shop_productServicePayload = {
  __typename?: 'DeleteE360App_shop_productServicePayload';
  e360App_shop_productService?: Maybe<Array<Maybe<E360App_shop_productService>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_productServicePayloade360App_shop_productServiceArgs = {
  filter?: InputMaybe<E360App_shop_productServiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productServiceOrder>;
};

export type DeleteE360App_shop_promoProductPayload = {
  __typename?: 'DeleteE360App_shop_promoProductPayload';
  e360App_shop_promoProduct?: Maybe<Array<Maybe<E360App_shop_promoProduct>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_promoProductPayloade360App_shop_promoProductArgs = {
  filter?: InputMaybe<E360App_shop_promoProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promoProductOrder>;
};

export type DeleteE360App_shop_promotionCodePayload = {
  __typename?: 'DeleteE360App_shop_promotionCodePayload';
  e360App_shop_promotionCode?: Maybe<Array<Maybe<E360App_shop_promotionCode>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_promotionCodePayloade360App_shop_promotionCodeArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionCodeOrder>;
};

export type DeleteE360App_shop_promotionPayload = {
  __typename?: 'DeleteE360App_shop_promotionPayload';
  e360App_shop_promotion?: Maybe<Array<Maybe<E360App_shop_promotion>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_promotionPayloade360App_shop_promotionArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionOrder>;
};

export type DeleteE360App_shop_purchasePayload = {
  __typename?: 'DeleteE360App_shop_purchasePayload';
  e360App_shop_purchase?: Maybe<Array<Maybe<E360App_shop_purchase>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_purchasePayloade360App_shop_purchaseArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseOrder>;
};

export type DeleteE360App_shop_purchaseProviderEventPayload = {
  __typename?: 'DeleteE360App_shop_purchaseProviderEventPayload';
  e360App_shop_purchaseProviderEvent?: Maybe<Array<Maybe<E360App_shop_purchaseProviderEvent>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_shop_purchaseProviderEventPayloade360App_shop_purchaseProviderEventArgs = {
  filter?: InputMaybe<E360App_shop_purchaseProviderEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseProviderEventOrder>;
};

export type DeleteE360App_stablishmentPayload = {
  __typename?: 'DeleteE360App_stablishmentPayload';
  e360App_stablishment?: Maybe<Array<Maybe<E360App_stablishment>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_stablishmentPayloade360App_stablishmentArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishmentOrder>;
};

export type DeleteE360App_stablishment_userPayload = {
  __typename?: 'DeleteE360App_stablishment_userPayload';
  e360App_stablishment_user?: Maybe<Array<Maybe<E360App_stablishment_user>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_stablishment_userPayloade360App_stablishment_userArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishment_userOrder>;
};

export type DeleteE360App_userLogPayload = {
  __typename?: 'DeleteE360App_userLogPayload';
  e360App_userLog?: Maybe<Array<Maybe<E360App_userLog>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_userLogPayloade360App_userLogArgs = {
  filter?: InputMaybe<E360App_userLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userLogOrder>;
};

export type DeleteE360App_userPayload = {
  __typename?: 'DeleteE360App_userPayload';
  e360App_user?: Maybe<Array<Maybe<E360App_user>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_userPayloade360App_userArgs = {
  filter?: InputMaybe<E360App_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userOrder>;
};

export type DeleteE360App_userSessionConnectionPayload = {
  __typename?: 'DeleteE360App_userSessionConnectionPayload';
  e360App_userSessionConnection?: Maybe<Array<Maybe<E360App_userSessionConnection>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_userSessionConnectionPayloade360App_userSessionConnectionArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionOrder>;
};

export type DeleteE360App_userSessionConnectionTaskPayload = {
  __typename?: 'DeleteE360App_userSessionConnectionTaskPayload';
  e360App_userSessionConnectionTask?: Maybe<Array<Maybe<E360App_userSessionConnectionTask>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_userSessionConnectionTaskPayloade360App_userSessionConnectionTaskArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionTaskOrder>;
};

export type DeleteE360App_userSessionPayload = {
  __typename?: 'DeleteE360App_userSessionPayload';
  e360App_userSession?: Maybe<Array<Maybe<E360App_userSession>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_userSessionPayloade360App_userSessionArgs = {
  filter?: InputMaybe<E360App_userSessionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionOrder>;
};

export type DeleteE360App_userSessionTaskPayload = {
  __typename?: 'DeleteE360App_userSessionTaskPayload';
  e360App_userSessionTask?: Maybe<Array<Maybe<E360App_userSessionTask>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_userSessionTaskPayloade360App_userSessionTaskArgs = {
  filter?: InputMaybe<E360App_userSessionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionTaskOrder>;
};

export type DeleteE360App_user_notificationPayload = {
  __typename?: 'DeleteE360App_user_notificationPayload';
  e360App_user_notification?: Maybe<Array<Maybe<E360App_user_notification>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_user_notificationPayloade360App_user_notificationArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_notificationOrder>;
};

export type DeleteE360App_user_partnerPayload = {
  __typename?: 'DeleteE360App_user_partnerPayload';
  e360App_user_partner?: Maybe<Array<Maybe<E360App_user_partner>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360App_user_partnerPayloade360App_user_partnerArgs = {
  filter?: InputMaybe<E360App_user_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_partnerOrder>;
};

export type DeleteE360Storage_filePayload = {
  __typename?: 'DeleteE360Storage_filePayload';
  e360Storage_file?: Maybe<Array<Maybe<E360Storage_file>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteE360Storage_filePayloade360Storage_fileArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360Storage_fileOrder>;
};

export type DeleteERP_PACKAGEPayload = {
  __typename?: 'DeleteERP_PACKAGEPayload';
  eRP_PACKAGE?: Maybe<Array<Maybe<ERP_PACKAGE>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_PACKAGEPayloadeRP_PACKAGEArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_PACKAGEOrder>;
};

export type DeleteERP_accountEventPayload = {
  __typename?: 'DeleteERP_accountEventPayload';
  eRP_accountEvent?: Maybe<Array<Maybe<ERP_accountEvent>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_accountEventPayloadeRP_accountEventArgs = {
  filter?: InputMaybe<ERP_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteERP_accountPayload = {
  __typename?: 'DeleteERP_accountPayload';
  eRP_account?: Maybe<Array<Maybe<ERP_account>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_accountPayloadeRP_accountArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteERP_accountingAccountPayload = {
  __typename?: 'DeleteERP_accountingAccountPayload';
  eRP_accountingAccount?: Maybe<Array<Maybe<ERP_accountingAccount>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_accountingAccountPayloadeRP_accountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_accountingAccountOrder>;
};

export type DeleteERP_contactActionPayload = {
  __typename?: 'DeleteERP_contactActionPayload';
  eRP_contactAction?: Maybe<Array<Maybe<ERP_contactAction>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_contactActionPayloadeRP_contactActionArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactActionOrder>;
};

export type DeleteERP_contactPayload = {
  __typename?: 'DeleteERP_contactPayload';
  eRP_contact?: Maybe<Array<Maybe<ERP_contact>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_contactPayloadeRP_contactArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteERP_contactSeriePayload = {
  __typename?: 'DeleteERP_contactSeriePayload';
  eRP_contactSerie?: Maybe<Array<Maybe<ERP_contactSerie>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_contactSeriePayloadeRP_contactSerieArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactSerieOrder>;
};

export type DeleteERP_eventPayload = {
  __typename?: 'DeleteERP_eventPayload';
  eRP_event?: Maybe<Array<Maybe<ERP_event>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_eventPayloadeRP_eventArgs = {
  filter?: InputMaybe<ERP_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteERP_invoiceItemPayload = {
  __typename?: 'DeleteERP_invoiceItemPayload';
  eRP_invoiceItem?: Maybe<Array<Maybe<ERP_invoiceItem>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_invoiceItemPayloadeRP_invoiceItemArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceItemOrder>;
};

export type DeleteERP_invoiceNotePayload = {
  __typename?: 'DeleteERP_invoiceNotePayload';
  eRP_invoiceNote?: Maybe<Array<Maybe<ERP_invoiceNote>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_invoiceNotePayloadeRP_invoiceNoteArgs = {
  filter?: InputMaybe<ERP_invoiceNoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceNoteOrder>;
};

export type DeleteERP_invoicePayload = {
  __typename?: 'DeleteERP_invoicePayload';
  eRP_invoice?: Maybe<Array<Maybe<ERP_invoice>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_invoicePayloadeRP_invoiceArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceOrder>;
};

export type DeleteERP_organizationBillingInfoPayload = {
  __typename?: 'DeleteERP_organizationBillingInfoPayload';
  eRP_organizationBillingInfo?: Maybe<Array<Maybe<ERP_organizationBillingInfo>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_organizationBillingInfoPayloadeRP_organizationBillingInfoArgs = {
  filter?: InputMaybe<ERP_organizationBillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_organizationBillingInfoOrder>;
};

export type DeleteERP_paymentPlanPayload = {
  __typename?: 'DeleteERP_paymentPlanPayload';
  eRP_paymentPlan?: Maybe<Array<Maybe<ERP_paymentPlan>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_paymentPlanPayloadeRP_paymentPlanArgs = {
  filter?: InputMaybe<ERP_paymentPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_paymentPlanOrder>;
};

export type DeleteERP_productPayload = {
  __typename?: 'DeleteERP_productPayload';
  eRP_product?: Maybe<Array<Maybe<ERP_product>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_productPayloadeRP_productArgs = {
  filter?: InputMaybe<ERP_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteERP_resourcePayload = {
  __typename?: 'DeleteERP_resourcePayload';
  eRP_resource?: Maybe<Array<Maybe<ERP_resource>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_resourcePayloadeRP_resourceArgs = {
  filter?: InputMaybe<ERP_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteERP_rolePayload = {
  __typename?: 'DeleteERP_rolePayload';
  eRP_role?: Maybe<Array<Maybe<ERP_role>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_rolePayloadeRP_roleArgs = {
  filter?: InputMaybe<ERP_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteERP_seatLinePayload = {
  __typename?: 'DeleteERP_seatLinePayload';
  eRP_seatLine?: Maybe<Array<Maybe<ERP_seatLine>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_seatLinePayloadeRP_seatLineArgs = {
  filter?: InputMaybe<ERP_seatLineFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatLineOrder>;
};

export type DeleteERP_seatPayload = {
  __typename?: 'DeleteERP_seatPayload';
  eRP_seat?: Maybe<Array<Maybe<ERP_seat>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_seatPayloadeRP_seatArgs = {
  filter?: InputMaybe<ERP_seatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatOrder>;
};

export type DeleteERP_taxPayload = {
  __typename?: 'DeleteERP_taxPayload';
  eRP_tax?: Maybe<Array<Maybe<ERP_tax>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_taxPayloadeRP_taxArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_taxOrder>;
};

export type DeleteERP_withholdingPayload = {
  __typename?: 'DeleteERP_withholdingPayload';
  eRP_withholding?: Maybe<Array<Maybe<ERP_withholding>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteERP_withholdingPayloadeRP_withholdingArgs = {
  filter?: InputMaybe<ERP_withholdingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_withholdingOrder>;
};

export type DeleteEmailEditorPayload = {
  __typename?: 'DeleteEmailEditorPayload';
  emailEditor?: Maybe<Array<Maybe<EmailEditor>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteEmailEditorPayloademailEditorArgs = {
  filter?: InputMaybe<EmailEditorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteEmailEditor_templatePayload = {
  __typename?: 'DeleteEmailEditor_templatePayload';
  emailEditor_template?: Maybe<Array<Maybe<EmailEditor_template>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteEmailEditor_templatePayloademailEditor_templateArgs = {
  filter?: InputMaybe<EmailEditor_templateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailEditor_templateOrder>;
};

export type DeleteEmailPayload = {
  __typename?: 'DeleteEmailPayload';
  email?: Maybe<Array<Maybe<Email>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteEmailPayloademailArgs = {
  filter?: InputMaybe<EmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailOrder>;
};

export type DeleteEmail_attachmentPayload = {
  __typename?: 'DeleteEmail_attachmentPayload';
  email_attachment?: Maybe<Array<Maybe<Email_attachment>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteEmail_attachmentPayloademail_attachmentArgs = {
  filter?: InputMaybe<Email_attachmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteEmail_fromPayload = {
  __typename?: 'DeleteEmail_fromPayload';
  email_from?: Maybe<Array<Maybe<Email_from>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteEmail_fromPayloademail_fromArgs = {
  filter?: InputMaybe<Email_fromFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Email_fromOrder>;
};

export type DeleteEmail_toPayload = {
  __typename?: 'DeleteEmail_toPayload';
  email_to?: Maybe<Array<Maybe<Email_to>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteEmail_toPayloademail_toArgs = {
  filter?: InputMaybe<Email_toFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Email_toOrder>;
};

export type DeleteEventPayload = {
  __typename?: 'DeleteEventPayload';
  event?: Maybe<Array<Maybe<Event>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteEventPayloadeventArgs = {
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EventOrder>;
};

export type DeleteExternalAPI_keyPayload = {
  __typename?: 'DeleteExternalAPI_keyPayload';
  externalAPI_key?: Maybe<Array<Maybe<ExternalAPI_key>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteExternalAPI_keyPayloadexternalAPI_keyArgs = {
  filter?: InputMaybe<ExternalAPI_keyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ExternalAPI_keyOrder>;
};

export type DeleteFormBuilderPayload = {
  __typename?: 'DeleteFormBuilderPayload';
  formBuilder?: Maybe<Array<Maybe<FormBuilder>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteFormBuilderPayloadformBuilderArgs = {
  filter?: InputMaybe<FormBuilderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteFormBuilder_formPayload = {
  __typename?: 'DeleteFormBuilder_formPayload';
  formBuilder_form?: Maybe<Array<Maybe<FormBuilder_form>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteFormBuilder_formPayloadformBuilder_formArgs = {
  filter?: InputMaybe<FormBuilder_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_formOrder>;
};

export type DeleteFormBuilder_inputBooleanPayload = {
  __typename?: 'DeleteFormBuilder_inputBooleanPayload';
  formBuilder_inputBoolean?: Maybe<Array<Maybe<FormBuilder_inputBoolean>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteFormBuilder_inputBooleanPayloadformBuilder_inputBooleanArgs = {
  filter?: InputMaybe<FormBuilder_inputBooleanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteFormBuilder_inputMultipleChoiceOptionPayload = {
  __typename?: 'DeleteFormBuilder_inputMultipleChoiceOptionPayload';
  formBuilder_inputMultipleChoiceOption?: Maybe<Array<Maybe<FormBuilder_inputMultipleChoiceOption>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteFormBuilder_inputMultipleChoiceOptionPayloadformBuilder_inputMultipleChoiceOptionArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputMultipleChoiceOptionOrder>;
};

export type DeleteFormBuilder_inputMultipleChoicePayload = {
  __typename?: 'DeleteFormBuilder_inputMultipleChoicePayload';
  formBuilder_inputMultipleChoice?: Maybe<Array<Maybe<FormBuilder_inputMultipleChoice>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteFormBuilder_inputMultipleChoicePayloadformBuilder_inputMultipleChoiceArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteFormBuilder_inputNumberPayload = {
  __typename?: 'DeleteFormBuilder_inputNumberPayload';
  formBuilder_inputNumber?: Maybe<Array<Maybe<FormBuilder_inputNumber>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteFormBuilder_inputNumberPayloadformBuilder_inputNumberArgs = {
  filter?: InputMaybe<FormBuilder_inputNumberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputNumberOrder>;
};

export type DeleteFormBuilder_inputPayload = {
  __typename?: 'DeleteFormBuilder_inputPayload';
  formBuilder_input?: Maybe<Array<Maybe<FormBuilder_input>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteFormBuilder_inputPayloadformBuilder_inputArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputOrder>;
};

export type DeleteFormBuilder_inputTextPayload = {
  __typename?: 'DeleteFormBuilder_inputTextPayload';
  formBuilder_inputText?: Maybe<Array<Maybe<FormBuilder_inputText>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteFormBuilder_inputTextPayloadformBuilder_inputTextArgs = {
  filter?: InputMaybe<FormBuilder_inputTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputTextOrder>;
};

export type DeleteGeneralAccountingAccountPayload = {
  __typename?: 'DeleteGeneralAccountingAccountPayload';
  generalAccountingAccount?: Maybe<Array<Maybe<GeneralAccountingAccount>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteGeneralAccountingAccountPayloadgeneralAccountingAccountArgs = {
  filter?: InputMaybe<GeneralAccountingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<GeneralAccountingAccountOrder>;
};

export type DeleteImportProcessPayload = {
  __typename?: 'DeleteImportProcessPayload';
  importProcess?: Maybe<Array<Maybe<ImportProcess>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteImportProcessPayloadimportProcessArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcessOrder>;
};

export type DeleteImportProcess_elementFieldPayload = {
  __typename?: 'DeleteImportProcess_elementFieldPayload';
  importProcess_elementField?: Maybe<Array<Maybe<ImportProcess_elementField>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteImportProcess_elementFieldPayloadimportProcess_elementFieldArgs = {
  filter?: InputMaybe<ImportProcess_elementFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteImportProcess_itemErrorPayload = {
  __typename?: 'DeleteImportProcess_itemErrorPayload';
  importProcess_itemError?: Maybe<Array<Maybe<ImportProcess_itemError>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteImportProcess_itemErrorPayloadimportProcess_itemErrorArgs = {
  filter?: InputMaybe<ImportProcess_itemErrorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteImportProcess_itemPayload = {
  __typename?: 'DeleteImportProcess_itemPayload';
  importProcess_item?: Maybe<Array<Maybe<ImportProcess_item>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteImportProcess_itemPayloadimportProcess_itemArgs = {
  filter?: InputMaybe<ImportProcess_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemOrder>;
};

export type DeleteImportProcess_itemValuePayload = {
  __typename?: 'DeleteImportProcess_itemValuePayload';
  importProcess_itemValue?: Maybe<Array<Maybe<ImportProcess_itemValue>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteImportProcess_itemValuePayloadimportProcess_itemValueArgs = {
  filter?: InputMaybe<ImportProcess_itemValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemValueOrder>;
};

export type DeleteImportProcess_matchPayload = {
  __typename?: 'DeleteImportProcess_matchPayload';
  importProcess_match?: Maybe<Array<Maybe<ImportProcess_match>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteImportProcess_matchPayloadimportProcess_matchArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_matchOrder>;
};

export type DeleteImportProcess_sourceValuePayload = {
  __typename?: 'DeleteImportProcess_sourceValuePayload';
  importProcess_sourceValue?: Maybe<Array<Maybe<ImportProcess_sourceValue>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteImportProcess_sourceValuePayloadimportProcess_sourceValueArgs = {
  filter?: InputMaybe<ImportProcess_sourceValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_sourceValueOrder>;
};

export type DeleteInboxPayload = {
  __typename?: 'DeleteInboxPayload';
  inbox?: Maybe<Array<Maybe<Inbox>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteInboxPayloadinboxArgs = {
  filter?: InputMaybe<InboxFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<InboxOrder>;
};

export type DeleteInbox_itemPayload = {
  __typename?: 'DeleteInbox_itemPayload';
  inbox_item?: Maybe<Array<Maybe<Inbox_item>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteInbox_itemPayloadinbox_itemArgs = {
  filter?: InputMaybe<Inbox_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Inbox_itemOrder>;
};

export type DeleteIntegrationsPayload = {
  __typename?: 'DeleteIntegrationsPayload';
  integrations?: Maybe<Array<Maybe<Integrations>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrationsPayloadintegrationsArgs = {
  filter?: InputMaybe<IntegrationsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteIntegrations_Digilab_ProviderPayload = {
  __typename?: 'DeleteIntegrations_Digilab_ProviderPayload';
  integrations_Digilab_Provider?: Maybe<Array<Maybe<Integrations_Digilab_Provider>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_Digilab_ProviderPayloadintegrations_Digilab_ProviderArgs = {
  filter?: InputMaybe<Integrations_Digilab_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Digilab_ProviderOrder>;
};

export type DeleteIntegrations_Google_Analytics_ProviderPayload = {
  __typename?: 'DeleteIntegrations_Google_Analytics_ProviderPayload';
  integrations_Google_Analytics_Provider?: Maybe<Array<Maybe<Integrations_Google_Analytics_Provider>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_Google_Analytics_ProviderPayloadintegrations_Google_Analytics_ProviderArgs = {
  filter?: InputMaybe<Integrations_Google_Analytics_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Google_Analytics_ProviderOrder>;
};

export type DeleteIntegrations_Google_ProviderPayload = {
  __typename?: 'DeleteIntegrations_Google_ProviderPayload';
  integrations_Google_Provider?: Maybe<Array<Maybe<Integrations_Google_Provider>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_Google_ProviderPayloadintegrations_Google_ProviderArgs = {
  filter?: InputMaybe<Integrations_Google_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Google_ProviderOrder>;
};

export type DeleteIntegrations_Link_Mobility_ProviderPayload = {
  __typename?: 'DeleteIntegrations_Link_Mobility_ProviderPayload';
  integrations_Link_Mobility_Provider?: Maybe<Array<Maybe<Integrations_Link_Mobility_Provider>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_Link_Mobility_ProviderPayloadintegrations_Link_Mobility_ProviderArgs = {
  filter?: InputMaybe<Integrations_Link_Mobility_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Link_Mobility_ProviderOrder>;
};

export type DeleteIntegrations_LinkedIn_ProviderPayload = {
  __typename?: 'DeleteIntegrations_LinkedIn_ProviderPayload';
  integrations_LinkedIn_Provider?: Maybe<Array<Maybe<Integrations_LinkedIn_Provider>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_LinkedIn_ProviderPayloadintegrations_LinkedIn_ProviderArgs = {
  filter?: InputMaybe<Integrations_LinkedIn_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_LinkedIn_ProviderOrder>;
};

export type DeleteIntegrations_MSFT_MeetingPayload = {
  __typename?: 'DeleteIntegrations_MSFT_MeetingPayload';
  integrations_MSFT_Meeting?: Maybe<Array<Maybe<Integrations_MSFT_Meeting>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_MSFT_MeetingPayloadintegrations_MSFT_MeetingArgs = {
  filter?: InputMaybe<Integrations_MSFT_MeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_MSFT_MeetingOrder>;
};

export type DeleteIntegrations_MSFT_ProviderPayload = {
  __typename?: 'DeleteIntegrations_MSFT_ProviderPayload';
  integrations_MSFT_Provider?: Maybe<Array<Maybe<Integrations_MSFT_Provider>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_MSFT_ProviderPayloadintegrations_MSFT_ProviderArgs = {
  filter?: InputMaybe<Integrations_MSFT_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_MSFT_ProviderOrder>;
};

export type DeleteIntegrations_Meta_ProviderPayload = {
  __typename?: 'DeleteIntegrations_Meta_ProviderPayload';
  integrations_Meta_Provider?: Maybe<Array<Maybe<Integrations_Meta_Provider>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_Meta_ProviderPayloadintegrations_Meta_ProviderArgs = {
  filter?: InputMaybe<Integrations_Meta_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Meta_ProviderOrder>;
};

export type DeleteIntegrations_SendGrid_ProviderPayload = {
  __typename?: 'DeleteIntegrations_SendGrid_ProviderPayload';
  integrations_SendGrid_Provider?: Maybe<Array<Maybe<Integrations_SendGrid_Provider>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_SendGrid_ProviderPayloadintegrations_SendGrid_ProviderArgs = {
  filter?: InputMaybe<Integrations_SendGrid_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_SendGrid_ProviderOrder>;
};

export type DeleteIntegrations_Sendgrid_emailEventPayload = {
  __typename?: 'DeleteIntegrations_Sendgrid_emailEventPayload';
  integrations_Sendgrid_emailEvent?: Maybe<Array<Maybe<Integrations_Sendgrid_emailEvent>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_Sendgrid_emailEventPayloadintegrations_Sendgrid_emailEventArgs = {
  filter?: InputMaybe<Integrations_Sendgrid_emailEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Sendgrid_emailEventOrder>;
};

export type DeleteIntegrations_accountPayload = {
  __typename?: 'DeleteIntegrations_accountPayload';
  integrations_account?: Maybe<Array<Maybe<Integrations_account>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_accountPayloadintegrations_accountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_accountOrder>;
};

export type DeleteIntegrations_carrefour_operartionsLogPayload = {
  __typename?: 'DeleteIntegrations_carrefour_operartionsLogPayload';
  integrations_carrefour_operartionsLog?: Maybe<Array<Maybe<Integrations_carrefour_operartionsLog>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteIntegrations_carrefour_operartionsLogPayloadintegrations_carrefour_operartionsLogArgs = {
  filter?: InputMaybe<Integrations_carrefour_operartionsLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_carrefour_operartionsLogOrder>;
};

export type DeleteJobPositionPayload = {
  __typename?: 'DeleteJobPositionPayload';
  jobPosition?: Maybe<Array<Maybe<JobPosition>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteJobPositionPayloadjobPositionArgs = {
  filter?: InputMaybe<JobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<JobPositionOrder>;
};

export type DeleteLMS_PACKAGEPayload = {
  __typename?: 'DeleteLMS_PACKAGEPayload';
  lMS_PACKAGE?: Maybe<Array<Maybe<LMS_PACKAGE>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_PACKAGEPayloadlMS_PACKAGEArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_PACKAGEOrder>;
};

export type DeleteLMS_accountLogDetailPayload = {
  __typename?: 'DeleteLMS_accountLogDetailPayload';
  lMS_accountLogDetail?: Maybe<Array<Maybe<LMS_accountLogDetail>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_accountLogDetailPayloadlMS_accountLogDetailArgs = {
  filter?: InputMaybe<LMS_accountLogDetailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountLogDetailOrder>;
};

export type DeleteLMS_accountLogPayload = {
  __typename?: 'DeleteLMS_accountLogPayload';
  lMS_accountLog?: Maybe<Array<Maybe<LMS_accountLog>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_accountLogPayloadlMS_accountLogArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteLMS_accountPayload = {
  __typename?: 'DeleteLMS_accountPayload';
  lMS_account?: Maybe<Array<Maybe<LMS_account>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_accountPayloadlMS_accountArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};

export type DeleteLMS_blockPayload = {
  __typename?: 'DeleteLMS_blockPayload';
  lMS_block?: Maybe<Array<Maybe<LMS_block>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_blockPayloadlMS_blockArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockOrder>;
};

export type DeleteLMS_blockStudentProgressPayload = {
  __typename?: 'DeleteLMS_blockStudentProgressPayload';
  lMS_blockStudentProgress?: Maybe<Array<Maybe<LMS_blockStudentProgress>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_blockStudentProgressPayloadlMS_blockStudentProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockStudentProgressOrder>;
};

export type DeleteLMS_contactPayload = {
  __typename?: 'DeleteLMS_contactPayload';
  lMS_contact?: Maybe<Array<Maybe<LMS_contact>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_contactPayloadlMS_contactArgs = {
  filter?: InputMaybe<LMS_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_contactOrder>;
};

export type DeleteLMS_courseCategoryPayload = {
  __typename?: 'DeleteLMS_courseCategoryPayload';
  lMS_courseCategory?: Maybe<Array<Maybe<LMS_courseCategory>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_courseCategoryPayloadlMS_courseCategoryArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseCategoryOrder>;
};

export type DeleteLMS_coursePayload = {
  __typename?: 'DeleteLMS_coursePayload';
  lMS_course?: Maybe<Array<Maybe<LMS_course>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_coursePayloadlMS_courseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseOrder>;
};

export type DeleteLMS_courseStudentProgressPayload = {
  __typename?: 'DeleteLMS_courseStudentProgressPayload';
  lMS_courseStudentProgress?: Maybe<Array<Maybe<LMS_courseStudentProgress>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_courseStudentProgressPayloadlMS_courseStudentProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseStudentProgressOrder>;
};

export type DeleteLMS_courseVersionPayload = {
  __typename?: 'DeleteLMS_courseVersionPayload';
  lMS_courseVersion?: Maybe<Array<Maybe<LMS_courseVersion>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_courseVersionPayloadlMS_courseVersionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseVersionOrder>;
};

export type DeleteLMS_formPayload = {
  __typename?: 'DeleteLMS_formPayload';
  lMS_form?: Maybe<Array<Maybe<LMS_form>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_formPayloadlMS_formArgs = {
  filter?: InputMaybe<LMS_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formOrder>;
};

export type DeleteLMS_formStudentProgressPayload = {
  __typename?: 'DeleteLMS_formStudentProgressPayload';
  lMS_formStudentProgress?: Maybe<Array<Maybe<LMS_formStudentProgress>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_formStudentProgressPayloadlMS_formStudentProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};

export type DeleteLMS_groupAccountFormAnswerPayload = {
  __typename?: 'DeleteLMS_groupAccountFormAnswerPayload';
  lMS_groupAccountFormAnswer?: Maybe<Array<Maybe<LMS_groupAccountFormAnswer>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupAccountFormAnswerPayloadlMS_groupAccountFormAnswerArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAnswerOrder>;
};

export type DeleteLMS_groupAccountFormAttemptPayload = {
  __typename?: 'DeleteLMS_groupAccountFormAttemptPayload';
  lMS_groupAccountFormAttempt?: Maybe<Array<Maybe<LMS_groupAccountFormAttempt>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupAccountFormAttemptPayloadlMS_groupAccountFormAttemptArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAttemptOrder>;
};

export type DeleteLMS_groupAccountPayload = {
  __typename?: 'DeleteLMS_groupAccountPayload';
  lMS_groupAccount?: Maybe<Array<Maybe<LMS_groupAccount>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupAccountPayloadlMS_groupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountOrder>;
};

export type DeleteLMS_groupBlockConfigPayload = {
  __typename?: 'DeleteLMS_groupBlockConfigPayload';
  lMS_groupBlockConfig?: Maybe<Array<Maybe<LMS_groupBlockConfig>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupBlockConfigPayloadlMS_groupBlockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupBlockConfigOrder>;
};

export type DeleteLMS_groupCourseConfigPayload = {
  __typename?: 'DeleteLMS_groupCourseConfigPayload';
  lMS_groupCourseConfig?: Maybe<Array<Maybe<LMS_groupCourseConfig>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupCourseConfigPayloadlMS_groupCourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupCourseConfigOrder>;
};

export type DeleteLMS_groupFormConfigCalculationPayload = {
  __typename?: 'DeleteLMS_groupFormConfigCalculationPayload';
  lMS_groupFormConfigCalculation?: Maybe<Array<Maybe<LMS_groupFormConfigCalculation>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupFormConfigCalculationPayloadlMS_groupFormConfigCalculationArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationOrder>;
};

export type DeleteLMS_groupFormConfigCalculationRangePayload = {
  __typename?: 'DeleteLMS_groupFormConfigCalculationRangePayload';
  lMS_groupFormConfigCalculationRange?: Maybe<Array<Maybe<LMS_groupFormConfigCalculationRange>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupFormConfigCalculationRangePayloadlMS_groupFormConfigCalculationRangeArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationRangeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationRangeOrder>;
};

export type DeleteLMS_groupFormConfigPayload = {
  __typename?: 'DeleteLMS_groupFormConfigPayload';
  lMS_groupFormConfig?: Maybe<Array<Maybe<LMS_groupFormConfig>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupFormConfigPayloadlMS_groupFormConfigArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};

export type DeleteLMS_groupLessonConfigPayload = {
  __typename?: 'DeleteLMS_groupLessonConfigPayload';
  lMS_groupLessonConfig?: Maybe<Array<Maybe<LMS_groupLessonConfig>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupLessonConfigPayloadlMS_groupLessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonConfigOrder>;
};

export type DeleteLMS_groupLessonMeetingConfigPayload = {
  __typename?: 'DeleteLMS_groupLessonMeetingConfigPayload';
  lMS_groupLessonMeetingConfig?: Maybe<Array<Maybe<LMS_groupLessonMeetingConfig>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupLessonMeetingConfigPayloadlMS_groupLessonMeetingConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteLMS_groupLessonTeacherConfigPayload = {
  __typename?: 'DeleteLMS_groupLessonTeacherConfigPayload';
  lMS_groupLessonTeacherConfig?: Maybe<Array<Maybe<LMS_groupLessonTeacherConfig>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupLessonTeacherConfigPayloadlMS_groupLessonTeacherConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};

export type DeleteLMS_groupPayload = {
  __typename?: 'DeleteLMS_groupPayload';
  lMS_group?: Maybe<Array<Maybe<LMS_group>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupPayloadlMS_groupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupOrder>;
};

export type DeleteLMS_groupResourceConfigPayload = {
  __typename?: 'DeleteLMS_groupResourceConfigPayload';
  lMS_groupResourceConfig?: Maybe<Array<Maybe<LMS_groupResourceConfig>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_groupResourceConfigPayloadlMS_groupResourceConfigArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};

export type DeleteLMS_lessonPayload = {
  __typename?: 'DeleteLMS_lessonPayload';
  lMS_lesson?: Maybe<Array<Maybe<LMS_lesson>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_lessonPayloadlMS_lessonArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonOrder>;
};

export type DeleteLMS_lessonStudentProgressPayload = {
  __typename?: 'DeleteLMS_lessonStudentProgressPayload';
  lMS_lessonStudentProgress?: Maybe<Array<Maybe<LMS_lessonStudentProgress>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_lessonStudentProgressPayloadlMS_lessonStudentProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonStudentProgressOrder>;
};

export type DeleteLMS_meetingStudentProgressPayload = {
  __typename?: 'DeleteLMS_meetingStudentProgressPayload';
  lMS_meetingStudentProgress?: Maybe<Array<Maybe<LMS_meetingStudentProgress>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_meetingStudentProgressPayloadlMS_meetingStudentProgressArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_meetingStudentProgressOrder>;
};

export type DeleteLMS_productPayload = {
  __typename?: 'DeleteLMS_productPayload';
  lMS_product?: Maybe<Array<Maybe<LMS_product>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_productPayloadlMS_productArgs = {
  filter?: InputMaybe<LMS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_productOrder>;
};

export type DeleteLMS_resourcePayload = {
  __typename?: 'DeleteLMS_resourcePayload';
  lMS_resource?: Maybe<Array<Maybe<LMS_resource>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_resourcePayloadlMS_resourceArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};

export type DeleteLMS_resourceStudentProgressPayload = {
  __typename?: 'DeleteLMS_resourceStudentProgressPayload';
  lMS_resourceStudentProgress?: Maybe<Array<Maybe<LMS_resourceStudentProgress>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_resourceStudentProgressPayloadlMS_resourceStudentProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};

export type DeleteLMS_resourceStudentVideoReportPayload = {
  __typename?: 'DeleteLMS_resourceStudentVideoReportPayload';
  lMS_resourceStudentVideoReport?: Maybe<Array<Maybe<LMS_resourceStudentVideoReport>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_resourceStudentVideoReportPayloadlMS_resourceStudentVideoReportArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReportOrder>;
};

export type DeleteLMS_resourceStudentVideoReport_intervalPayload = {
  __typename?: 'DeleteLMS_resourceStudentVideoReport_intervalPayload';
  lMS_resourceStudentVideoReport_interval?: Maybe<Array<Maybe<LMS_resourceStudentVideoReport_interval>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_resourceStudentVideoReport_intervalPayloadlMS_resourceStudentVideoReport_intervalArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReport_intervalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReport_intervalOrder>;
};

export type DeleteLMS_sectionPayload = {
  __typename?: 'DeleteLMS_sectionPayload';
  lMS_section?: Maybe<Array<Maybe<LMS_section>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_sectionPayloadlMS_sectionArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_sectionOrder>;
};

export type DeleteLMS_thumbnailPayload = {
  __typename?: 'DeleteLMS_thumbnailPayload';
  lMS_thumbnail?: Maybe<Array<Maybe<LMS_thumbnail>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLMS_thumbnailPayloadlMS_thumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_thumbnailOrder>;
};

export type DeleteLogger_logPayload = {
  __typename?: 'DeleteLogger_logPayload';
  logger_log?: Maybe<Array<Maybe<Logger_log>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLogger_logPayloadlogger_logArgs = {
  filter?: InputMaybe<Logger_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Logger_logOrder>;
};

export type DeleteLoginProviderPayload = {
  __typename?: 'DeleteLoginProviderPayload';
  loginProvider?: Maybe<Array<Maybe<LoginProvider>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteLoginProviderPayloadloginProviderArgs = {
  filter?: InputMaybe<LoginProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LoginProviderOrder>;
};

export type DeleteMeetingAccountPayload = {
  __typename?: 'DeleteMeetingAccountPayload';
  meetingAccount?: Maybe<Array<Maybe<MeetingAccount>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteMeetingAccountPayloadmeetingAccountArgs = {
  filter?: InputMaybe<MeetingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingAccountOrder>;
};

export type DeleteMeetingDoctors_userPayload = {
  __typename?: 'DeleteMeetingDoctors_userPayload';
  meetingDoctors_user?: Maybe<Array<Maybe<MeetingDoctors_user>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteMeetingDoctors_userPayloadmeetingDoctors_userArgs = {
  filter?: InputMaybe<MeetingDoctors_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingDoctors_userOrder>;
};

export type DeleteMeetingPayload = {
  __typename?: 'DeleteMeetingPayload';
  meeting?: Maybe<Array<Maybe<Meeting>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteMeetingPayloadmeetingArgs = {
  filter?: InputMaybe<MeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingOrder>;
};

export type DeleteMeetingProviderPayload = {
  __typename?: 'DeleteMeetingProviderPayload';
  meetingProvider?: Maybe<Array<Maybe<MeetingProvider>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteMeetingProviderPayloadmeetingProviderArgs = {
  filter?: InputMaybe<MeetingProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingProviderOrder>;
};

export type DeleteNavigationPayload = {
  __typename?: 'DeleteNavigationPayload';
  msg?: Maybe<Scalars['String']>;
  navigation?: Maybe<Array<Maybe<Navigation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteNavigationPayloadnavigationArgs = {
  filter?: InputMaybe<NavigationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteNavigation_routePayload = {
  __typename?: 'DeleteNavigation_routePayload';
  msg?: Maybe<Scalars['String']>;
  navigation_route?: Maybe<Array<Maybe<Navigation_route>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteNavigation_routePayloadnavigation_routeArgs = {
  filter?: InputMaybe<Navigation_routeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Navigation_routeOrder>;
};

export type DeleteORG_PACKAGEPayload = {
  __typename?: 'DeleteORG_PACKAGEPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  oRG_PACKAGE?: Maybe<Array<Maybe<ORG_PACKAGE>>>;
};


export type DeleteORG_PACKAGEPayloadoRG_PACKAGEArgs = {
  filter?: InputMaybe<ORG_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_PACKAGEOrder>;
};

export type DeleteORG_accountPayload = {
  __typename?: 'DeleteORG_accountPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  oRG_account?: Maybe<Array<Maybe<ORG_account>>>;
};


export type DeleteORG_accountPayloadoRG_accountArgs = {
  filter?: InputMaybe<ORG_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_accountOrder>;
};

export type DeleteORG_rolePayload = {
  __typename?: 'DeleteORG_rolePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  oRG_role?: Maybe<Array<Maybe<ORG_role>>>;
};


export type DeleteORG_rolePayloadoRG_roleArgs = {
  filter?: InputMaybe<ORG_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_roleOrder>;
};

export type DeleteOrg360Payload = {
  __typename?: 'DeleteOrg360Payload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  org360?: Maybe<Array<Maybe<Org360>>>;
};


export type DeleteOrg360Payloadorg360Args = {
  filter?: InputMaybe<Org360Filter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Org360Order>;
};

export type DeleteOrg360_themePayload = {
  __typename?: 'DeleteOrg360_themePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  org360_theme?: Maybe<Array<Maybe<Org360_theme>>>;
};


export type DeleteOrg360_themePayloadorg360_themeArgs = {
  filter?: InputMaybe<Org360_themeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Org360_themeOrder>;
};

export type DeleteOrgDomainPayload = {
  __typename?: 'DeleteOrgDomainPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  orgDomain?: Maybe<Array<Maybe<OrgDomain>>>;
};


export type DeleteOrgDomainPayloadorgDomainArgs = {
  filter?: InputMaybe<OrgDomainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<OrgDomainOrder>;
};

export type DeleteOrgPayload = {
  __typename?: 'DeleteOrgPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  org?: Maybe<Array<Maybe<Org>>>;
};


export type DeleteOrgPayloadorgArgs = {
  filter?: InputMaybe<OrgFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<OrgOrder>;
};

export type DeleteOrganization_departmentPayload = {
  __typename?: 'DeleteOrganization_departmentPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  organization_department?: Maybe<Array<Maybe<Organization_department>>>;
};


export type DeleteOrganization_departmentPayloadorganization_departmentArgs = {
  filter?: InputMaybe<Organization_departmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Organization_departmentOrder>;
};

export type DeletePETPASS_APPPayload = {
  __typename?: 'DeletePETPASS_APPPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_APP?: Maybe<Array<Maybe<PETPASS_APP>>>;
};


export type DeletePETPASS_APPPayloadpETPASS_APPArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_APPOrder>;
};

export type DeletePETPASS_bannerPayload = {
  __typename?: 'DeletePETPASS_bannerPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_banner?: Maybe<Array<Maybe<PETPASS_banner>>>;
};


export type DeletePETPASS_bannerPayloadpETPASS_bannerArgs = {
  filter?: InputMaybe<PETPASS_bannerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_bannerOrder>;
};

export type DeletePETPASS_contractPayload = {
  __typename?: 'DeletePETPASS_contractPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_contract?: Maybe<Array<Maybe<PETPASS_contract>>>;
};


export type DeletePETPASS_contractPayloadpETPASS_contractArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_contractOrder>;
};

export type DeletePETPASS_filePayload = {
  __typename?: 'DeletePETPASS_filePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_file?: Maybe<Array<Maybe<PETPASS_file>>>;
};


export type DeletePETPASS_filePayloadpETPASS_fileArgs = {
  filter?: InputMaybe<PETPASS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_fileOrder>;
};

export type DeletePETPASS_insurancePayload = {
  __typename?: 'DeletePETPASS_insurancePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_insurance?: Maybe<Array<Maybe<PETPASS_insurance>>>;
};


export type DeletePETPASS_insurancePayloadpETPASS_insuranceArgs = {
  filter?: InputMaybe<PETPASS_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insuranceOrder>;
};

export type DeletePETPASS_insurance_companyPayload = {
  __typename?: 'DeletePETPASS_insurance_companyPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_insurance_company?: Maybe<Array<Maybe<PETPASS_insurance_company>>>;
};


export type DeletePETPASS_insurance_companyPayloadpETPASS_insurance_companyArgs = {
  filter?: InputMaybe<PETPASS_insurance_companyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insurance_companyOrder>;
};

export type DeletePETPASS_locationPayload = {
  __typename?: 'DeletePETPASS_locationPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_location?: Maybe<Array<Maybe<PETPASS_location>>>;
};


export type DeletePETPASS_locationPayloadpETPASS_locationArgs = {
  filter?: InputMaybe<PETPASS_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locationOrder>;
};

export type DeletePETPASS_locationPolicyPayload = {
  __typename?: 'DeletePETPASS_locationPolicyPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_locationPolicy?: Maybe<Array<Maybe<PETPASS_locationPolicy>>>;
};


export type DeletePETPASS_locationPolicyPayloadpETPASS_locationPolicyArgs = {
  filter?: InputMaybe<PETPASS_locationPolicyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locationPolicyOrder>;
};

export type DeletePETPASS_locatorPayload = {
  __typename?: 'DeletePETPASS_locatorPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_locator?: Maybe<Array<Maybe<PETPASS_locator>>>;
};


export type DeletePETPASS_locatorPayloadpETPASS_locatorArgs = {
  filter?: InputMaybe<PETPASS_locatorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locatorOrder>;
};

export type DeletePETPASS_partnerPayload = {
  __typename?: 'DeletePETPASS_partnerPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_partner?: Maybe<Array<Maybe<PETPASS_partner>>>;
};


export type DeletePETPASS_partnerPayloadpETPASS_partnerArgs = {
  filter?: InputMaybe<PETPASS_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_partnerOrder>;
};

export type DeletePETPASS_petPayload = {
  __typename?: 'DeletePETPASS_petPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_pet?: Maybe<Array<Maybe<PETPASS_pet>>>;
};


export type DeletePETPASS_petPayloadpETPASS_petArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petOrder>;
};

export type DeletePETPASS_petTokenPayload = {
  __typename?: 'DeletePETPASS_petTokenPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_petToken?: Maybe<Array<Maybe<PETPASS_petToken>>>;
};


export type DeletePETPASS_petTokenPayloadpETPASS_petTokenArgs = {
  filter?: InputMaybe<PETPASS_petTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petTokenOrder>;
};

export type DeletePETPASS_pet_external_insurancePayload = {
  __typename?: 'DeletePETPASS_pet_external_insurancePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_pet_external_insurance?: Maybe<Array<Maybe<PETPASS_pet_external_insurance>>>;
};


export type DeletePETPASS_pet_external_insurancePayloadpETPASS_pet_external_insuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_external_insuranceOrder>;
};

export type DeletePETPASS_pet_insurancePayload = {
  __typename?: 'DeletePETPASS_pet_insurancePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_pet_insurance?: Maybe<Array<Maybe<PETPASS_pet_insurance>>>;
};


export type DeletePETPASS_pet_insurancePayloadpETPASS_pet_insuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_insuranceOrder>;
};

export type DeletePETPASS_productPayload = {
  __typename?: 'DeletePETPASS_productPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_product?: Maybe<Array<Maybe<PETPASS_product>>>;
};


export type DeletePETPASS_productPayloadpETPASS_productArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_productOrder>;
};

export type DeletePETPASS_purchasePayload = {
  __typename?: 'DeletePETPASS_purchasePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_purchase?: Maybe<Array<Maybe<PETPASS_purchase>>>;
};


export type DeletePETPASS_purchasePayloadpETPASS_purchaseArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_purchaseOrder>;
};

export type DeletePETPASS_sosPayload = {
  __typename?: 'DeletePETPASS_sosPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_sos?: Maybe<Array<Maybe<PETPASS_sos>>>;
};


export type DeletePETPASS_sosPayloadpETPASS_sosArgs = {
  filter?: InputMaybe<PETPASS_sosFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_sosOrder>;
};

export type DeletePETPASS_sos_eventPayload = {
  __typename?: 'DeletePETPASS_sos_eventPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_sos_event?: Maybe<Array<Maybe<PETPASS_sos_event>>>;
};


export type DeletePETPASS_sos_eventPayloadpETPASS_sos_eventArgs = {
  filter?: InputMaybe<PETPASS_sos_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_sos_eventOrder>;
};

export type DeletePETPASS_userPayload = {
  __typename?: 'DeletePETPASS_userPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_user?: Maybe<Array<Maybe<PETPASS_user>>>;
};


export type DeletePETPASS_userPayloadpETPASS_userArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_userOrder>;
};

export type DeletePersonPayload = {
  __typename?: 'DeletePersonPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  person?: Maybe<Array<Maybe<Person>>>;
};


export type DeletePersonPayloadpersonArgs = {
  filter?: InputMaybe<PersonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PersonOrder>;
};

export type DeletePetBreedPayload = {
  __typename?: 'DeletePetBreedPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  petBreed?: Maybe<Array<Maybe<PetBreed>>>;
};


export type DeletePetBreedPayloadpetBreedArgs = {
  filter?: InputMaybe<PetBreedFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetBreedOrder>;
};

export type DeletePetPayload = {
  __typename?: 'DeletePetPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pet?: Maybe<Array<Maybe<Pet>>>;
};


export type DeletePetPayloadpetArgs = {
  filter?: InputMaybe<PetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetOrder>;
};

export type DeletePetTypePayload = {
  __typename?: 'DeletePetTypePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  petType?: Maybe<Array<Maybe<PetType>>>;
};


export type DeletePetTypePayloadpetTypeArgs = {
  filter?: InputMaybe<PetTypeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetTypeOrder>;
};

export type DeletePet_filePayload = {
  __typename?: 'DeletePet_filePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pet_file?: Maybe<Array<Maybe<Pet_file>>>;
};


export type DeletePet_filePayloadpet_fileArgs = {
  filter?: InputMaybe<Pet_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_fileOrder>;
};

export type DeletePet_vaccinationPayload = {
  __typename?: 'DeletePet_vaccinationPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pet_vaccination?: Maybe<Array<Maybe<Pet_vaccination>>>;
};


export type DeletePet_vaccinationPayloadpet_vaccinationArgs = {
  filter?: InputMaybe<Pet_vaccinationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_vaccinationOrder>;
};

export type DeletePet_vaccinePayload = {
  __typename?: 'DeletePet_vaccinePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pet_vaccine?: Maybe<Array<Maybe<Pet_vaccine>>>;
};


export type DeletePet_vaccinePayloadpet_vaccineArgs = {
  filter?: InputMaybe<Pet_vaccineFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_vaccineOrder>;
};

export type DeleteProductPayload = {
  __typename?: 'DeleteProductPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  product?: Maybe<Array<Maybe<Product>>>;
};


export type DeleteProductPayloadproductArgs = {
  filter?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProductOrder>;
};

export type DeleteProduct_categoryPayload = {
  __typename?: 'DeleteProduct_categoryPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  product_category?: Maybe<Array<Maybe<Product_category>>>;
};


export type DeleteProduct_categoryPayloadproduct_categoryArgs = {
  filter?: InputMaybe<Product_categoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_categoryOrder>;
};

export type DeleteProduct_itemPayload = {
  __typename?: 'DeleteProduct_itemPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  product_item?: Maybe<Array<Maybe<Product_item>>>;
};


export type DeleteProduct_itemPayloadproduct_itemArgs = {
  filter?: InputMaybe<Product_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteProduct_paymentPlanItemPayload = {
  __typename?: 'DeleteProduct_paymentPlanItemPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  product_paymentPlanItem?: Maybe<Array<Maybe<Product_paymentPlanItem>>>;
};


export type DeleteProduct_paymentPlanItemPayloadproduct_paymentPlanItemArgs = {
  filter?: InputMaybe<Product_paymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_paymentPlanItemOrder>;
};

export type DeleteProposalPayload = {
  __typename?: 'DeleteProposalPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  proposal?: Maybe<Array<Maybe<Proposal>>>;
};


export type DeleteProposalPayloadproposalArgs = {
  filter?: InputMaybe<ProposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProposalOrder>;
};

export type DeleteProposal_resourcePayload = {
  __typename?: 'DeleteProposal_resourcePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  proposal_resource?: Maybe<Array<Maybe<Proposal_resource>>>;
};


export type DeleteProposal_resourcePayloadproposal_resourceArgs = {
  filter?: InputMaybe<Proposal_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_resourceOrder>;
};

export type DeleteProposal_stakeholderPayload = {
  __typename?: 'DeleteProposal_stakeholderPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  proposal_stakeholder?: Maybe<Array<Maybe<Proposal_stakeholder>>>;
};


export type DeleteProposal_stakeholderPayloadproposal_stakeholderArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderOrder>;
};

export type DeleteProposal_stakeholderResourcePayload = {
  __typename?: 'DeleteProposal_stakeholderResourcePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  proposal_stakeholderResource?: Maybe<Array<Maybe<Proposal_stakeholderResource>>>;
};


export type DeleteProposal_stakeholderResourcePayloadproposal_stakeholderResourceArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderResourceOrder>;
};

export type DeleteProposal_stakeholderTokenPayload = {
  __typename?: 'DeleteProposal_stakeholderTokenPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  proposal_stakeholderToken?: Maybe<Array<Maybe<Proposal_stakeholderToken>>>;
};


export type DeleteProposal_stakeholderTokenPayloadproposal_stakeholderTokenArgs = {
  filter?: InputMaybe<Proposal_stakeholderTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderTokenOrder>;
};

export type DeleteResourcePayload = {
  __typename?: 'DeleteResourcePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  resource?: Maybe<Array<Maybe<Resource>>>;
};


export type DeleteResourcePayloadresourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceOrder>;
};

export type DeleteResourceTokenPayload = {
  __typename?: 'DeleteResourceTokenPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  resourceToken?: Maybe<Array<Maybe<ResourceToken>>>;
};


export type DeleteResourceTokenPayloadresourceTokenArgs = {
  filter?: InputMaybe<ResourceTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceTokenOrder>;
};

export type DeleteSMSPayload = {
  __typename?: 'DeleteSMSPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  sMS?: Maybe<Array<Maybe<SMS>>>;
};


export type DeleteSMSPayloadsMSArgs = {
  filter?: InputMaybe<SMSFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SMSOrder>;
};

export type DeleteSchedulerPayload = {
  __typename?: 'DeleteSchedulerPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  scheduler?: Maybe<Array<Maybe<Scheduler>>>;
};


export type DeleteSchedulerPayloadschedulerArgs = {
  filter?: InputMaybe<SchedulerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteScheduler_actionPayload = {
  __typename?: 'DeleteScheduler_actionPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  scheduler_action?: Maybe<Array<Maybe<Scheduler_action>>>;
};


export type DeleteScheduler_actionPayloadscheduler_actionArgs = {
  filter?: InputMaybe<Scheduler_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_actionOrder>;
};

export type DeleteScheduler_externalActionPayload = {
  __typename?: 'DeleteScheduler_externalActionPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  scheduler_externalAction?: Maybe<Array<Maybe<Scheduler_externalAction>>>;
};


export type DeleteScheduler_externalActionPayloadscheduler_externalActionArgs = {
  filter?: InputMaybe<Scheduler_externalActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_externalActionOrder>;
};

export type DeleteScheduler_managerActionPayload = {
  __typename?: 'DeleteScheduler_managerActionPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  scheduler_managerAction?: Maybe<Array<Maybe<Scheduler_managerAction>>>;
};


export type DeleteScheduler_managerActionPayloadscheduler_managerActionArgs = {
  filter?: InputMaybe<Scheduler_managerActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_managerActionOrder>;
};

export type DeleteScheduler_taskPayload = {
  __typename?: 'DeleteScheduler_taskPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  scheduler_task?: Maybe<Array<Maybe<Scheduler_task>>>;
};


export type DeleteScheduler_taskPayloadscheduler_taskArgs = {
  filter?: InputMaybe<Scheduler_taskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_taskOrder>;
};

export type DeleteSearchIndex_contactPayload = {
  __typename?: 'DeleteSearchIndex_contactPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  searchIndex_contact?: Maybe<Array<Maybe<SearchIndex_contact>>>;
};


export type DeleteSearchIndex_contactPayloadsearchIndex_contactArgs = {
  filter?: InputMaybe<SearchIndex_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SearchIndex_contactOrder>;
};

export type DeleteServiceAccountPayload = {
  __typename?: 'DeleteServiceAccountPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  serviceAccount?: Maybe<Array<Maybe<ServiceAccount>>>;
};


export type DeleteServiceAccountPayloadserviceAccountArgs = {
  filter?: InputMaybe<ServiceAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ServiceAccountOrder>;
};

export type DeleteShortUrlPayload = {
  __typename?: 'DeleteShortUrlPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  shortUrl?: Maybe<Array<Maybe<ShortUrl>>>;
};


export type DeleteShortUrlPayloadshortUrlArgs = {
  filter?: InputMaybe<ShortUrlFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ShortUrlOrder>;
};

export type DeleteShortUrl_domainPayload = {
  __typename?: 'DeleteShortUrl_domainPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  shortUrl_domain?: Maybe<Array<Maybe<ShortUrl_domain>>>;
};


export type DeleteShortUrl_domainPayloadshortUrl_domainArgs = {
  filter?: InputMaybe<ShortUrl_domainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ShortUrl_domainOrder>;
};

export type DeleteStoragePayload = {
  __typename?: 'DeleteStoragePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  storage?: Maybe<Array<Maybe<Storage>>>;
};


export type DeleteStoragePayloadstorageArgs = {
  filter?: InputMaybe<StorageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<StorageOrder>;
};

export type DeleteStorage_fileByDemandPayload = {
  __typename?: 'DeleteStorage_fileByDemandPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  storage_fileByDemand?: Maybe<Array<Maybe<Storage_fileByDemand>>>;
};


export type DeleteStorage_fileByDemandPayloadstorage_fileByDemandArgs = {
  filter?: InputMaybe<Storage_fileByDemandFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileByDemandOrder>;
};

export type DeleteStorage_fileOperationTokenPayload = {
  __typename?: 'DeleteStorage_fileOperationTokenPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  storage_fileOperationToken?: Maybe<Array<Maybe<Storage_fileOperationToken>>>;
};


export type DeleteStorage_fileOperationTokenPayloadstorage_fileOperationTokenArgs = {
  filter?: InputMaybe<Storage_fileOperationTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOperationTokenOrder>;
};

export type DeleteStorage_filePayload = {
  __typename?: 'DeleteStorage_filePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  storage_file?: Maybe<Array<Maybe<Storage_file>>>;
};


export type DeleteStorage_filePayloadstorage_fileArgs = {
  filter?: InputMaybe<Storage_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOrder>;
};

export type DeleteTwoFactorTokenPayload = {
  __typename?: 'DeleteTwoFactorTokenPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  twoFactorToken?: Maybe<Array<Maybe<TwoFactorToken>>>;
};


export type DeleteTwoFactorTokenPayloadtwoFactorTokenArgs = {
  filter?: InputMaybe<TwoFactorTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TwoFactorTokenOrder>;
};

export type DeleteUnitPayload = {
  __typename?: 'DeleteUnitPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  unit?: Maybe<Array<Maybe<Unit>>>;
};


export type DeleteUnitPayloadunitArgs = {
  filter?: InputMaybe<UnitFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UnitOrder>;
};

export type DeleteUserPayload = {
  __typename?: 'DeleteUserPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  user?: Maybe<Array<Maybe<User>>>;
};


export type DeleteUserPayloaduserArgs = {
  filter?: InputMaybe<UserFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UserOrder>;
};

export type DeleteUser_tokenPayload = {
  __typename?: 'DeleteUser_tokenPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  user_token?: Maybe<Array<Maybe<User_token>>>;
};


export type DeleteUser_tokenPayloaduser_tokenArgs = {
  filter?: InputMaybe<User_tokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<User_tokenOrder>;
};

export type DeleteVET_PACKAGEPayload = {
  __typename?: 'DeleteVET_PACKAGEPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  vET_PACKAGE?: Maybe<Array<Maybe<VET_PACKAGE>>>;
};


export type DeleteVET_PACKAGEPayloadvET_PACKAGEArgs = {
  filter?: InputMaybe<VET_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_PACKAGEOrder>;
};

export type DeleteVET_accountPayload = {
  __typename?: 'DeleteVET_accountPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  vET_account?: Maybe<Array<Maybe<VET_account>>>;
};


export type DeleteVET_accountPayloadvET_accountArgs = {
  filter?: InputMaybe<VET_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_accountOrder>;
};

export type DeleteVET_contactPayload = {
  __typename?: 'DeleteVET_contactPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  vET_contact?: Maybe<Array<Maybe<VET_contact>>>;
};


export type DeleteVET_contactPayloadvET_contactArgs = {
  filter?: InputMaybe<VET_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_contactOrder>;
};

export type DeleteVET_petPayload = {
  __typename?: 'DeleteVET_petPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  vET_pet?: Maybe<Array<Maybe<VET_pet>>>;
};


export type DeleteVET_petPayloadvET_petArgs = {
  filter?: InputMaybe<VET_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_petOrder>;
};

export type DeleteWebhookPayload = {
  __typename?: 'DeleteWebhookPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  webhook?: Maybe<Array<Maybe<Webhook>>>;
};


export type DeleteWebhookPayloadwebhookArgs = {
  filter?: InputMaybe<WebhookFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type DeleteWebhook_providerOriginPayload = {
  __typename?: 'DeleteWebhook_providerOriginPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  webhook_providerOrigin?: Maybe<Array<Maybe<Webhook_providerOrigin>>>;
};


export type DeleteWebhook_providerOriginPayloadwebhook_providerOriginArgs = {
  filter?: InputMaybe<Webhook_providerOriginFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOriginOrder>;
};

export type DeleteWebhook_providerPayload = {
  __typename?: 'DeleteWebhook_providerPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  webhook_provider?: Maybe<Array<Maybe<Webhook_provider>>>;
};


export type DeleteWebhook_providerPayloadwebhook_providerArgs = {
  filter?: InputMaybe<Webhook_providerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOrder>;
};

export type DgraphDefault = {
  value?: InputMaybe<Scalars['String']>;
};

export enum DgraphIndex {
  bool = 'bool',
  day = 'day',
  exact = 'exact',
  float = 'float',
  fulltext = 'fulltext',
  geo = 'geo',
  hash = 'hash',
  hour = 'hour',
  int = 'int',
  int64 = 'int64',
  month = 'month',
  regexp = 'regexp',
  term = 'term',
  trigram = 'trigram',
  year = 'year'
}

export type DynamicTable = {
  __typename?: 'DynamicTable';
  accounts: Array<DynamicTable_account>;
  accountsAggregate?: Maybe<DynamicTable_accountAggregateResult>;
  heads: Array<DynamicTable_head>;
  headsAggregate?: Maybe<DynamicTable_headAggregateResult>;
  id: Scalars['ID'];
  name: Scalars['String'];
};


export type DynamicTableaccountsArgs = {
  filter?: InputMaybe<DynamicTable_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type DynamicTableaccountsAggregateArgs = {
  filter?: InputMaybe<DynamicTable_accountFilter>;
};


export type DynamicTableheadsArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headOrder>;
};


export type DynamicTableheadsAggregateArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
};

export type DynamicTableAggregateResult = {
  __typename?: 'DynamicTableAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type DynamicTableFilter = {
  and?: InputMaybe<Array<InputMaybe<DynamicTableFilter>>>;
  has?: InputMaybe<Array<InputMaybe<DynamicTableHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<DynamicTableFilter>;
  or?: InputMaybe<Array<InputMaybe<DynamicTableFilter>>>;
};

export enum DynamicTableHasFilter {
  accounts = 'accounts',
  heads = 'heads',
  name = 'name'
}

export type DynamicTableOrder = {
  asc?: InputMaybe<DynamicTableOrderable>;
  desc?: InputMaybe<DynamicTableOrderable>;
  then?: InputMaybe<DynamicTableOrder>;
};

export enum DynamicTableOrderable {
  name = 'name'
}

export type DynamicTablePatch = {
  accounts?: InputMaybe<Array<DynamicTable_accountRef>>;
  heads?: InputMaybe<Array<DynamicTable_headRef>>;
  name?: InputMaybe<Scalars['String']>;
};

export type DynamicTableRef = {
  accounts?: InputMaybe<Array<DynamicTable_accountRef>>;
  heads?: InputMaybe<Array<DynamicTable_headRef>>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
};

export type DynamicTable_account = {
  __typename?: 'DynamicTable_account';
  account: Account;
  heads: Array<DynamicTable_head>;
  headsAggregate?: Maybe<DynamicTable_headAggregateResult>;
  id: Scalars['ID'];
  table: DynamicTable;
};


export type DynamicTable_accountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type DynamicTable_accountheadsArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headOrder>;
};


export type DynamicTable_accountheadsAggregateArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
};


export type DynamicTable_accounttableArgs = {
  filter?: InputMaybe<DynamicTableFilter>;
};

export type DynamicTable_accountAggregateResult = {
  __typename?: 'DynamicTable_accountAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type DynamicTable_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<DynamicTable_accountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<DynamicTable_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<DynamicTable_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<DynamicTable_accountFilter>>>;
};

export enum DynamicTable_accountHasFilter {
  account = 'account',
  heads = 'heads',
  table = 'table'
}

export type DynamicTable_accountPatch = {
  account?: InputMaybe<AccountRef>;
  heads?: InputMaybe<Array<DynamicTable_headRef>>;
  table?: InputMaybe<DynamicTableRef>;
};

export type DynamicTable_accountRef = {
  account?: InputMaybe<AccountRef>;
  heads?: InputMaybe<Array<DynamicTable_headRef>>;
  id?: InputMaybe<Scalars['ID']>;
  table?: InputMaybe<DynamicTableRef>;
};

export type DynamicTable_head = {
  __typename?: 'DynamicTable_head';
  accounts: Array<DynamicTable_account>;
  accountsAggregate?: Maybe<DynamicTable_accountAggregateResult>;
  booleanOptions?: Maybe<DynamicTable_headValueBooleanOptions>;
  currencyOptions?: Maybe<DynamicTable_headValueCurrencyOptions>;
  dateOptions?: Maybe<DynamicTable_headValueDateOptions>;
  id: Scalars['ID'];
  keys: Array<Scalars['String']>;
  linkOptions?: Maybe<DynamicTable_headValueLinkOptions>;
  name: Scalars['String'];
  numberOptions?: Maybe<DynamicTable_headValueNumberOptions>;
  table: DynamicTable;
  type: DynamicTable_headValueType;
};


export type DynamicTable_headaccountsArgs = {
  filter?: InputMaybe<DynamicTable_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type DynamicTable_headaccountsAggregateArgs = {
  filter?: InputMaybe<DynamicTable_accountFilter>;
};


export type DynamicTable_headbooleanOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueBooleanOptionsFilter>;
};


export type DynamicTable_headcurrencyOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueCurrencyOptionsFilter>;
};


export type DynamicTable_headdateOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueDateOptionsFilter>;
};


export type DynamicTable_headlinkOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueLinkOptionsFilter>;
};


export type DynamicTable_headnumberOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueNumberOptionsFilter>;
};


export type DynamicTable_headtableArgs = {
  filter?: InputMaybe<DynamicTableFilter>;
};

export type DynamicTable_headAggregateResult = {
  __typename?: 'DynamicTable_headAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type DynamicTable_headFilter = {
  and?: InputMaybe<Array<InputMaybe<DynamicTable_headFilter>>>;
  has?: InputMaybe<Array<InputMaybe<DynamicTable_headHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<DynamicTable_headFilter>;
  or?: InputMaybe<Array<InputMaybe<DynamicTable_headFilter>>>;
};

export enum DynamicTable_headHasFilter {
  accounts = 'accounts',
  booleanOptions = 'booleanOptions',
  currencyOptions = 'currencyOptions',
  dateOptions = 'dateOptions',
  keys = 'keys',
  linkOptions = 'linkOptions',
  name = 'name',
  numberOptions = 'numberOptions',
  table = 'table',
  type = 'type'
}

export type DynamicTable_headOrder = {
  asc?: InputMaybe<DynamicTable_headOrderable>;
  desc?: InputMaybe<DynamicTable_headOrderable>;
  then?: InputMaybe<DynamicTable_headOrder>;
};

export enum DynamicTable_headOrderable {
  name = 'name'
}

export type DynamicTable_headPatch = {
  accounts?: InputMaybe<Array<DynamicTable_accountRef>>;
  booleanOptions?: InputMaybe<DynamicTable_headValueBooleanOptionsRef>;
  currencyOptions?: InputMaybe<DynamicTable_headValueCurrencyOptionsRef>;
  dateOptions?: InputMaybe<DynamicTable_headValueDateOptionsRef>;
  keys?: InputMaybe<Array<Scalars['String']>>;
  linkOptions?: InputMaybe<DynamicTable_headValueLinkOptionsRef>;
  name?: InputMaybe<Scalars['String']>;
  numberOptions?: InputMaybe<DynamicTable_headValueNumberOptionsRef>;
  table?: InputMaybe<DynamicTableRef>;
  type?: InputMaybe<DynamicTable_headValueType>;
};

export type DynamicTable_headRef = {
  accounts?: InputMaybe<Array<DynamicTable_accountRef>>;
  booleanOptions?: InputMaybe<DynamicTable_headValueBooleanOptionsRef>;
  currencyOptions?: InputMaybe<DynamicTable_headValueCurrencyOptionsRef>;
  dateOptions?: InputMaybe<DynamicTable_headValueDateOptionsRef>;
  id?: InputMaybe<Scalars['ID']>;
  keys?: InputMaybe<Array<Scalars['String']>>;
  linkOptions?: InputMaybe<DynamicTable_headValueLinkOptionsRef>;
  name?: InputMaybe<Scalars['String']>;
  numberOptions?: InputMaybe<DynamicTable_headValueNumberOptionsRef>;
  table?: InputMaybe<DynamicTableRef>;
  type?: InputMaybe<DynamicTable_headValueType>;
};

export type DynamicTable_headValueBooleanOptions = {
  __typename?: 'DynamicTable_headValueBooleanOptions';
  head: DynamicTable_head;
  id: Scalars['ID'];
  ifFalse: Scalars['String'];
  ifTrue: Scalars['String'];
};


export type DynamicTable_headValueBooleanOptionsheadArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
};

export type DynamicTable_headValueBooleanOptionsAggregateResult = {
  __typename?: 'DynamicTable_headValueBooleanOptionsAggregateResult';
  count?: Maybe<Scalars['Int']>;
  ifFalseMax?: Maybe<Scalars['String']>;
  ifFalseMin?: Maybe<Scalars['String']>;
  ifTrueMax?: Maybe<Scalars['String']>;
  ifTrueMin?: Maybe<Scalars['String']>;
};

export type DynamicTable_headValueBooleanOptionsFilter = {
  and?: InputMaybe<Array<InputMaybe<DynamicTable_headValueBooleanOptionsFilter>>>;
  has?: InputMaybe<Array<InputMaybe<DynamicTable_headValueBooleanOptionsHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<DynamicTable_headValueBooleanOptionsFilter>;
  or?: InputMaybe<Array<InputMaybe<DynamicTable_headValueBooleanOptionsFilter>>>;
};

export enum DynamicTable_headValueBooleanOptionsHasFilter {
  head = 'head',
  ifFalse = 'ifFalse',
  ifTrue = 'ifTrue'
}

export type DynamicTable_headValueBooleanOptionsOrder = {
  asc?: InputMaybe<DynamicTable_headValueBooleanOptionsOrderable>;
  desc?: InputMaybe<DynamicTable_headValueBooleanOptionsOrderable>;
  then?: InputMaybe<DynamicTable_headValueBooleanOptionsOrder>;
};

export enum DynamicTable_headValueBooleanOptionsOrderable {
  ifFalse = 'ifFalse',
  ifTrue = 'ifTrue'
}

export type DynamicTable_headValueBooleanOptionsPatch = {
  head?: InputMaybe<DynamicTable_headRef>;
  ifFalse?: InputMaybe<Scalars['String']>;
  ifTrue?: InputMaybe<Scalars['String']>;
};

export type DynamicTable_headValueBooleanOptionsRef = {
  head?: InputMaybe<DynamicTable_headRef>;
  id?: InputMaybe<Scalars['ID']>;
  ifFalse?: InputMaybe<Scalars['String']>;
  ifTrue?: InputMaybe<Scalars['String']>;
};

export type DynamicTable_headValueCurrencyOptions = {
  __typename?: 'DynamicTable_headValueCurrencyOptions';
  defaultCurrency: Currency;
  head: DynamicTable_head;
  id: Scalars['ID'];
};


export type DynamicTable_headValueCurrencyOptionsdefaultCurrencyArgs = {
  filter?: InputMaybe<CurrencyFilter>;
};


export type DynamicTable_headValueCurrencyOptionsheadArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
};

export type DynamicTable_headValueCurrencyOptionsAggregateResult = {
  __typename?: 'DynamicTable_headValueCurrencyOptionsAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type DynamicTable_headValueCurrencyOptionsFilter = {
  and?: InputMaybe<Array<InputMaybe<DynamicTable_headValueCurrencyOptionsFilter>>>;
  has?: InputMaybe<Array<InputMaybe<DynamicTable_headValueCurrencyOptionsHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<DynamicTable_headValueCurrencyOptionsFilter>;
  or?: InputMaybe<Array<InputMaybe<DynamicTable_headValueCurrencyOptionsFilter>>>;
};

export enum DynamicTable_headValueCurrencyOptionsHasFilter {
  defaultCurrency = 'defaultCurrency',
  head = 'head'
}

export type DynamicTable_headValueCurrencyOptionsPatch = {
  defaultCurrency?: InputMaybe<CurrencyRef>;
  head?: InputMaybe<DynamicTable_headRef>;
};

export type DynamicTable_headValueCurrencyOptionsRef = {
  defaultCurrency?: InputMaybe<CurrencyRef>;
  head?: InputMaybe<DynamicTable_headRef>;
  id?: InputMaybe<Scalars['ID']>;
};

export type DynamicTable_headValueDateOptions = {
  __typename?: 'DynamicTable_headValueDateOptions';
  format: Scalars['String'];
  head: DynamicTable_head;
  id: Scalars['ID'];
};


export type DynamicTable_headValueDateOptionsheadArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
};

export type DynamicTable_headValueDateOptionsAggregateResult = {
  __typename?: 'DynamicTable_headValueDateOptionsAggregateResult';
  count?: Maybe<Scalars['Int']>;
  formatMax?: Maybe<Scalars['String']>;
  formatMin?: Maybe<Scalars['String']>;
};

export type DynamicTable_headValueDateOptionsFilter = {
  and?: InputMaybe<Array<InputMaybe<DynamicTable_headValueDateOptionsFilter>>>;
  has?: InputMaybe<Array<InputMaybe<DynamicTable_headValueDateOptionsHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<DynamicTable_headValueDateOptionsFilter>;
  or?: InputMaybe<Array<InputMaybe<DynamicTable_headValueDateOptionsFilter>>>;
};

export enum DynamicTable_headValueDateOptionsHasFilter {
  format = 'format',
  head = 'head'
}

export type DynamicTable_headValueDateOptionsOrder = {
  asc?: InputMaybe<DynamicTable_headValueDateOptionsOrderable>;
  desc?: InputMaybe<DynamicTable_headValueDateOptionsOrderable>;
  then?: InputMaybe<DynamicTable_headValueDateOptionsOrder>;
};

export enum DynamicTable_headValueDateOptionsOrderable {
  format = 'format'
}

export type DynamicTable_headValueDateOptionsPatch = {
  format?: InputMaybe<Scalars['String']>;
  head?: InputMaybe<DynamicTable_headRef>;
};

export type DynamicTable_headValueDateOptionsRef = {
  format?: InputMaybe<Scalars['String']>;
  head?: InputMaybe<DynamicTable_headRef>;
  id?: InputMaybe<Scalars['ID']>;
};

export type DynamicTable_headValueLinkOptions = {
  __typename?: 'DynamicTable_headValueLinkOptions';
  head: DynamicTable_head;
  id: Scalars['ID'];
  type: DynamicTable_headValueLinkOptionsType;
};


export type DynamicTable_headValueLinkOptionsheadArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
};

export type DynamicTable_headValueLinkOptionsAggregateResult = {
  __typename?: 'DynamicTable_headValueLinkOptionsAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type DynamicTable_headValueLinkOptionsFilter = {
  and?: InputMaybe<Array<InputMaybe<DynamicTable_headValueLinkOptionsFilter>>>;
  has?: InputMaybe<Array<InputMaybe<DynamicTable_headValueLinkOptionsHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<DynamicTable_headValueLinkOptionsFilter>;
  or?: InputMaybe<Array<InputMaybe<DynamicTable_headValueLinkOptionsFilter>>>;
};

export enum DynamicTable_headValueLinkOptionsHasFilter {
  head = 'head',
  type = 'type'
}

export type DynamicTable_headValueLinkOptionsPatch = {
  head?: InputMaybe<DynamicTable_headRef>;
  type?: InputMaybe<DynamicTable_headValueLinkOptionsType>;
};

export type DynamicTable_headValueLinkOptionsRef = {
  head?: InputMaybe<DynamicTable_headRef>;
  id?: InputMaybe<Scalars['ID']>;
  type?: InputMaybe<DynamicTable_headValueLinkOptionsType>;
};

export enum DynamicTable_headValueLinkOptionsType {
  EXTERNAL = 'EXTERNAL',
  INTERNAL = 'INTERNAL'
}

export type DynamicTable_headValueNumberOptions = {
  __typename?: 'DynamicTable_headValueNumberOptions';
  head: DynamicTable_head;
  id: Scalars['ID'];
  type: DynamicTable_headValueNumberOptionsType;
};


export type DynamicTable_headValueNumberOptionsheadArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
};

export type DynamicTable_headValueNumberOptionsAggregateResult = {
  __typename?: 'DynamicTable_headValueNumberOptionsAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type DynamicTable_headValueNumberOptionsFilter = {
  and?: InputMaybe<Array<InputMaybe<DynamicTable_headValueNumberOptionsFilter>>>;
  has?: InputMaybe<Array<InputMaybe<DynamicTable_headValueNumberOptionsHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<DynamicTable_headValueNumberOptionsFilter>;
  or?: InputMaybe<Array<InputMaybe<DynamicTable_headValueNumberOptionsFilter>>>;
};

export enum DynamicTable_headValueNumberOptionsHasFilter {
  head = 'head',
  type = 'type'
}

export type DynamicTable_headValueNumberOptionsPatch = {
  head?: InputMaybe<DynamicTable_headRef>;
  type?: InputMaybe<DynamicTable_headValueNumberOptionsType>;
};

export type DynamicTable_headValueNumberOptionsRef = {
  head?: InputMaybe<DynamicTable_headRef>;
  id?: InputMaybe<Scalars['ID']>;
  type?: InputMaybe<DynamicTable_headValueNumberOptionsType>;
};

export enum DynamicTable_headValueNumberOptionsType {
  FLOAT = 'FLOAT',
  INTEGER = 'INTEGER'
}

export enum DynamicTable_headValueType {
  BOOLEAN = 'BOOLEAN',
  CURRENCY = 'CURRENCY',
  DATE = 'DATE',
  LINK = 'LINK',
  NUMBER = 'NUMBER',
  STRING = 'STRING'
}

export type E360App = {
  __typename?: 'E360App';
  androidId?: Maybe<Scalars['String']>;
  domains?: Maybe<Array<Maybe<E360App_domain>>>;
  domainsAggregate?: Maybe<E360App_domainAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  iosId?: Maybe<Scalars['String']>;
  locations: Array<E360App_location>;
  locationsAggregate?: Maybe<E360App_locationAggregateResult>;
  name: Scalars['String'];
  notifications: Array<E360App_notification>;
  notificationsAggregate?: Maybe<E360App_notificationAggregateResult>;
  organizations: Array<E360App_organization>;
  organizationsAggregate?: Maybe<E360App_organizationAggregateResult>;
  partners: Array<E360App_partner>;
  partnersAggregate?: Maybe<E360App_partnerAggregateResult>;
  petPassApp?: Maybe<PETPASS_APP>;
  shop?: Maybe<E360App_shop>;
  stablishments: Array<E360App_stablishment>;
  stablishmentsAggregate?: Maybe<E360App_stablishmentAggregateResult>;
  userNotifications: Array<E360App_user_notification>;
  userNotificationsAggregate?: Maybe<E360App_user_notificationAggregateResult>;
  users?: Maybe<Array<Maybe<E360App_user>>>;
  usersAggregate?: Maybe<E360App_userAggregateResult>;
};


export type E360AppdomainsArgs = {
  filter?: InputMaybe<E360App_domainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_domainOrder>;
};


export type E360AppdomainsAggregateArgs = {
  filter?: InputMaybe<E360App_domainFilter>;
};


export type E360ApplocationsArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationOrder>;
};


export type E360ApplocationsAggregateArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type E360AppnotificationsArgs = {
  filter?: InputMaybe<E360App_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_notificationOrder>;
};


export type E360AppnotificationsAggregateArgs = {
  filter?: InputMaybe<E360App_notificationFilter>;
};


export type E360ApporganizationsArgs = {
  filter?: InputMaybe<E360App_organizationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organizationOrder>;
};


export type E360ApporganizationsAggregateArgs = {
  filter?: InputMaybe<E360App_organizationFilter>;
};


export type E360ApppartnersArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partnerOrder>;
};


export type E360ApppartnersAggregateArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};


export type E360ApppetPassAppArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type E360AppshopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
};


export type E360AppstablishmentsArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishmentOrder>;
};


export type E360AppstablishmentsAggregateArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
};


export type E360AppuserNotificationsArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_notificationOrder>;
};


export type E360AppuserNotificationsAggregateArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
};


export type E360AppusersArgs = {
  filter?: InputMaybe<E360App_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userOrder>;
};


export type E360AppusersAggregateArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};

export type E360AppAggregateResult = {
  __typename?: 'E360AppAggregateResult';
  androidIdMax?: Maybe<Scalars['String']>;
  androidIdMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  iosIdMax?: Maybe<Scalars['String']>;
  iosIdMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360AppFilter = {
  and?: InputMaybe<Array<InputMaybe<E360AppFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360AppHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<E360AppFilter>;
  or?: InputMaybe<Array<InputMaybe<E360AppFilter>>>;
};

export enum E360AppHasFilter {
  androidId = 'androidId',
  domains = 'domains',
  guid = 'guid',
  iosId = 'iosId',
  locations = 'locations',
  name = 'name',
  notifications = 'notifications',
  organizations = 'organizations',
  partners = 'partners',
  petPassApp = 'petPassApp',
  shop = 'shop',
  stablishments = 'stablishments',
  userNotifications = 'userNotifications',
  users = 'users'
}

export type E360AppOrder = {
  asc?: InputMaybe<E360AppOrderable>;
  desc?: InputMaybe<E360AppOrderable>;
  then?: InputMaybe<E360AppOrder>;
};

export enum E360AppOrderable {
  androidId = 'androidId',
  guid = 'guid',
  iosId = 'iosId',
  name = 'name'
}

export type E360AppPatch = {
  androidId?: InputMaybe<Scalars['String']>;
  domains?: InputMaybe<Array<InputMaybe<E360App_domainRef>>>;
  guid?: InputMaybe<Scalars['String']>;
  iosId?: InputMaybe<Scalars['String']>;
  locations?: InputMaybe<Array<E360App_locationRef>>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<Array<E360App_notificationRef>>;
  organizations?: InputMaybe<Array<E360App_organizationRef>>;
  partners?: InputMaybe<Array<E360App_partnerRef>>;
  petPassApp?: InputMaybe<PETPASS_APPRef>;
  shop?: InputMaybe<E360App_shopRef>;
  stablishments?: InputMaybe<Array<E360App_stablishmentRef>>;
  userNotifications?: InputMaybe<Array<E360App_user_notificationRef>>;
  users?: InputMaybe<Array<InputMaybe<E360App_userRef>>>;
};

export type E360AppRef = {
  androidId?: InputMaybe<Scalars['String']>;
  domains?: InputMaybe<Array<InputMaybe<E360App_domainRef>>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  iosId?: InputMaybe<Scalars['String']>;
  locations?: InputMaybe<Array<E360App_locationRef>>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<Array<E360App_notificationRef>>;
  organizations?: InputMaybe<Array<E360App_organizationRef>>;
  partners?: InputMaybe<Array<E360App_partnerRef>>;
  petPassApp?: InputMaybe<PETPASS_APPRef>;
  shop?: InputMaybe<E360App_shopRef>;
  stablishments?: InputMaybe<Array<E360App_stablishmentRef>>;
  userNotifications?: InputMaybe<Array<E360App_user_notificationRef>>;
  users?: InputMaybe<Array<InputMaybe<E360App_userRef>>>;
};

export enum E360App_contractFeeType {
  FIXED = 'FIXED',
  PERCENTAGE = 'PERCENTAGE'
}

export type E360App_contractFeeType_exact = {
  between?: InputMaybe<E360App_contractFeeType>;
  eq?: InputMaybe<E360App_contractFeeType>;
  ge?: InputMaybe<E360App_contractFeeType>;
  gt?: InputMaybe<E360App_contractFeeType>;
  in?: InputMaybe<Array<InputMaybe<E360App_contractFeeType>>>;
  le?: InputMaybe<E360App_contractFeeType>;
  lt?: InputMaybe<E360App_contractFeeType>;
};

export type E360App_domain = {
  __typename?: 'E360App_domain';
  domain: Scalars['String'];
  e360App?: Maybe<E360App>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  type: E360App_domainType;
};


export type E360App_domaine360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
};

export type E360App_domainAggregateResult = {
  __typename?: 'E360App_domainAggregateResult';
  count?: Maybe<Scalars['Int']>;
  domainMax?: Maybe<Scalars['String']>;
  domainMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type E360App_domainFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_domainFilter>>>;
  domain?: InputMaybe<StringHashFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_domainHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_domainFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_domainFilter>>>;
  type?: InputMaybe<E360App_domainType_exact>;
};

export enum E360App_domainHasFilter {
  domain = 'domain',
  e360App = 'e360App',
  guid = 'guid',
  type = 'type'
}

export type E360App_domainOrder = {
  asc?: InputMaybe<E360App_domainOrderable>;
  desc?: InputMaybe<E360App_domainOrderable>;
  then?: InputMaybe<E360App_domainOrder>;
};

export enum E360App_domainOrderable {
  domain = 'domain',
  guid = 'guid'
}

export type E360App_domainPatch = {
  domain?: InputMaybe<Scalars['String']>;
  e360App?: InputMaybe<E360AppRef>;
  guid?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<E360App_domainType>;
};

export type E360App_domainRef = {
  domain?: InputMaybe<Scalars['String']>;
  e360App?: InputMaybe<E360AppRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  type?: InputMaybe<E360App_domainType>;
};

export enum E360App_domainType {
  DEV = 'DEV',
  PRO = 'PRO'
}

export type E360App_domainType_exact = {
  between?: InputMaybe<E360App_domainType>;
  eq?: InputMaybe<E360App_domainType>;
  ge?: InputMaybe<E360App_domainType>;
  gt?: InputMaybe<E360App_domainType>;
  in?: InputMaybe<Array<InputMaybe<E360App_domainType>>>;
  le?: InputMaybe<E360App_domainType>;
  lt?: InputMaybe<E360App_domainType>;
};

export type E360App_location = {
  __typename?: 'E360App_location';
  address: Scalars['String'];
  addressInfo?: Maybe<Scalars['String']>;
  allowAppointments?: Maybe<Scalars['Boolean']>;
  app: E360App;
  appoinmentLots: Array<E360App_location_appoinmentLots>;
  appoinmentLotsAggregate?: Maybe<E360App_location_appoinmentLotsAggregateResult>;
  appoinments: Array<E360App_location_appoinment>;
  appoinmentsAggregate?: Maybe<E360App_location_appoinmentAggregateResult>;
  areas: Array<E360App_location_area>;
  areasAggregate?: Maybe<E360App_location_areaAggregateResult>;
  avatar?: Maybe<Scalars['String']>;
  categoryByPartner?: Maybe<Scalars['String']>;
  country: Country;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  description: Scalars['String'];
  emails: Array<Scalars['String']>;
  fullAddress?: Maybe<Scalars['String']>;
  gallery: Array<E360App_locationFile>;
  galleryAggregate?: Maybe<E360App_locationFileAggregateResult>;
  galleryUrl?: Maybe<Array<Scalars['String']>>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isDeleted: Scalars['Boolean'];
  isDisabled: Scalars['Boolean'];
  isVerified: Scalars['Boolean'];
  lastUpdate?: Maybe<Scalars['DateTime']>;
  lastUpdateBy?: Maybe<E360App_user>;
  lat?: Maybe<Scalars['Float']>;
  lon?: Maybe<Scalars['Float']>;
  menu: Array<E360App_location_menu>;
  menuAggregate?: Maybe<E360App_location_menuAggregateResult>;
  menuSections: Array<E360App_location_menu_section>;
  menuSectionsAggregate?: Maybe<E360App_location_menu_sectionAggregateResult>;
  menuSubSections: Array<E360App_location_menu_subSection>;
  menuSubSectionsAggregate?: Maybe<E360App_location_menu_subSectionAggregateResult>;
  name: Scalars['String'];
  partner?: Maybe<E360App_partner>;
  petpass?: Maybe<PETPASS_location>;
  phones: Array<Scalars['String']>;
  publicPath: Scalars['String'];
  resources: Array<E360App_location_area_resource>;
  resourcesAggregate?: Maybe<E360App_location_area_resourceAggregateResult>;
  roadType?: Maybe<Scalars['String']>;
  schedules: Array<E360App_locationSchedule>;
  schedulesAggregate?: Maybe<E360App_locationScheduleAggregateResult>;
  stablishment?: Maybe<E360App_stablishment>;
  status: E360App_locationStatus;
  subcategoryByPartner?: Maybe<Scalars['String']>;
  tags: Array<E360App_location_menu_tag>;
  tagsAggregate?: Maybe<E360App_location_menu_tagAggregateResult>;
  thumbnail?: Maybe<E360Storage_file>;
  thumbnailUrl?: Maybe<Scalars['String']>;
  tmp_contactName?: Maybe<Scalars['String']>;
  tmp_locality?: Maybe<Scalars['String']>;
  tmp_province?: Maybe<Scalars['String']>;
  tmp_source?: Maybe<Scalars['String']>;
  tmp_vet_consultingChannelType?: Maybe<Array<Scalars['String']>>;
  tmp_vet_consultingType?: Maybe<Array<Scalars['String']>>;
  tmp_vet_specialities?: Maybe<Array<Scalars['String']>>;
  types: Array<E360App_locationType>;
  website?: Maybe<Scalars['String']>;
  workShifts: Array<E360App_location_area_workShift>;
  workShiftsAggregate?: Maybe<E360App_location_area_workShiftAggregateResult>;
  zipCode?: Maybe<Scalars['String']>;
};


export type E360App_locationappArgs = {
  filter?: InputMaybe<E360AppFilter>;
};


export type E360App_locationappoinmentLotsArgs = {
  filter?: InputMaybe<E360App_location_appoinmentLotsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentLotsOrder>;
};


export type E360App_locationappoinmentLotsAggregateArgs = {
  filter?: InputMaybe<E360App_location_appoinmentLotsFilter>;
};


export type E360App_locationappoinmentsArgs = {
  filter?: InputMaybe<E360App_location_appoinmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentOrder>;
};


export type E360App_locationappoinmentsAggregateArgs = {
  filter?: InputMaybe<E360App_location_appoinmentFilter>;
};


export type E360App_locationareasArgs = {
  filter?: InputMaybe<E360App_location_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_areaOrder>;
};


export type E360App_locationareasAggregateArgs = {
  filter?: InputMaybe<E360App_location_areaFilter>;
};


export type E360App_locationcountryArgs = {
  filter?: InputMaybe<CountryFilter>;
};


export type E360App_locationcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_locationgalleryArgs = {
  filter?: InputMaybe<E360App_locationFileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationFileOrder>;
};


export type E360App_locationgalleryAggregateArgs = {
  filter?: InputMaybe<E360App_locationFileFilter>;
};


export type E360App_locationlastUpdateByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_locationmenuArgs = {
  filter?: InputMaybe<E360App_location_menuFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menuOrder>;
};


export type E360App_locationmenuAggregateArgs = {
  filter?: InputMaybe<E360App_location_menuFilter>;
};


export type E360App_locationmenuSectionsArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_sectionOrder>;
};


export type E360App_locationmenuSectionsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
};


export type E360App_locationmenuSubSectionsArgs = {
  filter?: InputMaybe<E360App_location_menu_subSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_subSectionOrder>;
};


export type E360App_locationmenuSubSectionsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_subSectionFilter>;
};


export type E360App_locationpartnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};


export type E360App_locationpetpassArgs = {
  filter?: InputMaybe<PETPASS_locationFilter>;
};


export type E360App_locationresourcesArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_resourceOrder>;
};


export type E360App_locationresourcesAggregateArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
};


export type E360App_locationschedulesArgs = {
  filter?: InputMaybe<E360App_locationScheduleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationScheduleOrder>;
};


export type E360App_locationschedulesAggregateArgs = {
  filter?: InputMaybe<E360App_locationScheduleFilter>;
};


export type E360App_locationstablishmentArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
};


export type E360App_locationtagsArgs = {
  filter?: InputMaybe<E360App_location_menu_tagFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_tagOrder>;
};


export type E360App_locationtagsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_tagFilter>;
};


export type E360App_locationthumbnailArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
};


export type E360App_locationworkShiftsArgs = {
  filter?: InputMaybe<E360App_location_area_workShiftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_workShiftOrder>;
};


export type E360App_locationworkShiftsAggregateArgs = {
  filter?: InputMaybe<E360App_location_area_workShiftFilter>;
};

export type E360App_locationAggregateResult = {
  __typename?: 'E360App_locationAggregateResult';
  addressInfoMax?: Maybe<Scalars['String']>;
  addressInfoMin?: Maybe<Scalars['String']>;
  addressMax?: Maybe<Scalars['String']>;
  addressMin?: Maybe<Scalars['String']>;
  avatarMax?: Maybe<Scalars['String']>;
  avatarMin?: Maybe<Scalars['String']>;
  categoryByPartnerMax?: Maybe<Scalars['String']>;
  categoryByPartnerMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  fullAddressMax?: Maybe<Scalars['String']>;
  fullAddressMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  lastUpdateMax?: Maybe<Scalars['DateTime']>;
  lastUpdateMin?: Maybe<Scalars['DateTime']>;
  latAvg?: Maybe<Scalars['Float']>;
  latMax?: Maybe<Scalars['Float']>;
  latMin?: Maybe<Scalars['Float']>;
  latSum?: Maybe<Scalars['Float']>;
  lonAvg?: Maybe<Scalars['Float']>;
  lonMax?: Maybe<Scalars['Float']>;
  lonMin?: Maybe<Scalars['Float']>;
  lonSum?: Maybe<Scalars['Float']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  publicPathMax?: Maybe<Scalars['String']>;
  publicPathMin?: Maybe<Scalars['String']>;
  roadTypeMax?: Maybe<Scalars['String']>;
  roadTypeMin?: Maybe<Scalars['String']>;
  subcategoryByPartnerMax?: Maybe<Scalars['String']>;
  subcategoryByPartnerMin?: Maybe<Scalars['String']>;
  thumbnailUrlMax?: Maybe<Scalars['String']>;
  thumbnailUrlMin?: Maybe<Scalars['String']>;
  tmp_contactNameMax?: Maybe<Scalars['String']>;
  tmp_contactNameMin?: Maybe<Scalars['String']>;
  tmp_localityMax?: Maybe<Scalars['String']>;
  tmp_localityMin?: Maybe<Scalars['String']>;
  tmp_provinceMax?: Maybe<Scalars['String']>;
  tmp_provinceMin?: Maybe<Scalars['String']>;
  tmp_sourceMax?: Maybe<Scalars['String']>;
  tmp_sourceMin?: Maybe<Scalars['String']>;
  websiteMax?: Maybe<Scalars['String']>;
  websiteMin?: Maybe<Scalars['String']>;
  zipCodeMax?: Maybe<Scalars['String']>;
  zipCodeMin?: Maybe<Scalars['String']>;
};

export type E360App_locationFile = {
  __typename?: 'E360App_locationFile';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  file?: Maybe<E360Storage_file>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  label: Scalars['String'];
  location: E360App_location;
};


export type E360App_locationFilecreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_locationFilefileArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
};


export type E360App_locationFilelocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};

export type E360App_locationFileAggregateResult = {
  __typename?: 'E360App_locationFileAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type E360App_locationFileFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_locationFileFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_locationFileHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  label?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_locationFileFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_locationFileFilter>>>;
};

export enum E360App_locationFileHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  file = 'file',
  guid = 'guid',
  label = 'label',
  location = 'location'
}

export type E360App_locationFileOrder = {
  asc?: InputMaybe<E360App_locationFileOrderable>;
  desc?: InputMaybe<E360App_locationFileOrderable>;
  then?: InputMaybe<E360App_locationFileOrder>;
};

export enum E360App_locationFileOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  label = 'label'
}

export type E360App_locationFilePatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
};

export type E360App_locationFileRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
};

export type E360App_locationFilter = {
  address?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  addressInfo?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  allowAppointments?: InputMaybe<Scalars['Boolean']>;
  and?: InputMaybe<Array<InputMaybe<E360App_locationFilter>>>;
  categoryByPartner?: InputMaybe<StringExactFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  emails?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  fullAddress?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_locationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isVerified?: InputMaybe<Scalars['Boolean']>;
  lastUpdate?: InputMaybe<DateTimeFilter>;
  lat?: InputMaybe<FloatFilter>;
  lon?: InputMaybe<FloatFilter>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<E360App_locationFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_locationFilter>>>;
  phones?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  publicPath?: InputMaybe<StringHashFilter>;
  roadType?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  status?: InputMaybe<E360App_locationStatus_exact>;
  subcategoryByPartner?: InputMaybe<StringExactFilter>;
  tmp_contactName?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  tmp_locality?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  tmp_province?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  tmp_source?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  tmp_vet_consultingChannelType?: InputMaybe<StringExactFilter>;
  tmp_vet_consultingType?: InputMaybe<StringExactFilter>;
  tmp_vet_specialities?: InputMaybe<StringExactFilter>;
  types?: InputMaybe<E360App_locationType_exact>;
  website?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  zipCode?: InputMaybe<StringExactFilter_StringRegExpFilter>;
};

export enum E360App_locationHasFilter {
  address = 'address',
  addressInfo = 'addressInfo',
  allowAppointments = 'allowAppointments',
  app = 'app',
  appoinmentLots = 'appoinmentLots',
  appoinments = 'appoinments',
  areas = 'areas',
  avatar = 'avatar',
  categoryByPartner = 'categoryByPartner',
  country = 'country',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  emails = 'emails',
  fullAddress = 'fullAddress',
  gallery = 'gallery',
  galleryUrl = 'galleryUrl',
  guid = 'guid',
  isDeleted = 'isDeleted',
  isDisabled = 'isDisabled',
  isVerified = 'isVerified',
  lastUpdate = 'lastUpdate',
  lastUpdateBy = 'lastUpdateBy',
  lat = 'lat',
  lon = 'lon',
  menu = 'menu',
  menuSections = 'menuSections',
  menuSubSections = 'menuSubSections',
  name = 'name',
  partner = 'partner',
  petpass = 'petpass',
  phones = 'phones',
  publicPath = 'publicPath',
  resources = 'resources',
  roadType = 'roadType',
  schedules = 'schedules',
  stablishment = 'stablishment',
  status = 'status',
  subcategoryByPartner = 'subcategoryByPartner',
  tags = 'tags',
  thumbnail = 'thumbnail',
  thumbnailUrl = 'thumbnailUrl',
  tmp_contactName = 'tmp_contactName',
  tmp_locality = 'tmp_locality',
  tmp_province = 'tmp_province',
  tmp_source = 'tmp_source',
  tmp_vet_consultingChannelType = 'tmp_vet_consultingChannelType',
  tmp_vet_consultingType = 'tmp_vet_consultingType',
  tmp_vet_specialities = 'tmp_vet_specialities',
  types = 'types',
  website = 'website',
  workShifts = 'workShifts',
  zipCode = 'zipCode'
}

export type E360App_locationOrder = {
  asc?: InputMaybe<E360App_locationOrderable>;
  desc?: InputMaybe<E360App_locationOrderable>;
  then?: InputMaybe<E360App_locationOrder>;
};

export enum E360App_locationOrderable {
  address = 'address',
  addressInfo = 'addressInfo',
  avatar = 'avatar',
  categoryByPartner = 'categoryByPartner',
  createdAt = 'createdAt',
  description = 'description',
  fullAddress = 'fullAddress',
  guid = 'guid',
  lastUpdate = 'lastUpdate',
  lat = 'lat',
  lon = 'lon',
  name = 'name',
  publicPath = 'publicPath',
  roadType = 'roadType',
  subcategoryByPartner = 'subcategoryByPartner',
  thumbnailUrl = 'thumbnailUrl',
  tmp_contactName = 'tmp_contactName',
  tmp_locality = 'tmp_locality',
  tmp_province = 'tmp_province',
  tmp_source = 'tmp_source',
  website = 'website',
  zipCode = 'zipCode'
}

export type E360App_locationPatch = {
  address?: InputMaybe<Scalars['String']>;
  addressInfo?: InputMaybe<Scalars['String']>;
  allowAppointments?: InputMaybe<Scalars['Boolean']>;
  app?: InputMaybe<E360AppRef>;
  appoinmentLots?: InputMaybe<Array<E360App_location_appoinmentLotsRef>>;
  appoinments?: InputMaybe<Array<E360App_location_appoinmentRef>>;
  areas?: InputMaybe<Array<E360App_location_areaRef>>;
  avatar?: InputMaybe<Scalars['String']>;
  categoryByPartner?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<CountryRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  emails?: InputMaybe<Array<Scalars['String']>>;
  fullAddress?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<E360App_locationFileRef>>;
  galleryUrl?: InputMaybe<Array<Scalars['String']>>;
  guid?: InputMaybe<Scalars['String']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isVerified?: InputMaybe<Scalars['Boolean']>;
  lastUpdate?: InputMaybe<Scalars['DateTime']>;
  lastUpdateBy?: InputMaybe<E360App_userRef>;
  lat?: InputMaybe<Scalars['Float']>;
  lon?: InputMaybe<Scalars['Float']>;
  menu?: InputMaybe<Array<E360App_location_menuRef>>;
  menuSections?: InputMaybe<Array<E360App_location_menu_sectionRef>>;
  menuSubSections?: InputMaybe<Array<E360App_location_menu_subSectionRef>>;
  name?: InputMaybe<Scalars['String']>;
  partner?: InputMaybe<E360App_partnerRef>;
  petpass?: InputMaybe<PETPASS_locationRef>;
  phones?: InputMaybe<Array<Scalars['String']>>;
  publicPath?: InputMaybe<Scalars['String']>;
  resources?: InputMaybe<Array<E360App_location_area_resourceRef>>;
  roadType?: InputMaybe<Scalars['String']>;
  schedules?: InputMaybe<Array<E360App_locationScheduleRef>>;
  stablishment?: InputMaybe<E360App_stablishmentRef>;
  status?: InputMaybe<E360App_locationStatus>;
  subcategoryByPartner?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Array<E360App_location_menu_tagRef>>;
  thumbnail?: InputMaybe<E360Storage_fileRef>;
  thumbnailUrl?: InputMaybe<Scalars['String']>;
  tmp_contactName?: InputMaybe<Scalars['String']>;
  tmp_locality?: InputMaybe<Scalars['String']>;
  tmp_province?: InputMaybe<Scalars['String']>;
  tmp_source?: InputMaybe<Scalars['String']>;
  tmp_vet_consultingChannelType?: InputMaybe<Array<Scalars['String']>>;
  tmp_vet_consultingType?: InputMaybe<Array<Scalars['String']>>;
  tmp_vet_specialities?: InputMaybe<Array<Scalars['String']>>;
  types?: InputMaybe<Array<E360App_locationType>>;
  website?: InputMaybe<Scalars['String']>;
  workShifts?: InputMaybe<Array<E360App_location_area_workShiftRef>>;
  zipCode?: InputMaybe<Scalars['String']>;
};

export type E360App_locationRef = {
  address?: InputMaybe<Scalars['String']>;
  addressInfo?: InputMaybe<Scalars['String']>;
  allowAppointments?: InputMaybe<Scalars['Boolean']>;
  app?: InputMaybe<E360AppRef>;
  appoinmentLots?: InputMaybe<Array<E360App_location_appoinmentLotsRef>>;
  appoinments?: InputMaybe<Array<E360App_location_appoinmentRef>>;
  areas?: InputMaybe<Array<E360App_location_areaRef>>;
  avatar?: InputMaybe<Scalars['String']>;
  categoryByPartner?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<CountryRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  emails?: InputMaybe<Array<Scalars['String']>>;
  fullAddress?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<E360App_locationFileRef>>;
  galleryUrl?: InputMaybe<Array<Scalars['String']>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isVerified?: InputMaybe<Scalars['Boolean']>;
  lastUpdate?: InputMaybe<Scalars['DateTime']>;
  lastUpdateBy?: InputMaybe<E360App_userRef>;
  lat?: InputMaybe<Scalars['Float']>;
  lon?: InputMaybe<Scalars['Float']>;
  menu?: InputMaybe<Array<E360App_location_menuRef>>;
  menuSections?: InputMaybe<Array<E360App_location_menu_sectionRef>>;
  menuSubSections?: InputMaybe<Array<E360App_location_menu_subSectionRef>>;
  name?: InputMaybe<Scalars['String']>;
  partner?: InputMaybe<E360App_partnerRef>;
  petpass?: InputMaybe<PETPASS_locationRef>;
  phones?: InputMaybe<Array<Scalars['String']>>;
  publicPath?: InputMaybe<Scalars['String']>;
  resources?: InputMaybe<Array<E360App_location_area_resourceRef>>;
  roadType?: InputMaybe<Scalars['String']>;
  schedules?: InputMaybe<Array<E360App_locationScheduleRef>>;
  stablishment?: InputMaybe<E360App_stablishmentRef>;
  status?: InputMaybe<E360App_locationStatus>;
  subcategoryByPartner?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Array<E360App_location_menu_tagRef>>;
  thumbnail?: InputMaybe<E360Storage_fileRef>;
  thumbnailUrl?: InputMaybe<Scalars['String']>;
  tmp_contactName?: InputMaybe<Scalars['String']>;
  tmp_locality?: InputMaybe<Scalars['String']>;
  tmp_province?: InputMaybe<Scalars['String']>;
  tmp_source?: InputMaybe<Scalars['String']>;
  tmp_vet_consultingChannelType?: InputMaybe<Array<Scalars['String']>>;
  tmp_vet_consultingType?: InputMaybe<Array<Scalars['String']>>;
  tmp_vet_specialities?: InputMaybe<Array<Scalars['String']>>;
  types?: InputMaybe<Array<E360App_locationType>>;
  website?: InputMaybe<Scalars['String']>;
  workShifts?: InputMaybe<Array<E360App_location_area_workShiftRef>>;
  zipCode?: InputMaybe<Scalars['String']>;
};

export type E360App_locationSchedule = {
  __typename?: 'E360App_locationSchedule';
  days: Array<E360App_locationScheduleDay>;
  endAt: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  location: E360App_location;
  startAt: Scalars['String'];
};


export type E360App_locationSchedulelocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};

export type E360App_locationScheduleAggregateResult = {
  __typename?: 'E360App_locationScheduleAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endAtMax?: Maybe<Scalars['String']>;
  endAtMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  startAtMax?: Maybe<Scalars['String']>;
  startAtMin?: Maybe<Scalars['String']>;
};

export enum E360App_locationScheduleDay {
  FRIDAY = 'FRIDAY',
  MONDAY = 'MONDAY',
  SATURDAY = 'SATURDAY',
  SUNDAY = 'SUNDAY',
  THURSDAY = 'THURSDAY',
  TUESDAY = 'TUESDAY',
  WEDNESDAY = 'WEDNESDAY'
}

export type E360App_locationScheduleDay_hash = {
  eq?: InputMaybe<E360App_locationScheduleDay>;
  in?: InputMaybe<Array<InputMaybe<E360App_locationScheduleDay>>>;
};

export type E360App_locationScheduleFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_locationScheduleFilter>>>;
  days?: InputMaybe<E360App_locationScheduleDay_hash>;
  endAt?: InputMaybe<StringTermFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_locationScheduleHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_locationScheduleFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_locationScheduleFilter>>>;
  startAt?: InputMaybe<StringTermFilter>;
};

export enum E360App_locationScheduleHasFilter {
  days = 'days',
  endAt = 'endAt',
  guid = 'guid',
  location = 'location',
  startAt = 'startAt'
}

export type E360App_locationScheduleOrder = {
  asc?: InputMaybe<E360App_locationScheduleOrderable>;
  desc?: InputMaybe<E360App_locationScheduleOrderable>;
  then?: InputMaybe<E360App_locationScheduleOrder>;
};

export enum E360App_locationScheduleOrderable {
  endAt = 'endAt',
  guid = 'guid',
  startAt = 'startAt'
}

export type E360App_locationSchedulePatch = {
  days?: InputMaybe<Array<E360App_locationScheduleDay>>;
  endAt?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
  startAt?: InputMaybe<Scalars['String']>;
};

export type E360App_locationScheduleRef = {
  days?: InputMaybe<Array<E360App_locationScheduleDay>>;
  endAt?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  location?: InputMaybe<E360App_locationRef>;
  startAt?: InputMaybe<Scalars['String']>;
};

export enum E360App_locationStatus {
  ACTIVE = 'ACTIVE',
  CLOSED_PERMANENTLY = 'CLOSED_PERMANENTLY',
  CLOSED_TEMPORARILY = 'CLOSED_TEMPORARILY',
  INVALID_ADDRESS = 'INVALID_ADDRESS',
  IN_REVIEW = 'IN_REVIEW',
  NEW = 'NEW'
}

export type E360App_locationStatus_exact = {
  between?: InputMaybe<E360App_locationStatus>;
  eq?: InputMaybe<E360App_locationStatus>;
  ge?: InputMaybe<E360App_locationStatus>;
  gt?: InputMaybe<E360App_locationStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_locationStatus>>>;
  le?: InputMaybe<E360App_locationStatus>;
  lt?: InputMaybe<E360App_locationStatus>;
};

export enum E360App_locationType {
  BAR = 'BAR',
  BEACH = 'BEACH',
  COFFEE_SHOP = 'COFFEE_SHOP',
  CUSTOM_BY_PARTNER = 'CUSTOM_BY_PARTNER',
  GOVERNMENT = 'GOVERNMENT',
  HOTEL = 'HOTEL',
  MOBILITY = 'MOBILITY',
  OTHER = 'OTHER',
  PARK = 'PARK',
  PETSHOP = 'PETSHOP',
  RESTAURANT = 'RESTAURANT',
  RETAIL = 'RETAIL',
  SHELTER = 'SHELTER',
  VET = 'VET'
}

export type E360App_locationType_exact = {
  between?: InputMaybe<E360App_locationType>;
  eq?: InputMaybe<E360App_locationType>;
  ge?: InputMaybe<E360App_locationType>;
  gt?: InputMaybe<E360App_locationType>;
  in?: InputMaybe<Array<InputMaybe<E360App_locationType>>>;
  le?: InputMaybe<E360App_locationType>;
  lt?: InputMaybe<E360App_locationType>;
};

export type E360App_location_appoinment = {
  __typename?: 'E360App_location_appoinment';
  bookBy: E360App_user;
  comment?: Maybe<Scalars['String']>;
  endAt?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  location: E360App_location;
  startAt: Scalars['DateTime'];
  time: Scalars['String'];
};


export type E360App_location_appoinmentbookByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_location_appoinmentlocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};

export type E360App_location_appoinmentAggregateResult = {
  __typename?: 'E360App_location_appoinmentAggregateResult';
  commentMax?: Maybe<Scalars['String']>;
  commentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
  timeMax?: Maybe<Scalars['String']>;
  timeMin?: Maybe<Scalars['String']>;
};

export type E360App_location_appoinmentFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_location_appoinmentFilter>>>;
  endAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_appoinmentHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_location_appoinmentFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_appoinmentFilter>>>;
  startAt?: InputMaybe<DateTimeFilter>;
  time?: InputMaybe<StringTermFilter>;
};

export enum E360App_location_appoinmentHasFilter {
  bookBy = 'bookBy',
  comment = 'comment',
  endAt = 'endAt',
  guid = 'guid',
  location = 'location',
  startAt = 'startAt',
  time = 'time'
}

export type E360App_location_appoinmentLots = {
  __typename?: 'E360App_location_appoinmentLots';
  amount: Scalars['Int'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  label: Scalars['String'];
  location: E360App_location;
};


export type E360App_location_appoinmentLotslocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};

export type E360App_location_appoinmentLotsAggregateResult = {
  __typename?: 'E360App_location_appoinmentLotsAggregateResult';
  amountAvg?: Maybe<Scalars['Float']>;
  amountMax?: Maybe<Scalars['Int']>;
  amountMin?: Maybe<Scalars['Int']>;
  amountSum?: Maybe<Scalars['Int']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type E360App_location_appoinmentLotsFilter = {
  amount?: InputMaybe<IntFilter>;
  and?: InputMaybe<Array<InputMaybe<E360App_location_appoinmentLotsFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_appoinmentLotsHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  label?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_location_appoinmentLotsFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_appoinmentLotsFilter>>>;
};

export enum E360App_location_appoinmentLotsHasFilter {
  amount = 'amount',
  guid = 'guid',
  label = 'label',
  location = 'location'
}

export type E360App_location_appoinmentLotsOrder = {
  asc?: InputMaybe<E360App_location_appoinmentLotsOrderable>;
  desc?: InputMaybe<E360App_location_appoinmentLotsOrderable>;
  then?: InputMaybe<E360App_location_appoinmentLotsOrder>;
};

export enum E360App_location_appoinmentLotsOrderable {
  amount = 'amount',
  guid = 'guid',
  label = 'label'
}

export type E360App_location_appoinmentLotsPatch = {
  amount?: InputMaybe<Scalars['Int']>;
  guid?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
};

export type E360App_location_appoinmentLotsRef = {
  amount?: InputMaybe<Scalars['Int']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
};

export type E360App_location_appoinmentOrder = {
  asc?: InputMaybe<E360App_location_appoinmentOrderable>;
  desc?: InputMaybe<E360App_location_appoinmentOrderable>;
  then?: InputMaybe<E360App_location_appoinmentOrder>;
};

export enum E360App_location_appoinmentOrderable {
  comment = 'comment',
  endAt = 'endAt',
  guid = 'guid',
  startAt = 'startAt',
  time = 'time'
}

export type E360App_location_appoinmentPatch = {
  bookBy?: InputMaybe<E360App_userRef>;
  comment?: InputMaybe<Scalars['String']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  time?: InputMaybe<Scalars['String']>;
};

export type E360App_location_appoinmentRef = {
  bookBy?: InputMaybe<E360App_userRef>;
  comment?: InputMaybe<Scalars['String']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  location?: InputMaybe<E360App_locationRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  time?: InputMaybe<Scalars['String']>;
};

export type E360App_location_area = {
  __typename?: 'E360App_location_area';
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  location: E360App_location;
  name: Scalars['String'];
  resources: Array<E360App_location_area_resource>;
  resourcesAggregate?: Maybe<E360App_location_area_resourceAggregateResult>;
  workShifts: Array<E360App_location_area_workShift>;
  workShiftsAggregate?: Maybe<E360App_location_area_workShiftAggregateResult>;
};


export type E360App_location_arealocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type E360App_location_arearesourcesArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_resourceOrder>;
};


export type E360App_location_arearesourcesAggregateArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
};


export type E360App_location_areaworkShiftsArgs = {
  filter?: InputMaybe<E360App_location_area_workShiftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_workShiftOrder>;
};


export type E360App_location_areaworkShiftsAggregateArgs = {
  filter?: InputMaybe<E360App_location_area_workShiftFilter>;
};

export type E360App_location_areaAggregateResult = {
  __typename?: 'E360App_location_areaAggregateResult';
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_location_areaFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_location_areaFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_areaHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_location_areaFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_areaFilter>>>;
};

export enum E360App_location_areaHasFilter {
  description = 'description',
  guid = 'guid',
  location = 'location',
  name = 'name',
  resources = 'resources',
  workShifts = 'workShifts'
}

export type E360App_location_areaOrder = {
  asc?: InputMaybe<E360App_location_areaOrderable>;
  desc?: InputMaybe<E360App_location_areaOrderable>;
  then?: InputMaybe<E360App_location_areaOrder>;
};

export enum E360App_location_areaOrderable {
  description = 'description',
  guid = 'guid',
  name = 'name'
}

export type E360App_location_areaPatch = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  resources?: InputMaybe<Array<E360App_location_area_resourceRef>>;
  workShifts?: InputMaybe<Array<E360App_location_area_workShiftRef>>;
};

export type E360App_location_areaRef = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  resources?: InputMaybe<Array<E360App_location_area_resourceRef>>;
  workShifts?: InputMaybe<Array<E360App_location_area_workShiftRef>>;
};

export type E360App_location_area_resource = {
  __typename?: 'E360App_location_area_resource';
  amount: Scalars['Int'];
  area: E360App_location_area;
  capacity: Scalars['Int'];
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  location: E360App_location;
  name: Scalars['String'];
  workShift: E360App_location_area_workShift;
};


export type E360App_location_area_resourceareaArgs = {
  filter?: InputMaybe<E360App_location_areaFilter>;
};


export type E360App_location_area_resourcelocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type E360App_location_area_resourceworkShiftArgs = {
  filter?: InputMaybe<E360App_location_area_workShiftFilter>;
};

export type E360App_location_area_resourceAggregateResult = {
  __typename?: 'E360App_location_area_resourceAggregateResult';
  amountAvg?: Maybe<Scalars['Float']>;
  amountMax?: Maybe<Scalars['Int']>;
  amountMin?: Maybe<Scalars['Int']>;
  amountSum?: Maybe<Scalars['Int']>;
  capacityAvg?: Maybe<Scalars['Float']>;
  capacityMax?: Maybe<Scalars['Int']>;
  capacityMin?: Maybe<Scalars['Int']>;
  capacitySum?: Maybe<Scalars['Int']>;
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_location_area_resourceFilter = {
  amount?: InputMaybe<IntFilter>;
  and?: InputMaybe<Array<InputMaybe<E360App_location_area_resourceFilter>>>;
  capacity?: InputMaybe<IntFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_area_resourceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_location_area_resourceFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_area_resourceFilter>>>;
};

export enum E360App_location_area_resourceHasFilter {
  amount = 'amount',
  area = 'area',
  capacity = 'capacity',
  description = 'description',
  guid = 'guid',
  location = 'location',
  name = 'name',
  workShift = 'workShift'
}

export type E360App_location_area_resourceOrder = {
  asc?: InputMaybe<E360App_location_area_resourceOrderable>;
  desc?: InputMaybe<E360App_location_area_resourceOrderable>;
  then?: InputMaybe<E360App_location_area_resourceOrder>;
};

export enum E360App_location_area_resourceOrderable {
  amount = 'amount',
  capacity = 'capacity',
  description = 'description',
  guid = 'guid',
  name = 'name'
}

export type E360App_location_area_resourcePatch = {
  amount?: InputMaybe<Scalars['Int']>;
  area?: InputMaybe<E360App_location_areaRef>;
  capacity?: InputMaybe<Scalars['Int']>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  workShift?: InputMaybe<E360App_location_area_workShiftRef>;
};

export type E360App_location_area_resourceRef = {
  amount?: InputMaybe<Scalars['Int']>;
  area?: InputMaybe<E360App_location_areaRef>;
  capacity?: InputMaybe<Scalars['Int']>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  workShift?: InputMaybe<E360App_location_area_workShiftRef>;
};

export type E360App_location_area_workShift = {
  __typename?: 'E360App_location_area_workShift';
  area: E360App_location_area;
  days: Array<E360App_locationScheduleDay>;
  endAt: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  location: E360App_location;
  name: Scalars['String'];
  resources: Array<E360App_location_area_resource>;
  resourcesAggregate?: Maybe<E360App_location_area_resourceAggregateResult>;
  startAt: Scalars['String'];
};


export type E360App_location_area_workShiftareaArgs = {
  filter?: InputMaybe<E360App_location_areaFilter>;
};


export type E360App_location_area_workShiftlocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type E360App_location_area_workShiftresourcesArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_resourceOrder>;
};


export type E360App_location_area_workShiftresourcesAggregateArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
};

export type E360App_location_area_workShiftAggregateResult = {
  __typename?: 'E360App_location_area_workShiftAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endAtMax?: Maybe<Scalars['String']>;
  endAtMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  startAtMax?: Maybe<Scalars['String']>;
  startAtMin?: Maybe<Scalars['String']>;
};

export type E360App_location_area_workShiftFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_location_area_workShiftFilter>>>;
  days?: InputMaybe<E360App_locationScheduleDay_hash>;
  endAt?: InputMaybe<StringTermFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_area_workShiftHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_location_area_workShiftFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_area_workShiftFilter>>>;
  startAt?: InputMaybe<StringTermFilter>;
};

export enum E360App_location_area_workShiftHasFilter {
  area = 'area',
  days = 'days',
  endAt = 'endAt',
  guid = 'guid',
  location = 'location',
  name = 'name',
  resources = 'resources',
  startAt = 'startAt'
}

export type E360App_location_area_workShiftOrder = {
  asc?: InputMaybe<E360App_location_area_workShiftOrderable>;
  desc?: InputMaybe<E360App_location_area_workShiftOrderable>;
  then?: InputMaybe<E360App_location_area_workShiftOrder>;
};

export enum E360App_location_area_workShiftOrderable {
  endAt = 'endAt',
  guid = 'guid',
  name = 'name',
  startAt = 'startAt'
}

export type E360App_location_area_workShiftPatch = {
  area?: InputMaybe<E360App_location_areaRef>;
  days?: InputMaybe<Array<E360App_locationScheduleDay>>;
  endAt?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  resources?: InputMaybe<Array<E360App_location_area_resourceRef>>;
  startAt?: InputMaybe<Scalars['String']>;
};

export type E360App_location_area_workShiftRef = {
  area?: InputMaybe<E360App_location_areaRef>;
  days?: InputMaybe<Array<E360App_locationScheduleDay>>;
  endAt?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  resources?: InputMaybe<Array<E360App_location_area_resourceRef>>;
  startAt?: InputMaybe<Scalars['String']>;
};

export type E360App_location_menu = {
  __typename?: 'E360App_location_menu';
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isPublished: Scalars['Boolean'];
  location: E360App_location;
  name: Scalars['String'];
  price?: Maybe<Scalars['Float']>;
  sections: Array<E360App_location_menu_section>;
  sectionsAggregate?: Maybe<E360App_location_menu_sectionAggregateResult>;
};


export type E360App_location_menulocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type E360App_location_menusectionsArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_sectionOrder>;
};


export type E360App_location_menusectionsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
};

export type E360App_location_menuAggregateResult = {
  __typename?: 'E360App_location_menuAggregateResult';
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  priceAvg?: Maybe<Scalars['Float']>;
  priceMax?: Maybe<Scalars['Float']>;
  priceMin?: Maybe<Scalars['Float']>;
  priceSum?: Maybe<Scalars['Float']>;
};

export type E360App_location_menuFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_location_menuFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_menuHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_location_menuFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_menuFilter>>>;
};

export enum E360App_location_menuHasFilter {
  description = 'description',
  guid = 'guid',
  isPublished = 'isPublished',
  location = 'location',
  name = 'name',
  price = 'price',
  sections = 'sections'
}

export type E360App_location_menuOrder = {
  asc?: InputMaybe<E360App_location_menuOrderable>;
  desc?: InputMaybe<E360App_location_menuOrderable>;
  then?: InputMaybe<E360App_location_menuOrder>;
};

export enum E360App_location_menuOrderable {
  description = 'description',
  guid = 'guid',
  name = 'name',
  price = 'price'
}

export type E360App_location_menuPatch = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  sections?: InputMaybe<Array<E360App_location_menu_sectionRef>>;
};

export type E360App_location_menuRef = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  sections?: InputMaybe<Array<E360App_location_menu_sectionRef>>;
};

export type E360App_location_menu_combo = {
  __typename?: 'E360App_location_menu_combo';
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isPublished: Scalars['Boolean'];
  items: Array<E360App_location_menu_item>;
  itemsAggregate?: Maybe<E360App_location_menu_itemAggregateResult>;
  name: Scalars['String'];
  price?: Maybe<Scalars['Float']>;
  sections: Array<E360App_location_menu_section_item>;
  sectionsAggregate?: Maybe<E360App_location_menu_section_itemAggregateResult>;
  thumb?: Maybe<Scalars['String']>;
};


export type E360App_location_menu_comboitemsArgs = {
  filter?: InputMaybe<E360App_location_menu_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_itemOrder>;
};


export type E360App_location_menu_comboitemsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_itemFilter>;
};


export type E360App_location_menu_combosectionsArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_section_itemOrder>;
};


export type E360App_location_menu_combosectionsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
};

export type E360App_location_menu_comboAggregateResult = {
  __typename?: 'E360App_location_menu_comboAggregateResult';
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  priceAvg?: Maybe<Scalars['Float']>;
  priceMax?: Maybe<Scalars['Float']>;
  priceMin?: Maybe<Scalars['Float']>;
  priceSum?: Maybe<Scalars['Float']>;
  thumbMax?: Maybe<Scalars['String']>;
  thumbMin?: Maybe<Scalars['String']>;
};

export type E360App_location_menu_comboFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_location_menu_comboFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_menu_comboHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_location_menu_comboFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_menu_comboFilter>>>;
};

export enum E360App_location_menu_comboHasFilter {
  description = 'description',
  guid = 'guid',
  isPublished = 'isPublished',
  items = 'items',
  name = 'name',
  price = 'price',
  sections = 'sections',
  thumb = 'thumb'
}

export type E360App_location_menu_comboOrder = {
  asc?: InputMaybe<E360App_location_menu_comboOrderable>;
  desc?: InputMaybe<E360App_location_menu_comboOrderable>;
  then?: InputMaybe<E360App_location_menu_comboOrder>;
};

export enum E360App_location_menu_comboOrderable {
  description = 'description',
  guid = 'guid',
  name = 'name',
  price = 'price',
  thumb = 'thumb'
}

export type E360App_location_menu_comboPatch = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<E360App_location_menu_itemRef>>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  sections?: InputMaybe<Array<E360App_location_menu_section_itemRef>>;
  thumb?: InputMaybe<Scalars['String']>;
};

export type E360App_location_menu_comboRef = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<E360App_location_menu_itemRef>>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  sections?: InputMaybe<Array<E360App_location_menu_section_itemRef>>;
  thumb?: InputMaybe<Scalars['String']>;
};

export type E360App_location_menu_item = {
  __typename?: 'E360App_location_menu_item';
  alert?: Maybe<Array<E360App_location_menu_itemAlert>>;
  combos: Array<E360App_location_menu_combo>;
  combosAggregate?: Maybe<E360App_location_menu_comboAggregateResult>;
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isNotAvailableForCombo: Scalars['Boolean'];
  isNotAvailableForOffer: Scalars['Boolean'];
  isPublished: Scalars['Boolean'];
  measure: E360App_location_menu_itemMeasure;
  name: Scalars['String'];
  price?: Maybe<Scalars['Float']>;
  sections: Array<E360App_location_menu_section_item>;
  sectionsAggregate?: Maybe<E360App_location_menu_section_itemAggregateResult>;
  tags: Array<E360App_location_menu_tag>;
  tagsAggregate?: Maybe<E360App_location_menu_tagAggregateResult>;
  thumb?: Maybe<Scalars['String']>;
  type: E360App_location_menu_itemType;
};


export type E360App_location_menu_itemcombosArgs = {
  filter?: InputMaybe<E360App_location_menu_comboFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_comboOrder>;
};


export type E360App_location_menu_itemcombosAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_comboFilter>;
};


export type E360App_location_menu_itemsectionsArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_section_itemOrder>;
};


export type E360App_location_menu_itemsectionsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
};


export type E360App_location_menu_itemtagsArgs = {
  filter?: InputMaybe<E360App_location_menu_tagFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_tagOrder>;
};


export type E360App_location_menu_itemtagsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_tagFilter>;
};

export type E360App_location_menu_itemAggregateResult = {
  __typename?: 'E360App_location_menu_itemAggregateResult';
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  priceAvg?: Maybe<Scalars['Float']>;
  priceMax?: Maybe<Scalars['Float']>;
  priceMin?: Maybe<Scalars['Float']>;
  priceSum?: Maybe<Scalars['Float']>;
  thumbMax?: Maybe<Scalars['String']>;
  thumbMin?: Maybe<Scalars['String']>;
};

export enum E360App_location_menu_itemAlert {
  CELERY = 'CELERY',
  CRUSTACEANS = 'CRUSTACEANS',
  DAIRY = 'DAIRY',
  EGGS = 'EGGS',
  FISH = 'FISH',
  GLUTEN = 'GLUTEN',
  LUPIN = 'LUPIN',
  MOLLUSCS = 'MOLLUSCS',
  MUSTARD = 'MUSTARD',
  NUTS = 'NUTS',
  PEANUTS = 'PEANUTS',
  SESAME = 'SESAME',
  SOY = 'SOY',
  SULPHITES = 'SULPHITES'
}

export type E360App_location_menu_itemAlert_hash = {
  eq?: InputMaybe<E360App_location_menu_itemAlert>;
  in?: InputMaybe<Array<InputMaybe<E360App_location_menu_itemAlert>>>;
};

export type E360App_location_menu_itemFilter = {
  alert?: InputMaybe<E360App_location_menu_itemAlert_hash>;
  and?: InputMaybe<Array<InputMaybe<E360App_location_menu_itemFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_menu_itemHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isNotAvailableForCombo?: InputMaybe<Scalars['Boolean']>;
  isNotAvailableForOffer?: InputMaybe<Scalars['Boolean']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  measure?: InputMaybe<E360App_location_menu_itemMeasure_hash>;
  name?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_location_menu_itemFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_menu_itemFilter>>>;
  type?: InputMaybe<E360App_location_menu_itemType_hash>;
};

export enum E360App_location_menu_itemHasFilter {
  alert = 'alert',
  combos = 'combos',
  description = 'description',
  guid = 'guid',
  isNotAvailableForCombo = 'isNotAvailableForCombo',
  isNotAvailableForOffer = 'isNotAvailableForOffer',
  isPublished = 'isPublished',
  measure = 'measure',
  name = 'name',
  price = 'price',
  sections = 'sections',
  tags = 'tags',
  thumb = 'thumb',
  type = 'type'
}

export enum E360App_location_menu_itemMeasure {
  GRAMS = 'GRAMS',
  KILOGRAMS = 'KILOGRAMS',
  LITERS = 'LITERS',
  PERSONS = 'PERSONS',
  PORTIONS = 'PORTIONS',
  UNIT = 'UNIT'
}

export type E360App_location_menu_itemMeasure_hash = {
  eq?: InputMaybe<E360App_location_menu_itemMeasure>;
  in?: InputMaybe<Array<InputMaybe<E360App_location_menu_itemMeasure>>>;
};

export type E360App_location_menu_itemOrder = {
  asc?: InputMaybe<E360App_location_menu_itemOrderable>;
  desc?: InputMaybe<E360App_location_menu_itemOrderable>;
  then?: InputMaybe<E360App_location_menu_itemOrder>;
};

export enum E360App_location_menu_itemOrderable {
  description = 'description',
  guid = 'guid',
  name = 'name',
  price = 'price',
  thumb = 'thumb'
}

export type E360App_location_menu_itemPatch = {
  alert?: InputMaybe<Array<E360App_location_menu_itemAlert>>;
  combos?: InputMaybe<Array<E360App_location_menu_comboRef>>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  isNotAvailableForCombo?: InputMaybe<Scalars['Boolean']>;
  isNotAvailableForOffer?: InputMaybe<Scalars['Boolean']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  measure?: InputMaybe<E360App_location_menu_itemMeasure>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  sections?: InputMaybe<Array<E360App_location_menu_section_itemRef>>;
  tags?: InputMaybe<Array<E360App_location_menu_tagRef>>;
  thumb?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<E360App_location_menu_itemType>;
};

export type E360App_location_menu_itemRef = {
  alert?: InputMaybe<Array<E360App_location_menu_itemAlert>>;
  combos?: InputMaybe<Array<E360App_location_menu_comboRef>>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isNotAvailableForCombo?: InputMaybe<Scalars['Boolean']>;
  isNotAvailableForOffer?: InputMaybe<Scalars['Boolean']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  measure?: InputMaybe<E360App_location_menu_itemMeasure>;
  name?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  sections?: InputMaybe<Array<E360App_location_menu_section_itemRef>>;
  tags?: InputMaybe<Array<E360App_location_menu_tagRef>>;
  thumb?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<E360App_location_menu_itemType>;
};

export enum E360App_location_menu_itemType {
  DESSERT = 'DESSERT',
  DRINK = 'DRINK',
  FOOD = 'FOOD',
  OTHER = 'OTHER',
  SNACK = 'SNACK'
}

export type E360App_location_menu_itemType_hash = {
  eq?: InputMaybe<E360App_location_menu_itemType>;
  in?: InputMaybe<Array<InputMaybe<E360App_location_menu_itemType>>>;
};

export type E360App_location_menu_section = {
  __typename?: 'E360App_location_menu_section';
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isPublished: Scalars['Boolean'];
  items: Array<E360App_location_menu_section_item>;
  itemsAggregate?: Maybe<E360App_location_menu_section_itemAggregateResult>;
  location: E360App_location;
  menu: Array<E360App_location_menu>;
  menuAggregate?: Maybe<E360App_location_menuAggregateResult>;
  name: Scalars['String'];
  subSections: Array<E360App_location_menu_subSection>;
  subSectionsAggregate?: Maybe<E360App_location_menu_subSectionAggregateResult>;
};


export type E360App_location_menu_sectionitemsArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_section_itemOrder>;
};


export type E360App_location_menu_sectionitemsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
};


export type E360App_location_menu_sectionlocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type E360App_location_menu_sectionmenuArgs = {
  filter?: InputMaybe<E360App_location_menuFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menuOrder>;
};


export type E360App_location_menu_sectionmenuAggregateArgs = {
  filter?: InputMaybe<E360App_location_menuFilter>;
};


export type E360App_location_menu_sectionsubSectionsArgs = {
  filter?: InputMaybe<E360App_location_menu_subSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_subSectionOrder>;
};


export type E360App_location_menu_sectionsubSectionsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_subSectionFilter>;
};

export type E360App_location_menu_sectionAggregateResult = {
  __typename?: 'E360App_location_menu_sectionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_location_menu_sectionFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_location_menu_sectionFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_menu_sectionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_location_menu_sectionFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_menu_sectionFilter>>>;
};

export enum E360App_location_menu_sectionHasFilter {
  description = 'description',
  guid = 'guid',
  isPublished = 'isPublished',
  items = 'items',
  location = 'location',
  menu = 'menu',
  name = 'name',
  subSections = 'subSections'
}

export type E360App_location_menu_sectionOrder = {
  asc?: InputMaybe<E360App_location_menu_sectionOrderable>;
  desc?: InputMaybe<E360App_location_menu_sectionOrderable>;
  then?: InputMaybe<E360App_location_menu_sectionOrder>;
};

export enum E360App_location_menu_sectionOrderable {
  description = 'description',
  guid = 'guid',
  name = 'name'
}

export type E360App_location_menu_sectionPatch = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<E360App_location_menu_section_itemRef>>;
  location?: InputMaybe<E360App_locationRef>;
  menu?: InputMaybe<Array<E360App_location_menuRef>>;
  name?: InputMaybe<Scalars['String']>;
  subSections?: InputMaybe<Array<E360App_location_menu_subSectionRef>>;
};

export type E360App_location_menu_sectionRef = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<E360App_location_menu_section_itemRef>>;
  location?: InputMaybe<E360App_locationRef>;
  menu?: InputMaybe<Array<E360App_location_menuRef>>;
  name?: InputMaybe<Scalars['String']>;
  subSections?: InputMaybe<Array<E360App_location_menu_subSectionRef>>;
};

export type E360App_location_menu_section_item = {
  __typename?: 'E360App_location_menu_section_item';
  combo?: Maybe<E360App_location_menu_combo>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  isPublished: Scalars['Boolean'];
  item?: Maybe<E360App_location_menu_item>;
  section?: Maybe<E360App_location_menu_section>;
  subSection?: Maybe<E360App_location_menu_subSection>;
};


export type E360App_location_menu_section_itemcomboArgs = {
  filter?: InputMaybe<E360App_location_menu_comboFilter>;
};


export type E360App_location_menu_section_itemitemArgs = {
  filter?: InputMaybe<E360App_location_menu_itemFilter>;
};


export type E360App_location_menu_section_itemsectionArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
};


export type E360App_location_menu_section_itemsubSectionArgs = {
  filter?: InputMaybe<E360App_location_menu_subSectionFilter>;
};

export type E360App_location_menu_section_itemAggregateResult = {
  __typename?: 'E360App_location_menu_section_itemAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type E360App_location_menu_section_itemFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_location_menu_section_itemFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_menu_section_itemHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<E360App_location_menu_section_itemFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_menu_section_itemFilter>>>;
};

export enum E360App_location_menu_section_itemHasFilter {
  combo = 'combo',
  guid = 'guid',
  index = 'index',
  isPublished = 'isPublished',
  item = 'item',
  section = 'section',
  subSection = 'subSection'
}

export type E360App_location_menu_section_itemOrder = {
  asc?: InputMaybe<E360App_location_menu_section_itemOrderable>;
  desc?: InputMaybe<E360App_location_menu_section_itemOrderable>;
  then?: InputMaybe<E360App_location_menu_section_itemOrder>;
};

export enum E360App_location_menu_section_itemOrderable {
  guid = 'guid',
  index = 'index'
}

export type E360App_location_menu_section_itemPatch = {
  combo?: InputMaybe<E360App_location_menu_comboRef>;
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  item?: InputMaybe<E360App_location_menu_itemRef>;
  section?: InputMaybe<E360App_location_menu_sectionRef>;
  subSection?: InputMaybe<E360App_location_menu_subSectionRef>;
};

export type E360App_location_menu_section_itemRef = {
  combo?: InputMaybe<E360App_location_menu_comboRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  item?: InputMaybe<E360App_location_menu_itemRef>;
  section?: InputMaybe<E360App_location_menu_sectionRef>;
  subSection?: InputMaybe<E360App_location_menu_subSectionRef>;
};

export type E360App_location_menu_subSection = {
  __typename?: 'E360App_location_menu_subSection';
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  isPublished: Scalars['Boolean'];
  items: Array<E360App_location_menu_section_item>;
  itemsAggregate?: Maybe<E360App_location_menu_section_itemAggregateResult>;
  location: E360App_location;
  name: Scalars['String'];
  section?: Maybe<E360App_location_menu_section>;
};


export type E360App_location_menu_subSectionitemsArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_section_itemOrder>;
};


export type E360App_location_menu_subSectionitemsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
};


export type E360App_location_menu_subSectionlocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type E360App_location_menu_subSectionsectionArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
};

export type E360App_location_menu_subSectionAggregateResult = {
  __typename?: 'E360App_location_menu_subSectionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_location_menu_subSectionFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_location_menu_subSectionFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_menu_subSectionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_location_menu_subSectionFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_menu_subSectionFilter>>>;
};

export enum E360App_location_menu_subSectionHasFilter {
  description = 'description',
  guid = 'guid',
  index = 'index',
  isPublished = 'isPublished',
  items = 'items',
  location = 'location',
  name = 'name',
  section = 'section'
}

export type E360App_location_menu_subSectionOrder = {
  asc?: InputMaybe<E360App_location_menu_subSectionOrderable>;
  desc?: InputMaybe<E360App_location_menu_subSectionOrderable>;
  then?: InputMaybe<E360App_location_menu_subSectionOrder>;
};

export enum E360App_location_menu_subSectionOrderable {
  description = 'description',
  guid = 'guid',
  index = 'index',
  name = 'name'
}

export type E360App_location_menu_subSectionPatch = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<E360App_location_menu_section_itemRef>>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<E360App_location_menu_sectionRef>;
};

export type E360App_location_menu_subSectionRef = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  isPublished?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<E360App_location_menu_section_itemRef>>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<E360App_location_menu_sectionRef>;
};

export type E360App_location_menu_tag = {
  __typename?: 'E360App_location_menu_tag';
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  items: Array<E360App_location_menu_item>;
  itemsAggregate?: Maybe<E360App_location_menu_itemAggregateResult>;
  location: E360App_location;
  name: Scalars['String'];
};


export type E360App_location_menu_tagitemsArgs = {
  filter?: InputMaybe<E360App_location_menu_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_itemOrder>;
};


export type E360App_location_menu_tagitemsAggregateArgs = {
  filter?: InputMaybe<E360App_location_menu_itemFilter>;
};


export type E360App_location_menu_taglocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};

export type E360App_location_menu_tagAggregateResult = {
  __typename?: 'E360App_location_menu_tagAggregateResult';
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_location_menu_tagFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_location_menu_tagFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_location_menu_tagHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360App_location_menu_tagFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_location_menu_tagFilter>>>;
};

export enum E360App_location_menu_tagHasFilter {
  description = 'description',
  guid = 'guid',
  items = 'items',
  location = 'location',
  name = 'name'
}

export type E360App_location_menu_tagOrder = {
  asc?: InputMaybe<E360App_location_menu_tagOrderable>;
  desc?: InputMaybe<E360App_location_menu_tagOrderable>;
  then?: InputMaybe<E360App_location_menu_tagOrder>;
};

export enum E360App_location_menu_tagOrderable {
  description = 'description',
  guid = 'guid',
  name = 'name'
}

export type E360App_location_menu_tagPatch = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<E360App_location_menu_itemRef>>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
};

export type E360App_location_menu_tagRef = {
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  items?: InputMaybe<Array<E360App_location_menu_itemRef>>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
};

export type E360App_notification = {
  __typename?: 'E360App_notification';
  app?: Maybe<E360App>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  message: Scalars['String'];
  title: Scalars['String'];
  users: Array<E360App_user_notification>;
  usersAggregate?: Maybe<E360App_user_notificationAggregateResult>;
};


export type E360App_notificationappArgs = {
  filter?: InputMaybe<E360AppFilter>;
};


export type E360App_notificationcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_notificationusersArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_notificationOrder>;
};


export type E360App_notificationusersAggregateArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
};

export type E360App_notificationAggregateResult = {
  __typename?: 'E360App_notificationAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  messageMax?: Maybe<Scalars['String']>;
  messageMin?: Maybe<Scalars['String']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
};

export type E360App_notificationFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_notificationFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_notificationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  message?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<E360App_notificationFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_notificationFilter>>>;
  title?: InputMaybe<StringExactFilter_StringRegExpFilter>;
};

export enum E360App_notificationHasFilter {
  app = 'app',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  message = 'message',
  title = 'title',
  users = 'users'
}

export type E360App_notificationOrder = {
  asc?: InputMaybe<E360App_notificationOrderable>;
  desc?: InputMaybe<E360App_notificationOrderable>;
  then?: InputMaybe<E360App_notificationOrder>;
};

export enum E360App_notificationOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  message = 'message',
  title = 'title'
}

export type E360App_notificationPatch = {
  app?: InputMaybe<E360AppRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  message?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Array<E360App_user_notificationRef>>;
};

export type E360App_notificationRef = {
  app?: InputMaybe<E360AppRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  message?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Array<E360App_user_notificationRef>>;
};

export type E360App_organization = {
  __typename?: 'E360App_organization';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  e360App?: Maybe<E360App>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  stablishmentUsers: Array<E360App_stablishment_user>;
  stablishmentUsersAggregate?: Maybe<E360App_stablishment_userAggregateResult>;
  stablishments: Array<E360App_stablishment>;
  stablishmentsAggregate?: Maybe<E360App_stablishmentAggregateResult>;
  type: E360App_organizationType;
  users: Array<E360App_organization_user>;
  usersAggregate?: Maybe<E360App_organization_userAggregateResult>;
};


export type E360App_organizationcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_organizatione360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
};


export type E360App_organizationstablishmentUsersArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishment_userOrder>;
};


export type E360App_organizationstablishmentUsersAggregateArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
};


export type E360App_organizationstablishmentsArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishmentOrder>;
};


export type E360App_organizationstablishmentsAggregateArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
};


export type E360App_organizationusersArgs = {
  filter?: InputMaybe<E360App_organization_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organization_userOrder>;
};


export type E360App_organizationusersAggregateArgs = {
  filter?: InputMaybe<E360App_organization_userFilter>;
};

export type E360App_organizationAggregateResult = {
  __typename?: 'E360App_organizationAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_organizationFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_organizationFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_organizationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<E360App_organizationFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_organizationFilter>>>;
  type?: InputMaybe<E360App_organizationType_exact>;
};

export enum E360App_organizationHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  e360App = 'e360App',
  guid = 'guid',
  name = 'name',
  stablishmentUsers = 'stablishmentUsers',
  stablishments = 'stablishments',
  type = 'type',
  users = 'users'
}

export type E360App_organizationOrder = {
  asc?: InputMaybe<E360App_organizationOrderable>;
  desc?: InputMaybe<E360App_organizationOrderable>;
  then?: InputMaybe<E360App_organizationOrder>;
};

export enum E360App_organizationOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type E360App_organizationPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  e360App?: InputMaybe<E360AppRef>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  stablishmentUsers?: InputMaybe<Array<E360App_stablishment_userRef>>;
  stablishments?: InputMaybe<Array<E360App_stablishmentRef>>;
  type?: InputMaybe<E360App_organizationType>;
  users?: InputMaybe<Array<E360App_organization_userRef>>;
};

export type E360App_organizationRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  e360App?: InputMaybe<E360AppRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  stablishmentUsers?: InputMaybe<Array<E360App_stablishment_userRef>>;
  stablishments?: InputMaybe<Array<E360App_stablishmentRef>>;
  type?: InputMaybe<E360App_organizationType>;
  users?: InputMaybe<Array<E360App_organization_userRef>>;
};

export enum E360App_organizationType {
  PARTNER = 'PARTNER',
  USER = 'USER'
}

export type E360App_organizationType_exact = {
  between?: InputMaybe<E360App_organizationType>;
  eq?: InputMaybe<E360App_organizationType>;
  ge?: InputMaybe<E360App_organizationType>;
  gt?: InputMaybe<E360App_organizationType>;
  in?: InputMaybe<Array<InputMaybe<E360App_organizationType>>>;
  le?: InputMaybe<E360App_organizationType>;
  lt?: InputMaybe<E360App_organizationType>;
};

export type E360App_organization_user = {
  __typename?: 'E360App_organization_user';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  organization: E360App_organization;
  role: E360App_organization_userRole;
  stablishmentUsers: Array<E360App_stablishment_user>;
  stablishmentUsersAggregate?: Maybe<E360App_stablishment_userAggregateResult>;
  user?: Maybe<E360App_user>;
};


export type E360App_organization_usercreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_organization_userorganizationArgs = {
  filter?: InputMaybe<E360App_organizationFilter>;
};


export type E360App_organization_userstablishmentUsersArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishment_userOrder>;
};


export type E360App_organization_userstablishmentUsersAggregateArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
};


export type E360App_organization_useruserArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};

export type E360App_organization_userAggregateResult = {
  __typename?: 'E360App_organization_userAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type E360App_organization_userFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_organization_userFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_organization_userHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_organization_userFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_organization_userFilter>>>;
  role?: InputMaybe<E360App_organization_userRole_exact>;
};

export enum E360App_organization_userHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  organization = 'organization',
  role = 'role',
  stablishmentUsers = 'stablishmentUsers',
  user = 'user'
}

export type E360App_organization_userOrder = {
  asc?: InputMaybe<E360App_organization_userOrderable>;
  desc?: InputMaybe<E360App_organization_userOrderable>;
  then?: InputMaybe<E360App_organization_userOrder>;
};

export enum E360App_organization_userOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type E360App_organization_userPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<E360App_organizationRef>;
  role?: InputMaybe<E360App_organization_userRole>;
  stablishmentUsers?: InputMaybe<Array<E360App_stablishment_userRef>>;
  user?: InputMaybe<E360App_userRef>;
};

export type E360App_organization_userRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  organization?: InputMaybe<E360App_organizationRef>;
  role?: InputMaybe<E360App_organization_userRole>;
  stablishmentUsers?: InputMaybe<Array<E360App_stablishment_userRef>>;
  user?: InputMaybe<E360App_userRef>;
};

export enum E360App_organization_userRole {
  ADMIN = 'ADMIN',
  MANAGER = 'MANAGER'
}

export type E360App_organization_userRole_exact = {
  between?: InputMaybe<E360App_organization_userRole>;
  eq?: InputMaybe<E360App_organization_userRole>;
  ge?: InputMaybe<E360App_organization_userRole>;
  gt?: InputMaybe<E360App_organization_userRole>;
  in?: InputMaybe<Array<InputMaybe<E360App_organization_userRole>>>;
  le?: InputMaybe<E360App_organization_userRole>;
  lt?: InputMaybe<E360App_organization_userRole>;
};

export type E360App_partner = {
  __typename?: 'E360App_partner';
  allowedOrigins: Array<Scalars['String']>;
  contracts: Array<E360App_shop_partner_contract>;
  contractsAggregate?: Maybe<E360App_shop_partner_contractAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  customerContracts: Array<E360App_shop_customer_contract>;
  customerContractsAggregate?: Maybe<E360App_shop_customer_contractAggregateResult>;
  e360App?: Maybe<E360App>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  locations: Array<E360App_location>;
  locationsAggregate?: Maybe<E360App_locationAggregateResult>;
  name: Scalars['String'];
  operations: Array<E360App_shop_operation>;
  operationsAggregate?: Maybe<E360App_shop_operationAggregateResult>;
  operationsRef?: Maybe<Scalars['String']>;
  petPassPartner?: Maybe<PETPASS_partner>;
  promotionCodes: Array<E360App_shop_promotionCode>;
  promotionCodesAggregate?: Maybe<E360App_shop_promotionCodeAggregateResult>;
  promotions: Array<E360App_shop_promotion>;
  promotionsAggregate?: Maybe<E360App_shop_promotionAggregateResult>;
  users?: Maybe<Array<E360App_user_partner>>;
  usersAggregate?: Maybe<E360App_user_partnerAggregateResult>;
  webhooks: Array<E360App_partner_webhook>;
  webhooksAggregate?: Maybe<E360App_partner_webhookAggregateResult>;
};


export type E360App_partnercontractsArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_partner_contractOrder>;
};


export type E360App_partnercontractsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
};


export type E360App_partnercreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_partnercustomerContractsArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractOrder>;
};


export type E360App_partnercustomerContractsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
};


export type E360App_partnere360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
};


export type E360App_partnerlocationsArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationOrder>;
};


export type E360App_partnerlocationsAggregateArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type E360App_partneroperationsArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_operationOrder>;
};


export type E360App_partneroperationsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
};


export type E360App_partnerpetPassPartnerArgs = {
  filter?: InputMaybe<PETPASS_partnerFilter>;
};


export type E360App_partnerpromotionCodesArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionCodeOrder>;
};


export type E360App_partnerpromotionCodesAggregateArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
};


export type E360App_partnerpromotionsArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionOrder>;
};


export type E360App_partnerpromotionsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
};


export type E360App_partnerusersArgs = {
  filter?: InputMaybe<E360App_user_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_partnerOrder>;
};


export type E360App_partnerusersAggregateArgs = {
  filter?: InputMaybe<E360App_user_partnerFilter>;
};


export type E360App_partnerwebhooksArgs = {
  filter?: InputMaybe<E360App_partner_webhookFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partner_webhookOrder>;
};


export type E360App_partnerwebhooksAggregateArgs = {
  filter?: InputMaybe<E360App_partner_webhookFilter>;
};

export type E360App_partnerAggregateResult = {
  __typename?: 'E360App_partnerAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  operationsRefMax?: Maybe<Scalars['String']>;
  operationsRefMin?: Maybe<Scalars['String']>;
};

export type E360App_partnerFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_partnerFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_partnerHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<E360App_partnerFilter>;
  operationsRef?: InputMaybe<StringExactFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_partnerFilter>>>;
};

export enum E360App_partnerHasFilter {
  allowedOrigins = 'allowedOrigins',
  contracts = 'contracts',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  customerContracts = 'customerContracts',
  e360App = 'e360App',
  guid = 'guid',
  locations = 'locations',
  name = 'name',
  operations = 'operations',
  operationsRef = 'operationsRef',
  petPassPartner = 'petPassPartner',
  promotionCodes = 'promotionCodes',
  promotions = 'promotions',
  users = 'users',
  webhooks = 'webhooks'
}

export type E360App_partnerOrder = {
  asc?: InputMaybe<E360App_partnerOrderable>;
  desc?: InputMaybe<E360App_partnerOrderable>;
  then?: InputMaybe<E360App_partnerOrder>;
};

export enum E360App_partnerOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name',
  operationsRef = 'operationsRef'
}

export type E360App_partnerPatch = {
  allowedOrigins?: InputMaybe<Array<Scalars['String']>>;
  contracts?: InputMaybe<Array<E360App_shop_partner_contractRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  e360App?: InputMaybe<E360AppRef>;
  guid?: InputMaybe<Scalars['String']>;
  locations?: InputMaybe<Array<E360App_locationRef>>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<E360App_shop_operationRef>>;
  operationsRef?: InputMaybe<Scalars['String']>;
  petPassPartner?: InputMaybe<PETPASS_partnerRef>;
  promotionCodes?: InputMaybe<Array<E360App_shop_promotionCodeRef>>;
  promotions?: InputMaybe<Array<E360App_shop_promotionRef>>;
  users?: InputMaybe<Array<E360App_user_partnerRef>>;
  webhooks?: InputMaybe<Array<E360App_partner_webhookRef>>;
};

export type E360App_partnerRef = {
  allowedOrigins?: InputMaybe<Array<Scalars['String']>>;
  contracts?: InputMaybe<Array<E360App_shop_partner_contractRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  e360App?: InputMaybe<E360AppRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  locations?: InputMaybe<Array<E360App_locationRef>>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<E360App_shop_operationRef>>;
  operationsRef?: InputMaybe<Scalars['String']>;
  petPassPartner?: InputMaybe<PETPASS_partnerRef>;
  promotionCodes?: InputMaybe<Array<E360App_shop_promotionCodeRef>>;
  promotions?: InputMaybe<Array<E360App_shop_promotionRef>>;
  users?: InputMaybe<Array<E360App_user_partnerRef>>;
  webhooks?: InputMaybe<Array<E360App_partner_webhookRef>>;
};

export enum E360App_partner_contactStatus {
  ACTIVE = 'ACTIVE',
  DELETED = 'DELETED',
  EXPIRED = 'EXPIRED',
  INACTIVE = 'INACTIVE'
}

export type E360App_partner_contactStatus_exact = {
  between?: InputMaybe<E360App_partner_contactStatus>;
  eq?: InputMaybe<E360App_partner_contactStatus>;
  ge?: InputMaybe<E360App_partner_contactStatus>;
  gt?: InputMaybe<E360App_partner_contactStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_partner_contactStatus>>>;
  le?: InputMaybe<E360App_partner_contactStatus>;
  lt?: InputMaybe<E360App_partner_contactStatus>;
};

export type E360App_partner_webhook = {
  __typename?: 'E360App_partner_webhook';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  env: E360App_partner_webhookEnv;
  guid: Scalars['String'];
  id: Scalars['ID'];
  partner?: Maybe<E360App_partner>;
  url: Scalars['String'];
};


export type E360App_partner_webhookcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_partner_webhookpartnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};

export type E360App_partner_webhookAggregateResult = {
  __typename?: 'E360App_partner_webhookAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
};

export enum E360App_partner_webhookEnv {
  PRODUCTION = 'PRODUCTION',
  TEST = 'TEST'
}

export type E360App_partner_webhookEnv_exact = {
  between?: InputMaybe<E360App_partner_webhookEnv>;
  eq?: InputMaybe<E360App_partner_webhookEnv>;
  ge?: InputMaybe<E360App_partner_webhookEnv>;
  gt?: InputMaybe<E360App_partner_webhookEnv>;
  in?: InputMaybe<Array<InputMaybe<E360App_partner_webhookEnv>>>;
  le?: InputMaybe<E360App_partner_webhookEnv>;
  lt?: InputMaybe<E360App_partner_webhookEnv>;
};

export type E360App_partner_webhookFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_partner_webhookFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  env?: InputMaybe<E360App_partner_webhookEnv_exact>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_partner_webhookHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_partner_webhookFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_partner_webhookFilter>>>;
};

export enum E360App_partner_webhookHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  env = 'env',
  guid = 'guid',
  partner = 'partner',
  url = 'url'
}

export type E360App_partner_webhookOrder = {
  asc?: InputMaybe<E360App_partner_webhookOrderable>;
  desc?: InputMaybe<E360App_partner_webhookOrderable>;
  then?: InputMaybe<E360App_partner_webhookOrder>;
};

export enum E360App_partner_webhookOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  url = 'url'
}

export type E360App_partner_webhookPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  env?: InputMaybe<E360App_partner_webhookEnv>;
  guid?: InputMaybe<Scalars['String']>;
  partner?: InputMaybe<E360App_partnerRef>;
  url?: InputMaybe<Scalars['String']>;
};

export type E360App_partner_webhookRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  env?: InputMaybe<E360App_partner_webhookEnv>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  partner?: InputMaybe<E360App_partnerRef>;
  url?: InputMaybe<Scalars['String']>;
};

export enum E360App_platformType {
  ANDROID = 'ANDROID',
  IOS = 'IOS',
  UNKNOWN = 'UNKNOWN',
  WEB = 'WEB'
}

export type E360App_shop = {
  __typename?: 'E360App_shop';
  contracts: Array<E360App_shop_contract>;
  contractsAggregate?: Maybe<E360App_shop_contractAggregateResult>;
  customerContracts: Array<E360App_shop_customer_contract>;
  customerContractsAggregate?: Maybe<E360App_shop_customer_contractAggregateResult>;
  e360App: E360App;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  operations: Array<E360App_shop_operation>;
  operationsAggregate?: Maybe<E360App_shop_operationAggregateResult>;
  partnerContracts: Array<E360App_shop_partner_contract>;
  partnerContractsAggregate?: Maybe<E360App_shop_partner_contractAggregateResult>;
  products: Array<E360App_shop_product>;
  productsAggregate?: Maybe<E360App_shop_productAggregateResult>;
  promotionCodes: Array<E360App_shop_promotionCode>;
  promotionCodesAggregate?: Maybe<E360App_shop_promotionCodeAggregateResult>;
  promotions: Array<E360App_shop_promotion>;
  promotionsAggregate?: Maybe<E360App_shop_promotionAggregateResult>;
  purchases: Array<E360App_shop_purchase>;
  purchasesAggregate?: Maybe<E360App_shop_purchaseAggregateResult>;
};


export type E360App_shopcontractsArgs = {
  filter?: InputMaybe<E360App_shop_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_contractOrder>;
};


export type E360App_shopcontractsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_contractFilter>;
};


export type E360App_shopcustomerContractsArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractOrder>;
};


export type E360App_shopcustomerContractsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
};


export type E360App_shope360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
};


export type E360App_shopoperationsArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_operationOrder>;
};


export type E360App_shopoperationsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
};


export type E360App_shoppartnerContractsArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_partner_contractOrder>;
};


export type E360App_shoppartnerContractsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
};


export type E360App_shopproductsArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productOrder>;
};


export type E360App_shopproductsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};


export type E360App_shoppromotionCodesArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionCodeOrder>;
};


export type E360App_shoppromotionCodesAggregateArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
};


export type E360App_shoppromotionsArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionOrder>;
};


export type E360App_shoppromotionsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
};


export type E360App_shoppurchasesArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseOrder>;
};


export type E360App_shoppurchasesAggregateArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
};

export type E360App_shopAggregateResult = {
  __typename?: 'E360App_shopAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_shopFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shopFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shopHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_shopFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shopFilter>>>;
};

export enum E360App_shopHasFilter {
  contracts = 'contracts',
  customerContracts = 'customerContracts',
  e360App = 'e360App',
  guid = 'guid',
  name = 'name',
  operations = 'operations',
  partnerContracts = 'partnerContracts',
  products = 'products',
  promotionCodes = 'promotionCodes',
  promotions = 'promotions',
  purchases = 'purchases'
}

export type E360App_shopOrder = {
  asc?: InputMaybe<E360App_shopOrderable>;
  desc?: InputMaybe<E360App_shopOrderable>;
  then?: InputMaybe<E360App_shopOrder>;
};

export enum E360App_shopOrderable {
  guid = 'guid',
  name = 'name'
}

export type E360App_shopPatch = {
  contracts?: InputMaybe<Array<E360App_shop_contractRef>>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  e360App?: InputMaybe<E360AppRef>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<E360App_shop_operationRef>>;
  partnerContracts?: InputMaybe<Array<E360App_shop_partner_contractRef>>;
  products?: InputMaybe<Array<E360App_shop_productRef>>;
  promotionCodes?: InputMaybe<Array<E360App_shop_promotionCodeRef>>;
  promotions?: InputMaybe<Array<E360App_shop_promotionRef>>;
  purchases?: InputMaybe<Array<E360App_shop_purchaseRef>>;
};

export type E360App_shopRef = {
  contracts?: InputMaybe<Array<E360App_shop_contractRef>>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  e360App?: InputMaybe<E360AppRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<E360App_shop_operationRef>>;
  partnerContracts?: InputMaybe<Array<E360App_shop_partner_contractRef>>;
  products?: InputMaybe<Array<E360App_shop_productRef>>;
  promotionCodes?: InputMaybe<Array<E360App_shop_promotionCodeRef>>;
  promotions?: InputMaybe<Array<E360App_shop_promotionRef>>;
  purchases?: InputMaybe<Array<E360App_shop_purchaseRef>>;
};

export enum E360App_shop_channel {
  OFFICIAL_ANDROID = 'OFFICIAL_ANDROID',
  OFFICIAL_IOS = 'OFFICIAL_IOS',
  OFFICIAL_WEB = 'OFFICIAL_WEB',
  PARTNER = 'PARTNER',
  TEST = 'TEST',
  UNKNOWN = 'UNKNOWN'
}

export type E360App_shop_channel_exact = {
  between?: InputMaybe<E360App_shop_channel>;
  eq?: InputMaybe<E360App_shop_channel>;
  ge?: InputMaybe<E360App_shop_channel>;
  gt?: InputMaybe<E360App_shop_channel>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_channel>>>;
  le?: InputMaybe<E360App_shop_channel>;
  lt?: InputMaybe<E360App_shop_channel>;
};

export type E360App_shop_contract = {
  __typename?: 'E360App_shop_contract';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  netPrice: Scalars['Int'];
  partnerContracts: Array<E360App_shop_partner_contract>;
  partnerContractsAggregate?: Maybe<E360App_shop_partner_contractAggregateResult>;
  periodicity: E360App_shop_contract_periodicity;
  products?: Maybe<E360App_shop_product>;
  renewalNetPrice: Scalars['Int'];
  renewalType: E360App_shop_contract_renewalType;
  returnPolicy?: Maybe<Scalars['String']>;
  returnPolicyDays?: Maybe<Scalars['Int']>;
  returnPolicyFee?: Maybe<Scalars['Int']>;
  returnPolicyFeeType?: Maybe<E360App_contractFeeType>;
  shop: E360App_shop;
};


export type E360App_shop_contractcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_shop_contractpartnerContractsArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_partner_contractOrder>;
};


export type E360App_shop_contractpartnerContractsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
};


export type E360App_shop_contractproductsArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};


export type E360App_shop_contractshopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
};

export type E360App_shop_contractAggregateResult = {
  __typename?: 'E360App_shop_contractAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  netPriceAvg?: Maybe<Scalars['Float']>;
  netPriceMax?: Maybe<Scalars['Int']>;
  netPriceMin?: Maybe<Scalars['Int']>;
  netPriceSum?: Maybe<Scalars['Int']>;
  renewalNetPriceAvg?: Maybe<Scalars['Float']>;
  renewalNetPriceMax?: Maybe<Scalars['Int']>;
  renewalNetPriceMin?: Maybe<Scalars['Int']>;
  renewalNetPriceSum?: Maybe<Scalars['Int']>;
  returnPolicyDaysAvg?: Maybe<Scalars['Float']>;
  returnPolicyDaysMax?: Maybe<Scalars['Int']>;
  returnPolicyDaysMin?: Maybe<Scalars['Int']>;
  returnPolicyDaysSum?: Maybe<Scalars['Int']>;
  returnPolicyFeeAvg?: Maybe<Scalars['Float']>;
  returnPolicyFeeMax?: Maybe<Scalars['Int']>;
  returnPolicyFeeMin?: Maybe<Scalars['Int']>;
  returnPolicyFeeSum?: Maybe<Scalars['Int']>;
  returnPolicyMax?: Maybe<Scalars['String']>;
  returnPolicyMin?: Maybe<Scalars['String']>;
};

export type E360App_shop_contractFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_contractFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_contractHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  netPrice?: InputMaybe<IntFilter>;
  not?: InputMaybe<E360App_shop_contractFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_contractFilter>>>;
  periodicity?: InputMaybe<E360App_shop_contract_periodicity_exact>;
  renewalNetPrice?: InputMaybe<IntFilter>;
  renewalType?: InputMaybe<E360App_shop_contract_renewalType_exact>;
};

export enum E360App_shop_contractHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  guid = 'guid',
  netPrice = 'netPrice',
  partnerContracts = 'partnerContracts',
  periodicity = 'periodicity',
  products = 'products',
  renewalNetPrice = 'renewalNetPrice',
  renewalType = 'renewalType',
  returnPolicy = 'returnPolicy',
  returnPolicyDays = 'returnPolicyDays',
  returnPolicyFee = 'returnPolicyFee',
  returnPolicyFeeType = 'returnPolicyFeeType',
  shop = 'shop'
}

export type E360App_shop_contractOrder = {
  asc?: InputMaybe<E360App_shop_contractOrderable>;
  desc?: InputMaybe<E360App_shop_contractOrderable>;
  then?: InputMaybe<E360App_shop_contractOrder>;
};

export enum E360App_shop_contractOrderable {
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  netPrice = 'netPrice',
  renewalNetPrice = 'renewalNetPrice',
  returnPolicy = 'returnPolicy',
  returnPolicyDays = 'returnPolicyDays',
  returnPolicyFee = 'returnPolicyFee'
}

export type E360App_shop_contractPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  netPrice?: InputMaybe<Scalars['Int']>;
  partnerContracts?: InputMaybe<Array<E360App_shop_partner_contractRef>>;
  periodicity?: InputMaybe<E360App_shop_contract_periodicity>;
  products?: InputMaybe<E360App_shop_productRef>;
  renewalNetPrice?: InputMaybe<Scalars['Int']>;
  renewalType?: InputMaybe<E360App_shop_contract_renewalType>;
  returnPolicy?: InputMaybe<Scalars['String']>;
  returnPolicyDays?: InputMaybe<Scalars['Int']>;
  returnPolicyFee?: InputMaybe<Scalars['Int']>;
  returnPolicyFeeType?: InputMaybe<E360App_contractFeeType>;
  shop?: InputMaybe<E360App_shopRef>;
};

export type E360App_shop_contractRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  netPrice?: InputMaybe<Scalars['Int']>;
  partnerContracts?: InputMaybe<Array<E360App_shop_partner_contractRef>>;
  periodicity?: InputMaybe<E360App_shop_contract_periodicity>;
  products?: InputMaybe<E360App_shop_productRef>;
  renewalNetPrice?: InputMaybe<Scalars['Int']>;
  renewalType?: InputMaybe<E360App_shop_contract_renewalType>;
  returnPolicy?: InputMaybe<Scalars['String']>;
  returnPolicyDays?: InputMaybe<Scalars['Int']>;
  returnPolicyFee?: InputMaybe<Scalars['Int']>;
  returnPolicyFeeType?: InputMaybe<E360App_contractFeeType>;
  shop?: InputMaybe<E360App_shopRef>;
};

export enum E360App_shop_contract_periodicity {
  DAILY = 'DAILY',
  MONTHLY = 'MONTHLY',
  WEEKLY = 'WEEKLY',
  YEARLY = 'YEARLY'
}

export type E360App_shop_contract_periodicity_exact = {
  between?: InputMaybe<E360App_shop_contract_periodicity>;
  eq?: InputMaybe<E360App_shop_contract_periodicity>;
  ge?: InputMaybe<E360App_shop_contract_periodicity>;
  gt?: InputMaybe<E360App_shop_contract_periodicity>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_contract_periodicity>>>;
  le?: InputMaybe<E360App_shop_contract_periodicity>;
  lt?: InputMaybe<E360App_shop_contract_periodicity>;
};

export enum E360App_shop_contract_renewalType {
  AUTOMATIC = 'AUTOMATIC',
  MANUAL = 'MANUAL'
}

export type E360App_shop_contract_renewalType_exact = {
  between?: InputMaybe<E360App_shop_contract_renewalType>;
  eq?: InputMaybe<E360App_shop_contract_renewalType>;
  ge?: InputMaybe<E360App_shop_contract_renewalType>;
  gt?: InputMaybe<E360App_shop_contract_renewalType>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_contract_renewalType>>>;
  le?: InputMaybe<E360App_shop_contract_renewalType>;
  lt?: InputMaybe<E360App_shop_contract_renewalType>;
};

export type E360App_shop_customer_contract = {
  __typename?: 'E360App_shop_customer_contract';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  customer: E360App_user;
  deletedAt?: Maybe<Scalars['DateTime']>;
  deletedBy?: Maybe<E360App_user>;
  description?: Maybe<Scalars['String']>;
  disabledAt?: Maybe<Scalars['DateTime']>;
  disabledBy?: Maybe<E360App_user>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  netPrice: Scalars['Int'];
  nextRenewalAlertDate: Scalars['DateTime'];
  nextRenewalDate: Scalars['DateTime'];
  nextRenewalNetPrice: Scalars['Int'];
  partner?: Maybe<E360App_partner>;
  partnerContract?: Maybe<E360App_shop_partner_contract>;
  periodicity: E360App_shop_contract_periodicity;
  petpassContract?: Maybe<PETPASS_contract>;
  products: Array<E360App_shop_product>;
  productsAggregate?: Maybe<E360App_shop_productAggregateResult>;
  renewalType: E360App_shop_contract_renewalType;
  renewals: Array<E360App_shop_customer_contract_renewal>;
  renewalsAggregate?: Maybe<E360App_shop_customer_contract_renewalAggregateResult>;
  services?: Maybe<Array<E360App_shop_customer_contractService>>;
  servicesAggregate?: Maybe<E360App_shop_customer_contractServiceAggregateResult>;
  shop: E360App_shop;
  status: E360App_shop_customer_contractStatus;
};


export type E360App_shop_customer_contractcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_shop_customer_contractcustomerArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_shop_customer_contractdeletedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_shop_customer_contractdisabledByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_shop_customer_contractpartnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};


export type E360App_shop_customer_contractpartnerContractArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
};


export type E360App_shop_customer_contractpetpassContractArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
};


export type E360App_shop_customer_contractproductsArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productOrder>;
};


export type E360App_shop_customer_contractproductsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};


export type E360App_shop_customer_contractrenewalsArgs = {
  filter?: InputMaybe<E360App_shop_customer_contract_renewalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contract_renewalOrder>;
};


export type E360App_shop_customer_contractrenewalsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_customer_contract_renewalFilter>;
};


export type E360App_shop_customer_contractservicesArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractServiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractServiceOrder>;
};


export type E360App_shop_customer_contractservicesAggregateArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractServiceFilter>;
};


export type E360App_shop_customer_contractshopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
};

export type E360App_shop_customer_contractAggregateResult = {
  __typename?: 'E360App_shop_customer_contractAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  deletedAtMax?: Maybe<Scalars['DateTime']>;
  deletedAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  disabledAtMax?: Maybe<Scalars['DateTime']>;
  disabledAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  netPriceAvg?: Maybe<Scalars['Float']>;
  netPriceMax?: Maybe<Scalars['Int']>;
  netPriceMin?: Maybe<Scalars['Int']>;
  netPriceSum?: Maybe<Scalars['Int']>;
  nextRenewalAlertDateMax?: Maybe<Scalars['DateTime']>;
  nextRenewalAlertDateMin?: Maybe<Scalars['DateTime']>;
  nextRenewalDateMax?: Maybe<Scalars['DateTime']>;
  nextRenewalDateMin?: Maybe<Scalars['DateTime']>;
  nextRenewalNetPriceAvg?: Maybe<Scalars['Float']>;
  nextRenewalNetPriceMax?: Maybe<Scalars['Int']>;
  nextRenewalNetPriceMin?: Maybe<Scalars['Int']>;
  nextRenewalNetPriceSum?: Maybe<Scalars['Int']>;
};

export type E360App_shop_customer_contractFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contractFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deletedAt?: InputMaybe<DateTimeFilter>;
  disabledAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contractHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  netPrice?: InputMaybe<IntFilter>;
  nextRenewalAlertDate?: InputMaybe<DateTimeFilter>;
  nextRenewalDate?: InputMaybe<DateTimeFilter>;
  nextRenewalNetPrice?: InputMaybe<IntFilter>;
  not?: InputMaybe<E360App_shop_customer_contractFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contractFilter>>>;
  periodicity?: InputMaybe<E360App_shop_contract_periodicity_exact>;
  renewalType?: InputMaybe<E360App_shop_contract_renewalType_exact>;
  status?: InputMaybe<E360App_shop_customer_contractStatus_exact>;
};

export enum E360App_shop_customer_contractHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  customer = 'customer',
  deletedAt = 'deletedAt',
  deletedBy = 'deletedBy',
  description = 'description',
  disabledAt = 'disabledAt',
  disabledBy = 'disabledBy',
  guid = 'guid',
  netPrice = 'netPrice',
  nextRenewalAlertDate = 'nextRenewalAlertDate',
  nextRenewalDate = 'nextRenewalDate',
  nextRenewalNetPrice = 'nextRenewalNetPrice',
  partner = 'partner',
  partnerContract = 'partnerContract',
  periodicity = 'periodicity',
  petpassContract = 'petpassContract',
  products = 'products',
  renewalType = 'renewalType',
  renewals = 'renewals',
  services = 'services',
  shop = 'shop',
  status = 'status'
}

export type E360App_shop_customer_contractOrder = {
  asc?: InputMaybe<E360App_shop_customer_contractOrderable>;
  desc?: InputMaybe<E360App_shop_customer_contractOrderable>;
  then?: InputMaybe<E360App_shop_customer_contractOrder>;
};

export enum E360App_shop_customer_contractOrderable {
  createdAt = 'createdAt',
  deletedAt = 'deletedAt',
  description = 'description',
  disabledAt = 'disabledAt',
  guid = 'guid',
  netPrice = 'netPrice',
  nextRenewalAlertDate = 'nextRenewalAlertDate',
  nextRenewalDate = 'nextRenewalDate',
  nextRenewalNetPrice = 'nextRenewalNetPrice'
}

export type E360App_shop_customer_contractPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  customer?: InputMaybe<E360App_userRef>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  deletedBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  disabledAt?: InputMaybe<Scalars['DateTime']>;
  disabledBy?: InputMaybe<E360App_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  netPrice?: InputMaybe<Scalars['Int']>;
  nextRenewalAlertDate?: InputMaybe<Scalars['DateTime']>;
  nextRenewalDate?: InputMaybe<Scalars['DateTime']>;
  nextRenewalNetPrice?: InputMaybe<Scalars['Int']>;
  partner?: InputMaybe<E360App_partnerRef>;
  partnerContract?: InputMaybe<E360App_shop_partner_contractRef>;
  periodicity?: InputMaybe<E360App_shop_contract_periodicity>;
  petpassContract?: InputMaybe<PETPASS_contractRef>;
  products?: InputMaybe<Array<E360App_shop_productRef>>;
  renewalType?: InputMaybe<E360App_shop_contract_renewalType>;
  renewals?: InputMaybe<Array<E360App_shop_customer_contract_renewalRef>>;
  services?: InputMaybe<Array<E360App_shop_customer_contractServiceRef>>;
  shop?: InputMaybe<E360App_shopRef>;
  status?: InputMaybe<E360App_shop_customer_contractStatus>;
};

export type E360App_shop_customer_contractRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  customer?: InputMaybe<E360App_userRef>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  deletedBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  disabledAt?: InputMaybe<Scalars['DateTime']>;
  disabledBy?: InputMaybe<E360App_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  netPrice?: InputMaybe<Scalars['Int']>;
  nextRenewalAlertDate?: InputMaybe<Scalars['DateTime']>;
  nextRenewalDate?: InputMaybe<Scalars['DateTime']>;
  nextRenewalNetPrice?: InputMaybe<Scalars['Int']>;
  partner?: InputMaybe<E360App_partnerRef>;
  partnerContract?: InputMaybe<E360App_shop_partner_contractRef>;
  periodicity?: InputMaybe<E360App_shop_contract_periodicity>;
  petpassContract?: InputMaybe<PETPASS_contractRef>;
  products?: InputMaybe<Array<E360App_shop_productRef>>;
  renewalType?: InputMaybe<E360App_shop_contract_renewalType>;
  renewals?: InputMaybe<Array<E360App_shop_customer_contract_renewalRef>>;
  services?: InputMaybe<Array<E360App_shop_customer_contractServiceRef>>;
  shop?: InputMaybe<E360App_shopRef>;
  status?: InputMaybe<E360App_shop_customer_contractStatus>;
};

export type E360App_shop_customer_contractService = {
  __typename?: 'E360App_shop_customer_contractService';
  code?: Maybe<Scalars['String']>;
  contract: E360App_shop_customer_contract;
  guid: Scalars['String'];
  id: Scalars['ID'];
  key: Scalars['String'];
  keys?: Maybe<Array<Scalars['String']>>;
  name: Scalars['String'];
  type: E360App_shop_productService_type;
};


export type E360App_shop_customer_contractServicecontractArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
};

export type E360App_shop_customer_contractServiceAggregateResult = {
  __typename?: 'E360App_shop_customer_contractServiceAggregateResult';
  codeMax?: Maybe<Scalars['String']>;
  codeMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  keyMax?: Maybe<Scalars['String']>;
  keyMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_shop_customer_contractServiceFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contractServiceFilter>>>;
  code?: InputMaybe<StringExactFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contractServiceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  key?: InputMaybe<StringExactFilter>;
  keys?: InputMaybe<StringExactFilter>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<E360App_shop_customer_contractServiceFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contractServiceFilter>>>;
  type?: InputMaybe<E360App_shop_productService_type_exact>;
};

export enum E360App_shop_customer_contractServiceHasFilter {
  code = 'code',
  contract = 'contract',
  guid = 'guid',
  key = 'key',
  keys = 'keys',
  name = 'name',
  type = 'type'
}

export type E360App_shop_customer_contractServiceOrder = {
  asc?: InputMaybe<E360App_shop_customer_contractServiceOrderable>;
  desc?: InputMaybe<E360App_shop_customer_contractServiceOrderable>;
  then?: InputMaybe<E360App_shop_customer_contractServiceOrder>;
};

export enum E360App_shop_customer_contractServiceOrderable {
  code = 'code',
  guid = 'guid',
  key = 'key',
  name = 'name'
}

export type E360App_shop_customer_contractServicePatch = {
  code?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<E360App_shop_customer_contractRef>;
  guid?: InputMaybe<Scalars['String']>;
  key?: InputMaybe<Scalars['String']>;
  keys?: InputMaybe<Array<Scalars['String']>>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<E360App_shop_productService_type>;
};

export type E360App_shop_customer_contractServiceRef = {
  code?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<E360App_shop_customer_contractRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  key?: InputMaybe<Scalars['String']>;
  keys?: InputMaybe<Array<Scalars['String']>>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<E360App_shop_productService_type>;
};

export enum E360App_shop_customer_contractStatus {
  ACTIVE = 'ACTIVE',
  DELETED = 'DELETED',
  DISABLED = 'DISABLED',
  EXPIRED = 'EXPIRED',
  INACTIVE = 'INACTIVE'
}

export type E360App_shop_customer_contractStatus_exact = {
  between?: InputMaybe<E360App_shop_customer_contractStatus>;
  eq?: InputMaybe<E360App_shop_customer_contractStatus>;
  ge?: InputMaybe<E360App_shop_customer_contractStatus>;
  gt?: InputMaybe<E360App_shop_customer_contractStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contractStatus>>>;
  le?: InputMaybe<E360App_shop_customer_contractStatus>;
  lt?: InputMaybe<E360App_shop_customer_contractStatus>;
};

export type E360App_shop_customer_contract_renewal = {
  __typename?: 'E360App_shop_customer_contract_renewal';
  contract: E360App_shop_customer_contract;
  createdBy?: Maybe<E360App_user>;
  endAt: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  netPrice: Scalars['Int'];
  paidAt?: Maybe<Scalars['DateTime']>;
  partnerFee: Scalars['Int'];
  startAt: Scalars['DateTime'];
  status: E360App_shop_customer_contract_renewalStatus;
};


export type E360App_shop_customer_contract_renewalcontractArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
};


export type E360App_shop_customer_contract_renewalcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};

export type E360App_shop_customer_contract_renewalAggregateResult = {
  __typename?: 'E360App_shop_customer_contract_renewalAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  netPriceAvg?: Maybe<Scalars['Float']>;
  netPriceMax?: Maybe<Scalars['Int']>;
  netPriceMin?: Maybe<Scalars['Int']>;
  netPriceSum?: Maybe<Scalars['Int']>;
  paidAtMax?: Maybe<Scalars['DateTime']>;
  paidAtMin?: Maybe<Scalars['DateTime']>;
  partnerFeeAvg?: Maybe<Scalars['Float']>;
  partnerFeeMax?: Maybe<Scalars['Int']>;
  partnerFeeMin?: Maybe<Scalars['Int']>;
  partnerFeeSum?: Maybe<Scalars['Int']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
};

export type E360App_shop_customer_contract_renewalFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contract_renewalFilter>>>;
  endAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contract_renewalHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  netPrice?: InputMaybe<IntFilter>;
  not?: InputMaybe<E360App_shop_customer_contract_renewalFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contract_renewalFilter>>>;
  paidAt?: InputMaybe<DateTimeFilter>;
  partnerFee?: InputMaybe<IntFilter>;
  startAt?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<E360App_shop_customer_contract_renewalStatus_exact>;
};

export enum E360App_shop_customer_contract_renewalHasFilter {
  contract = 'contract',
  createdBy = 'createdBy',
  endAt = 'endAt',
  guid = 'guid',
  index = 'index',
  netPrice = 'netPrice',
  paidAt = 'paidAt',
  partnerFee = 'partnerFee',
  startAt = 'startAt',
  status = 'status'
}

export type E360App_shop_customer_contract_renewalOrder = {
  asc?: InputMaybe<E360App_shop_customer_contract_renewalOrderable>;
  desc?: InputMaybe<E360App_shop_customer_contract_renewalOrderable>;
  then?: InputMaybe<E360App_shop_customer_contract_renewalOrder>;
};

export enum E360App_shop_customer_contract_renewalOrderable {
  endAt = 'endAt',
  guid = 'guid',
  index = 'index',
  netPrice = 'netPrice',
  paidAt = 'paidAt',
  partnerFee = 'partnerFee',
  startAt = 'startAt'
}

export type E360App_shop_customer_contract_renewalPatch = {
  contract?: InputMaybe<E360App_shop_customer_contractRef>;
  createdBy?: InputMaybe<E360App_userRef>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  netPrice?: InputMaybe<Scalars['Int']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  partnerFee?: InputMaybe<Scalars['Int']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<E360App_shop_customer_contract_renewalStatus>;
};

export type E360App_shop_customer_contract_renewalRef = {
  contract?: InputMaybe<E360App_shop_customer_contractRef>;
  createdBy?: InputMaybe<E360App_userRef>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  netPrice?: InputMaybe<Scalars['Int']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  partnerFee?: InputMaybe<Scalars['Int']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<E360App_shop_customer_contract_renewalStatus>;
};

export enum E360App_shop_customer_contract_renewalStatus {
  PAID = 'PAID',
  PENDING_PAYMENT = 'PENDING_PAYMENT'
}

export type E360App_shop_customer_contract_renewalStatus_exact = {
  between?: InputMaybe<E360App_shop_customer_contract_renewalStatus>;
  eq?: InputMaybe<E360App_shop_customer_contract_renewalStatus>;
  ge?: InputMaybe<E360App_shop_customer_contract_renewalStatus>;
  gt?: InputMaybe<E360App_shop_customer_contract_renewalStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_customer_contract_renewalStatus>>>;
  le?: InputMaybe<E360App_shop_customer_contract_renewalStatus>;
  lt?: InputMaybe<E360App_shop_customer_contract_renewalStatus>;
};

export type E360App_shop_operation = {
  __typename?: 'E360App_shop_operation';
  amount: Scalars['Int'];
  date: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  netProfit: Scalars['Int'];
  partner?: Maybe<E360App_partner>;
  partnerFee: Scalars['Int'];
  paymentMethod: E360App_shop_paymentMethod;
  product?: Maybe<E360App_shop_product>;
  purchase: E360App_shop_purchase;
  ref: Scalars['String'];
  shop: E360App_shop;
  taxPercentage: Scalars['Int'];
  taxType?: Maybe<e360App_shop_taxType>;
  taxValue: Scalars['Int'];
  taxValueType?: Maybe<e360App_shop_taxValueType>;
  total: Scalars['Int'];
  type: E360App_shop_operationType;
};


export type E360App_shop_operationpartnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};


export type E360App_shop_operationproductArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};


export type E360App_shop_operationpurchaseArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
};


export type E360App_shop_operationshopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
};

export type E360App_shop_operationAggregateResult = {
  __typename?: 'E360App_shop_operationAggregateResult';
  amountAvg?: Maybe<Scalars['Float']>;
  amountMax?: Maybe<Scalars['Int']>;
  amountMin?: Maybe<Scalars['Int']>;
  amountSum?: Maybe<Scalars['Int']>;
  count?: Maybe<Scalars['Int']>;
  dateMax?: Maybe<Scalars['DateTime']>;
  dateMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  netProfitAvg?: Maybe<Scalars['Float']>;
  netProfitMax?: Maybe<Scalars['Int']>;
  netProfitMin?: Maybe<Scalars['Int']>;
  netProfitSum?: Maybe<Scalars['Int']>;
  partnerFeeAvg?: Maybe<Scalars['Float']>;
  partnerFeeMax?: Maybe<Scalars['Int']>;
  partnerFeeMin?: Maybe<Scalars['Int']>;
  partnerFeeSum?: Maybe<Scalars['Int']>;
  refMax?: Maybe<Scalars['String']>;
  refMin?: Maybe<Scalars['String']>;
  taxPercentageAvg?: Maybe<Scalars['Float']>;
  taxPercentageMax?: Maybe<Scalars['Int']>;
  taxPercentageMin?: Maybe<Scalars['Int']>;
  taxPercentageSum?: Maybe<Scalars['Int']>;
  taxValueAvg?: Maybe<Scalars['Float']>;
  taxValueMax?: Maybe<Scalars['Int']>;
  taxValueMin?: Maybe<Scalars['Int']>;
  taxValueSum?: Maybe<Scalars['Int']>;
  totalAvg?: Maybe<Scalars['Float']>;
  totalMax?: Maybe<Scalars['Int']>;
  totalMin?: Maybe<Scalars['Int']>;
  totalSum?: Maybe<Scalars['Int']>;
};

export type E360App_shop_operationFilter = {
  amount?: InputMaybe<IntFilter>;
  and?: InputMaybe<Array<InputMaybe<E360App_shop_operationFilter>>>;
  date?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_operationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  netProfit?: InputMaybe<IntFilter>;
  not?: InputMaybe<E360App_shop_operationFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_operationFilter>>>;
  partnerFee?: InputMaybe<IntFilter>;
  paymentMethod?: InputMaybe<E360App_shop_paymentMethod_exact>;
  ref?: InputMaybe<StringExactFilter>;
  taxPercentage?: InputMaybe<IntFilter>;
  taxType?: InputMaybe<e360App_shop_taxType_exact>;
  taxValue?: InputMaybe<IntFilter>;
  taxValueType?: InputMaybe<e360App_shop_taxValueType_exact>;
  total?: InputMaybe<IntFilter>;
  type?: InputMaybe<E360App_shop_operationType_exact>;
};

export enum E360App_shop_operationHasFilter {
  amount = 'amount',
  date = 'date',
  guid = 'guid',
  netProfit = 'netProfit',
  partner = 'partner',
  partnerFee = 'partnerFee',
  paymentMethod = 'paymentMethod',
  product = 'product',
  purchase = 'purchase',
  ref = 'ref',
  shop = 'shop',
  taxPercentage = 'taxPercentage',
  taxType = 'taxType',
  taxValue = 'taxValue',
  taxValueType = 'taxValueType',
  total = 'total',
  type = 'type'
}

export type E360App_shop_operationOrder = {
  asc?: InputMaybe<E360App_shop_operationOrderable>;
  desc?: InputMaybe<E360App_shop_operationOrderable>;
  then?: InputMaybe<E360App_shop_operationOrder>;
};

export enum E360App_shop_operationOrderable {
  amount = 'amount',
  date = 'date',
  guid = 'guid',
  netProfit = 'netProfit',
  partnerFee = 'partnerFee',
  ref = 'ref',
  taxPercentage = 'taxPercentage',
  taxValue = 'taxValue',
  total = 'total'
}

export type E360App_shop_operationPatch = {
  amount?: InputMaybe<Scalars['Int']>;
  date?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  netProfit?: InputMaybe<Scalars['Int']>;
  partner?: InputMaybe<E360App_partnerRef>;
  partnerFee?: InputMaybe<Scalars['Int']>;
  paymentMethod?: InputMaybe<E360App_shop_paymentMethod>;
  product?: InputMaybe<E360App_shop_productRef>;
  purchase?: InputMaybe<E360App_shop_purchaseRef>;
  ref?: InputMaybe<Scalars['String']>;
  shop?: InputMaybe<E360App_shopRef>;
  taxPercentage?: InputMaybe<Scalars['Int']>;
  taxType?: InputMaybe<e360App_shop_taxType>;
  taxValue?: InputMaybe<Scalars['Int']>;
  taxValueType?: InputMaybe<e360App_shop_taxValueType>;
  total?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<E360App_shop_operationType>;
};

export type E360App_shop_operationRef = {
  amount?: InputMaybe<Scalars['Int']>;
  date?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  netProfit?: InputMaybe<Scalars['Int']>;
  partner?: InputMaybe<E360App_partnerRef>;
  partnerFee?: InputMaybe<Scalars['Int']>;
  paymentMethod?: InputMaybe<E360App_shop_paymentMethod>;
  product?: InputMaybe<E360App_shop_productRef>;
  purchase?: InputMaybe<E360App_shop_purchaseRef>;
  ref?: InputMaybe<Scalars['String']>;
  shop?: InputMaybe<E360App_shopRef>;
  taxPercentage?: InputMaybe<Scalars['Int']>;
  taxType?: InputMaybe<e360App_shop_taxType>;
  taxValue?: InputMaybe<Scalars['Int']>;
  taxValueType?: InputMaybe<e360App_shop_taxValueType>;
  total?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<E360App_shop_operationType>;
};

export enum E360App_shop_operationType {
  PAYMENT = 'PAYMENT',
  REFUND = 'REFUND'
}

export type E360App_shop_operationType_exact = {
  between?: InputMaybe<E360App_shop_operationType>;
  eq?: InputMaybe<E360App_shop_operationType>;
  ge?: InputMaybe<E360App_shop_operationType>;
  gt?: InputMaybe<E360App_shop_operationType>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_operationType>>>;
  le?: InputMaybe<E360App_shop_operationType>;
  lt?: InputMaybe<E360App_shop_operationType>;
};

export type E360App_shop_partner_contract = {
  __typename?: 'E360App_shop_partner_contract';
  contract?: Maybe<E360App_shop_contract>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  customerContracts: Array<E360App_shop_customer_contract>;
  customerContractsAggregate?: Maybe<E360App_shop_customer_contractAggregateResult>;
  description?: Maybe<Scalars['String']>;
  expirationDate?: Maybe<Scalars['DateTime']>;
  fee: Scalars['Int'];
  feeType: E360App_contractFeeType;
  guid: Scalars['String'];
  id: Scalars['ID'];
  netPrice: Scalars['Int'];
  partner: E360App_partner;
  periodicity: E360App_shop_contract_periodicity;
  product?: Maybe<E360App_shop_product>;
  renewalFee: Scalars['Int'];
  renewalFeeType: E360App_contractFeeType;
  renewalType: E360App_shop_contract_renewalType;
  shop: E360App_shop;
  status: E360App_partner_contactStatus;
};


export type E360App_shop_partner_contractcontractArgs = {
  filter?: InputMaybe<E360App_shop_contractFilter>;
};


export type E360App_shop_partner_contractcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_shop_partner_contractcustomerContractsArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractOrder>;
};


export type E360App_shop_partner_contractcustomerContractsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
};


export type E360App_shop_partner_contractpartnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};


export type E360App_shop_partner_contractproductArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};


export type E360App_shop_partner_contractshopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
};

export type E360App_shop_partner_contractAggregateResult = {
  __typename?: 'E360App_shop_partner_contractAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  expirationDateMax?: Maybe<Scalars['DateTime']>;
  expirationDateMin?: Maybe<Scalars['DateTime']>;
  feeAvg?: Maybe<Scalars['Float']>;
  feeMax?: Maybe<Scalars['Int']>;
  feeMin?: Maybe<Scalars['Int']>;
  feeSum?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  netPriceAvg?: Maybe<Scalars['Float']>;
  netPriceMax?: Maybe<Scalars['Int']>;
  netPriceMin?: Maybe<Scalars['Int']>;
  netPriceSum?: Maybe<Scalars['Int']>;
  renewalFeeAvg?: Maybe<Scalars['Float']>;
  renewalFeeMax?: Maybe<Scalars['Int']>;
  renewalFeeMin?: Maybe<Scalars['Int']>;
  renewalFeeSum?: Maybe<Scalars['Int']>;
};

export type E360App_shop_partner_contractFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_partner_contractFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  expirationDate?: InputMaybe<DateTimeFilter>;
  fee?: InputMaybe<IntFilter>;
  feeType?: InputMaybe<E360App_contractFeeType_exact>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_partner_contractHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  netPrice?: InputMaybe<IntFilter>;
  not?: InputMaybe<E360App_shop_partner_contractFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_partner_contractFilter>>>;
  periodicity?: InputMaybe<E360App_shop_contract_periodicity_exact>;
  renewalFee?: InputMaybe<IntFilter>;
  renewalFeeType?: InputMaybe<E360App_contractFeeType_exact>;
  renewalType?: InputMaybe<E360App_shop_contract_renewalType_exact>;
  status?: InputMaybe<E360App_partner_contactStatus_exact>;
};

export enum E360App_shop_partner_contractHasFilter {
  contract = 'contract',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  customerContracts = 'customerContracts',
  description = 'description',
  expirationDate = 'expirationDate',
  fee = 'fee',
  feeType = 'feeType',
  guid = 'guid',
  netPrice = 'netPrice',
  partner = 'partner',
  periodicity = 'periodicity',
  product = 'product',
  renewalFee = 'renewalFee',
  renewalFeeType = 'renewalFeeType',
  renewalType = 'renewalType',
  shop = 'shop',
  status = 'status'
}

export type E360App_shop_partner_contractOrder = {
  asc?: InputMaybe<E360App_shop_partner_contractOrderable>;
  desc?: InputMaybe<E360App_shop_partner_contractOrderable>;
  then?: InputMaybe<E360App_shop_partner_contractOrder>;
};

export enum E360App_shop_partner_contractOrderable {
  createdAt = 'createdAt',
  description = 'description',
  expirationDate = 'expirationDate',
  fee = 'fee',
  guid = 'guid',
  netPrice = 'netPrice',
  renewalFee = 'renewalFee'
}

export type E360App_shop_partner_contractPatch = {
  contract?: InputMaybe<E360App_shop_contractRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  description?: InputMaybe<Scalars['String']>;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  fee?: InputMaybe<Scalars['Int']>;
  feeType?: InputMaybe<E360App_contractFeeType>;
  guid?: InputMaybe<Scalars['String']>;
  netPrice?: InputMaybe<Scalars['Int']>;
  partner?: InputMaybe<E360App_partnerRef>;
  periodicity?: InputMaybe<E360App_shop_contract_periodicity>;
  product?: InputMaybe<E360App_shop_productRef>;
  renewalFee?: InputMaybe<Scalars['Int']>;
  renewalFeeType?: InputMaybe<E360App_contractFeeType>;
  renewalType?: InputMaybe<E360App_shop_contract_renewalType>;
  shop?: InputMaybe<E360App_shopRef>;
  status?: InputMaybe<E360App_partner_contactStatus>;
};

export type E360App_shop_partner_contractRef = {
  contract?: InputMaybe<E360App_shop_contractRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  description?: InputMaybe<Scalars['String']>;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  fee?: InputMaybe<Scalars['Int']>;
  feeType?: InputMaybe<E360App_contractFeeType>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  netPrice?: InputMaybe<Scalars['Int']>;
  partner?: InputMaybe<E360App_partnerRef>;
  periodicity?: InputMaybe<E360App_shop_contract_periodicity>;
  product?: InputMaybe<E360App_shop_productRef>;
  renewalFee?: InputMaybe<Scalars['Int']>;
  renewalFeeType?: InputMaybe<E360App_contractFeeType>;
  renewalType?: InputMaybe<E360App_shop_contract_renewalType>;
  shop?: InputMaybe<E360App_shopRef>;
  status?: InputMaybe<E360App_partner_contactStatus>;
};

export enum E360App_shop_paymentMethod {
  PAYPAL = 'PAYPAL',
  REDSYS = 'REDSYS',
  STRIPE = 'STRIPE',
  TRANSFER = 'TRANSFER'
}

export type E360App_shop_paymentMethod_exact = {
  between?: InputMaybe<E360App_shop_paymentMethod>;
  eq?: InputMaybe<E360App_shop_paymentMethod>;
  ge?: InputMaybe<E360App_shop_paymentMethod>;
  gt?: InputMaybe<E360App_shop_paymentMethod>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_paymentMethod>>>;
  le?: InputMaybe<E360App_shop_paymentMethod>;
  lt?: InputMaybe<E360App_shop_paymentMethod>;
};

export type E360App_shop_product = {
  __typename?: 'E360App_shop_product';
  avatar?: Maybe<Scalars['String']>;
  bannerDesktop?: Maybe<Scalars['String']>;
  bannerMobile?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
  contract?: Maybe<E360App_shop_contract>;
  customerContracts: Array<E360App_shop_customer_contract>;
  customerContractsAggregate?: Maybe<E360App_shop_customer_contractAggregateResult>;
  description?: Maybe<Scalars['String']>;
  disclaimer?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  items: Array<E360App_shop_productItem>;
  itemsAggregate?: Maybe<E360App_shop_productItemAggregateResult>;
  name: Scalars['String'];
  operations: Array<E360App_shop_operation>;
  operationsAggregate?: Maybe<E360App_shop_operationAggregateResult>;
  partnerContracts: Array<E360App_shop_partner_contract>;
  partnerContractsAggregate?: Maybe<E360App_shop_partner_contractAggregateResult>;
  petpassProduct?: Maybe<PETPASS_product>;
  price: Scalars['Int'];
  promotions: Array<E360App_shop_promotion>;
  promotionsAggregate?: Maybe<E360App_shop_promotionAggregateResult>;
  purchaseBannerDesktop?: Maybe<Scalars['String']>;
  purchaseBannerMobile?: Maybe<Scalars['String']>;
  purchases: Array<E360App_shop_purchase>;
  purchasesAggregate?: Maybe<E360App_shop_purchaseAggregateResult>;
  services: Array<E360App_shop_productService>;
  servicesAggregate?: Maybe<E360App_shop_productServiceAggregateResult>;
  shop: E360App_shop;
  sku?: Maybe<Scalars['String']>;
  status: E360App_shop_productStatus;
  stockType: E360App_shop_productStockType;
  stripeProductID?: Maybe<Scalars['String']>;
  taxType: e360App_shop_taxType;
  taxValue: Scalars['Int'];
  taxValueType: e360App_shop_taxValueType;
  type: E360App_shop_productType;
};


export type E360App_shop_productcontractArgs = {
  filter?: InputMaybe<E360App_shop_contractFilter>;
};


export type E360App_shop_productcustomerContractsArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractOrder>;
};


export type E360App_shop_productcustomerContractsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
};


export type E360App_shop_productitemsArgs = {
  filter?: InputMaybe<E360App_shop_productItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productItemOrder>;
};


export type E360App_shop_productitemsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_productItemFilter>;
};


export type E360App_shop_productoperationsArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_operationOrder>;
};


export type E360App_shop_productoperationsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
};


export type E360App_shop_productpartnerContractsArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_partner_contractOrder>;
};


export type E360App_shop_productpartnerContractsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
};


export type E360App_shop_productpetpassProductArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
};


export type E360App_shop_productpromotionsArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionOrder>;
};


export type E360App_shop_productpromotionsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
};


export type E360App_shop_productpurchasesArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseOrder>;
};


export type E360App_shop_productpurchasesAggregateArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
};


export type E360App_shop_productservicesArgs = {
  filter?: InputMaybe<E360App_shop_productServiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productServiceOrder>;
};


export type E360App_shop_productservicesAggregateArgs = {
  filter?: InputMaybe<E360App_shop_productServiceFilter>;
};


export type E360App_shop_productshopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
};

export type E360App_shop_productAggregateResult = {
  __typename?: 'E360App_shop_productAggregateResult';
  avatarMax?: Maybe<Scalars['String']>;
  avatarMin?: Maybe<Scalars['String']>;
  bannerDesktopMax?: Maybe<Scalars['String']>;
  bannerDesktopMin?: Maybe<Scalars['String']>;
  bannerMobileMax?: Maybe<Scalars['String']>;
  bannerMobileMin?: Maybe<Scalars['String']>;
  colorMax?: Maybe<Scalars['String']>;
  colorMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  disclaimerMax?: Maybe<Scalars['String']>;
  disclaimerMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  priceAvg?: Maybe<Scalars['Float']>;
  priceMax?: Maybe<Scalars['Int']>;
  priceMin?: Maybe<Scalars['Int']>;
  priceSum?: Maybe<Scalars['Int']>;
  purchaseBannerDesktopMax?: Maybe<Scalars['String']>;
  purchaseBannerDesktopMin?: Maybe<Scalars['String']>;
  purchaseBannerMobileMax?: Maybe<Scalars['String']>;
  purchaseBannerMobileMin?: Maybe<Scalars['String']>;
  skuMax?: Maybe<Scalars['String']>;
  skuMin?: Maybe<Scalars['String']>;
  stripeProductIDMax?: Maybe<Scalars['String']>;
  stripeProductIDMin?: Maybe<Scalars['String']>;
  taxValueAvg?: Maybe<Scalars['Float']>;
  taxValueMax?: Maybe<Scalars['Int']>;
  taxValueMin?: Maybe<Scalars['Int']>;
  taxValueSum?: Maybe<Scalars['Int']>;
};

export type E360App_shop_productFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_productFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_productHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<E360App_shop_productFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_productFilter>>>;
  price?: InputMaybe<IntFilter>;
  sku?: InputMaybe<StringExactFilter>;
  status?: InputMaybe<E360App_shop_productStatus_exact>;
  stockType?: InputMaybe<E360App_shop_productStockType_exact>;
  stripeProductID?: InputMaybe<StringExactFilter>;
  taxType?: InputMaybe<e360App_shop_taxType_exact>;
  taxValueType?: InputMaybe<e360App_shop_taxValueType_exact>;
  type?: InputMaybe<E360App_shop_productType_exact>;
};

export enum E360App_shop_productHasFilter {
  avatar = 'avatar',
  bannerDesktop = 'bannerDesktop',
  bannerMobile = 'bannerMobile',
  color = 'color',
  contract = 'contract',
  customerContracts = 'customerContracts',
  description = 'description',
  disclaimer = 'disclaimer',
  guid = 'guid',
  items = 'items',
  name = 'name',
  operations = 'operations',
  partnerContracts = 'partnerContracts',
  petpassProduct = 'petpassProduct',
  price = 'price',
  promotions = 'promotions',
  purchaseBannerDesktop = 'purchaseBannerDesktop',
  purchaseBannerMobile = 'purchaseBannerMobile',
  purchases = 'purchases',
  services = 'services',
  shop = 'shop',
  sku = 'sku',
  status = 'status',
  stockType = 'stockType',
  stripeProductID = 'stripeProductID',
  taxType = 'taxType',
  taxValue = 'taxValue',
  taxValueType = 'taxValueType',
  type = 'type'
}

export type E360App_shop_productItem = {
  __typename?: 'E360App_shop_productItem';
  avatar?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  product?: Maybe<E360App_shop_product>;
  title: Scalars['String'];
};


export type E360App_shop_productItemproductArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};

export type E360App_shop_productItemAggregateResult = {
  __typename?: 'E360App_shop_productItemAggregateResult';
  avatarMax?: Maybe<Scalars['String']>;
  avatarMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
};

export type E360App_shop_productItemFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_productItemFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_productItemHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  not?: InputMaybe<E360App_shop_productItemFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_productItemFilter>>>;
  title?: InputMaybe<StringExactFilter_StringRegExpFilter>;
};

export enum E360App_shop_productItemHasFilter {
  avatar = 'avatar',
  description = 'description',
  guid = 'guid',
  index = 'index',
  product = 'product',
  title = 'title'
}

export type E360App_shop_productItemOrder = {
  asc?: InputMaybe<E360App_shop_productItemOrderable>;
  desc?: InputMaybe<E360App_shop_productItemOrderable>;
  then?: InputMaybe<E360App_shop_productItemOrder>;
};

export enum E360App_shop_productItemOrderable {
  avatar = 'avatar',
  description = 'description',
  guid = 'guid',
  index = 'index',
  title = 'title'
}

export type E360App_shop_productItemPatch = {
  avatar?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  product?: InputMaybe<E360App_shop_productRef>;
  title?: InputMaybe<Scalars['String']>;
};

export type E360App_shop_productItemRef = {
  avatar?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  product?: InputMaybe<E360App_shop_productRef>;
  title?: InputMaybe<Scalars['String']>;
};

export type E360App_shop_productOrder = {
  asc?: InputMaybe<E360App_shop_productOrderable>;
  desc?: InputMaybe<E360App_shop_productOrderable>;
  then?: InputMaybe<E360App_shop_productOrder>;
};

export enum E360App_shop_productOrderable {
  avatar = 'avatar',
  bannerDesktop = 'bannerDesktop',
  bannerMobile = 'bannerMobile',
  color = 'color',
  description = 'description',
  disclaimer = 'disclaimer',
  guid = 'guid',
  name = 'name',
  price = 'price',
  purchaseBannerDesktop = 'purchaseBannerDesktop',
  purchaseBannerMobile = 'purchaseBannerMobile',
  sku = 'sku',
  stripeProductID = 'stripeProductID',
  taxValue = 'taxValue'
}

export type E360App_shop_productPatch = {
  avatar?: InputMaybe<Scalars['String']>;
  bannerDesktop?: InputMaybe<Scalars['String']>;
  bannerMobile?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<E360App_shop_contractRef>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  description?: InputMaybe<Scalars['String']>;
  disclaimer?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<E360App_shop_productItemRef>>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<E360App_shop_operationRef>>;
  partnerContracts?: InputMaybe<Array<E360App_shop_partner_contractRef>>;
  petpassProduct?: InputMaybe<PETPASS_productRef>;
  price?: InputMaybe<Scalars['Int']>;
  promotions?: InputMaybe<Array<E360App_shop_promotionRef>>;
  purchaseBannerDesktop?: InputMaybe<Scalars['String']>;
  purchaseBannerMobile?: InputMaybe<Scalars['String']>;
  purchases?: InputMaybe<Array<E360App_shop_purchaseRef>>;
  services?: InputMaybe<Array<E360App_shop_productServiceRef>>;
  shop?: InputMaybe<E360App_shopRef>;
  sku?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<E360App_shop_productStatus>;
  stockType?: InputMaybe<E360App_shop_productStockType>;
  stripeProductID?: InputMaybe<Scalars['String']>;
  taxType?: InputMaybe<e360App_shop_taxType>;
  taxValue?: InputMaybe<Scalars['Int']>;
  taxValueType?: InputMaybe<e360App_shop_taxValueType>;
  type?: InputMaybe<E360App_shop_productType>;
};

export type E360App_shop_productRef = {
  avatar?: InputMaybe<Scalars['String']>;
  bannerDesktop?: InputMaybe<Scalars['String']>;
  bannerMobile?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<E360App_shop_contractRef>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  description?: InputMaybe<Scalars['String']>;
  disclaimer?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  items?: InputMaybe<Array<E360App_shop_productItemRef>>;
  name?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<E360App_shop_operationRef>>;
  partnerContracts?: InputMaybe<Array<E360App_shop_partner_contractRef>>;
  petpassProduct?: InputMaybe<PETPASS_productRef>;
  price?: InputMaybe<Scalars['Int']>;
  promotions?: InputMaybe<Array<E360App_shop_promotionRef>>;
  purchaseBannerDesktop?: InputMaybe<Scalars['String']>;
  purchaseBannerMobile?: InputMaybe<Scalars['String']>;
  purchases?: InputMaybe<Array<E360App_shop_purchaseRef>>;
  services?: InputMaybe<Array<E360App_shop_productServiceRef>>;
  shop?: InputMaybe<E360App_shopRef>;
  sku?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<E360App_shop_productStatus>;
  stockType?: InputMaybe<E360App_shop_productStockType>;
  stripeProductID?: InputMaybe<Scalars['String']>;
  taxType?: InputMaybe<e360App_shop_taxType>;
  taxValue?: InputMaybe<Scalars['Int']>;
  taxValueType?: InputMaybe<e360App_shop_taxValueType>;
  type?: InputMaybe<E360App_shop_productType>;
};

export type E360App_shop_productService = {
  __typename?: 'E360App_shop_productService';
  guid: Scalars['String'];
  id: Scalars['ID'];
  key: Scalars['String'];
  keys?: Maybe<Array<Scalars['String']>>;
  name: Scalars['String'];
  products: Array<E360App_shop_product>;
  productsAggregate?: Maybe<E360App_shop_productAggregateResult>;
  type: E360App_shop_productService_type;
};


export type E360App_shop_productServiceproductsArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productOrder>;
};


export type E360App_shop_productServiceproductsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};

export type E360App_shop_productServiceAggregateResult = {
  __typename?: 'E360App_shop_productServiceAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  keyMax?: Maybe<Scalars['String']>;
  keyMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_shop_productServiceFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_productServiceFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_productServiceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  key?: InputMaybe<StringExactFilter>;
  keys?: InputMaybe<StringExactFilter>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<E360App_shop_productServiceFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_productServiceFilter>>>;
  type?: InputMaybe<E360App_shop_productService_type_exact>;
};

export enum E360App_shop_productServiceHasFilter {
  guid = 'guid',
  key = 'key',
  keys = 'keys',
  name = 'name',
  products = 'products',
  type = 'type'
}

export type E360App_shop_productServiceOrder = {
  asc?: InputMaybe<E360App_shop_productServiceOrderable>;
  desc?: InputMaybe<E360App_shop_productServiceOrderable>;
  then?: InputMaybe<E360App_shop_productServiceOrder>;
};

export enum E360App_shop_productServiceOrderable {
  guid = 'guid',
  key = 'key',
  name = 'name'
}

export type E360App_shop_productServicePatch = {
  guid?: InputMaybe<Scalars['String']>;
  key?: InputMaybe<Scalars['String']>;
  keys?: InputMaybe<Array<Scalars['String']>>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Array<E360App_shop_productRef>>;
  type?: InputMaybe<E360App_shop_productService_type>;
};

export type E360App_shop_productServiceRef = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  key?: InputMaybe<Scalars['String']>;
  keys?: InputMaybe<Array<Scalars['String']>>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Array<E360App_shop_productRef>>;
  type?: InputMaybe<E360App_shop_productService_type>;
};

export enum E360App_shop_productService_type {
  INSURANCE = 'INSURANCE',
  SOS = 'SOS',
  VETCHAT = 'VETCHAT'
}

export type E360App_shop_productService_type_exact = {
  between?: InputMaybe<E360App_shop_productService_type>;
  eq?: InputMaybe<E360App_shop_productService_type>;
  ge?: InputMaybe<E360App_shop_productService_type>;
  gt?: InputMaybe<E360App_shop_productService_type>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_productService_type>>>;
  le?: InputMaybe<E360App_shop_productService_type>;
  lt?: InputMaybe<E360App_shop_productService_type>;
};

export enum E360App_shop_productStatus {
  AVAILABLE = 'AVAILABLE',
  COMING_SOON = 'COMING_SOON',
  UNAVAILABLE = 'UNAVAILABLE'
}

export type E360App_shop_productStatus_exact = {
  between?: InputMaybe<E360App_shop_productStatus>;
  eq?: InputMaybe<E360App_shop_productStatus>;
  ge?: InputMaybe<E360App_shop_productStatus>;
  gt?: InputMaybe<E360App_shop_productStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_productStatus>>>;
  le?: InputMaybe<E360App_shop_productStatus>;
  lt?: InputMaybe<E360App_shop_productStatus>;
};

export enum E360App_shop_productStockType {
  IN_STOCK = 'IN_STOCK',
  ON_DEMAND = 'ON_DEMAND'
}

export type E360App_shop_productStockType_exact = {
  between?: InputMaybe<E360App_shop_productStockType>;
  eq?: InputMaybe<E360App_shop_productStockType>;
  ge?: InputMaybe<E360App_shop_productStockType>;
  gt?: InputMaybe<E360App_shop_productStockType>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_productStockType>>>;
  le?: InputMaybe<E360App_shop_productStockType>;
  lt?: InputMaybe<E360App_shop_productStockType>;
};

export enum E360App_shop_productType {
  DIGITAL = 'DIGITAL',
  PHYSICAL = 'PHYSICAL',
  SERVICE = 'SERVICE'
}

export type E360App_shop_productType_exact = {
  between?: InputMaybe<E360App_shop_productType>;
  eq?: InputMaybe<E360App_shop_productType>;
  ge?: InputMaybe<E360App_shop_productType>;
  gt?: InputMaybe<E360App_shop_productType>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_productType>>>;
  le?: InputMaybe<E360App_shop_productType>;
  lt?: InputMaybe<E360App_shop_productType>;
};

export type E360App_shop_promoProduct = {
  __typename?: 'E360App_shop_promoProduct';
  discount: Scalars['Int'];
  discountType: E360App_shop_purchaseDiscountType;
  guid: Scalars['String'];
  id: Scalars['ID'];
  product: E360App_shop_product;
  promotion: E360App_shop_promotion;
};


export type E360App_shop_promoProductproductArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};


export type E360App_shop_promoProductpromotionArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
};

export type E360App_shop_promoProductAggregateResult = {
  __typename?: 'E360App_shop_promoProductAggregateResult';
  count?: Maybe<Scalars['Int']>;
  discountAvg?: Maybe<Scalars['Float']>;
  discountMax?: Maybe<Scalars['Int']>;
  discountMin?: Maybe<Scalars['Int']>;
  discountSum?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type E360App_shop_promoProductFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_promoProductFilter>>>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType_exact>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_promoProductHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_shop_promoProductFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_promoProductFilter>>>;
};

export enum E360App_shop_promoProductHasFilter {
  discount = 'discount',
  discountType = 'discountType',
  guid = 'guid',
  product = 'product',
  promotion = 'promotion'
}

export type E360App_shop_promoProductOrder = {
  asc?: InputMaybe<E360App_shop_promoProductOrderable>;
  desc?: InputMaybe<E360App_shop_promoProductOrderable>;
  then?: InputMaybe<E360App_shop_promoProductOrder>;
};

export enum E360App_shop_promoProductOrderable {
  discount = 'discount',
  guid = 'guid'
}

export type E360App_shop_promoProductPatch = {
  discount?: InputMaybe<Scalars['Int']>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType>;
  guid?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<E360App_shop_productRef>;
  promotion?: InputMaybe<E360App_shop_promotionRef>;
};

export type E360App_shop_promoProductRef = {
  discount?: InputMaybe<Scalars['Int']>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  product?: InputMaybe<E360App_shop_productRef>;
  promotion?: InputMaybe<E360App_shop_promotionRef>;
};

export type E360App_shop_promotion = {
  __typename?: 'E360App_shop_promotion';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  description?: Maybe<Scalars['String']>;
  discount: Scalars['Int'];
  discountType: E360App_shop_purchaseDiscountType;
  expirationDate?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  partners: Array<E360App_partner>;
  partnersAggregate?: Maybe<E360App_partnerAggregateResult>;
  products: Array<E360App_shop_product>;
  productsAggregate?: Maybe<E360App_shop_productAggregateResult>;
  promoProducts?: Maybe<Array<E360App_shop_promoProduct>>;
  promoProductsAggregate?: Maybe<E360App_shop_promoProductAggregateResult>;
  promotionCodes: Array<E360App_shop_promotionCode>;
  promotionCodesAggregate?: Maybe<E360App_shop_promotionCodeAggregateResult>;
  shop: E360App_shop;
  status: E360App_shop_promotionStatus;
  type: E360App_shop_promotionType;
};


export type E360App_shop_promotioncreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_shop_promotionpartnersArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partnerOrder>;
};


export type E360App_shop_promotionpartnersAggregateArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};


export type E360App_shop_promotionproductsArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productOrder>;
};


export type E360App_shop_promotionproductsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};


export type E360App_shop_promotionpromoProductsArgs = {
  filter?: InputMaybe<E360App_shop_promoProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promoProductOrder>;
};


export type E360App_shop_promotionpromoProductsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_promoProductFilter>;
};


export type E360App_shop_promotionpromotionCodesArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionCodeOrder>;
};


export type E360App_shop_promotionpromotionCodesAggregateArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
};


export type E360App_shop_promotionshopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
};

export type E360App_shop_promotionAggregateResult = {
  __typename?: 'E360App_shop_promotionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  discountAvg?: Maybe<Scalars['Float']>;
  discountMax?: Maybe<Scalars['Int']>;
  discountMin?: Maybe<Scalars['Int']>;
  discountSum?: Maybe<Scalars['Int']>;
  expirationDateMax?: Maybe<Scalars['DateTime']>;
  expirationDateMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_shop_promotionCode = {
  __typename?: 'E360App_shop_promotionCode';
  code: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  discount: Scalars['Int'];
  discountType: E360App_shop_purchaseDiscountType;
  expirationDate?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  label?: Maybe<Scalars['String']>;
  maxTimes: Scalars['Int'];
  partner?: Maybe<E360App_partner>;
  promotion: E360App_shop_promotion;
  purchases: Array<E360App_shop_purchase>;
  purchasesAggregate?: Maybe<E360App_shop_purchaseAggregateResult>;
  requested: Scalars['Int'];
  shop: E360App_shop;
  status: E360App_shop_promotionCodeStatus;
  timesUsed: Scalars['Int'];
  type: E360App_shop_promotionType;
};


export type E360App_shop_promotionCodecreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_shop_promotionCodepartnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};


export type E360App_shop_promotionCodepromotionArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
};


export type E360App_shop_promotionCodepurchasesArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseOrder>;
};


export type E360App_shop_promotionCodepurchasesAggregateArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
};


export type E360App_shop_promotionCodeshopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
};

export type E360App_shop_promotionCodeAggregateResult = {
  __typename?: 'E360App_shop_promotionCodeAggregateResult';
  codeMax?: Maybe<Scalars['String']>;
  codeMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  discountAvg?: Maybe<Scalars['Float']>;
  discountMax?: Maybe<Scalars['Int']>;
  discountMin?: Maybe<Scalars['Int']>;
  discountSum?: Maybe<Scalars['Int']>;
  expirationDateMax?: Maybe<Scalars['DateTime']>;
  expirationDateMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
  maxTimesAvg?: Maybe<Scalars['Float']>;
  maxTimesMax?: Maybe<Scalars['Int']>;
  maxTimesMin?: Maybe<Scalars['Int']>;
  maxTimesSum?: Maybe<Scalars['Int']>;
  requestedAvg?: Maybe<Scalars['Float']>;
  requestedMax?: Maybe<Scalars['Int']>;
  requestedMin?: Maybe<Scalars['Int']>;
  requestedSum?: Maybe<Scalars['Int']>;
  timesUsedAvg?: Maybe<Scalars['Float']>;
  timesUsedMax?: Maybe<Scalars['Int']>;
  timesUsedMin?: Maybe<Scalars['Int']>;
  timesUsedSum?: Maybe<Scalars['Int']>;
};

export type E360App_shop_promotionCodeFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_promotionCodeFilter>>>;
  code?: InputMaybe<StringHashFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType_exact>;
  expirationDate?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_promotionCodeHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  maxTimes?: InputMaybe<IntFilter>;
  not?: InputMaybe<E360App_shop_promotionCodeFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_promotionCodeFilter>>>;
  requested?: InputMaybe<IntFilter>;
  status?: InputMaybe<E360App_shop_promotionCodeStatus_exact>;
  timesUsed?: InputMaybe<IntFilter>;
  type?: InputMaybe<E360App_shop_promotionType_exact>;
};

export enum E360App_shop_promotionCodeHasFilter {
  code = 'code',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  discount = 'discount',
  discountType = 'discountType',
  expirationDate = 'expirationDate',
  guid = 'guid',
  label = 'label',
  maxTimes = 'maxTimes',
  partner = 'partner',
  promotion = 'promotion',
  purchases = 'purchases',
  requested = 'requested',
  shop = 'shop',
  status = 'status',
  timesUsed = 'timesUsed',
  type = 'type'
}

export type E360App_shop_promotionCodeOrder = {
  asc?: InputMaybe<E360App_shop_promotionCodeOrderable>;
  desc?: InputMaybe<E360App_shop_promotionCodeOrderable>;
  then?: InputMaybe<E360App_shop_promotionCodeOrder>;
};

export enum E360App_shop_promotionCodeOrderable {
  code = 'code',
  createdAt = 'createdAt',
  discount = 'discount',
  expirationDate = 'expirationDate',
  guid = 'guid',
  label = 'label',
  maxTimes = 'maxTimes',
  requested = 'requested',
  timesUsed = 'timesUsed'
}

export type E360App_shop_promotionCodePatch = {
  code?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  discount?: InputMaybe<Scalars['Int']>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType>;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  maxTimes?: InputMaybe<Scalars['Int']>;
  partner?: InputMaybe<E360App_partnerRef>;
  promotion?: InputMaybe<E360App_shop_promotionRef>;
  purchases?: InputMaybe<Array<E360App_shop_purchaseRef>>;
  requested?: InputMaybe<Scalars['Int']>;
  shop?: InputMaybe<E360App_shopRef>;
  status?: InputMaybe<E360App_shop_promotionCodeStatus>;
  timesUsed?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<E360App_shop_promotionType>;
};

export type E360App_shop_promotionCodeRef = {
  code?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  discount?: InputMaybe<Scalars['Int']>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType>;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  maxTimes?: InputMaybe<Scalars['Int']>;
  partner?: InputMaybe<E360App_partnerRef>;
  promotion?: InputMaybe<E360App_shop_promotionRef>;
  purchases?: InputMaybe<Array<E360App_shop_purchaseRef>>;
  requested?: InputMaybe<Scalars['Int']>;
  shop?: InputMaybe<E360App_shopRef>;
  status?: InputMaybe<E360App_shop_promotionCodeStatus>;
  timesUsed?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<E360App_shop_promotionType>;
};

export enum E360App_shop_promotionCodeStatus {
  ACTIVE = 'ACTIVE',
  DELETED = 'DELETED',
  EXPIRED = 'EXPIRED',
  INACTIVE = 'INACTIVE',
  USED = 'USED'
}

export type E360App_shop_promotionCodeStatus_exact = {
  between?: InputMaybe<E360App_shop_promotionCodeStatus>;
  eq?: InputMaybe<E360App_shop_promotionCodeStatus>;
  ge?: InputMaybe<E360App_shop_promotionCodeStatus>;
  gt?: InputMaybe<E360App_shop_promotionCodeStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_promotionCodeStatus>>>;
  le?: InputMaybe<E360App_shop_promotionCodeStatus>;
  lt?: InputMaybe<E360App_shop_promotionCodeStatus>;
};

export type E360App_shop_promotionFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_promotionFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType_exact>;
  expirationDate?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_promotionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<E360App_shop_promotionFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_promotionFilter>>>;
  status?: InputMaybe<E360App_shop_promotionStatus_exact>;
  type?: InputMaybe<E360App_shop_promotionType_exact>;
};

export enum E360App_shop_promotionHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  discount = 'discount',
  discountType = 'discountType',
  expirationDate = 'expirationDate',
  guid = 'guid',
  name = 'name',
  partners = 'partners',
  products = 'products',
  promoProducts = 'promoProducts',
  promotionCodes = 'promotionCodes',
  shop = 'shop',
  status = 'status',
  type = 'type'
}

export type E360App_shop_promotionOrder = {
  asc?: InputMaybe<E360App_shop_promotionOrderable>;
  desc?: InputMaybe<E360App_shop_promotionOrderable>;
  then?: InputMaybe<E360App_shop_promotionOrder>;
};

export enum E360App_shop_promotionOrderable {
  createdAt = 'createdAt',
  description = 'description',
  discount = 'discount',
  expirationDate = 'expirationDate',
  guid = 'guid',
  name = 'name'
}

export type E360App_shop_promotionPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Int']>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType>;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  partners?: InputMaybe<Array<E360App_partnerRef>>;
  products?: InputMaybe<Array<E360App_shop_productRef>>;
  promoProducts?: InputMaybe<Array<E360App_shop_promoProductRef>>;
  promotionCodes?: InputMaybe<Array<E360App_shop_promotionCodeRef>>;
  shop?: InputMaybe<E360App_shopRef>;
  status?: InputMaybe<E360App_shop_promotionStatus>;
  type?: InputMaybe<E360App_shop_promotionType>;
};

export type E360App_shop_promotionRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Int']>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType>;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  partners?: InputMaybe<Array<E360App_partnerRef>>;
  products?: InputMaybe<Array<E360App_shop_productRef>>;
  promoProducts?: InputMaybe<Array<E360App_shop_promoProductRef>>;
  promotionCodes?: InputMaybe<Array<E360App_shop_promotionCodeRef>>;
  shop?: InputMaybe<E360App_shopRef>;
  status?: InputMaybe<E360App_shop_promotionStatus>;
  type?: InputMaybe<E360App_shop_promotionType>;
};

export enum E360App_shop_promotionStatus {
  ACTIVE = 'ACTIVE',
  DELETED = 'DELETED',
  EXPIRED = 'EXPIRED',
  INACTIVE = 'INACTIVE'
}

export type E360App_shop_promotionStatus_exact = {
  between?: InputMaybe<E360App_shop_promotionStatus>;
  eq?: InputMaybe<E360App_shop_promotionStatus>;
  ge?: InputMaybe<E360App_shop_promotionStatus>;
  gt?: InputMaybe<E360App_shop_promotionStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_promotionStatus>>>;
  le?: InputMaybe<E360App_shop_promotionStatus>;
  lt?: InputMaybe<E360App_shop_promotionStatus>;
};

export enum E360App_shop_promotionType {
  CASHBACK = 'CASHBACK',
  DISCOUNT = 'DISCOUNT'
}

export type E360App_shop_promotionType_exact = {
  between?: InputMaybe<E360App_shop_promotionType>;
  eq?: InputMaybe<E360App_shop_promotionType>;
  ge?: InputMaybe<E360App_shop_promotionType>;
  gt?: InputMaybe<E360App_shop_promotionType>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_promotionType>>>;
  le?: InputMaybe<E360App_shop_promotionType>;
  lt?: InputMaybe<E360App_shop_promotionType>;
};

export type E360App_shop_purchase = {
  __typename?: 'E360App_shop_purchase';
  canceledAt?: Maybe<Scalars['DateTime']>;
  channel?: Maybe<E360App_shop_channel>;
  cost: Scalars['Int'];
  createBy?: Maybe<E360App_user>;
  createdAt: Scalars['DateTime'];
  customer?: Maybe<E360App_user>;
  customerAddress?: Maybe<Scalars['String']>;
  customerAddressInfo?: Maybe<Scalars['String']>;
  customerAddressNumber?: Maybe<Scalars['String']>;
  customerAddressType?: Maybe<Scalars['String']>;
  customerBirthDate?: Maybe<Scalars['DateTime']>;
  customerCity?: Maybe<Scalars['String']>;
  customerCompany?: Maybe<Scalars['String']>;
  customerCompanyDocumentId?: Maybe<Scalars['String']>;
  customerCountry?: Maybe<Scalars['String']>;
  customerDataRaw?: Maybe<Scalars['String']>;
  customerDocumentId?: Maybe<Scalars['String']>;
  customerEmail?: Maybe<Scalars['String']>;
  customerLastName?: Maybe<Scalars['String']>;
  customerName?: Maybe<Scalars['String']>;
  customerPartnerMemberId?: Maybe<Scalars['String']>;
  customerPhone?: Maybe<Scalars['String']>;
  customerSecondLastName?: Maybe<Scalars['String']>;
  customerState?: Maybe<Scalars['String']>;
  customerZipCode?: Maybe<Scalars['String']>;
  date: Scalars['DateTime'];
  discount: Scalars['Int'];
  discountType: E360App_shop_purchaseDiscountType;
  discountValue: Scalars['Int'];
  failedAt?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isTest?: Maybe<Scalars['Boolean']>;
  metaadataIP?: Maybe<Scalars['String']>;
  metadataAccuracyType?: Maybe<Scalars['String']>;
  metadataCity?: Maybe<Scalars['String']>;
  metadataCountry?: Maybe<Scalars['String']>;
  metadataLat?: Maybe<Scalars['Float']>;
  metadataLon?: Maybe<Scalars['Float']>;
  metadataOrigin?: Maybe<Scalars['String']>;
  metadataPlatform?: Maybe<Scalars['String']>;
  metadataRegion?: Maybe<Scalars['String']>;
  metadataTimezone?: Maybe<Scalars['String']>;
  metadataUrl?: Maybe<Scalars['String']>;
  operations: Array<E360App_shop_operation>;
  operationsAggregate?: Maybe<E360App_shop_operationAggregateResult>;
  paidAt?: Maybe<Scalars['DateTime']>;
  paymentMethod?: Maybe<E360App_shop_paymentMethod>;
  petpassPurchase?: Maybe<PETPASS_purchase>;
  products: Array<E360App_shop_product>;
  productsAggregate?: Maybe<E360App_shop_productAggregateResult>;
  promotionCode?: Maybe<E360App_shop_promotionCode>;
  providerEvents: Array<E360App_shop_purchaseProviderEvent>;
  providerEventsAggregate?: Maybe<E360App_shop_purchaseProviderEventAggregateResult>;
  redsysMerchantIdentifier?: Maybe<Scalars['String']>;
  redsysOrderId?: Maybe<Scalars['String']>;
  refundedAt?: Maybe<Scalars['DateTime']>;
  shop: E360App_shop;
  status: E360App_shop_purchaseStatus;
  stripeCheckoutSessionID?: Maybe<Scalars['String']>;
  stripePaymentIntentID?: Maybe<Scalars['String']>;
  taxPercentage: Scalars['Int'];
  taxType?: Maybe<e360App_shop_taxType>;
  taxValue: Scalars['Int'];
  taxValueType?: Maybe<e360App_shop_taxValueType>;
  total: Scalars['Int'];
  user?: Maybe<E360App_user>;
  ux?: Maybe<Scalars['String']>;
};


export type E360App_shop_purchasecreateByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_shop_purchasecustomerArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_shop_purchaseoperationsArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_operationOrder>;
};


export type E360App_shop_purchaseoperationsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
};


export type E360App_shop_purchasepetpassPurchaseArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
};


export type E360App_shop_purchaseproductsArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productOrder>;
};


export type E360App_shop_purchaseproductsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};


export type E360App_shop_purchasepromotionCodeArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
};


export type E360App_shop_purchaseproviderEventsArgs = {
  filter?: InputMaybe<E360App_shop_purchaseProviderEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseProviderEventOrder>;
};


export type E360App_shop_purchaseproviderEventsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_purchaseProviderEventFilter>;
};


export type E360App_shop_purchaseshopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
};


export type E360App_shop_purchaseuserArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};

export type E360App_shop_purchaseAggregateResult = {
  __typename?: 'E360App_shop_purchaseAggregateResult';
  canceledAtMax?: Maybe<Scalars['DateTime']>;
  canceledAtMin?: Maybe<Scalars['DateTime']>;
  costAvg?: Maybe<Scalars['Float']>;
  costMax?: Maybe<Scalars['Int']>;
  costMin?: Maybe<Scalars['Int']>;
  costSum?: Maybe<Scalars['Int']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  customerAddressInfoMax?: Maybe<Scalars['String']>;
  customerAddressInfoMin?: Maybe<Scalars['String']>;
  customerAddressMax?: Maybe<Scalars['String']>;
  customerAddressMin?: Maybe<Scalars['String']>;
  customerAddressNumberMax?: Maybe<Scalars['String']>;
  customerAddressNumberMin?: Maybe<Scalars['String']>;
  customerAddressTypeMax?: Maybe<Scalars['String']>;
  customerAddressTypeMin?: Maybe<Scalars['String']>;
  customerBirthDateMax?: Maybe<Scalars['DateTime']>;
  customerBirthDateMin?: Maybe<Scalars['DateTime']>;
  customerCityMax?: Maybe<Scalars['String']>;
  customerCityMin?: Maybe<Scalars['String']>;
  customerCompanyDocumentIdMax?: Maybe<Scalars['String']>;
  customerCompanyDocumentIdMin?: Maybe<Scalars['String']>;
  customerCompanyMax?: Maybe<Scalars['String']>;
  customerCompanyMin?: Maybe<Scalars['String']>;
  customerCountryMax?: Maybe<Scalars['String']>;
  customerCountryMin?: Maybe<Scalars['String']>;
  customerDataRawMax?: Maybe<Scalars['String']>;
  customerDataRawMin?: Maybe<Scalars['String']>;
  customerDocumentIdMax?: Maybe<Scalars['String']>;
  customerDocumentIdMin?: Maybe<Scalars['String']>;
  customerEmailMax?: Maybe<Scalars['String']>;
  customerEmailMin?: Maybe<Scalars['String']>;
  customerLastNameMax?: Maybe<Scalars['String']>;
  customerLastNameMin?: Maybe<Scalars['String']>;
  customerNameMax?: Maybe<Scalars['String']>;
  customerNameMin?: Maybe<Scalars['String']>;
  customerPartnerMemberIdMax?: Maybe<Scalars['String']>;
  customerPartnerMemberIdMin?: Maybe<Scalars['String']>;
  customerPhoneMax?: Maybe<Scalars['String']>;
  customerPhoneMin?: Maybe<Scalars['String']>;
  customerSecondLastNameMax?: Maybe<Scalars['String']>;
  customerSecondLastNameMin?: Maybe<Scalars['String']>;
  customerStateMax?: Maybe<Scalars['String']>;
  customerStateMin?: Maybe<Scalars['String']>;
  customerZipCodeMax?: Maybe<Scalars['String']>;
  customerZipCodeMin?: Maybe<Scalars['String']>;
  dateMax?: Maybe<Scalars['DateTime']>;
  dateMin?: Maybe<Scalars['DateTime']>;
  discountAvg?: Maybe<Scalars['Float']>;
  discountMax?: Maybe<Scalars['Int']>;
  discountMin?: Maybe<Scalars['Int']>;
  discountSum?: Maybe<Scalars['Int']>;
  discountValueAvg?: Maybe<Scalars['Float']>;
  discountValueMax?: Maybe<Scalars['Int']>;
  discountValueMin?: Maybe<Scalars['Int']>;
  discountValueSum?: Maybe<Scalars['Int']>;
  failedAtMax?: Maybe<Scalars['DateTime']>;
  failedAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  metaadataIPMax?: Maybe<Scalars['String']>;
  metaadataIPMin?: Maybe<Scalars['String']>;
  metadataAccuracyTypeMax?: Maybe<Scalars['String']>;
  metadataAccuracyTypeMin?: Maybe<Scalars['String']>;
  metadataCityMax?: Maybe<Scalars['String']>;
  metadataCityMin?: Maybe<Scalars['String']>;
  metadataCountryMax?: Maybe<Scalars['String']>;
  metadataCountryMin?: Maybe<Scalars['String']>;
  metadataLatAvg?: Maybe<Scalars['Float']>;
  metadataLatMax?: Maybe<Scalars['Float']>;
  metadataLatMin?: Maybe<Scalars['Float']>;
  metadataLatSum?: Maybe<Scalars['Float']>;
  metadataLonAvg?: Maybe<Scalars['Float']>;
  metadataLonMax?: Maybe<Scalars['Float']>;
  metadataLonMin?: Maybe<Scalars['Float']>;
  metadataLonSum?: Maybe<Scalars['Float']>;
  metadataOriginMax?: Maybe<Scalars['String']>;
  metadataOriginMin?: Maybe<Scalars['String']>;
  metadataPlatformMax?: Maybe<Scalars['String']>;
  metadataPlatformMin?: Maybe<Scalars['String']>;
  metadataRegionMax?: Maybe<Scalars['String']>;
  metadataRegionMin?: Maybe<Scalars['String']>;
  metadataTimezoneMax?: Maybe<Scalars['String']>;
  metadataTimezoneMin?: Maybe<Scalars['String']>;
  metadataUrlMax?: Maybe<Scalars['String']>;
  metadataUrlMin?: Maybe<Scalars['String']>;
  paidAtMax?: Maybe<Scalars['DateTime']>;
  paidAtMin?: Maybe<Scalars['DateTime']>;
  redsysMerchantIdentifierMax?: Maybe<Scalars['String']>;
  redsysMerchantIdentifierMin?: Maybe<Scalars['String']>;
  redsysOrderIdMax?: Maybe<Scalars['String']>;
  redsysOrderIdMin?: Maybe<Scalars['String']>;
  refundedAtMax?: Maybe<Scalars['DateTime']>;
  refundedAtMin?: Maybe<Scalars['DateTime']>;
  stripeCheckoutSessionIDMax?: Maybe<Scalars['String']>;
  stripeCheckoutSessionIDMin?: Maybe<Scalars['String']>;
  stripePaymentIntentIDMax?: Maybe<Scalars['String']>;
  stripePaymentIntentIDMin?: Maybe<Scalars['String']>;
  taxPercentageAvg?: Maybe<Scalars['Float']>;
  taxPercentageMax?: Maybe<Scalars['Int']>;
  taxPercentageMin?: Maybe<Scalars['Int']>;
  taxPercentageSum?: Maybe<Scalars['Int']>;
  taxValueAvg?: Maybe<Scalars['Float']>;
  taxValueMax?: Maybe<Scalars['Int']>;
  taxValueMin?: Maybe<Scalars['Int']>;
  taxValueSum?: Maybe<Scalars['Int']>;
  totalAvg?: Maybe<Scalars['Float']>;
  totalMax?: Maybe<Scalars['Int']>;
  totalMin?: Maybe<Scalars['Int']>;
  totalSum?: Maybe<Scalars['Int']>;
  uxMax?: Maybe<Scalars['String']>;
  uxMin?: Maybe<Scalars['String']>;
};

export enum E360App_shop_purchaseDiscountType {
  NONE = 'NONE',
  PERCENTAGE = 'PERCENTAGE',
  SPECIAL_PRICE = 'SPECIAL_PRICE',
  VALUE = 'VALUE'
}

export type E360App_shop_purchaseDiscountType_exact = {
  between?: InputMaybe<E360App_shop_purchaseDiscountType>;
  eq?: InputMaybe<E360App_shop_purchaseDiscountType>;
  ge?: InputMaybe<E360App_shop_purchaseDiscountType>;
  gt?: InputMaybe<E360App_shop_purchaseDiscountType>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_purchaseDiscountType>>>;
  le?: InputMaybe<E360App_shop_purchaseDiscountType>;
  lt?: InputMaybe<E360App_shop_purchaseDiscountType>;
};

export type E360App_shop_purchaseFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_purchaseFilter>>>;
  canceledAt?: InputMaybe<DateTimeFilter>;
  channel?: InputMaybe<E360App_shop_channel_exact>;
  createdAt?: InputMaybe<DateTimeFilter>;
  customerAddress?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  customerBirthDate?: InputMaybe<DateTimeFilter>;
  customerCity?: InputMaybe<StringExactFilter>;
  customerCompany?: InputMaybe<StringExactFilter>;
  customerCompanyDocumentId?: InputMaybe<StringExactFilter>;
  customerCountry?: InputMaybe<StringExactFilter>;
  customerDocumentId?: InputMaybe<StringExactFilter>;
  customerEmail?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  customerLastName?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  customerName?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  customerPartnerMemberId?: InputMaybe<StringExactFilter>;
  customerPhone?: InputMaybe<StringExactFilter>;
  customerSecondLastName?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  customerState?: InputMaybe<StringExactFilter>;
  customerZipCode?: InputMaybe<StringExactFilter>;
  date?: InputMaybe<DateTimeFilter>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType_exact>;
  failedAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_purchaseHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  metaadataIP?: InputMaybe<StringExactFilter>;
  metadataAccuracyType?: InputMaybe<StringExactFilter>;
  metadataCity?: InputMaybe<StringExactFilter>;
  metadataCountry?: InputMaybe<StringExactFilter>;
  metadataLat?: InputMaybe<FloatFilter>;
  metadataLon?: InputMaybe<FloatFilter>;
  metadataOrigin?: InputMaybe<StringExactFilter>;
  metadataPlatform?: InputMaybe<StringExactFilter>;
  metadataRegion?: InputMaybe<StringExactFilter>;
  metadataTimezone?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  metadataUrl?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<E360App_shop_purchaseFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_purchaseFilter>>>;
  paidAt?: InputMaybe<DateTimeFilter>;
  paymentMethod?: InputMaybe<E360App_shop_paymentMethod_exact>;
  redsysMerchantIdentifier?: InputMaybe<StringExactFilter>;
  redsysOrderId?: InputMaybe<StringExactFilter>;
  refundedAt?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<E360App_shop_purchaseStatus_exact>;
  stripeCheckoutSessionID?: InputMaybe<StringExactFilter>;
  stripePaymentIntentID?: InputMaybe<StringExactFilter>;
  taxType?: InputMaybe<e360App_shop_taxType_exact>;
  taxValueType?: InputMaybe<e360App_shop_taxValueType_exact>;
  ux?: InputMaybe<StringExactFilter>;
};

export enum E360App_shop_purchaseHasFilter {
  canceledAt = 'canceledAt',
  channel = 'channel',
  cost = 'cost',
  createBy = 'createBy',
  createdAt = 'createdAt',
  customer = 'customer',
  customerAddress = 'customerAddress',
  customerAddressInfo = 'customerAddressInfo',
  customerAddressNumber = 'customerAddressNumber',
  customerAddressType = 'customerAddressType',
  customerBirthDate = 'customerBirthDate',
  customerCity = 'customerCity',
  customerCompany = 'customerCompany',
  customerCompanyDocumentId = 'customerCompanyDocumentId',
  customerCountry = 'customerCountry',
  customerDataRaw = 'customerDataRaw',
  customerDocumentId = 'customerDocumentId',
  customerEmail = 'customerEmail',
  customerLastName = 'customerLastName',
  customerName = 'customerName',
  customerPartnerMemberId = 'customerPartnerMemberId',
  customerPhone = 'customerPhone',
  customerSecondLastName = 'customerSecondLastName',
  customerState = 'customerState',
  customerZipCode = 'customerZipCode',
  date = 'date',
  discount = 'discount',
  discountType = 'discountType',
  discountValue = 'discountValue',
  failedAt = 'failedAt',
  guid = 'guid',
  isTest = 'isTest',
  metaadataIP = 'metaadataIP',
  metadataAccuracyType = 'metadataAccuracyType',
  metadataCity = 'metadataCity',
  metadataCountry = 'metadataCountry',
  metadataLat = 'metadataLat',
  metadataLon = 'metadataLon',
  metadataOrigin = 'metadataOrigin',
  metadataPlatform = 'metadataPlatform',
  metadataRegion = 'metadataRegion',
  metadataTimezone = 'metadataTimezone',
  metadataUrl = 'metadataUrl',
  operations = 'operations',
  paidAt = 'paidAt',
  paymentMethod = 'paymentMethod',
  petpassPurchase = 'petpassPurchase',
  products = 'products',
  promotionCode = 'promotionCode',
  providerEvents = 'providerEvents',
  redsysMerchantIdentifier = 'redsysMerchantIdentifier',
  redsysOrderId = 'redsysOrderId',
  refundedAt = 'refundedAt',
  shop = 'shop',
  status = 'status',
  stripeCheckoutSessionID = 'stripeCheckoutSessionID',
  stripePaymentIntentID = 'stripePaymentIntentID',
  taxPercentage = 'taxPercentage',
  taxType = 'taxType',
  taxValue = 'taxValue',
  taxValueType = 'taxValueType',
  total = 'total',
  user = 'user',
  ux = 'ux'
}

export type E360App_shop_purchaseOrder = {
  asc?: InputMaybe<E360App_shop_purchaseOrderable>;
  desc?: InputMaybe<E360App_shop_purchaseOrderable>;
  then?: InputMaybe<E360App_shop_purchaseOrder>;
};

export enum E360App_shop_purchaseOrderable {
  canceledAt = 'canceledAt',
  cost = 'cost',
  createdAt = 'createdAt',
  customerAddress = 'customerAddress',
  customerAddressInfo = 'customerAddressInfo',
  customerAddressNumber = 'customerAddressNumber',
  customerAddressType = 'customerAddressType',
  customerBirthDate = 'customerBirthDate',
  customerCity = 'customerCity',
  customerCompany = 'customerCompany',
  customerCompanyDocumentId = 'customerCompanyDocumentId',
  customerCountry = 'customerCountry',
  customerDataRaw = 'customerDataRaw',
  customerDocumentId = 'customerDocumentId',
  customerEmail = 'customerEmail',
  customerLastName = 'customerLastName',
  customerName = 'customerName',
  customerPartnerMemberId = 'customerPartnerMemberId',
  customerPhone = 'customerPhone',
  customerSecondLastName = 'customerSecondLastName',
  customerState = 'customerState',
  customerZipCode = 'customerZipCode',
  date = 'date',
  discount = 'discount',
  discountValue = 'discountValue',
  failedAt = 'failedAt',
  guid = 'guid',
  metaadataIP = 'metaadataIP',
  metadataAccuracyType = 'metadataAccuracyType',
  metadataCity = 'metadataCity',
  metadataCountry = 'metadataCountry',
  metadataLat = 'metadataLat',
  metadataLon = 'metadataLon',
  metadataOrigin = 'metadataOrigin',
  metadataPlatform = 'metadataPlatform',
  metadataRegion = 'metadataRegion',
  metadataTimezone = 'metadataTimezone',
  metadataUrl = 'metadataUrl',
  paidAt = 'paidAt',
  redsysMerchantIdentifier = 'redsysMerchantIdentifier',
  redsysOrderId = 'redsysOrderId',
  refundedAt = 'refundedAt',
  stripeCheckoutSessionID = 'stripeCheckoutSessionID',
  stripePaymentIntentID = 'stripePaymentIntentID',
  taxPercentage = 'taxPercentage',
  taxValue = 'taxValue',
  total = 'total',
  ux = 'ux'
}

export type E360App_shop_purchasePatch = {
  canceledAt?: InputMaybe<Scalars['DateTime']>;
  channel?: InputMaybe<E360App_shop_channel>;
  cost?: InputMaybe<Scalars['Int']>;
  createBy?: InputMaybe<E360App_userRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customer?: InputMaybe<E360App_userRef>;
  customerAddress?: InputMaybe<Scalars['String']>;
  customerAddressInfo?: InputMaybe<Scalars['String']>;
  customerAddressNumber?: InputMaybe<Scalars['String']>;
  customerAddressType?: InputMaybe<Scalars['String']>;
  customerBirthDate?: InputMaybe<Scalars['DateTime']>;
  customerCity?: InputMaybe<Scalars['String']>;
  customerCompany?: InputMaybe<Scalars['String']>;
  customerCompanyDocumentId?: InputMaybe<Scalars['String']>;
  customerCountry?: InputMaybe<Scalars['String']>;
  customerDataRaw?: InputMaybe<Scalars['String']>;
  customerDocumentId?: InputMaybe<Scalars['String']>;
  customerEmail?: InputMaybe<Scalars['String']>;
  customerLastName?: InputMaybe<Scalars['String']>;
  customerName?: InputMaybe<Scalars['String']>;
  customerPartnerMemberId?: InputMaybe<Scalars['String']>;
  customerPhone?: InputMaybe<Scalars['String']>;
  customerSecondLastName?: InputMaybe<Scalars['String']>;
  customerState?: InputMaybe<Scalars['String']>;
  customerZipCode?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Int']>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType>;
  discountValue?: InputMaybe<Scalars['Int']>;
  failedAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  isTest?: InputMaybe<Scalars['Boolean']>;
  metaadataIP?: InputMaybe<Scalars['String']>;
  metadataAccuracyType?: InputMaybe<Scalars['String']>;
  metadataCity?: InputMaybe<Scalars['String']>;
  metadataCountry?: InputMaybe<Scalars['String']>;
  metadataLat?: InputMaybe<Scalars['Float']>;
  metadataLon?: InputMaybe<Scalars['Float']>;
  metadataOrigin?: InputMaybe<Scalars['String']>;
  metadataPlatform?: InputMaybe<Scalars['String']>;
  metadataRegion?: InputMaybe<Scalars['String']>;
  metadataTimezone?: InputMaybe<Scalars['String']>;
  metadataUrl?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<E360App_shop_operationRef>>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentMethod?: InputMaybe<E360App_shop_paymentMethod>;
  petpassPurchase?: InputMaybe<PETPASS_purchaseRef>;
  products?: InputMaybe<Array<E360App_shop_productRef>>;
  promotionCode?: InputMaybe<E360App_shop_promotionCodeRef>;
  providerEvents?: InputMaybe<Array<E360App_shop_purchaseProviderEventRef>>;
  redsysMerchantIdentifier?: InputMaybe<Scalars['String']>;
  redsysOrderId?: InputMaybe<Scalars['String']>;
  refundedAt?: InputMaybe<Scalars['DateTime']>;
  shop?: InputMaybe<E360App_shopRef>;
  status?: InputMaybe<E360App_shop_purchaseStatus>;
  stripeCheckoutSessionID?: InputMaybe<Scalars['String']>;
  stripePaymentIntentID?: InputMaybe<Scalars['String']>;
  taxPercentage?: InputMaybe<Scalars['Int']>;
  taxType?: InputMaybe<e360App_shop_taxType>;
  taxValue?: InputMaybe<Scalars['Int']>;
  taxValueType?: InputMaybe<e360App_shop_taxValueType>;
  total?: InputMaybe<Scalars['Int']>;
  user?: InputMaybe<E360App_userRef>;
  ux?: InputMaybe<Scalars['String']>;
};

export type E360App_shop_purchaseProviderEvent = {
  __typename?: 'E360App_shop_purchaseProviderEvent';
  createdAt: Scalars['DateTime'];
  data?: Maybe<Scalars['String']>;
  event: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  providerName: Scalars['String'];
  purchase: E360App_shop_purchase;
  status: E360App_shop_purchaseStatus;
  stripeCheckoutSessionID?: Maybe<Scalars['String']>;
  stripePaymentIntentID?: Maybe<Scalars['String']>;
};


export type E360App_shop_purchaseProviderEventpurchaseArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
};

export type E360App_shop_purchaseProviderEventAggregateResult = {
  __typename?: 'E360App_shop_purchaseProviderEventAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  dataMax?: Maybe<Scalars['String']>;
  dataMin?: Maybe<Scalars['String']>;
  eventMax?: Maybe<Scalars['String']>;
  eventMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  providerNameMax?: Maybe<Scalars['String']>;
  providerNameMin?: Maybe<Scalars['String']>;
  stripeCheckoutSessionIDMax?: Maybe<Scalars['String']>;
  stripeCheckoutSessionIDMin?: Maybe<Scalars['String']>;
  stripePaymentIntentIDMax?: Maybe<Scalars['String']>;
  stripePaymentIntentIDMin?: Maybe<Scalars['String']>;
};

export type E360App_shop_purchaseProviderEventFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_shop_purchaseProviderEventFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  event?: InputMaybe<StringExactFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_shop_purchaseProviderEventHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_shop_purchaseProviderEventFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_shop_purchaseProviderEventFilter>>>;
  providerName?: InputMaybe<StringExactFilter>;
  status?: InputMaybe<E360App_shop_purchaseStatus_exact>;
  stripeCheckoutSessionID?: InputMaybe<StringExactFilter>;
  stripePaymentIntentID?: InputMaybe<StringExactFilter>;
};

export enum E360App_shop_purchaseProviderEventHasFilter {
  createdAt = 'createdAt',
  data = 'data',
  event = 'event',
  guid = 'guid',
  providerName = 'providerName',
  purchase = 'purchase',
  status = 'status',
  stripeCheckoutSessionID = 'stripeCheckoutSessionID',
  stripePaymentIntentID = 'stripePaymentIntentID'
}

export type E360App_shop_purchaseProviderEventOrder = {
  asc?: InputMaybe<E360App_shop_purchaseProviderEventOrderable>;
  desc?: InputMaybe<E360App_shop_purchaseProviderEventOrderable>;
  then?: InputMaybe<E360App_shop_purchaseProviderEventOrder>;
};

export enum E360App_shop_purchaseProviderEventOrderable {
  createdAt = 'createdAt',
  data = 'data',
  event = 'event',
  guid = 'guid',
  providerName = 'providerName',
  stripeCheckoutSessionID = 'stripeCheckoutSessionID',
  stripePaymentIntentID = 'stripePaymentIntentID'
}

export type E360App_shop_purchaseProviderEventPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  data?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  providerName?: InputMaybe<Scalars['String']>;
  purchase?: InputMaybe<E360App_shop_purchaseRef>;
  status?: InputMaybe<E360App_shop_purchaseStatus>;
  stripeCheckoutSessionID?: InputMaybe<Scalars['String']>;
  stripePaymentIntentID?: InputMaybe<Scalars['String']>;
};

export type E360App_shop_purchaseProviderEventRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  data?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  providerName?: InputMaybe<Scalars['String']>;
  purchase?: InputMaybe<E360App_shop_purchaseRef>;
  status?: InputMaybe<E360App_shop_purchaseStatus>;
  stripeCheckoutSessionID?: InputMaybe<Scalars['String']>;
  stripePaymentIntentID?: InputMaybe<Scalars['String']>;
};

export type E360App_shop_purchaseRef = {
  canceledAt?: InputMaybe<Scalars['DateTime']>;
  channel?: InputMaybe<E360App_shop_channel>;
  cost?: InputMaybe<Scalars['Int']>;
  createBy?: InputMaybe<E360App_userRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  customer?: InputMaybe<E360App_userRef>;
  customerAddress?: InputMaybe<Scalars['String']>;
  customerAddressInfo?: InputMaybe<Scalars['String']>;
  customerAddressNumber?: InputMaybe<Scalars['String']>;
  customerAddressType?: InputMaybe<Scalars['String']>;
  customerBirthDate?: InputMaybe<Scalars['DateTime']>;
  customerCity?: InputMaybe<Scalars['String']>;
  customerCompany?: InputMaybe<Scalars['String']>;
  customerCompanyDocumentId?: InputMaybe<Scalars['String']>;
  customerCountry?: InputMaybe<Scalars['String']>;
  customerDataRaw?: InputMaybe<Scalars['String']>;
  customerDocumentId?: InputMaybe<Scalars['String']>;
  customerEmail?: InputMaybe<Scalars['String']>;
  customerLastName?: InputMaybe<Scalars['String']>;
  customerName?: InputMaybe<Scalars['String']>;
  customerPartnerMemberId?: InputMaybe<Scalars['String']>;
  customerPhone?: InputMaybe<Scalars['String']>;
  customerSecondLastName?: InputMaybe<Scalars['String']>;
  customerState?: InputMaybe<Scalars['String']>;
  customerZipCode?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['DateTime']>;
  discount?: InputMaybe<Scalars['Int']>;
  discountType?: InputMaybe<E360App_shop_purchaseDiscountType>;
  discountValue?: InputMaybe<Scalars['Int']>;
  failedAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isTest?: InputMaybe<Scalars['Boolean']>;
  metaadataIP?: InputMaybe<Scalars['String']>;
  metadataAccuracyType?: InputMaybe<Scalars['String']>;
  metadataCity?: InputMaybe<Scalars['String']>;
  metadataCountry?: InputMaybe<Scalars['String']>;
  metadataLat?: InputMaybe<Scalars['Float']>;
  metadataLon?: InputMaybe<Scalars['Float']>;
  metadataOrigin?: InputMaybe<Scalars['String']>;
  metadataPlatform?: InputMaybe<Scalars['String']>;
  metadataRegion?: InputMaybe<Scalars['String']>;
  metadataTimezone?: InputMaybe<Scalars['String']>;
  metadataUrl?: InputMaybe<Scalars['String']>;
  operations?: InputMaybe<Array<E360App_shop_operationRef>>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentMethod?: InputMaybe<E360App_shop_paymentMethod>;
  petpassPurchase?: InputMaybe<PETPASS_purchaseRef>;
  products?: InputMaybe<Array<E360App_shop_productRef>>;
  promotionCode?: InputMaybe<E360App_shop_promotionCodeRef>;
  providerEvents?: InputMaybe<Array<E360App_shop_purchaseProviderEventRef>>;
  redsysMerchantIdentifier?: InputMaybe<Scalars['String']>;
  redsysOrderId?: InputMaybe<Scalars['String']>;
  refundedAt?: InputMaybe<Scalars['DateTime']>;
  shop?: InputMaybe<E360App_shopRef>;
  status?: InputMaybe<E360App_shop_purchaseStatus>;
  stripeCheckoutSessionID?: InputMaybe<Scalars['String']>;
  stripePaymentIntentID?: InputMaybe<Scalars['String']>;
  taxPercentage?: InputMaybe<Scalars['Int']>;
  taxType?: InputMaybe<e360App_shop_taxType>;
  taxValue?: InputMaybe<Scalars['Int']>;
  taxValueType?: InputMaybe<e360App_shop_taxValueType>;
  total?: InputMaybe<Scalars['Int']>;
  user?: InputMaybe<E360App_userRef>;
  ux?: InputMaybe<Scalars['String']>;
};

export enum E360App_shop_purchaseStatus {
  CANCELED = 'CANCELED',
  FAILED = 'FAILED',
  PAID = 'PAID',
  PENDING = 'PENDING',
  REFUNDED = 'REFUNDED'
}

export type E360App_shop_purchaseStatus_exact = {
  between?: InputMaybe<E360App_shop_purchaseStatus>;
  eq?: InputMaybe<E360App_shop_purchaseStatus>;
  ge?: InputMaybe<E360App_shop_purchaseStatus>;
  gt?: InputMaybe<E360App_shop_purchaseStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_shop_purchaseStatus>>>;
  le?: InputMaybe<E360App_shop_purchaseStatus>;
  lt?: InputMaybe<E360App_shop_purchaseStatus>;
};

export enum E360App_shop_taxType {
  CASHBACK = 'CASHBACK',
  DISCOUNT = 'DISCOUNT',
  SPECIAL = 'SPECIAL',
  STANDARD = 'STANDARD'
}

export type E360App_stablishment = {
  __typename?: 'E360App_stablishment';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  e360App?: Maybe<E360App>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  location?: Maybe<E360App_location>;
  name: Scalars['String'];
  organization?: Maybe<E360App_organization>;
  status: E360App_stablishmentStatus;
  users: Array<E360App_stablishment_user>;
  usersAggregate?: Maybe<E360App_stablishment_userAggregateResult>;
};


export type E360App_stablishmentcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_stablishmente360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
};


export type E360App_stablishmentlocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type E360App_stablishmentorganizationArgs = {
  filter?: InputMaybe<E360App_organizationFilter>;
};


export type E360App_stablishmentusersArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishment_userOrder>;
};


export type E360App_stablishmentusersAggregateArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
};

export type E360App_stablishmentAggregateResult = {
  __typename?: 'E360App_stablishmentAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type E360App_stablishmentFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_stablishmentFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_stablishmentHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<E360App_stablishmentFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_stablishmentFilter>>>;
  status?: InputMaybe<E360App_stablishmentStatus_exact>;
};

export enum E360App_stablishmentHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  e360App = 'e360App',
  guid = 'guid',
  location = 'location',
  name = 'name',
  organization = 'organization',
  status = 'status',
  users = 'users'
}

export type E360App_stablishmentOrder = {
  asc?: InputMaybe<E360App_stablishmentOrderable>;
  desc?: InputMaybe<E360App_stablishmentOrderable>;
  then?: InputMaybe<E360App_stablishmentOrder>;
};

export enum E360App_stablishmentOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type E360App_stablishmentPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  e360App?: InputMaybe<E360AppRef>;
  guid?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<E360App_organizationRef>;
  status?: InputMaybe<E360App_stablishmentStatus>;
  users?: InputMaybe<Array<E360App_stablishment_userRef>>;
};

export type E360App_stablishmentRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  e360App?: InputMaybe<E360AppRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  location?: InputMaybe<E360App_locationRef>;
  name?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<E360App_organizationRef>;
  status?: InputMaybe<E360App_stablishmentStatus>;
  users?: InputMaybe<Array<E360App_stablishment_userRef>>;
};

export enum E360App_stablishmentStatus {
  ACTIVE = 'ACTIVE',
  DELETED = 'DELETED',
  INACTIVE = 'INACTIVE'
}

export type E360App_stablishmentStatus_exact = {
  between?: InputMaybe<E360App_stablishmentStatus>;
  eq?: InputMaybe<E360App_stablishmentStatus>;
  ge?: InputMaybe<E360App_stablishmentStatus>;
  gt?: InputMaybe<E360App_stablishmentStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_stablishmentStatus>>>;
  le?: InputMaybe<E360App_stablishmentStatus>;
  lt?: InputMaybe<E360App_stablishmentStatus>;
};

export type E360App_stablishment_user = {
  __typename?: 'E360App_stablishment_user';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  organization?: Maybe<E360App_organization>;
  organizationUser?: Maybe<E360App_organization_user>;
  role: E360App_stablishment_userRole;
  stablishment: E360App_stablishment;
  user?: Maybe<E360App_user>;
};


export type E360App_stablishment_usercreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_stablishment_userorganizationArgs = {
  filter?: InputMaybe<E360App_organizationFilter>;
};


export type E360App_stablishment_userorganizationUserArgs = {
  filter?: InputMaybe<E360App_organization_userFilter>;
};


export type E360App_stablishment_userstablishmentArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
};


export type E360App_stablishment_useruserArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};

export type E360App_stablishment_userAggregateResult = {
  __typename?: 'E360App_stablishment_userAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type E360App_stablishment_userFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_stablishment_userFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_stablishment_userHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_stablishment_userFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_stablishment_userFilter>>>;
  role?: InputMaybe<E360App_stablishment_userRole_exact>;
};

export enum E360App_stablishment_userHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  organization = 'organization',
  organizationUser = 'organizationUser',
  role = 'role',
  stablishment = 'stablishment',
  user = 'user'
}

export type E360App_stablishment_userOrder = {
  asc?: InputMaybe<E360App_stablishment_userOrderable>;
  desc?: InputMaybe<E360App_stablishment_userOrderable>;
  then?: InputMaybe<E360App_stablishment_userOrder>;
};

export enum E360App_stablishment_userOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type E360App_stablishment_userPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  organization?: InputMaybe<E360App_organizationRef>;
  organizationUser?: InputMaybe<E360App_organization_userRef>;
  role?: InputMaybe<E360App_stablishment_userRole>;
  stablishment?: InputMaybe<E360App_stablishmentRef>;
  user?: InputMaybe<E360App_userRef>;
};

export type E360App_stablishment_userRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  organization?: InputMaybe<E360App_organizationRef>;
  organizationUser?: InputMaybe<E360App_organization_userRef>;
  role?: InputMaybe<E360App_stablishment_userRole>;
  stablishment?: InputMaybe<E360App_stablishmentRef>;
  user?: InputMaybe<E360App_userRef>;
};

export enum E360App_stablishment_userRole {
  ADMIN = 'ADMIN',
  EMPLOYEE = 'EMPLOYEE',
  MANAGER = 'MANAGER',
  USER = 'USER'
}

export type E360App_stablishment_userRole_exact = {
  between?: InputMaybe<E360App_stablishment_userRole>;
  eq?: InputMaybe<E360App_stablishment_userRole>;
  ge?: InputMaybe<E360App_stablishment_userRole>;
  gt?: InputMaybe<E360App_stablishment_userRole>;
  in?: InputMaybe<Array<InputMaybe<E360App_stablishment_userRole>>>;
  le?: InputMaybe<E360App_stablishment_userRole>;
  lt?: InputMaybe<E360App_stablishment_userRole>;
};

export type E360App_user = {
  __typename?: 'E360App_user';
  allowEmailNotifications?: Maybe<Scalars['Boolean']>;
  allowPushNotifications?: Maybe<Scalars['Boolean']>;
  allowSmsNotifications?: Maybe<Scalars['Boolean']>;
  appoinments?: Maybe<Array<E360App_location_appoinment>>;
  appoinmentsAggregate?: Maybe<E360App_location_appoinmentAggregateResult>;
  customerContracts?: Maybe<Array<E360App_shop_customer_contract>>;
  customerContractsAggregate?: Maybe<E360App_shop_customer_contractAggregateResult>;
  e360App?: Maybe<E360App>;
  fcmToken?: Maybe<Scalars['String']>;
  fcmTokens?: Maybe<Array<Scalars['String']>>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isAuthorizedToMultipleOrganizations?: Maybe<Scalars['Boolean']>;
  isCorporate?: Maybe<Scalars['Boolean']>;
  notifications?: Maybe<Array<E360App_user_notification>>;
  notificationsAggregate?: Maybe<E360App_user_notificationAggregateResult>;
  organizations?: Maybe<Array<E360App_organization_user>>;
  organizationsAggregate?: Maybe<E360App_organization_userAggregateResult>;
  partners?: Maybe<Array<E360App_user_partner>>;
  partnersAggregate?: Maybe<E360App_user_partnerAggregateResult>;
  petpassUser?: Maybe<PETPASS_user>;
  purchases?: Maybe<Array<E360App_shop_purchase>>;
  purchasesAggregate?: Maybe<E360App_shop_purchaseAggregateResult>;
  role: E360App_userRole;
  stablishments?: Maybe<Array<E360App_stablishment_user>>;
  stablishmentsAggregate?: Maybe<E360App_stablishment_userAggregateResult>;
  status: E360App_userStatus;
  user?: Maybe<User>;
};


export type E360App_userappoinmentsArgs = {
  filter?: InputMaybe<E360App_location_appoinmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentOrder>;
};


export type E360App_userappoinmentsAggregateArgs = {
  filter?: InputMaybe<E360App_location_appoinmentFilter>;
};


export type E360App_usercustomerContractsArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractOrder>;
};


export type E360App_usercustomerContractsAggregateArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
};


export type E360App_usere360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
};


export type E360App_usernotificationsArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_notificationOrder>;
};


export type E360App_usernotificationsAggregateArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
};


export type E360App_userorganizationsArgs = {
  filter?: InputMaybe<E360App_organization_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organization_userOrder>;
};


export type E360App_userorganizationsAggregateArgs = {
  filter?: InputMaybe<E360App_organization_userFilter>;
};


export type E360App_userpartnersArgs = {
  filter?: InputMaybe<E360App_user_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_partnerOrder>;
};


export type E360App_userpartnersAggregateArgs = {
  filter?: InputMaybe<E360App_user_partnerFilter>;
};


export type E360App_userpetpassUserArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type E360App_userpurchasesArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseOrder>;
};


export type E360App_userpurchasesAggregateArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
};


export type E360App_userstablishmentsArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishment_userOrder>;
};


export type E360App_userstablishmentsAggregateArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
};


export type E360App_useruserArgs = {
  filter?: InputMaybe<UserFilter>;
};

export type E360App_userAggregateResult = {
  __typename?: 'E360App_userAggregateResult';
  count?: Maybe<Scalars['Int']>;
  fcmTokenMax?: Maybe<Scalars['String']>;
  fcmTokenMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type E360App_userFilter = {
  allowEmailNotifications?: InputMaybe<Scalars['Boolean']>;
  allowPushNotifications?: InputMaybe<Scalars['Boolean']>;
  allowSmsNotifications?: InputMaybe<Scalars['Boolean']>;
  and?: InputMaybe<Array<InputMaybe<E360App_userFilter>>>;
  fcmToken?: InputMaybe<StringTermFilter>;
  fcmTokens?: InputMaybe<StringTermFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_userHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isAuthorizedToMultipleOrganizations?: InputMaybe<Scalars['Boolean']>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<E360App_userFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_userFilter>>>;
  role?: InputMaybe<E360App_userRole_exact>;
  status?: InputMaybe<E360App_userStatus_exact>;
};

export enum E360App_userHasFilter {
  allowEmailNotifications = 'allowEmailNotifications',
  allowPushNotifications = 'allowPushNotifications',
  allowSmsNotifications = 'allowSmsNotifications',
  appoinments = 'appoinments',
  customerContracts = 'customerContracts',
  e360App = 'e360App',
  fcmToken = 'fcmToken',
  fcmTokens = 'fcmTokens',
  guid = 'guid',
  isAuthorizedToMultipleOrganizations = 'isAuthorizedToMultipleOrganizations',
  isCorporate = 'isCorporate',
  notifications = 'notifications',
  organizations = 'organizations',
  partners = 'partners',
  petpassUser = 'petpassUser',
  purchases = 'purchases',
  role = 'role',
  stablishments = 'stablishments',
  status = 'status',
  user = 'user'
}

export type E360App_userLog = {
  __typename?: 'E360App_userLog';
  createdAt: Scalars['DateTime'];
  e360AppUser_ref: Scalars['String'];
  e360App_ref: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  session: E360App_userSession;
  sessionConnection?: Maybe<E360App_userSessionConnection>;
  type: E360App_userLogType;
};


export type E360App_userLogsessionArgs = {
  filter?: InputMaybe<E360App_userSessionFilter>;
};


export type E360App_userLogsessionConnectionArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionFilter>;
};

export type E360App_userLogAggregateResult = {
  __typename?: 'E360App_userLogAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  e360AppUser_refMax?: Maybe<Scalars['String']>;
  e360AppUser_refMin?: Maybe<Scalars['String']>;
  e360App_refMax?: Maybe<Scalars['String']>;
  e360App_refMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type E360App_userLogFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_userLogFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_userLogHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_userLogFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_userLogFilter>>>;
  type?: InputMaybe<E360App_userLogType_hash>;
};

export enum E360App_userLogHasFilter {
  createdAt = 'createdAt',
  e360AppUser_ref = 'e360AppUser_ref',
  e360App_ref = 'e360App_ref',
  guid = 'guid',
  session = 'session',
  sessionConnection = 'sessionConnection',
  type = 'type'
}

export type E360App_userLogOrder = {
  asc?: InputMaybe<E360App_userLogOrderable>;
  desc?: InputMaybe<E360App_userLogOrderable>;
  then?: InputMaybe<E360App_userLogOrder>;
};

export enum E360App_userLogOrderable {
  createdAt = 'createdAt',
  e360AppUser_ref = 'e360AppUser_ref',
  e360App_ref = 'e360App_ref',
  guid = 'guid'
}

export type E360App_userLogPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  e360AppUser_ref?: InputMaybe<Scalars['String']>;
  e360App_ref?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  session?: InputMaybe<E360App_userSessionRef>;
  sessionConnection?: InputMaybe<E360App_userSessionConnectionRef>;
  type?: InputMaybe<E360App_userLogType>;
};

export type E360App_userLogRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  e360AppUser_ref?: InputMaybe<Scalars['String']>;
  e360App_ref?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  session?: InputMaybe<E360App_userSessionRef>;
  sessionConnection?: InputMaybe<E360App_userSessionConnectionRef>;
  type?: InputMaybe<E360App_userLogType>;
};

export enum E360App_userLogType {
  CONNECTED = 'CONNECTED',
  DISCONNECTED = 'DISCONNECTED',
  LOGIN = 'LOGIN',
  LOGOUT = 'LOGOUT'
}

export type E360App_userLogType_hash = {
  eq?: InputMaybe<E360App_userLogType>;
  in?: InputMaybe<Array<InputMaybe<E360App_userLogType>>>;
};

export type E360App_userOrder = {
  asc?: InputMaybe<E360App_userOrderable>;
  desc?: InputMaybe<E360App_userOrderable>;
  then?: InputMaybe<E360App_userOrder>;
};

export enum E360App_userOrderable {
  fcmToken = 'fcmToken',
  guid = 'guid'
}

export type E360App_userPatch = {
  allowEmailNotifications?: InputMaybe<Scalars['Boolean']>;
  allowPushNotifications?: InputMaybe<Scalars['Boolean']>;
  allowSmsNotifications?: InputMaybe<Scalars['Boolean']>;
  appoinments?: InputMaybe<Array<E360App_location_appoinmentRef>>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  e360App?: InputMaybe<E360AppRef>;
  fcmToken?: InputMaybe<Scalars['String']>;
  fcmTokens?: InputMaybe<Array<Scalars['String']>>;
  guid?: InputMaybe<Scalars['String']>;
  isAuthorizedToMultipleOrganizations?: InputMaybe<Scalars['Boolean']>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  notifications?: InputMaybe<Array<E360App_user_notificationRef>>;
  organizations?: InputMaybe<Array<E360App_organization_userRef>>;
  partners?: InputMaybe<Array<E360App_user_partnerRef>>;
  petpassUser?: InputMaybe<PETPASS_userRef>;
  purchases?: InputMaybe<Array<E360App_shop_purchaseRef>>;
  role?: InputMaybe<E360App_userRole>;
  stablishments?: InputMaybe<Array<E360App_stablishment_userRef>>;
  status?: InputMaybe<E360App_userStatus>;
  user?: InputMaybe<UserRef>;
};

export type E360App_userRef = {
  allowEmailNotifications?: InputMaybe<Scalars['Boolean']>;
  allowPushNotifications?: InputMaybe<Scalars['Boolean']>;
  allowSmsNotifications?: InputMaybe<Scalars['Boolean']>;
  appoinments?: InputMaybe<Array<E360App_location_appoinmentRef>>;
  customerContracts?: InputMaybe<Array<E360App_shop_customer_contractRef>>;
  e360App?: InputMaybe<E360AppRef>;
  fcmToken?: InputMaybe<Scalars['String']>;
  fcmTokens?: InputMaybe<Array<Scalars['String']>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isAuthorizedToMultipleOrganizations?: InputMaybe<Scalars['Boolean']>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  notifications?: InputMaybe<Array<E360App_user_notificationRef>>;
  organizations?: InputMaybe<Array<E360App_organization_userRef>>;
  partners?: InputMaybe<Array<E360App_user_partnerRef>>;
  petpassUser?: InputMaybe<PETPASS_userRef>;
  purchases?: InputMaybe<Array<E360App_shop_purchaseRef>>;
  role?: InputMaybe<E360App_userRole>;
  stablishments?: InputMaybe<Array<E360App_stablishment_userRef>>;
  status?: InputMaybe<E360App_userStatus>;
  user?: InputMaybe<UserRef>;
};

export enum E360App_userRole {
  ADMIN = 'ADMIN',
  SUPPORT = 'SUPPORT',
  TESTER = 'TESTER',
  USER = 'USER'
}

export type E360App_userRole_exact = {
  between?: InputMaybe<E360App_userRole>;
  eq?: InputMaybe<E360App_userRole>;
  ge?: InputMaybe<E360App_userRole>;
  gt?: InputMaybe<E360App_userRole>;
  in?: InputMaybe<Array<InputMaybe<E360App_userRole>>>;
  le?: InputMaybe<E360App_userRole>;
  lt?: InputMaybe<E360App_userRole>;
};

export type E360App_userSession = {
  __typename?: 'E360App_userSession';
  connectionTasks?: Maybe<Array<E360App_userSessionConnectionTask>>;
  connectionTasksAggregate?: Maybe<E360App_userSessionConnectionTaskAggregateResult>;
  connections?: Maybe<Array<E360App_userSessionConnection>>;
  connectionsAggregate?: Maybe<E360App_userSessionConnectionAggregateResult>;
  e360AppUser_ref: Scalars['String'];
  e360App_ref: Scalars['String'];
  endAt?: Maybe<Scalars['DateTime']>;
  expiredAt?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  logs: Array<E360App_userLog>;
  logsAggregate?: Maybe<E360App_userLogAggregateResult>;
  startAt: Scalars['DateTime'];
  tasks: Array<E360App_userSessionTask>;
  tasksAggregate?: Maybe<E360App_userSessionTaskAggregateResult>;
};


export type E360App_userSessionconnectionTasksArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionTaskOrder>;
};


export type E360App_userSessionconnectionTasksAggregateArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionTaskFilter>;
};


export type E360App_userSessionconnectionsArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionOrder>;
};


export type E360App_userSessionconnectionsAggregateArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionFilter>;
};


export type E360App_userSessionlogsArgs = {
  filter?: InputMaybe<E360App_userLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userLogOrder>;
};


export type E360App_userSessionlogsAggregateArgs = {
  filter?: InputMaybe<E360App_userLogFilter>;
};


export type E360App_userSessiontasksArgs = {
  filter?: InputMaybe<E360App_userSessionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionTaskOrder>;
};


export type E360App_userSessiontasksAggregateArgs = {
  filter?: InputMaybe<E360App_userSessionTaskFilter>;
};

export type E360App_userSessionAggregateResult = {
  __typename?: 'E360App_userSessionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  e360AppUser_refMax?: Maybe<Scalars['String']>;
  e360AppUser_refMin?: Maybe<Scalars['String']>;
  e360App_refMax?: Maybe<Scalars['String']>;
  e360App_refMin?: Maybe<Scalars['String']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  expiredAtMax?: Maybe<Scalars['DateTime']>;
  expiredAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
};

export type E360App_userSessionConnection = {
  __typename?: 'E360App_userSessionConnection';
  e360AppUser_ref: Scalars['String'];
  e360App_ref: Scalars['String'];
  endAt?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  logs: Array<E360App_userLog>;
  logsAggregate?: Maybe<E360App_userLogAggregateResult>;
  session: E360App_userSession;
  startAt: Scalars['DateTime'];
  tasks: Array<E360App_userSessionConnectionTask>;
  tasksAggregate?: Maybe<E360App_userSessionConnectionTaskAggregateResult>;
};


export type E360App_userSessionConnectionlogsArgs = {
  filter?: InputMaybe<E360App_userLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userLogOrder>;
};


export type E360App_userSessionConnectionlogsAggregateArgs = {
  filter?: InputMaybe<E360App_userLogFilter>;
};


export type E360App_userSessionConnectionsessionArgs = {
  filter?: InputMaybe<E360App_userSessionFilter>;
};


export type E360App_userSessionConnectiontasksArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionTaskOrder>;
};


export type E360App_userSessionConnectiontasksAggregateArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionTaskFilter>;
};

export type E360App_userSessionConnectionAggregateResult = {
  __typename?: 'E360App_userSessionConnectionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  e360AppUser_refMax?: Maybe<Scalars['String']>;
  e360AppUser_refMin?: Maybe<Scalars['String']>;
  e360App_refMax?: Maybe<Scalars['String']>;
  e360App_refMin?: Maybe<Scalars['String']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
};

export type E360App_userSessionConnectionFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_userSessionConnectionFilter>>>;
  endAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_userSessionConnectionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_userSessionConnectionFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_userSessionConnectionFilter>>>;
  startAt?: InputMaybe<DateTimeFilter>;
};

export enum E360App_userSessionConnectionHasFilter {
  e360AppUser_ref = 'e360AppUser_ref',
  e360App_ref = 'e360App_ref',
  endAt = 'endAt',
  guid = 'guid',
  logs = 'logs',
  session = 'session',
  startAt = 'startAt',
  tasks = 'tasks'
}

export type E360App_userSessionConnectionOrder = {
  asc?: InputMaybe<E360App_userSessionConnectionOrderable>;
  desc?: InputMaybe<E360App_userSessionConnectionOrderable>;
  then?: InputMaybe<E360App_userSessionConnectionOrder>;
};

export enum E360App_userSessionConnectionOrderable {
  e360AppUser_ref = 'e360AppUser_ref',
  e360App_ref = 'e360App_ref',
  endAt = 'endAt',
  guid = 'guid',
  startAt = 'startAt'
}

export type E360App_userSessionConnectionPatch = {
  e360AppUser_ref?: InputMaybe<Scalars['String']>;
  e360App_ref?: InputMaybe<Scalars['String']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  logs?: InputMaybe<Array<E360App_userLogRef>>;
  session?: InputMaybe<E360App_userSessionRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  tasks?: InputMaybe<Array<E360App_userSessionConnectionTaskRef>>;
};

export type E360App_userSessionConnectionRef = {
  e360AppUser_ref?: InputMaybe<Scalars['String']>;
  e360App_ref?: InputMaybe<Scalars['String']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  logs?: InputMaybe<Array<E360App_userLogRef>>;
  session?: InputMaybe<E360App_userSessionRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  tasks?: InputMaybe<Array<E360App_userSessionConnectionTaskRef>>;
};

export type E360App_userSessionConnectionTask = {
  __typename?: 'E360App_userSessionConnectionTask';
  completedAt?: Maybe<Scalars['DateTime']>;
  connection: E360App_userSessionConnection;
  createdAt: Scalars['DateTime'];
  e360AppUser_ref: Scalars['String'];
  e360App_ref: Scalars['String'];
  event: E360App_userSessionTaskEvent;
  guid: Scalars['String'];
  id: Scalars['ID'];
  payload?: Maybe<Scalars['String']>;
  session: E360App_userSession;
  type: E360App_userSessionTaskType;
};


export type E360App_userSessionConnectionTaskconnectionArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionFilter>;
};


export type E360App_userSessionConnectionTasksessionArgs = {
  filter?: InputMaybe<E360App_userSessionFilter>;
};

export type E360App_userSessionConnectionTaskAggregateResult = {
  __typename?: 'E360App_userSessionConnectionTaskAggregateResult';
  completedAtMax?: Maybe<Scalars['DateTime']>;
  completedAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  e360AppUser_refMax?: Maybe<Scalars['String']>;
  e360AppUser_refMin?: Maybe<Scalars['String']>;
  e360App_refMax?: Maybe<Scalars['String']>;
  e360App_refMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  payloadMax?: Maybe<Scalars['String']>;
  payloadMin?: Maybe<Scalars['String']>;
};

export type E360App_userSessionConnectionTaskFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_userSessionConnectionTaskFilter>>>;
  completedAt?: InputMaybe<DateTimeFilter>;
  event?: InputMaybe<E360App_userSessionTaskEvent_hash>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_userSessionConnectionTaskHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_userSessionConnectionTaskFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_userSessionConnectionTaskFilter>>>;
  type?: InputMaybe<E360App_userSessionTaskType_hash>;
};

export enum E360App_userSessionConnectionTaskHasFilter {
  completedAt = 'completedAt',
  connection = 'connection',
  createdAt = 'createdAt',
  e360AppUser_ref = 'e360AppUser_ref',
  e360App_ref = 'e360App_ref',
  event = 'event',
  guid = 'guid',
  payload = 'payload',
  session = 'session',
  type = 'type'
}

export type E360App_userSessionConnectionTaskOrder = {
  asc?: InputMaybe<E360App_userSessionConnectionTaskOrderable>;
  desc?: InputMaybe<E360App_userSessionConnectionTaskOrderable>;
  then?: InputMaybe<E360App_userSessionConnectionTaskOrder>;
};

export enum E360App_userSessionConnectionTaskOrderable {
  completedAt = 'completedAt',
  createdAt = 'createdAt',
  e360AppUser_ref = 'e360AppUser_ref',
  e360App_ref = 'e360App_ref',
  guid = 'guid',
  payload = 'payload'
}

export type E360App_userSessionConnectionTaskPatch = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  connection?: InputMaybe<E360App_userSessionConnectionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  e360AppUser_ref?: InputMaybe<Scalars['String']>;
  e360App_ref?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<E360App_userSessionTaskEvent>;
  guid?: InputMaybe<Scalars['String']>;
  payload?: InputMaybe<Scalars['String']>;
  session?: InputMaybe<E360App_userSessionRef>;
  type?: InputMaybe<E360App_userSessionTaskType>;
};

export type E360App_userSessionConnectionTaskRef = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  connection?: InputMaybe<E360App_userSessionConnectionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  e360AppUser_ref?: InputMaybe<Scalars['String']>;
  e360App_ref?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<E360App_userSessionTaskEvent>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  payload?: InputMaybe<Scalars['String']>;
  session?: InputMaybe<E360App_userSessionRef>;
  type?: InputMaybe<E360App_userSessionTaskType>;
};

export type E360App_userSessionFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_userSessionFilter>>>;
  endAt?: InputMaybe<DateTimeFilter>;
  expiredAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_userSessionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_userSessionFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_userSessionFilter>>>;
  startAt?: InputMaybe<DateTimeFilter>;
};

export enum E360App_userSessionHasFilter {
  connectionTasks = 'connectionTasks',
  connections = 'connections',
  e360AppUser_ref = 'e360AppUser_ref',
  e360App_ref = 'e360App_ref',
  endAt = 'endAt',
  expiredAt = 'expiredAt',
  guid = 'guid',
  logs = 'logs',
  startAt = 'startAt',
  tasks = 'tasks'
}

export type E360App_userSessionOrder = {
  asc?: InputMaybe<E360App_userSessionOrderable>;
  desc?: InputMaybe<E360App_userSessionOrderable>;
  then?: InputMaybe<E360App_userSessionOrder>;
};

export enum E360App_userSessionOrderable {
  e360AppUser_ref = 'e360AppUser_ref',
  e360App_ref = 'e360App_ref',
  endAt = 'endAt',
  expiredAt = 'expiredAt',
  guid = 'guid',
  startAt = 'startAt'
}

export type E360App_userSessionPatch = {
  connectionTasks?: InputMaybe<Array<E360App_userSessionConnectionTaskRef>>;
  connections?: InputMaybe<Array<E360App_userSessionConnectionRef>>;
  e360AppUser_ref?: InputMaybe<Scalars['String']>;
  e360App_ref?: InputMaybe<Scalars['String']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  logs?: InputMaybe<Array<E360App_userLogRef>>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  tasks?: InputMaybe<Array<E360App_userSessionTaskRef>>;
};

export type E360App_userSessionRef = {
  connectionTasks?: InputMaybe<Array<E360App_userSessionConnectionTaskRef>>;
  connections?: InputMaybe<Array<E360App_userSessionConnectionRef>>;
  e360AppUser_ref?: InputMaybe<Scalars['String']>;
  e360App_ref?: InputMaybe<Scalars['String']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  logs?: InputMaybe<Array<E360App_userLogRef>>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  tasks?: InputMaybe<Array<E360App_userSessionTaskRef>>;
};

export type E360App_userSessionTask = {
  __typename?: 'E360App_userSessionTask';
  completedAt?: Maybe<Scalars['DateTime']>;
  createdAt: Scalars['DateTime'];
  e360AppUser_ref: Scalars['String'];
  e360App_ref: Scalars['String'];
  event: E360App_userSessionTaskEvent;
  guid: Scalars['String'];
  id: Scalars['ID'];
  payload?: Maybe<Scalars['String']>;
  session: E360App_userSession;
  type: E360App_userSessionTaskType;
};


export type E360App_userSessionTasksessionArgs = {
  filter?: InputMaybe<E360App_userSessionFilter>;
};

export type E360App_userSessionTaskAggregateResult = {
  __typename?: 'E360App_userSessionTaskAggregateResult';
  completedAtMax?: Maybe<Scalars['DateTime']>;
  completedAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  e360AppUser_refMax?: Maybe<Scalars['String']>;
  e360AppUser_refMin?: Maybe<Scalars['String']>;
  e360App_refMax?: Maybe<Scalars['String']>;
  e360App_refMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  payloadMax?: Maybe<Scalars['String']>;
  payloadMin?: Maybe<Scalars['String']>;
};

export enum E360App_userSessionTaskEvent {
  ON_CLOSE = 'ON_CLOSE',
  ON_EXPIRED = 'ON_EXPIRED'
}

export type E360App_userSessionTaskEvent_hash = {
  eq?: InputMaybe<E360App_userSessionTaskEvent>;
  in?: InputMaybe<Array<InputMaybe<E360App_userSessionTaskEvent>>>;
};

export type E360App_userSessionTaskFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_userSessionTaskFilter>>>;
  completedAt?: InputMaybe<DateTimeFilter>;
  event?: InputMaybe<E360App_userSessionTaskEvent_hash>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_userSessionTaskHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_userSessionTaskFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_userSessionTaskFilter>>>;
  type?: InputMaybe<E360App_userSessionTaskType_hash>;
};

export enum E360App_userSessionTaskHasFilter {
  completedAt = 'completedAt',
  createdAt = 'createdAt',
  e360AppUser_ref = 'e360AppUser_ref',
  e360App_ref = 'e360App_ref',
  event = 'event',
  guid = 'guid',
  payload = 'payload',
  session = 'session',
  type = 'type'
}

export type E360App_userSessionTaskOrder = {
  asc?: InputMaybe<E360App_userSessionTaskOrderable>;
  desc?: InputMaybe<E360App_userSessionTaskOrderable>;
  then?: InputMaybe<E360App_userSessionTaskOrder>;
};

export enum E360App_userSessionTaskOrderable {
  completedAt = 'completedAt',
  createdAt = 'createdAt',
  e360AppUser_ref = 'e360AppUser_ref',
  e360App_ref = 'e360App_ref',
  guid = 'guid',
  payload = 'payload'
}

export type E360App_userSessionTaskPatch = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  e360AppUser_ref?: InputMaybe<Scalars['String']>;
  e360App_ref?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<E360App_userSessionTaskEvent>;
  guid?: InputMaybe<Scalars['String']>;
  payload?: InputMaybe<Scalars['String']>;
  session?: InputMaybe<E360App_userSessionRef>;
  type?: InputMaybe<E360App_userSessionTaskType>;
};

export type E360App_userSessionTaskRef = {
  completedAt?: InputMaybe<Scalars['DateTime']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  e360AppUser_ref?: InputMaybe<Scalars['String']>;
  e360App_ref?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<E360App_userSessionTaskEvent>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  payload?: InputMaybe<Scalars['String']>;
  session?: InputMaybe<E360App_userSessionRef>;
  type?: InputMaybe<E360App_userSessionTaskType>;
};

export enum E360App_userSessionTaskType {
  SET_LOG = 'SET_LOG'
}

export type E360App_userSessionTaskType_hash = {
  eq?: InputMaybe<E360App_userSessionTaskType>;
  in?: InputMaybe<Array<InputMaybe<E360App_userSessionTaskType>>>;
};

export enum E360App_userStatus {
  ACTIVE = 'ACTIVE',
  DELETED = 'DELETED',
  INACTIVE = 'INACTIVE'
}

export type E360App_userStatus_exact = {
  between?: InputMaybe<E360App_userStatus>;
  eq?: InputMaybe<E360App_userStatus>;
  ge?: InputMaybe<E360App_userStatus>;
  gt?: InputMaybe<E360App_userStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_userStatus>>>;
  le?: InputMaybe<E360App_userStatus>;
  lt?: InputMaybe<E360App_userStatus>;
};

export type E360App_user_notification = {
  __typename?: 'E360App_user_notification';
  app?: Maybe<E360App>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  notification: E360App_notification;
  readAt?: Maybe<Scalars['DateTime']>;
  receivedAt?: Maybe<Scalars['DateTime']>;
  status: E360App_user_notificationStatus;
  user: E360App_user;
};


export type E360App_user_notificationappArgs = {
  filter?: InputMaybe<E360AppFilter>;
};


export type E360App_user_notificationcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type E360App_user_notificationnotificationArgs = {
  filter?: InputMaybe<E360App_notificationFilter>;
};


export type E360App_user_notificationuserArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};

export type E360App_user_notificationAggregateResult = {
  __typename?: 'E360App_user_notificationAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  deletedAtMax?: Maybe<Scalars['DateTime']>;
  deletedAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  readAtMax?: Maybe<Scalars['DateTime']>;
  readAtMin?: Maybe<Scalars['DateTime']>;
  receivedAtMax?: Maybe<Scalars['DateTime']>;
  receivedAtMin?: Maybe<Scalars['DateTime']>;
};

export type E360App_user_notificationFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_user_notificationFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deletedAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_user_notificationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<E360App_user_notificationFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_user_notificationFilter>>>;
  readAt?: InputMaybe<DateTimeFilter>;
  receivedAt?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<E360App_user_notificationStatus_exact>;
};

export enum E360App_user_notificationHasFilter {
  app = 'app',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  deletedAt = 'deletedAt',
  guid = 'guid',
  notification = 'notification',
  readAt = 'readAt',
  receivedAt = 'receivedAt',
  status = 'status',
  user = 'user'
}

export type E360App_user_notificationOrder = {
  asc?: InputMaybe<E360App_user_notificationOrderable>;
  desc?: InputMaybe<E360App_user_notificationOrderable>;
  then?: InputMaybe<E360App_user_notificationOrder>;
};

export enum E360App_user_notificationOrderable {
  createdAt = 'createdAt',
  deletedAt = 'deletedAt',
  guid = 'guid',
  readAt = 'readAt',
  receivedAt = 'receivedAt'
}

export type E360App_user_notificationPatch = {
  app?: InputMaybe<E360AppRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  notification?: InputMaybe<E360App_notificationRef>;
  readAt?: InputMaybe<Scalars['DateTime']>;
  receivedAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<E360App_user_notificationStatus>;
  user?: InputMaybe<E360App_userRef>;
};

export type E360App_user_notificationRef = {
  app?: InputMaybe<E360AppRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  notification?: InputMaybe<E360App_notificationRef>;
  readAt?: InputMaybe<Scalars['DateTime']>;
  receivedAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<E360App_user_notificationStatus>;
  user?: InputMaybe<E360App_userRef>;
};

export enum E360App_user_notificationStatus {
  DELETED = 'DELETED',
  PENDING = 'PENDING',
  READ = 'READ',
  RECEIVED = 'RECEIVED',
  SENT = 'SENT'
}

export type E360App_user_notificationStatus_exact = {
  between?: InputMaybe<E360App_user_notificationStatus>;
  eq?: InputMaybe<E360App_user_notificationStatus>;
  ge?: InputMaybe<E360App_user_notificationStatus>;
  gt?: InputMaybe<E360App_user_notificationStatus>;
  in?: InputMaybe<Array<InputMaybe<E360App_user_notificationStatus>>>;
  le?: InputMaybe<E360App_user_notificationStatus>;
  lt?: InputMaybe<E360App_user_notificationStatus>;
};

export type E360App_user_partner = {
  __typename?: 'E360App_user_partner';
  guid: Scalars['String'];
  id: Scalars['ID'];
  memberId: Scalars['String'];
  partner: E360App_partner;
  user: E360App_user;
};


export type E360App_user_partnerpartnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};


export type E360App_user_partneruserArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};

export type E360App_user_partnerAggregateResult = {
  __typename?: 'E360App_user_partnerAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  memberIdMax?: Maybe<Scalars['String']>;
  memberIdMin?: Maybe<Scalars['String']>;
};

export type E360App_user_partnerFilter = {
  and?: InputMaybe<Array<InputMaybe<E360App_user_partnerFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<E360App_user_partnerHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  memberId?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<E360App_user_partnerFilter>;
  or?: InputMaybe<Array<InputMaybe<E360App_user_partnerFilter>>>;
};

export enum E360App_user_partnerHasFilter {
  guid = 'guid',
  memberId = 'memberId',
  partner = 'partner',
  user = 'user'
}

export type E360App_user_partnerOrder = {
  asc?: InputMaybe<E360App_user_partnerOrderable>;
  desc?: InputMaybe<E360App_user_partnerOrderable>;
  then?: InputMaybe<E360App_user_partnerOrder>;
};

export enum E360App_user_partnerOrderable {
  guid = 'guid',
  memberId = 'memberId'
}

export type E360App_user_partnerPatch = {
  guid?: InputMaybe<Scalars['String']>;
  memberId?: InputMaybe<Scalars['String']>;
  partner?: InputMaybe<E360App_partnerRef>;
  user?: InputMaybe<E360App_userRef>;
};

export type E360App_user_partnerRef = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  memberId?: InputMaybe<Scalars['String']>;
  partner?: InputMaybe<E360App_partnerRef>;
  user?: InputMaybe<E360App_userRef>;
};

export type E360Storage_file = {
  __typename?: 'E360Storage_file';
  id: Scalars['ID'];
  mimeType: Scalars['String'];
  ref: Scalars['String'];
};

export type E360Storage_fileAggregateResult = {
  __typename?: 'E360Storage_fileAggregateResult';
  count?: Maybe<Scalars['Int']>;
  mimeTypeMax?: Maybe<Scalars['String']>;
  mimeTypeMin?: Maybe<Scalars['String']>;
  refMax?: Maybe<Scalars['String']>;
  refMin?: Maybe<Scalars['String']>;
};

export type E360Storage_fileFilter = {
  and?: InputMaybe<Array<InputMaybe<E360Storage_fileFilter>>>;
  has?: InputMaybe<Array<InputMaybe<E360Storage_fileHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  mimeType?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<E360Storage_fileFilter>;
  or?: InputMaybe<Array<InputMaybe<E360Storage_fileFilter>>>;
  ref?: InputMaybe<StringHashFilter>;
};

export enum E360Storage_fileHasFilter {
  mimeType = 'mimeType',
  ref = 'ref'
}

export type E360Storage_fileOrder = {
  asc?: InputMaybe<E360Storage_fileOrderable>;
  desc?: InputMaybe<E360Storage_fileOrderable>;
  then?: InputMaybe<E360Storage_fileOrder>;
};

export enum E360Storage_fileOrderable {
  mimeType = 'mimeType',
  ref = 'ref'
}

export type E360Storage_filePatch = {
  mimeType?: InputMaybe<Scalars['String']>;
  ref?: InputMaybe<Scalars['String']>;
};

export type E360Storage_fileRef = {
  id?: InputMaybe<Scalars['ID']>;
  mimeType?: InputMaybe<Scalars['String']>;
  ref?: InputMaybe<Scalars['String']>;
};

export type ERP_PACKAGE = {
  __typename?: 'ERP_PACKAGE';
  accountingAccounts: Array<ERP_accountingAccount>;
  accountingAccountsAggregate?: Maybe<ERP_accountingAccountAggregateResult>;
  accounts?: Maybe<Array<Maybe<ERP_account>>>;
  accountsAggregate?: Maybe<ERP_accountAggregateResult>;
  billingInfo: ERP_organizationBillingInfo;
  contactActions: Array<ERP_contactAction>;
  contactActionsAggregate?: Maybe<ERP_contactActionAggregateResult>;
  contacts: Array<ERP_contact>;
  contactsAggregate?: Maybe<ERP_contactAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<Account>;
  events: Array<ERP_event>;
  eventsAggregate?: Maybe<ERP_eventAggregateResult>;
  id: Scalars['ID'];
  invoiceItems: Array<ERP_invoiceItem>;
  invoiceItemsAggregate?: Maybe<ERP_invoiceItemAggregateResult>;
  invoices: Array<ERP_invoice>;
  invoicesAggregate?: Maybe<ERP_invoiceAggregateResult>;
  name: Scalars['String'];
  org360: Org360;
  paymentPlans: Array<ERP_paymentPlan>;
  paymentPlansAggregate?: Maybe<ERP_paymentPlanAggregateResult>;
  products: Array<ERP_product>;
  productsAggregate?: Maybe<ERP_productAggregateResult>;
  resources: Array<ERP_resource>;
  resourcesAggregate?: Maybe<ERP_resourceAggregateResult>;
  roles: Array<ERP_role>;
  rolesAggregate?: Maybe<ERP_roleAggregateResult>;
  seats: Array<ERP_seat>;
  seatsAggregate?: Maybe<ERP_seatAggregateResult>;
  series: Array<ERP_contactSerie>;
  seriesAggregate?: Maybe<ERP_contactSerieAggregateResult>;
  taxes: Array<ERP_tax>;
  taxesAggregate?: Maybe<ERP_taxAggregateResult>;
  updatedAt: Scalars['DateTime'];
  withholdings: Array<ERP_withholding>;
  withholdingsAggregate?: Maybe<ERP_withholdingAggregateResult>;
};


export type ERP_PACKAGEaccountingAccountsArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_accountingAccountOrder>;
};


export type ERP_PACKAGEaccountingAccountsAggregateArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};


export type ERP_PACKAGEaccountsArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ERP_PACKAGEaccountsAggregateArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_PACKAGEbillingInfoArgs = {
  filter?: InputMaybe<ERP_organizationBillingInfoFilter>;
};


export type ERP_PACKAGEcontactActionsArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactActionOrder>;
};


export type ERP_PACKAGEcontactActionsAggregateArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
};


export type ERP_PACKAGEcontactsArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ERP_PACKAGEcontactsAggregateArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
};


export type ERP_PACKAGEcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ERP_PACKAGEeventsArgs = {
  filter?: InputMaybe<ERP_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ERP_PACKAGEeventsAggregateArgs = {
  filter?: InputMaybe<ERP_eventFilter>;
};


export type ERP_PACKAGEinvoiceItemsArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceItemOrder>;
};


export type ERP_PACKAGEinvoiceItemsAggregateArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
};


export type ERP_PACKAGEinvoicesArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceOrder>;
};


export type ERP_PACKAGEinvoicesAggregateArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_PACKAGEorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type ERP_PACKAGEpaymentPlansArgs = {
  filter?: InputMaybe<ERP_paymentPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_paymentPlanOrder>;
};


export type ERP_PACKAGEpaymentPlansAggregateArgs = {
  filter?: InputMaybe<ERP_paymentPlanFilter>;
};


export type ERP_PACKAGEproductsArgs = {
  filter?: InputMaybe<ERP_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ERP_PACKAGEproductsAggregateArgs = {
  filter?: InputMaybe<ERP_productFilter>;
};


export type ERP_PACKAGEresourcesArgs = {
  filter?: InputMaybe<ERP_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ERP_PACKAGEresourcesAggregateArgs = {
  filter?: InputMaybe<ERP_resourceFilter>;
};


export type ERP_PACKAGErolesArgs = {
  filter?: InputMaybe<ERP_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ERP_PACKAGErolesAggregateArgs = {
  filter?: InputMaybe<ERP_roleFilter>;
};


export type ERP_PACKAGEseatsArgs = {
  filter?: InputMaybe<ERP_seatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatOrder>;
};


export type ERP_PACKAGEseatsAggregateArgs = {
  filter?: InputMaybe<ERP_seatFilter>;
};


export type ERP_PACKAGEseriesArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactSerieOrder>;
};


export type ERP_PACKAGEseriesAggregateArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
};


export type ERP_PACKAGEtaxesArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_taxOrder>;
};


export type ERP_PACKAGEtaxesAggregateArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
};


export type ERP_PACKAGEwithholdingsArgs = {
  filter?: InputMaybe<ERP_withholdingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_withholdingOrder>;
};


export type ERP_PACKAGEwithholdingsAggregateArgs = {
  filter?: InputMaybe<ERP_withholdingFilter>;
};

export type ERP_PACKAGEAggregateResult = {
  __typename?: 'ERP_PACKAGEAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type ERP_PACKAGEFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_PACKAGEFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_PACKAGEHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_PACKAGEFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_PACKAGEFilter>>>;
};

export enum ERP_PACKAGEHasFilter {
  accountingAccounts = 'accountingAccounts',
  accounts = 'accounts',
  billingInfo = 'billingInfo',
  contactActions = 'contactActions',
  contacts = 'contacts',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  events = 'events',
  invoiceItems = 'invoiceItems',
  invoices = 'invoices',
  name = 'name',
  org360 = 'org360',
  paymentPlans = 'paymentPlans',
  products = 'products',
  resources = 'resources',
  roles = 'roles',
  seats = 'seats',
  series = 'series',
  taxes = 'taxes',
  updatedAt = 'updatedAt',
  withholdings = 'withholdings'
}

export type ERP_PACKAGEOrder = {
  asc?: InputMaybe<ERP_PACKAGEOrderable>;
  desc?: InputMaybe<ERP_PACKAGEOrderable>;
  then?: InputMaybe<ERP_PACKAGEOrder>;
};

export enum ERP_PACKAGEOrderable {
  createdAt = 'createdAt',
  name = 'name',
  updatedAt = 'updatedAt'
}

export type ERP_PACKAGEPatch = {
  accountingAccounts?: InputMaybe<Array<ERP_accountingAccountRef>>;
  accounts?: InputMaybe<Array<InputMaybe<ERP_accountRef>>>;
  billingInfo?: InputMaybe<ERP_organizationBillingInfoRef>;
  contactActions?: InputMaybe<Array<ERP_contactActionRef>>;
  contacts?: InputMaybe<Array<ERP_contactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  events?: InputMaybe<Array<ERP_eventRef>>;
  invoiceItems?: InputMaybe<Array<ERP_invoiceItemRef>>;
  invoices?: InputMaybe<Array<ERP_invoiceRef>>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  paymentPlans?: InputMaybe<Array<ERP_paymentPlanRef>>;
  products?: InputMaybe<Array<ERP_productRef>>;
  resources?: InputMaybe<Array<ERP_resourceRef>>;
  roles?: InputMaybe<Array<ERP_roleRef>>;
  seats?: InputMaybe<Array<ERP_seatRef>>;
  series?: InputMaybe<Array<ERP_contactSerieRef>>;
  taxes?: InputMaybe<Array<ERP_taxRef>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  withholdings?: InputMaybe<Array<ERP_withholdingRef>>;
};

export type ERP_PACKAGERef = {
  accountingAccounts?: InputMaybe<Array<ERP_accountingAccountRef>>;
  accounts?: InputMaybe<Array<InputMaybe<ERP_accountRef>>>;
  billingInfo?: InputMaybe<ERP_organizationBillingInfoRef>;
  contactActions?: InputMaybe<Array<ERP_contactActionRef>>;
  contacts?: InputMaybe<Array<ERP_contactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  events?: InputMaybe<Array<ERP_eventRef>>;
  id?: InputMaybe<Scalars['ID']>;
  invoiceItems?: InputMaybe<Array<ERP_invoiceItemRef>>;
  invoices?: InputMaybe<Array<ERP_invoiceRef>>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  paymentPlans?: InputMaybe<Array<ERP_paymentPlanRef>>;
  products?: InputMaybe<Array<ERP_productRef>>;
  resources?: InputMaybe<Array<ERP_resourceRef>>;
  roles?: InputMaybe<Array<ERP_roleRef>>;
  seats?: InputMaybe<Array<ERP_seatRef>>;
  series?: InputMaybe<Array<ERP_contactSerieRef>>;
  taxes?: InputMaybe<Array<ERP_taxRef>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  withholdings?: InputMaybe<Array<ERP_withholdingRef>>;
};

export type ERP_account = {
  __typename?: 'ERP_account';
  account: Account;
  createdBy: Account;
  events: Array<ERP_accountEvent>;
  eventsAggregate?: Maybe<ERP_accountEventAggregateResult>;
  id: Scalars['ID'];
  mod_role: ERP_roleType;
  org360: Org360;
  package: ERP_PACKAGE;
  role: ERP_role;
};


export type ERP_accountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ERP_accountcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ERP_accounteventsArgs = {
  filter?: InputMaybe<ERP_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ERP_accounteventsAggregateArgs = {
  filter?: InputMaybe<ERP_accountEventFilter>;
};


export type ERP_accountorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type ERP_accountpackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};


export type ERP_accountroleArgs = {
  filter?: InputMaybe<ERP_roleFilter>;
};

export type ERP_accountAggregateResult = {
  __typename?: 'ERP_accountAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type ERP_accountEvent = {
  __typename?: 'ERP_accountEvent';
  account: ERP_account;
  accountEvent: Account_event;
  event: ERP_event;
  id: Scalars['ID'];
};


export type ERP_accountEventaccountArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_accountEventaccountEventArgs = {
  filter?: InputMaybe<Account_eventFilter>;
};


export type ERP_accountEventeventArgs = {
  filter?: InputMaybe<ERP_eventFilter>;
};

export type ERP_accountEventAggregateResult = {
  __typename?: 'ERP_accountEventAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type ERP_accountEventFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_accountEventFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_accountEventHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_accountEventFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_accountEventFilter>>>;
};

export enum ERP_accountEventHasFilter {
  account = 'account',
  accountEvent = 'accountEvent',
  event = 'event'
}

export type ERP_accountEventPatch = {
  account?: InputMaybe<ERP_accountRef>;
  accountEvent?: InputMaybe<Account_eventRef>;
  event?: InputMaybe<ERP_eventRef>;
};

export type ERP_accountEventRef = {
  account?: InputMaybe<ERP_accountRef>;
  accountEvent?: InputMaybe<Account_eventRef>;
  event?: InputMaybe<ERP_eventRef>;
  id?: InputMaybe<Scalars['ID']>;
};

export type ERP_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_accountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  mod_role?: InputMaybe<ERP_roleType_exact>;
  not?: InputMaybe<ERP_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_accountFilter>>>;
};

export enum ERP_accountHasFilter {
  account = 'account',
  createdBy = 'createdBy',
  events = 'events',
  mod_role = 'mod_role',
  org360 = 'org360',
  package = 'package',
  role = 'role'
}

export type ERP_accountPatch = {
  account?: InputMaybe<AccountRef>;
  createdBy?: InputMaybe<AccountRef>;
  events?: InputMaybe<Array<ERP_accountEventRef>>;
  mod_role?: InputMaybe<ERP_roleType>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<ERP_PACKAGERef>;
  role?: InputMaybe<ERP_roleRef>;
};

export type ERP_accountRef = {
  account?: InputMaybe<AccountRef>;
  createdBy?: InputMaybe<AccountRef>;
  events?: InputMaybe<Array<ERP_accountEventRef>>;
  id?: InputMaybe<Scalars['ID']>;
  mod_role?: InputMaybe<ERP_roleType>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<ERP_PACKAGERef>;
  role?: InputMaybe<ERP_roleRef>;
};

export type ERP_accountingAccount = {
  __typename?: 'ERP_accountingAccount';
  createdBy: ERP_account;
  description?: Maybe<Scalars['String']>;
  group?: Maybe<GeneralAccountingAccount>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  numberStr?: Maybe<Scalars['String']>;
  package: ERP_PACKAGE;
  seatLines: Array<ERP_seatLine>;
  seatLinesAggregate?: Maybe<ERP_seatLineAggregateResult>;
  type?: Maybe<ERP_accountingAccountType>;
};


export type ERP_accountingAccountcreatedByArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_accountingAccountgroupArgs = {
  filter?: InputMaybe<GeneralAccountingAccountFilter>;
};


export type ERP_accountingAccountpackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};


export type ERP_accountingAccountseatLinesArgs = {
  filter?: InputMaybe<ERP_seatLineFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatLineOrder>;
};


export type ERP_accountingAccountseatLinesAggregateArgs = {
  filter?: InputMaybe<ERP_seatLineFilter>;
};

export type ERP_accountingAccountAggregateResult = {
  __typename?: 'ERP_accountingAccountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  numberStrMax?: Maybe<Scalars['String']>;
  numberStrMin?: Maybe<Scalars['String']>;
};

export type ERP_accountingAccountFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_accountingAccountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_accountingAccountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<ERP_accountingAccountFilter>;
  numberStr?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_accountingAccountFilter>>>;
  type?: InputMaybe<ERP_accountingAccountType_exact>;
};

export enum ERP_accountingAccountHasFilter {
  createdBy = 'createdBy',
  description = 'description',
  group = 'group',
  name = 'name',
  numberStr = 'numberStr',
  package = 'package',
  seatLines = 'seatLines',
  type = 'type'
}

export type ERP_accountingAccountOrder = {
  asc?: InputMaybe<ERP_accountingAccountOrderable>;
  desc?: InputMaybe<ERP_accountingAccountOrderable>;
  then?: InputMaybe<ERP_accountingAccountOrder>;
};

export enum ERP_accountingAccountOrderable {
  description = 'description',
  name = 'name',
  numberStr = 'numberStr'
}

export type ERP_accountingAccountPatch = {
  createdBy?: InputMaybe<ERP_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  group?: InputMaybe<GeneralAccountingAccountRef>;
  name?: InputMaybe<Scalars['String']>;
  numberStr?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  seatLines?: InputMaybe<Array<ERP_seatLineRef>>;
  type?: InputMaybe<ERP_accountingAccountType>;
};

export type ERP_accountingAccountRef = {
  createdBy?: InputMaybe<ERP_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  group?: InputMaybe<GeneralAccountingAccountRef>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  numberStr?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  seatLines?: InputMaybe<Array<ERP_seatLineRef>>;
  type?: InputMaybe<ERP_accountingAccountType>;
};

export enum ERP_accountingAccountType {
  ASSET = 'ASSET',
  LIABILITY = 'LIABILITY'
}

export type ERP_accountingAccountType_exact = {
  between?: InputMaybe<ERP_accountingAccountType>;
  eq?: InputMaybe<ERP_accountingAccountType>;
  ge?: InputMaybe<ERP_accountingAccountType>;
  gt?: InputMaybe<ERP_accountingAccountType>;
  in?: InputMaybe<Array<InputMaybe<ERP_accountingAccountType>>>;
  le?: InputMaybe<ERP_accountingAccountType>;
  lt?: InputMaybe<ERP_accountingAccountType>;
};

export enum ERP_actionType {
  INVOCE_NOTE = 'INVOCE_NOTE'
}

export type ERP_contact = {
  __typename?: 'ERP_contact';
  accountingAccounts: Array<ERP_accountingAccount>;
  accountingAccountsAggregate?: Maybe<ERP_accountingAccountAggregateResult>;
  actions: Array<ERP_contactAction>;
  actionsAggregate?: Maybe<ERP_contactActionAggregateResult>;
  contact: Contact;
  id: Scalars['ID'];
  invoices: Array<ERP_invoice>;
  invoicesAggregate?: Maybe<ERP_invoiceAggregateResult>;
  package: ERP_PACKAGE;
  paymentPlans: Array<ERP_paymentPlan>;
  paymentPlansAggregate?: Maybe<ERP_paymentPlanAggregateResult>;
  series: Array<ERP_contactSerie>;
  seriesAggregate?: Maybe<ERP_contactSerieAggregateResult>;
  tax?: Maybe<ERP_tax>;
  widthholding?: Maybe<ERP_withholding>;
};


export type ERP_contactaccountingAccountsArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_accountingAccountOrder>;
};


export type ERP_contactaccountingAccountsAggregateArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};


export type ERP_contactactionsArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactActionOrder>;
};


export type ERP_contactactionsAggregateArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
};


export type ERP_contactcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type ERP_contactinvoicesArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceOrder>;
};


export type ERP_contactinvoicesAggregateArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_contactpackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};


export type ERP_contactpaymentPlansArgs = {
  filter?: InputMaybe<ERP_paymentPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_paymentPlanOrder>;
};


export type ERP_contactpaymentPlansAggregateArgs = {
  filter?: InputMaybe<ERP_paymentPlanFilter>;
};


export type ERP_contactseriesArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactSerieOrder>;
};


export type ERP_contactseriesAggregateArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
};


export type ERP_contacttaxArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
};


export type ERP_contactwidthholdingArgs = {
  filter?: InputMaybe<ERP_withholdingFilter>;
};

export type ERP_contactAction = {
  __typename?: 'ERP_contactAction';
  contact: ERP_contact;
  createdAt: Scalars['DateTime'];
  createdBy: ERP_account;
  date: Scalars['DateTime'];
  event?: Maybe<ERP_event>;
  id: Scalars['ID'];
  invoiceNote?: Maybe<ERP_invoiceNote>;
  label?: Maybe<Scalars['String']>;
  package: ERP_PACKAGE;
  reminder?: Maybe<Account_eventReminder>;
  status: ERP_contactActionStatus;
  type: ERP_actionType;
};


export type ERP_contactActioncontactArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
};


export type ERP_contactActioncreatedByArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_contactActioneventArgs = {
  filter?: InputMaybe<ERP_eventFilter>;
};


export type ERP_contactActioninvoiceNoteArgs = {
  filter?: InputMaybe<ERP_invoiceNoteFilter>;
};


export type ERP_contactActionpackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};

export type ERP_contactActionAggregateResult = {
  __typename?: 'ERP_contactActionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  dateMax?: Maybe<Scalars['DateTime']>;
  dateMin?: Maybe<Scalars['DateTime']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type ERP_contactActionFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_contactActionFilter>>>;
  date?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<ERP_contactActionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_contactActionFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_contactActionFilter>>>;
};

export enum ERP_contactActionHasFilter {
  contact = 'contact',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  date = 'date',
  event = 'event',
  invoiceNote = 'invoiceNote',
  label = 'label',
  package = 'package',
  reminder = 'reminder',
  status = 'status',
  type = 'type'
}

export type ERP_contactActionOrder = {
  asc?: InputMaybe<ERP_contactActionOrderable>;
  desc?: InputMaybe<ERP_contactActionOrderable>;
  then?: InputMaybe<ERP_contactActionOrder>;
};

export enum ERP_contactActionOrderable {
  createdAt = 'createdAt',
  date = 'date',
  label = 'label'
}

export type ERP_contactActionPatch = {
  contact?: InputMaybe<ERP_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<ERP_accountRef>;
  date?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<ERP_eventRef>;
  invoiceNote?: InputMaybe<ERP_invoiceNoteRef>;
  label?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  reminder?: InputMaybe<Account_eventReminder>;
  status?: InputMaybe<ERP_contactActionStatus>;
  type?: InputMaybe<ERP_actionType>;
};

export type ERP_contactActionRef = {
  contact?: InputMaybe<ERP_contactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<ERP_accountRef>;
  date?: InputMaybe<Scalars['DateTime']>;
  event?: InputMaybe<ERP_eventRef>;
  id?: InputMaybe<Scalars['ID']>;
  invoiceNote?: InputMaybe<ERP_invoiceNoteRef>;
  label?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  reminder?: InputMaybe<Account_eventReminder>;
  status?: InputMaybe<ERP_contactActionStatus>;
  type?: InputMaybe<ERP_actionType>;
};

export enum ERP_contactActionStatus {
  CANCELLED = 'CANCELLED',
  DONE = 'DONE',
  PENDING = 'PENDING'
}

export type ERP_contactAggregateResult = {
  __typename?: 'ERP_contactAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type ERP_contactFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_contactFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_contactHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_contactFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_contactFilter>>>;
};

export enum ERP_contactHasFilter {
  accountingAccounts = 'accountingAccounts',
  actions = 'actions',
  contact = 'contact',
  invoices = 'invoices',
  package = 'package',
  paymentPlans = 'paymentPlans',
  series = 'series',
  tax = 'tax',
  widthholding = 'widthholding'
}

export type ERP_contactPatch = {
  accountingAccounts?: InputMaybe<Array<ERP_accountingAccountRef>>;
  actions?: InputMaybe<Array<ERP_contactActionRef>>;
  contact?: InputMaybe<ContactRef>;
  invoices?: InputMaybe<Array<ERP_invoiceRef>>;
  package?: InputMaybe<ERP_PACKAGERef>;
  paymentPlans?: InputMaybe<Array<ERP_paymentPlanRef>>;
  series?: InputMaybe<Array<ERP_contactSerieRef>>;
  tax?: InputMaybe<ERP_taxRef>;
  widthholding?: InputMaybe<ERP_withholdingRef>;
};

export type ERP_contactRef = {
  accountingAccounts?: InputMaybe<Array<ERP_accountingAccountRef>>;
  actions?: InputMaybe<Array<ERP_contactActionRef>>;
  contact?: InputMaybe<ContactRef>;
  id?: InputMaybe<Scalars['ID']>;
  invoices?: InputMaybe<Array<ERP_invoiceRef>>;
  package?: InputMaybe<ERP_PACKAGERef>;
  paymentPlans?: InputMaybe<Array<ERP_paymentPlanRef>>;
  series?: InputMaybe<Array<ERP_contactSerieRef>>;
  tax?: InputMaybe<ERP_taxRef>;
  widthholding?: InputMaybe<ERP_withholdingRef>;
};

export type ERP_contactSerie = {
  __typename?: 'ERP_contactSerie';
  contact?: Maybe<ERP_contact>;
  id: Scalars['ID'];
  index: Scalars['Int'];
  invoices: Array<ERP_invoice>;
  invoicesAggregate?: Maybe<ERP_invoiceAggregateResult>;
  isCorporate: Scalars['Boolean'];
  isDefault: Scalars['Boolean'];
  package: ERP_PACKAGE;
  serie: Scalars['String'];
  type: ERP_contactSerieType;
  year: Scalars['Int'];
};


export type ERP_contactSeriecontactArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
};


export type ERP_contactSerieinvoicesArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceOrder>;
};


export type ERP_contactSerieinvoicesAggregateArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_contactSeriepackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};

export type ERP_contactSerieAggregateResult = {
  __typename?: 'ERP_contactSerieAggregateResult';
  count?: Maybe<Scalars['Int']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  serieMax?: Maybe<Scalars['String']>;
  serieMin?: Maybe<Scalars['String']>;
  yearAvg?: Maybe<Scalars['Float']>;
  yearMax?: Maybe<Scalars['Int']>;
  yearMin?: Maybe<Scalars['Int']>;
  yearSum?: Maybe<Scalars['Int']>;
};

export type ERP_contactSerieFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_contactSerieFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_contactSerieHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<ERP_contactSerieFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_contactSerieFilter>>>;
  serie?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<ERP_contactSerieType_hash>;
  year?: InputMaybe<IntFilter>;
};

export enum ERP_contactSerieHasFilter {
  contact = 'contact',
  index = 'index',
  invoices = 'invoices',
  isCorporate = 'isCorporate',
  isDefault = 'isDefault',
  package = 'package',
  serie = 'serie',
  type = 'type',
  year = 'year'
}

export type ERP_contactSerieOrder = {
  asc?: InputMaybe<ERP_contactSerieOrderable>;
  desc?: InputMaybe<ERP_contactSerieOrderable>;
  then?: InputMaybe<ERP_contactSerieOrder>;
};

export enum ERP_contactSerieOrderable {
  index = 'index',
  serie = 'serie',
  year = 'year'
}

export type ERP_contactSeriePatch = {
  contact?: InputMaybe<ERP_contactRef>;
  index?: InputMaybe<Scalars['Int']>;
  invoices?: InputMaybe<Array<ERP_invoiceRef>>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  serie?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<ERP_contactSerieType>;
  year?: InputMaybe<Scalars['Int']>;
};

export type ERP_contactSerieRef = {
  contact?: InputMaybe<ERP_contactRef>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  invoices?: InputMaybe<Array<ERP_invoiceRef>>;
  isCorporate?: InputMaybe<Scalars['Boolean']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  serie?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<ERP_contactSerieType>;
  year?: InputMaybe<Scalars['Int']>;
};

export enum ERP_contactSerieType {
  CORRECTIVE = 'CORRECTIVE',
  PROFORMA = 'PROFORMA',
  STANDARD = 'STANDARD'
}

export type ERP_contactSerieType_hash = {
  eq?: InputMaybe<ERP_contactSerieType>;
  in?: InputMaybe<Array<InputMaybe<ERP_contactSerieType>>>;
};

export type ERP_event = {
  __typename?: 'ERP_event';
  accounts: Array<ERP_accountEvent>;
  accountsAggregate?: Maybe<ERP_accountEventAggregateResult>;
  contactAction?: Maybe<ERP_contactAction>;
  event: Event;
  id: Scalars['ID'];
  package: ERP_PACKAGE;
};


export type ERP_eventaccountsArgs = {
  filter?: InputMaybe<ERP_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ERP_eventaccountsAggregateArgs = {
  filter?: InputMaybe<ERP_accountEventFilter>;
};


export type ERP_eventcontactActionArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
};


export type ERP_eventeventArgs = {
  filter?: InputMaybe<EventFilter>;
};


export type ERP_eventpackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};

export type ERP_eventAggregateResult = {
  __typename?: 'ERP_eventAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type ERP_eventFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_eventFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_eventHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_eventFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_eventFilter>>>;
};

export enum ERP_eventHasFilter {
  accounts = 'accounts',
  contactAction = 'contactAction',
  event = 'event',
  package = 'package'
}

export type ERP_eventPatch = {
  accounts?: InputMaybe<Array<ERP_accountEventRef>>;
  contactAction?: InputMaybe<ERP_contactActionRef>;
  event?: InputMaybe<EventRef>;
  package?: InputMaybe<ERP_PACKAGERef>;
};

export type ERP_eventRef = {
  accounts?: InputMaybe<Array<ERP_accountEventRef>>;
  contactAction?: InputMaybe<ERP_contactActionRef>;
  event?: InputMaybe<EventRef>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<ERP_PACKAGERef>;
};

export type ERP_invoice = {
  __typename?: 'ERP_invoice';
  accountingAccount?: Maybe<ERP_accountingAccount>;
  allow_x_date?: Maybe<Scalars['Boolean']>;
  bankAccount?: Maybe<BankAccount>;
  bankAccountIBAN?: Maybe<Scalars['String']>;
  bankAccountOwner?: Maybe<Scalars['String']>;
  bankName?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  concept?: Maybe<Scalars['String']>;
  contact?: Maybe<ERP_contact>;
  contactAddress?: Maybe<Scalars['String']>;
  contactName?: Maybe<Scalars['String']>;
  contactTaxCode?: Maybe<Scalars['String']>;
  correctiveInvoice?: Maybe<ERP_invoice>;
  correctivedInvoices?: Maybe<Array<ERP_invoice>>;
  correctivedInvoicesAggregate?: Maybe<ERP_invoiceAggregateResult>;
  cost?: Maybe<Scalars['Float']>;
  createdAt: Scalars['DateTime'];
  createdBy: ERP_account;
  dueBy?: Maybe<ERP_account>;
  dueDate?: Maybe<Scalars['DateTime']>;
  fullSerie?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  index?: Maybe<Scalars['Int']>;
  issueBy?: Maybe<ERP_account>;
  issueDate?: Maybe<Scalars['DateTime']>;
  items: Array<ERP_invoiceItem>;
  itemsAggregate?: Maybe<ERP_invoiceItemAggregateResult>;
  lastUpdate?: Maybe<Scalars['DateTime']>;
  lastUpdateBy?: Maybe<ERP_account>;
  notes: Array<ERP_invoiceNote>;
  notesAggregate?: Maybe<ERP_invoiceNoteAggregateResult>;
  oldId?: Maybe<Scalars['String']>;
  originalProforma?: Maybe<ERP_invoice>;
  package: ERP_PACKAGE;
  paymentDate?: Maybe<Scalars['DateTime']>;
  paymentMethod?: Maybe<ERP_paymentMethod>;
  paymentPlan?: Maybe<ERP_paymentPlan>;
  paymentPlanIndex?: Maybe<Scalars['Int']>;
  productCategories: Array<Product_category>;
  productCategoriesAggregate?: Maybe<Product_categoryAggregateResult>;
  resource?: Maybe<ERP_resource>;
  seat?: Maybe<ERP_seat>;
  serie?: Maybe<ERP_contactSerie>;
  serieType?: Maybe<ERP_contactSerieType>;
  standardGenerated?: Maybe<ERP_invoice>;
  status: ERP_invoiceStatus;
  templateType?: Maybe<ERP_templateType>;
  totalCost?: Maybe<Scalars['Float']>;
  totalTaxValue: Scalars['Float'];
  totalWithholdingValue?: Maybe<Scalars['Float']>;
  type: ERP_invoiceType;
  withholding?: Maybe<ERP_withholding>;
  withholdingPercent?: Maybe<Scalars['Float']>;
};


export type ERP_invoiceaccountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};


export type ERP_invoicebankAccountArgs = {
  filter?: InputMaybe<BankAccountFilter>;
};


export type ERP_invoicecontactArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
};


export type ERP_invoicecorrectiveInvoiceArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_invoicecorrectivedInvoicesArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceOrder>;
};


export type ERP_invoicecorrectivedInvoicesAggregateArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_invoicecreatedByArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_invoicedueByArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_invoiceissueByArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_invoiceitemsArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceItemOrder>;
};


export type ERP_invoiceitemsAggregateArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
};


export type ERP_invoicelastUpdateByArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_invoicenotesArgs = {
  filter?: InputMaybe<ERP_invoiceNoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceNoteOrder>;
};


export type ERP_invoicenotesAggregateArgs = {
  filter?: InputMaybe<ERP_invoiceNoteFilter>;
};


export type ERP_invoiceoriginalProformaArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_invoicepackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};


export type ERP_invoicepaymentPlanArgs = {
  filter?: InputMaybe<ERP_paymentPlanFilter>;
};


export type ERP_invoiceproductCategoriesArgs = {
  filter?: InputMaybe<Product_categoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_categoryOrder>;
};


export type ERP_invoiceproductCategoriesAggregateArgs = {
  filter?: InputMaybe<Product_categoryFilter>;
};


export type ERP_invoiceresourceArgs = {
  filter?: InputMaybe<ERP_resourceFilter>;
};


export type ERP_invoiceseatArgs = {
  filter?: InputMaybe<ERP_seatFilter>;
};


export type ERP_invoiceserieArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
};


export type ERP_invoicestandardGeneratedArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_invoicewithholdingArgs = {
  filter?: InputMaybe<ERP_withholdingFilter>;
};

export type ERP_invoiceAggregateResult = {
  __typename?: 'ERP_invoiceAggregateResult';
  bankAccountIBANMax?: Maybe<Scalars['String']>;
  bankAccountIBANMin?: Maybe<Scalars['String']>;
  bankAccountOwnerMax?: Maybe<Scalars['String']>;
  bankAccountOwnerMin?: Maybe<Scalars['String']>;
  bankNameMax?: Maybe<Scalars['String']>;
  bankNameMin?: Maybe<Scalars['String']>;
  commentsMax?: Maybe<Scalars['String']>;
  commentsMin?: Maybe<Scalars['String']>;
  conceptMax?: Maybe<Scalars['String']>;
  conceptMin?: Maybe<Scalars['String']>;
  contactAddressMax?: Maybe<Scalars['String']>;
  contactAddressMin?: Maybe<Scalars['String']>;
  contactNameMax?: Maybe<Scalars['String']>;
  contactNameMin?: Maybe<Scalars['String']>;
  contactTaxCodeMax?: Maybe<Scalars['String']>;
  contactTaxCodeMin?: Maybe<Scalars['String']>;
  costAvg?: Maybe<Scalars['Float']>;
  costMax?: Maybe<Scalars['Float']>;
  costMin?: Maybe<Scalars['Float']>;
  costSum?: Maybe<Scalars['Float']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  dueDateMax?: Maybe<Scalars['DateTime']>;
  dueDateMin?: Maybe<Scalars['DateTime']>;
  fullSerieMax?: Maybe<Scalars['String']>;
  fullSerieMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  issueDateMax?: Maybe<Scalars['DateTime']>;
  issueDateMin?: Maybe<Scalars['DateTime']>;
  lastUpdateMax?: Maybe<Scalars['DateTime']>;
  lastUpdateMin?: Maybe<Scalars['DateTime']>;
  oldIdMax?: Maybe<Scalars['String']>;
  oldIdMin?: Maybe<Scalars['String']>;
  paymentDateMax?: Maybe<Scalars['DateTime']>;
  paymentDateMin?: Maybe<Scalars['DateTime']>;
  paymentPlanIndexAvg?: Maybe<Scalars['Float']>;
  paymentPlanIndexMax?: Maybe<Scalars['Int']>;
  paymentPlanIndexMin?: Maybe<Scalars['Int']>;
  paymentPlanIndexSum?: Maybe<Scalars['Int']>;
  totalCostAvg?: Maybe<Scalars['Float']>;
  totalCostMax?: Maybe<Scalars['Float']>;
  totalCostMin?: Maybe<Scalars['Float']>;
  totalCostSum?: Maybe<Scalars['Float']>;
  totalTaxValueAvg?: Maybe<Scalars['Float']>;
  totalTaxValueMax?: Maybe<Scalars['Float']>;
  totalTaxValueMin?: Maybe<Scalars['Float']>;
  totalTaxValueSum?: Maybe<Scalars['Float']>;
  totalWithholdingValueAvg?: Maybe<Scalars['Float']>;
  totalWithholdingValueMax?: Maybe<Scalars['Float']>;
  totalWithholdingValueMin?: Maybe<Scalars['Float']>;
  totalWithholdingValueSum?: Maybe<Scalars['Float']>;
  withholdingPercentAvg?: Maybe<Scalars['Float']>;
  withholdingPercentMax?: Maybe<Scalars['Float']>;
  withholdingPercentMin?: Maybe<Scalars['Float']>;
  withholdingPercentSum?: Maybe<Scalars['Float']>;
};

export type ERP_invoiceFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_invoiceFilter>>>;
  contactName?: InputMaybe<StringRegExpFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  dueDate?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<ERP_invoiceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  issueDate?: InputMaybe<DateTimeFilter>;
  not?: InputMaybe<ERP_invoiceFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_invoiceFilter>>>;
  paymentDate?: InputMaybe<DateTimeFilter>;
  serieType?: InputMaybe<ERP_contactSerieType_hash>;
  status?: InputMaybe<ERP_invoiceStatus_hash>;
  type?: InputMaybe<ERP_invoiceType_hash>;
};

export enum ERP_invoiceHasFilter {
  accountingAccount = 'accountingAccount',
  allow_x_date = 'allow_x_date',
  bankAccount = 'bankAccount',
  bankAccountIBAN = 'bankAccountIBAN',
  bankAccountOwner = 'bankAccountOwner',
  bankName = 'bankName',
  comments = 'comments',
  concept = 'concept',
  contact = 'contact',
  contactAddress = 'contactAddress',
  contactName = 'contactName',
  contactTaxCode = 'contactTaxCode',
  correctiveInvoice = 'correctiveInvoice',
  correctivedInvoices = 'correctivedInvoices',
  cost = 'cost',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  dueBy = 'dueBy',
  dueDate = 'dueDate',
  fullSerie = 'fullSerie',
  index = 'index',
  issueBy = 'issueBy',
  issueDate = 'issueDate',
  items = 'items',
  lastUpdate = 'lastUpdate',
  lastUpdateBy = 'lastUpdateBy',
  notes = 'notes',
  oldId = 'oldId',
  originalProforma = 'originalProforma',
  package = 'package',
  paymentDate = 'paymentDate',
  paymentMethod = 'paymentMethod',
  paymentPlan = 'paymentPlan',
  paymentPlanIndex = 'paymentPlanIndex',
  productCategories = 'productCategories',
  resource = 'resource',
  seat = 'seat',
  serie = 'serie',
  serieType = 'serieType',
  standardGenerated = 'standardGenerated',
  status = 'status',
  templateType = 'templateType',
  totalCost = 'totalCost',
  totalTaxValue = 'totalTaxValue',
  totalWithholdingValue = 'totalWithholdingValue',
  type = 'type',
  withholding = 'withholding',
  withholdingPercent = 'withholdingPercent'
}

export type ERP_invoiceItem = {
  __typename?: 'ERP_invoiceItem';
  accountingAccount?: Maybe<ERP_accountingAccount>;
  amount: Scalars['Float'];
  concept: Scalars['String'];
  cost: Scalars['Float'];
  detail: Scalars['String'];
  id: Scalars['ID'];
  invoice: ERP_invoice;
  line?: Maybe<ERP_seatLine>;
  lmsGroupLessonTeacherConfig?: Maybe<LMS_groupLessonTeacherConfig>;
  package: ERP_PACKAGE;
  product?: Maybe<Product>;
  tax?: Maybe<ERP_tax>;
  taxAccountingAccount?: Maybe<ERP_accountingAccountType>;
  taxPercent: Scalars['Float'];
  taxValue: Scalars['Float'];
  total: Scalars['Float'];
  totalCost: Scalars['Float'];
  x_date?: Maybe<Scalars['DateTime']>;
};


export type ERP_invoiceItemaccountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};


export type ERP_invoiceIteminvoiceArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_invoiceItemlineArgs = {
  filter?: InputMaybe<ERP_seatLineFilter>;
};


export type ERP_invoiceItemlmsGroupLessonTeacherConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
};


export type ERP_invoiceItempackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};


export type ERP_invoiceItemproductArgs = {
  filter?: InputMaybe<ProductFilter>;
};


export type ERP_invoiceItemtaxArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
};

export type ERP_invoiceItemAggregateResult = {
  __typename?: 'ERP_invoiceItemAggregateResult';
  amountAvg?: Maybe<Scalars['Float']>;
  amountMax?: Maybe<Scalars['Float']>;
  amountMin?: Maybe<Scalars['Float']>;
  amountSum?: Maybe<Scalars['Float']>;
  conceptMax?: Maybe<Scalars['String']>;
  conceptMin?: Maybe<Scalars['String']>;
  costAvg?: Maybe<Scalars['Float']>;
  costMax?: Maybe<Scalars['Float']>;
  costMin?: Maybe<Scalars['Float']>;
  costSum?: Maybe<Scalars['Float']>;
  count?: Maybe<Scalars['Int']>;
  detailMax?: Maybe<Scalars['String']>;
  detailMin?: Maybe<Scalars['String']>;
  taxPercentAvg?: Maybe<Scalars['Float']>;
  taxPercentMax?: Maybe<Scalars['Float']>;
  taxPercentMin?: Maybe<Scalars['Float']>;
  taxPercentSum?: Maybe<Scalars['Float']>;
  taxValueAvg?: Maybe<Scalars['Float']>;
  taxValueMax?: Maybe<Scalars['Float']>;
  taxValueMin?: Maybe<Scalars['Float']>;
  taxValueSum?: Maybe<Scalars['Float']>;
  totalAvg?: Maybe<Scalars['Float']>;
  totalCostAvg?: Maybe<Scalars['Float']>;
  totalCostMax?: Maybe<Scalars['Float']>;
  totalCostMin?: Maybe<Scalars['Float']>;
  totalCostSum?: Maybe<Scalars['Float']>;
  totalMax?: Maybe<Scalars['Float']>;
  totalMin?: Maybe<Scalars['Float']>;
  totalSum?: Maybe<Scalars['Float']>;
  x_dateMax?: Maybe<Scalars['DateTime']>;
  x_dateMin?: Maybe<Scalars['DateTime']>;
};

export type ERP_invoiceItemFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_invoiceItemFilter>>>;
  concept?: InputMaybe<StringRegExpFilter>;
  has?: InputMaybe<Array<InputMaybe<ERP_invoiceItemHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_invoiceItemFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_invoiceItemFilter>>>;
  total?: InputMaybe<FloatFilter>;
  totalCost?: InputMaybe<FloatFilter>;
};

export enum ERP_invoiceItemHasFilter {
  accountingAccount = 'accountingAccount',
  amount = 'amount',
  concept = 'concept',
  cost = 'cost',
  detail = 'detail',
  invoice = 'invoice',
  line = 'line',
  lmsGroupLessonTeacherConfig = 'lmsGroupLessonTeacherConfig',
  package = 'package',
  product = 'product',
  tax = 'tax',
  taxAccountingAccount = 'taxAccountingAccount',
  taxPercent = 'taxPercent',
  taxValue = 'taxValue',
  total = 'total',
  totalCost = 'totalCost',
  x_date = 'x_date'
}

export type ERP_invoiceItemOrder = {
  asc?: InputMaybe<ERP_invoiceItemOrderable>;
  desc?: InputMaybe<ERP_invoiceItemOrderable>;
  then?: InputMaybe<ERP_invoiceItemOrder>;
};

export enum ERP_invoiceItemOrderable {
  amount = 'amount',
  concept = 'concept',
  cost = 'cost',
  detail = 'detail',
  taxPercent = 'taxPercent',
  taxValue = 'taxValue',
  total = 'total',
  totalCost = 'totalCost',
  x_date = 'x_date'
}

export type ERP_invoiceItemPatch = {
  accountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  amount?: InputMaybe<Scalars['Float']>;
  concept?: InputMaybe<Scalars['String']>;
  cost?: InputMaybe<Scalars['Float']>;
  detail?: InputMaybe<Scalars['String']>;
  invoice?: InputMaybe<ERP_invoiceRef>;
  line?: InputMaybe<ERP_seatLineRef>;
  lmsGroupLessonTeacherConfig?: InputMaybe<LMS_groupLessonTeacherConfigRef>;
  package?: InputMaybe<ERP_PACKAGERef>;
  product?: InputMaybe<ProductRef>;
  tax?: InputMaybe<ERP_taxRef>;
  taxAccountingAccount?: InputMaybe<ERP_accountingAccountType>;
  taxPercent?: InputMaybe<Scalars['Float']>;
  taxValue?: InputMaybe<Scalars['Float']>;
  total?: InputMaybe<Scalars['Float']>;
  totalCost?: InputMaybe<Scalars['Float']>;
  x_date?: InputMaybe<Scalars['DateTime']>;
};

export type ERP_invoiceItemRef = {
  accountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  amount?: InputMaybe<Scalars['Float']>;
  concept?: InputMaybe<Scalars['String']>;
  cost?: InputMaybe<Scalars['Float']>;
  detail?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  invoice?: InputMaybe<ERP_invoiceRef>;
  line?: InputMaybe<ERP_seatLineRef>;
  lmsGroupLessonTeacherConfig?: InputMaybe<LMS_groupLessonTeacherConfigRef>;
  package?: InputMaybe<ERP_PACKAGERef>;
  product?: InputMaybe<ProductRef>;
  tax?: InputMaybe<ERP_taxRef>;
  taxAccountingAccount?: InputMaybe<ERP_accountingAccountType>;
  taxPercent?: InputMaybe<Scalars['Float']>;
  taxValue?: InputMaybe<Scalars['Float']>;
  total?: InputMaybe<Scalars['Float']>;
  totalCost?: InputMaybe<Scalars['Float']>;
  x_date?: InputMaybe<Scalars['DateTime']>;
};

export type ERP_invoiceNote = {
  __typename?: 'ERP_invoiceNote';
  contactAction?: Maybe<ERP_contactAction>;
  createdAt: Scalars['DateTime'];
  createdBy: ERP_account;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  invoice: ERP_invoice;
  package: ERP_PACKAGE;
  title: Scalars['String'];
};


export type ERP_invoiceNotecontactActionArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
};


export type ERP_invoiceNotecreatedByArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_invoiceNoteinvoiceArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_invoiceNotepackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};

export type ERP_invoiceNoteAggregateResult = {
  __typename?: 'ERP_invoiceNoteAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
};

export type ERP_invoiceNoteFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_invoiceNoteFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_invoiceNoteHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_invoiceNoteFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_invoiceNoteFilter>>>;
};

export enum ERP_invoiceNoteHasFilter {
  contactAction = 'contactAction',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  invoice = 'invoice',
  package = 'package',
  title = 'title'
}

export type ERP_invoiceNoteOrder = {
  asc?: InputMaybe<ERP_invoiceNoteOrderable>;
  desc?: InputMaybe<ERP_invoiceNoteOrderable>;
  then?: InputMaybe<ERP_invoiceNoteOrder>;
};

export enum ERP_invoiceNoteOrderable {
  createdAt = 'createdAt',
  description = 'description',
  title = 'title'
}

export type ERP_invoiceNotePatch = {
  contactAction?: InputMaybe<ERP_contactActionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<ERP_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  invoice?: InputMaybe<ERP_invoiceRef>;
  package?: InputMaybe<ERP_PACKAGERef>;
  title?: InputMaybe<Scalars['String']>;
};

export type ERP_invoiceNoteRef = {
  contactAction?: InputMaybe<ERP_contactActionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<ERP_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  invoice?: InputMaybe<ERP_invoiceRef>;
  package?: InputMaybe<ERP_PACKAGERef>;
  title?: InputMaybe<Scalars['String']>;
};

export type ERP_invoiceOrder = {
  asc?: InputMaybe<ERP_invoiceOrderable>;
  desc?: InputMaybe<ERP_invoiceOrderable>;
  then?: InputMaybe<ERP_invoiceOrder>;
};

export enum ERP_invoiceOrderable {
  bankAccountIBAN = 'bankAccountIBAN',
  bankAccountOwner = 'bankAccountOwner',
  bankName = 'bankName',
  comments = 'comments',
  concept = 'concept',
  contactAddress = 'contactAddress',
  contactName = 'contactName',
  contactTaxCode = 'contactTaxCode',
  cost = 'cost',
  createdAt = 'createdAt',
  dueDate = 'dueDate',
  fullSerie = 'fullSerie',
  index = 'index',
  issueDate = 'issueDate',
  lastUpdate = 'lastUpdate',
  oldId = 'oldId',
  paymentDate = 'paymentDate',
  paymentPlanIndex = 'paymentPlanIndex',
  totalCost = 'totalCost',
  totalTaxValue = 'totalTaxValue',
  totalWithholdingValue = 'totalWithholdingValue',
  withholdingPercent = 'withholdingPercent'
}

export type ERP_invoicePatch = {
  accountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  allow_x_date?: InputMaybe<Scalars['Boolean']>;
  bankAccount?: InputMaybe<BankAccountRef>;
  bankAccountIBAN?: InputMaybe<Scalars['String']>;
  bankAccountOwner?: InputMaybe<Scalars['String']>;
  bankName?: InputMaybe<Scalars['String']>;
  comments?: InputMaybe<Scalars['String']>;
  concept?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<ERP_contactRef>;
  contactAddress?: InputMaybe<Scalars['String']>;
  contactName?: InputMaybe<Scalars['String']>;
  contactTaxCode?: InputMaybe<Scalars['String']>;
  correctiveInvoice?: InputMaybe<ERP_invoiceRef>;
  correctivedInvoices?: InputMaybe<Array<ERP_invoiceRef>>;
  cost?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<ERP_accountRef>;
  dueBy?: InputMaybe<ERP_accountRef>;
  dueDate?: InputMaybe<Scalars['DateTime']>;
  fullSerie?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  issueBy?: InputMaybe<ERP_accountRef>;
  issueDate?: InputMaybe<Scalars['DateTime']>;
  items?: InputMaybe<Array<ERP_invoiceItemRef>>;
  lastUpdate?: InputMaybe<Scalars['DateTime']>;
  lastUpdateBy?: InputMaybe<ERP_accountRef>;
  notes?: InputMaybe<Array<ERP_invoiceNoteRef>>;
  oldId?: InputMaybe<Scalars['String']>;
  originalProforma?: InputMaybe<ERP_invoiceRef>;
  package?: InputMaybe<ERP_PACKAGERef>;
  paymentDate?: InputMaybe<Scalars['DateTime']>;
  paymentMethod?: InputMaybe<ERP_paymentMethod>;
  paymentPlan?: InputMaybe<ERP_paymentPlanRef>;
  paymentPlanIndex?: InputMaybe<Scalars['Int']>;
  productCategories?: InputMaybe<Array<Product_categoryRef>>;
  resource?: InputMaybe<ERP_resourceRef>;
  seat?: InputMaybe<ERP_seatRef>;
  serie?: InputMaybe<ERP_contactSerieRef>;
  serieType?: InputMaybe<ERP_contactSerieType>;
  standardGenerated?: InputMaybe<ERP_invoiceRef>;
  status?: InputMaybe<ERP_invoiceStatus>;
  templateType?: InputMaybe<ERP_templateType>;
  totalCost?: InputMaybe<Scalars['Float']>;
  totalTaxValue?: InputMaybe<Scalars['Float']>;
  totalWithholdingValue?: InputMaybe<Scalars['Float']>;
  type?: InputMaybe<ERP_invoiceType>;
  withholding?: InputMaybe<ERP_withholdingRef>;
  withholdingPercent?: InputMaybe<Scalars['Float']>;
};

export type ERP_invoiceRef = {
  accountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  allow_x_date?: InputMaybe<Scalars['Boolean']>;
  bankAccount?: InputMaybe<BankAccountRef>;
  bankAccountIBAN?: InputMaybe<Scalars['String']>;
  bankAccountOwner?: InputMaybe<Scalars['String']>;
  bankName?: InputMaybe<Scalars['String']>;
  comments?: InputMaybe<Scalars['String']>;
  concept?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<ERP_contactRef>;
  contactAddress?: InputMaybe<Scalars['String']>;
  contactName?: InputMaybe<Scalars['String']>;
  contactTaxCode?: InputMaybe<Scalars['String']>;
  correctiveInvoice?: InputMaybe<ERP_invoiceRef>;
  correctivedInvoices?: InputMaybe<Array<ERP_invoiceRef>>;
  cost?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<ERP_accountRef>;
  dueBy?: InputMaybe<ERP_accountRef>;
  dueDate?: InputMaybe<Scalars['DateTime']>;
  fullSerie?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  issueBy?: InputMaybe<ERP_accountRef>;
  issueDate?: InputMaybe<Scalars['DateTime']>;
  items?: InputMaybe<Array<ERP_invoiceItemRef>>;
  lastUpdate?: InputMaybe<Scalars['DateTime']>;
  lastUpdateBy?: InputMaybe<ERP_accountRef>;
  notes?: InputMaybe<Array<ERP_invoiceNoteRef>>;
  oldId?: InputMaybe<Scalars['String']>;
  originalProforma?: InputMaybe<ERP_invoiceRef>;
  package?: InputMaybe<ERP_PACKAGERef>;
  paymentDate?: InputMaybe<Scalars['DateTime']>;
  paymentMethod?: InputMaybe<ERP_paymentMethod>;
  paymentPlan?: InputMaybe<ERP_paymentPlanRef>;
  paymentPlanIndex?: InputMaybe<Scalars['Int']>;
  productCategories?: InputMaybe<Array<Product_categoryRef>>;
  resource?: InputMaybe<ERP_resourceRef>;
  seat?: InputMaybe<ERP_seatRef>;
  serie?: InputMaybe<ERP_contactSerieRef>;
  serieType?: InputMaybe<ERP_contactSerieType>;
  standardGenerated?: InputMaybe<ERP_invoiceRef>;
  status?: InputMaybe<ERP_invoiceStatus>;
  templateType?: InputMaybe<ERP_templateType>;
  totalCost?: InputMaybe<Scalars['Float']>;
  totalTaxValue?: InputMaybe<Scalars['Float']>;
  totalWithholdingValue?: InputMaybe<Scalars['Float']>;
  type?: InputMaybe<ERP_invoiceType>;
  withholding?: InputMaybe<ERP_withholdingRef>;
  withholdingPercent?: InputMaybe<Scalars['Float']>;
};

export enum ERP_invoiceStatus {
  ACCEPTED = 'ACCEPTED',
  ACCOUNTING_CREDIT = 'ACCOUNTING_CREDIT',
  CANCELLED = 'CANCELLED',
  DRAFT = 'DRAFT',
  OVERDUE = 'OVERDUE',
  PAID = 'PAID',
  PENDING_ACCEPTANCE = 'PENDING_ACCEPTANCE',
  PENDING_ISSUE = 'PENDING_ISSUE',
  PENDING_PAIMENT = 'PENDING_PAIMENT',
  UNCOLLECTABLE = 'UNCOLLECTABLE'
}

export type ERP_invoiceStatus_hash = {
  eq?: InputMaybe<ERP_invoiceStatus>;
  in?: InputMaybe<Array<InputMaybe<ERP_invoiceStatus>>>;
};

export enum ERP_invoiceType {
  EARNING = 'EARNING',
  EXPENSE = 'EXPENSE'
}

export type ERP_invoiceType_hash = {
  eq?: InputMaybe<ERP_invoiceType>;
  in?: InputMaybe<Array<InputMaybe<ERP_invoiceType>>>;
};

export type ERP_organizationBillingInfo = {
  __typename?: 'ERP_organizationBillingInfo';
  address: Address;
  banks: Array<BankAccount>;
  banksAggregate?: Maybe<BankAccountAggregateResult>;
  comercialName?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  id: Scalars['ID'];
  package: ERP_PACKAGE;
  taxId?: Maybe<Scalars['String']>;
};


export type ERP_organizationBillingInfoaddressArgs = {
  filter?: InputMaybe<AddressFilter>;
};


export type ERP_organizationBillingInfobanksArgs = {
  filter?: InputMaybe<BankAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BankAccountOrder>;
};


export type ERP_organizationBillingInfobanksAggregateArgs = {
  filter?: InputMaybe<BankAccountFilter>;
};


export type ERP_organizationBillingInfopackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};

export type ERP_organizationBillingInfoAggregateResult = {
  __typename?: 'ERP_organizationBillingInfoAggregateResult';
  comercialNameMax?: Maybe<Scalars['String']>;
  comercialNameMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  taxIdMax?: Maybe<Scalars['String']>;
  taxIdMin?: Maybe<Scalars['String']>;
};

export type ERP_organizationBillingInfoFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_organizationBillingInfoFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_organizationBillingInfoHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_organizationBillingInfoFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_organizationBillingInfoFilter>>>;
};

export enum ERP_organizationBillingInfoHasFilter {
  address = 'address',
  banks = 'banks',
  comercialName = 'comercialName',
  createdAt = 'createdAt',
  package = 'package',
  taxId = 'taxId'
}

export type ERP_organizationBillingInfoOrder = {
  asc?: InputMaybe<ERP_organizationBillingInfoOrderable>;
  desc?: InputMaybe<ERP_organizationBillingInfoOrderable>;
  then?: InputMaybe<ERP_organizationBillingInfoOrder>;
};

export enum ERP_organizationBillingInfoOrderable {
  comercialName = 'comercialName',
  createdAt = 'createdAt',
  taxId = 'taxId'
}

export type ERP_organizationBillingInfoPatch = {
  address?: InputMaybe<AddressRef>;
  banks?: InputMaybe<Array<BankAccountRef>>;
  comercialName?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  taxId?: InputMaybe<Scalars['String']>;
};

export type ERP_organizationBillingInfoRef = {
  address?: InputMaybe<AddressRef>;
  banks?: InputMaybe<Array<BankAccountRef>>;
  comercialName?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  taxId?: InputMaybe<Scalars['String']>;
};

export enum ERP_paymentMethod {
  CASH = 'CASH',
  CHEQUE = 'CHEQUE',
  CREDIT_CARD = 'CREDIT_CARD',
  DOMICILED_RECEIPT = 'DOMICILED_RECEIPT',
  PAYMENT_30 = 'PAYMENT_30',
  PAYMENT_60 = 'PAYMENT_60',
  PAYMENT_90 = 'PAYMENT_90',
  TRANSFER = 'TRANSFER'
}

export type ERP_paymentPlan = {
  __typename?: 'ERP_paymentPlan';
  accountingAccount: ERP_accountingAccount;
  concept: Scalars['String'];
  contact: ERP_contact;
  cost: Scalars['Float'];
  createdAt: Scalars['DateTime'];
  createdBy: ERP_account;
  endAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  invoices: Array<ERP_invoice>;
  invoicesAggregate?: Maybe<ERP_invoiceAggregateResult>;
  package: ERP_PACKAGE;
  serie: ERP_contactSerie;
  startAt?: Maybe<Scalars['DateTime']>;
};


export type ERP_paymentPlanaccountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};


export type ERP_paymentPlancontactArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
};


export type ERP_paymentPlancreatedByArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_paymentPlaninvoicesArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceOrder>;
};


export type ERP_paymentPlaninvoicesAggregateArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_paymentPlanpackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};


export type ERP_paymentPlanserieArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
};

export type ERP_paymentPlanAggregateResult = {
  __typename?: 'ERP_paymentPlanAggregateResult';
  conceptMax?: Maybe<Scalars['String']>;
  conceptMin?: Maybe<Scalars['String']>;
  costAvg?: Maybe<Scalars['Float']>;
  costMax?: Maybe<Scalars['Float']>;
  costMin?: Maybe<Scalars['Float']>;
  costSum?: Maybe<Scalars['Float']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
};

export type ERP_paymentPlanFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_paymentPlanFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_paymentPlanHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_paymentPlanFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_paymentPlanFilter>>>;
};

export enum ERP_paymentPlanHasFilter {
  accountingAccount = 'accountingAccount',
  concept = 'concept',
  contact = 'contact',
  cost = 'cost',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  endAt = 'endAt',
  invoices = 'invoices',
  package = 'package',
  serie = 'serie',
  startAt = 'startAt'
}

export type ERP_paymentPlanOrder = {
  asc?: InputMaybe<ERP_paymentPlanOrderable>;
  desc?: InputMaybe<ERP_paymentPlanOrderable>;
  then?: InputMaybe<ERP_paymentPlanOrder>;
};

export enum ERP_paymentPlanOrderable {
  concept = 'concept',
  cost = 'cost',
  createdAt = 'createdAt',
  endAt = 'endAt',
  startAt = 'startAt'
}

export type ERP_paymentPlanPatch = {
  accountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  concept?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<ERP_contactRef>;
  cost?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<ERP_accountRef>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  invoices?: InputMaybe<Array<ERP_invoiceRef>>;
  package?: InputMaybe<ERP_PACKAGERef>;
  serie?: InputMaybe<ERP_contactSerieRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
};

export type ERP_paymentPlanRef = {
  accountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  concept?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<ERP_contactRef>;
  cost?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<ERP_accountRef>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  invoices?: InputMaybe<Array<ERP_invoiceRef>>;
  package?: InputMaybe<ERP_PACKAGERef>;
  serie?: InputMaybe<ERP_contactSerieRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
};

export type ERP_product = {
  __typename?: 'ERP_product';
  buyAccountingAccount?: Maybe<ERP_accountingAccount>;
  buyTax?: Maybe<ERP_tax>;
  buyTaxAccountingAccount?: Maybe<ERP_accountingAccount>;
  id: Scalars['ID'];
  package: ERP_PACKAGE;
  product: Product;
  saleAccountingAccount?: Maybe<ERP_accountingAccount>;
  saleTax?: Maybe<ERP_tax>;
  saleTaxAccountingAccount?: Maybe<ERP_accountingAccount>;
};


export type ERP_productbuyAccountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};


export type ERP_productbuyTaxArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
};


export type ERP_productbuyTaxAccountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};


export type ERP_productpackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};


export type ERP_productproductArgs = {
  filter?: InputMaybe<ProductFilter>;
};


export type ERP_productsaleAccountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};


export type ERP_productsaleTaxArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
};


export type ERP_productsaleTaxAccountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};

export type ERP_productAggregateResult = {
  __typename?: 'ERP_productAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type ERP_productFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_productFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_productHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_productFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_productFilter>>>;
};

export enum ERP_productHasFilter {
  buyAccountingAccount = 'buyAccountingAccount',
  buyTax = 'buyTax',
  buyTaxAccountingAccount = 'buyTaxAccountingAccount',
  package = 'package',
  product = 'product',
  saleAccountingAccount = 'saleAccountingAccount',
  saleTax = 'saleTax',
  saleTaxAccountingAccount = 'saleTaxAccountingAccount'
}

export type ERP_productPatch = {
  buyAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  buyTax?: InputMaybe<ERP_taxRef>;
  buyTaxAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  package?: InputMaybe<ERP_PACKAGERef>;
  product?: InputMaybe<ProductRef>;
  saleAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  saleTax?: InputMaybe<ERP_taxRef>;
  saleTaxAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
};

export type ERP_productRef = {
  buyAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  buyTax?: InputMaybe<ERP_taxRef>;
  buyTaxAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  product?: InputMaybe<ProductRef>;
  saleAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  saleTax?: InputMaybe<ERP_taxRef>;
  saleTaxAccountingAccount?: InputMaybe<ERP_accountingAccountRef>;
};

export type ERP_resource = {
  __typename?: 'ERP_resource';
  createdBy: ERP_account;
  id: Scalars['ID'];
  invoice?: Maybe<ERP_invoice>;
  package: ERP_PACKAGE;
  resource: Resource;
};


export type ERP_resourcecreatedByArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_resourceinvoiceArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_resourcepackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};


export type ERP_resourceresourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
};

export type ERP_resourceAggregateResult = {
  __typename?: 'ERP_resourceAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type ERP_resourceFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_resourceFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_resourceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_resourceFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_resourceFilter>>>;
};

export enum ERP_resourceHasFilter {
  createdBy = 'createdBy',
  invoice = 'invoice',
  package = 'package',
  resource = 'resource'
}

export type ERP_resourcePatch = {
  createdBy?: InputMaybe<ERP_accountRef>;
  invoice?: InputMaybe<ERP_invoiceRef>;
  package?: InputMaybe<ERP_PACKAGERef>;
  resource?: InputMaybe<ResourceRef>;
};

export type ERP_resourceRef = {
  createdBy?: InputMaybe<ERP_accountRef>;
  id?: InputMaybe<Scalars['ID']>;
  invoice?: InputMaybe<ERP_invoiceRef>;
  package?: InputMaybe<ERP_PACKAGERef>;
  resource?: InputMaybe<ResourceRef>;
};

export type ERP_role = {
  __typename?: 'ERP_role';
  accounts: Array<ERP_account>;
  accountsAggregate?: Maybe<ERP_accountAggregateResult>;
  id: Scalars['ID'];
  org360: Org360;
  package: ERP_PACKAGE;
  type: ERP_roleType;
};


export type ERP_roleaccountsArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ERP_roleaccountsAggregateArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type ERP_roleorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type ERP_rolepackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};

export type ERP_roleAggregateResult = {
  __typename?: 'ERP_roleAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type ERP_roleFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_roleFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_roleHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_roleFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_roleFilter>>>;
  type?: InputMaybe<ERP_roleType_hash>;
};

export enum ERP_roleHasFilter {
  accounts = 'accounts',
  org360 = 'org360',
  package = 'package',
  type = 'type'
}

export type ERP_rolePatch = {
  accounts?: InputMaybe<Array<ERP_accountRef>>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<ERP_PACKAGERef>;
  type?: InputMaybe<ERP_roleType>;
};

export type ERP_roleRef = {
  accounts?: InputMaybe<Array<ERP_accountRef>>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  package?: InputMaybe<ERP_PACKAGERef>;
  type?: InputMaybe<ERP_roleType>;
};

export enum ERP_roleType {
  ADMIN = 'ADMIN',
  DISABLED = 'DISABLED',
  MANAGER = 'MANAGER',
  admin = 'admin',
  disabled = 'disabled',
  manager = 'manager'
}

export type ERP_roleType_exact = {
  between?: InputMaybe<ERP_roleType>;
  eq?: InputMaybe<ERP_roleType>;
  ge?: InputMaybe<ERP_roleType>;
  gt?: InputMaybe<ERP_roleType>;
  in?: InputMaybe<Array<InputMaybe<ERP_roleType>>>;
  le?: InputMaybe<ERP_roleType>;
  lt?: InputMaybe<ERP_roleType>;
};

export type ERP_roleType_hash = {
  eq?: InputMaybe<ERP_roleType>;
  in?: InputMaybe<Array<InputMaybe<ERP_roleType>>>;
};

export type ERP_seat = {
  __typename?: 'ERP_seat';
  id: Scalars['ID'];
  index: Scalars['Int'];
  invoice: ERP_invoice;
  lines: Array<ERP_seatLine>;
  linesAggregate?: Maybe<ERP_seatLineAggregateResult>;
  package: ERP_PACKAGE;
};


export type ERP_seatinvoiceArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type ERP_seatlinesArgs = {
  filter?: InputMaybe<ERP_seatLineFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatLineOrder>;
};


export type ERP_seatlinesAggregateArgs = {
  filter?: InputMaybe<ERP_seatLineFilter>;
};


export type ERP_seatpackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};

export type ERP_seatAggregateResult = {
  __typename?: 'ERP_seatAggregateResult';
  count?: Maybe<Scalars['Int']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type ERP_seatFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_seatFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_seatHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_seatFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_seatFilter>>>;
};

export enum ERP_seatHasFilter {
  index = 'index',
  invoice = 'invoice',
  lines = 'lines',
  package = 'package'
}

export type ERP_seatLine = {
  __typename?: 'ERP_seatLine';
  accountingAccount: ERP_accountingAccount;
  id: Scalars['ID'];
  index: Scalars['Int'];
  seat: ERP_seat;
  value: Scalars['Float'];
};


export type ERP_seatLineaccountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};


export type ERP_seatLineseatArgs = {
  filter?: InputMaybe<ERP_seatFilter>;
};

export type ERP_seatLineAggregateResult = {
  __typename?: 'ERP_seatLineAggregateResult';
  count?: Maybe<Scalars['Int']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  valueAvg?: Maybe<Scalars['Float']>;
  valueMax?: Maybe<Scalars['Float']>;
  valueMin?: Maybe<Scalars['Float']>;
  valueSum?: Maybe<Scalars['Float']>;
};

export type ERP_seatLineFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_seatLineFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_seatLineHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_seatLineFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_seatLineFilter>>>;
};

export enum ERP_seatLineHasFilter {
  accountingAccount = 'accountingAccount',
  index = 'index',
  seat = 'seat',
  value = 'value'
}

export type ERP_seatLineOrder = {
  asc?: InputMaybe<ERP_seatLineOrderable>;
  desc?: InputMaybe<ERP_seatLineOrderable>;
  then?: InputMaybe<ERP_seatLineOrder>;
};

export enum ERP_seatLineOrderable {
  index = 'index',
  value = 'value'
}

export type ERP_seatLinePatch = {
  accountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  index?: InputMaybe<Scalars['Int']>;
  seat?: InputMaybe<ERP_seatRef>;
  value?: InputMaybe<Scalars['Float']>;
};

export type ERP_seatLineRef = {
  accountingAccount?: InputMaybe<ERP_accountingAccountRef>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  seat?: InputMaybe<ERP_seatRef>;
  value?: InputMaybe<Scalars['Float']>;
};

export type ERP_seatOrder = {
  asc?: InputMaybe<ERP_seatOrderable>;
  desc?: InputMaybe<ERP_seatOrderable>;
  then?: InputMaybe<ERP_seatOrder>;
};

export enum ERP_seatOrderable {
  index = 'index'
}

export type ERP_seatPatch = {
  index?: InputMaybe<Scalars['Int']>;
  invoice?: InputMaybe<ERP_invoiceRef>;
  lines?: InputMaybe<Array<ERP_seatLineRef>>;
  package?: InputMaybe<ERP_PACKAGERef>;
};

export type ERP_seatRef = {
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  invoice?: InputMaybe<ERP_invoiceRef>;
  lines?: InputMaybe<Array<ERP_seatLineRef>>;
  package?: InputMaybe<ERP_PACKAGERef>;
};

export type ERP_tax = {
  __typename?: 'ERP_tax';
  id: Scalars['ID'];
  name: Scalars['String'];
  package: ERP_PACKAGE;
  value: Scalars['Float'];
};


export type ERP_taxpackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};

export type ERP_taxAggregateResult = {
  __typename?: 'ERP_taxAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  valueAvg?: Maybe<Scalars['Float']>;
  valueMax?: Maybe<Scalars['Float']>;
  valueMin?: Maybe<Scalars['Float']>;
  valueSum?: Maybe<Scalars['Float']>;
};

export type ERP_taxFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_taxFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_taxHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_taxFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_taxFilter>>>;
};

export enum ERP_taxHasFilter {
  name = 'name',
  package = 'package',
  value = 'value'
}

export type ERP_taxOrder = {
  asc?: InputMaybe<ERP_taxOrderable>;
  desc?: InputMaybe<ERP_taxOrderable>;
  then?: InputMaybe<ERP_taxOrder>;
};

export enum ERP_taxOrderable {
  name = 'name',
  value = 'value'
}

export type ERP_taxPatch = {
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  value?: InputMaybe<Scalars['Float']>;
};

export type ERP_taxRef = {
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  value?: InputMaybe<Scalars['Float']>;
};

export enum ERP_templateType {
  CORRECTIVE = 'CORRECTIVE',
  PROFORMA = 'PROFORMA',
  STANDARD = 'STANDARD',
  SUPPLIER_FILE = 'SUPPLIER_FILE',
  TEACHER = 'TEACHER'
}

export type ERP_withholding = {
  __typename?: 'ERP_withholding';
  id: Scalars['ID'];
  name: Scalars['String'];
  package: ERP_PACKAGE;
  value: Scalars['Float'];
};


export type ERP_withholdingpackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};

export type ERP_withholdingAggregateResult = {
  __typename?: 'ERP_withholdingAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  valueAvg?: Maybe<Scalars['Float']>;
  valueMax?: Maybe<Scalars['Float']>;
  valueMin?: Maybe<Scalars['Float']>;
  valueSum?: Maybe<Scalars['Float']>;
};

export type ERP_withholdingFilter = {
  and?: InputMaybe<Array<InputMaybe<ERP_withholdingFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ERP_withholdingHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ERP_withholdingFilter>;
  or?: InputMaybe<Array<InputMaybe<ERP_withholdingFilter>>>;
  value?: InputMaybe<FloatFilter>;
};

export enum ERP_withholdingHasFilter {
  name = 'name',
  package = 'package',
  value = 'value'
}

export type ERP_withholdingOrder = {
  asc?: InputMaybe<ERP_withholdingOrderable>;
  desc?: InputMaybe<ERP_withholdingOrderable>;
  then?: InputMaybe<ERP_withholdingOrder>;
};

export enum ERP_withholdingOrderable {
  name = 'name',
  value = 'value'
}

export type ERP_withholdingPatch = {
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  value?: InputMaybe<Scalars['Float']>;
};

export type ERP_withholdingRef = {
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<ERP_PACKAGERef>;
  value?: InputMaybe<Scalars['Float']>;
};

export type Email = {
  __typename?: 'Email';
  account?: Maybe<Account>;
  attachments?: Maybe<Array<Maybe<Email_attachment>>>;
  attachmentsAggregate?: Maybe<Email_attachmentAggregateResult>;
  body?: Maybe<Scalars['String']>;
  bodyPreview?: Maybe<Scalars['String']>;
  conversationId?: Maybe<Scalars['String']>;
  from?: Maybe<Email_from>;
  guid: Scalars['String'];
  hasAttachments?: Maybe<Scalars['Boolean']>;
  id: Scalars['ID'];
  inboxItem?: Maybe<Inbox_item>;
  integrationsAccount?: Maybe<Integrations_account>;
  internetMessageId?: Maybe<Scalars['String']>;
  msftId?: Maybe<Scalars['String']>;
  org360?: Maybe<Org360>;
  owner: Email_ownerType;
  parentFolderId?: Maybe<Scalars['String']>;
  raw?: Maybe<Scalars['String']>;
  receivedDateTime?: Maybe<Scalars['String']>;
  sendGridId?: Maybe<Scalars['String']>;
  subject: Scalars['String'];
  to: Array<Email_to>;
  toAggregate?: Maybe<Email_toAggregateResult>;
  user?: Maybe<User>;
  webLink?: Maybe<Scalars['String']>;
};


export type EmailaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type EmailattachmentsArgs = {
  filter?: InputMaybe<Email_attachmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type EmailattachmentsAggregateArgs = {
  filter?: InputMaybe<Email_attachmentFilter>;
};


export type EmailfromArgs = {
  filter?: InputMaybe<Email_fromFilter>;
};


export type EmailinboxItemArgs = {
  filter?: InputMaybe<Inbox_itemFilter>;
};


export type EmailintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type Emailorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type EmailtoArgs = {
  filter?: InputMaybe<Email_toFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Email_toOrder>;
};


export type EmailtoAggregateArgs = {
  filter?: InputMaybe<Email_toFilter>;
};


export type EmailuserArgs = {
  filter?: InputMaybe<UserFilter>;
};

export type EmailAggregateResult = {
  __typename?: 'EmailAggregateResult';
  bodyMax?: Maybe<Scalars['String']>;
  bodyMin?: Maybe<Scalars['String']>;
  bodyPreviewMax?: Maybe<Scalars['String']>;
  bodyPreviewMin?: Maybe<Scalars['String']>;
  conversationIdMax?: Maybe<Scalars['String']>;
  conversationIdMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  internetMessageIdMax?: Maybe<Scalars['String']>;
  internetMessageIdMin?: Maybe<Scalars['String']>;
  msftIdMax?: Maybe<Scalars['String']>;
  msftIdMin?: Maybe<Scalars['String']>;
  parentFolderIdMax?: Maybe<Scalars['String']>;
  parentFolderIdMin?: Maybe<Scalars['String']>;
  rawMax?: Maybe<Scalars['String']>;
  rawMin?: Maybe<Scalars['String']>;
  receivedDateTimeMax?: Maybe<Scalars['String']>;
  receivedDateTimeMin?: Maybe<Scalars['String']>;
  sendGridIdMax?: Maybe<Scalars['String']>;
  sendGridIdMin?: Maybe<Scalars['String']>;
  subjectMax?: Maybe<Scalars['String']>;
  subjectMin?: Maybe<Scalars['String']>;
  webLinkMax?: Maybe<Scalars['String']>;
  webLinkMin?: Maybe<Scalars['String']>;
};

export type EmailEditor = {
  __typename?: 'EmailEditor';
  id: Scalars['ID'];
  org360: Org360;
  templates: Array<EmailEditor_template>;
  templatesAggregate?: Maybe<EmailEditor_templateAggregateResult>;
};


export type EmailEditororg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type EmailEditortemplatesArgs = {
  filter?: InputMaybe<EmailEditor_templateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailEditor_templateOrder>;
};


export type EmailEditortemplatesAggregateArgs = {
  filter?: InputMaybe<EmailEditor_templateFilter>;
};

export type EmailEditorAggregateResult = {
  __typename?: 'EmailEditorAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type EmailEditorFilter = {
  and?: InputMaybe<Array<InputMaybe<EmailEditorFilter>>>;
  has?: InputMaybe<Array<InputMaybe<EmailEditorHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<EmailEditorFilter>;
  or?: InputMaybe<Array<InputMaybe<EmailEditorFilter>>>;
};

export enum EmailEditorHasFilter {
  org360 = 'org360',
  templates = 'templates'
}

export type EmailEditorPatch = {
  org360?: InputMaybe<Org360Ref>;
  templates?: InputMaybe<Array<EmailEditor_templateRef>>;
};

export type EmailEditorRef = {
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  templates?: InputMaybe<Array<EmailEditor_templateRef>>;
};

export type EmailEditor_template = {
  __typename?: 'EmailEditor_template';
  body: Scalars['String'];
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  crmTemplate?: Maybe<CRM_emailTemplate>;
  emailEditor: EmailEditor;
  id: Scalars['ID'];
  name: Scalars['String'];
  org360: Org360;
  status: EmailEditor_templateStatus;
};


export type EmailEditor_templatecreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type EmailEditor_templatecrmTemplateArgs = {
  filter?: InputMaybe<CRM_emailTemplateFilter>;
};


export type EmailEditor_templateemailEditorArgs = {
  filter?: InputMaybe<EmailEditorFilter>;
};


export type EmailEditor_templateorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type EmailEditor_templateAggregateResult = {
  __typename?: 'EmailEditor_templateAggregateResult';
  bodyMax?: Maybe<Scalars['String']>;
  bodyMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type EmailEditor_templateFilter = {
  and?: InputMaybe<Array<InputMaybe<EmailEditor_templateFilter>>>;
  has?: InputMaybe<Array<InputMaybe<EmailEditor_templateHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<EmailEditor_templateFilter>;
  or?: InputMaybe<Array<InputMaybe<EmailEditor_templateFilter>>>;
  status?: InputMaybe<EmailEditor_templateStatus_exact>;
};

export enum EmailEditor_templateHasFilter {
  body = 'body',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  crmTemplate = 'crmTemplate',
  emailEditor = 'emailEditor',
  name = 'name',
  org360 = 'org360',
  status = 'status'
}

export type EmailEditor_templateOrder = {
  asc?: InputMaybe<EmailEditor_templateOrderable>;
  desc?: InputMaybe<EmailEditor_templateOrderable>;
  then?: InputMaybe<EmailEditor_templateOrder>;
};

export enum EmailEditor_templateOrderable {
  body = 'body',
  createdAt = 'createdAt',
  name = 'name'
}

export type EmailEditor_templatePatch = {
  body?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  crmTemplate?: InputMaybe<CRM_emailTemplateRef>;
  emailEditor?: InputMaybe<EmailEditorRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  status?: InputMaybe<EmailEditor_templateStatus>;
};

export type EmailEditor_templateRef = {
  body?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  crmTemplate?: InputMaybe<CRM_emailTemplateRef>;
  emailEditor?: InputMaybe<EmailEditorRef>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  status?: InputMaybe<EmailEditor_templateStatus>;
};

export enum EmailEditor_templateStatus {
  ACTIVE = 'ACTIVE',
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT'
}

export type EmailEditor_templateStatus_exact = {
  between?: InputMaybe<EmailEditor_templateStatus>;
  eq?: InputMaybe<EmailEditor_templateStatus>;
  ge?: InputMaybe<EmailEditor_templateStatus>;
  gt?: InputMaybe<EmailEditor_templateStatus>;
  in?: InputMaybe<Array<InputMaybe<EmailEditor_templateStatus>>>;
  le?: InputMaybe<EmailEditor_templateStatus>;
  lt?: InputMaybe<EmailEditor_templateStatus>;
};

export type EmailFilter = {
  and?: InputMaybe<Array<InputMaybe<EmailFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<EmailHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<EmailFilter>;
  or?: InputMaybe<Array<InputMaybe<EmailFilter>>>;
};

export enum EmailHasFilter {
  account = 'account',
  attachments = 'attachments',
  body = 'body',
  bodyPreview = 'bodyPreview',
  conversationId = 'conversationId',
  from = 'from',
  guid = 'guid',
  hasAttachments = 'hasAttachments',
  inboxItem = 'inboxItem',
  integrationsAccount = 'integrationsAccount',
  internetMessageId = 'internetMessageId',
  msftId = 'msftId',
  org360 = 'org360',
  owner = 'owner',
  parentFolderId = 'parentFolderId',
  raw = 'raw',
  receivedDateTime = 'receivedDateTime',
  sendGridId = 'sendGridId',
  subject = 'subject',
  to = 'to',
  user = 'user',
  webLink = 'webLink'
}

export type EmailOrder = {
  asc?: InputMaybe<EmailOrderable>;
  desc?: InputMaybe<EmailOrderable>;
  then?: InputMaybe<EmailOrder>;
};

export enum EmailOrderable {
  body = 'body',
  bodyPreview = 'bodyPreview',
  conversationId = 'conversationId',
  guid = 'guid',
  internetMessageId = 'internetMessageId',
  msftId = 'msftId',
  parentFolderId = 'parentFolderId',
  raw = 'raw',
  receivedDateTime = 'receivedDateTime',
  sendGridId = 'sendGridId',
  subject = 'subject',
  webLink = 'webLink'
}

export type EmailPatch = {
  account?: InputMaybe<AccountRef>;
  attachments?: InputMaybe<Array<InputMaybe<Email_attachmentRef>>>;
  body?: InputMaybe<Scalars['String']>;
  bodyPreview?: InputMaybe<Scalars['String']>;
  conversationId?: InputMaybe<Scalars['String']>;
  from?: InputMaybe<Email_fromRef>;
  guid?: InputMaybe<Scalars['String']>;
  hasAttachments?: InputMaybe<Scalars['Boolean']>;
  inboxItem?: InputMaybe<Inbox_itemRef>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  internetMessageId?: InputMaybe<Scalars['String']>;
  msftId?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  owner?: InputMaybe<Email_ownerType>;
  parentFolderId?: InputMaybe<Scalars['String']>;
  raw?: InputMaybe<Scalars['String']>;
  receivedDateTime?: InputMaybe<Scalars['String']>;
  sendGridId?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
  to?: InputMaybe<Array<Email_toRef>>;
  user?: InputMaybe<UserRef>;
  webLink?: InputMaybe<Scalars['String']>;
};

export type EmailRef = {
  account?: InputMaybe<AccountRef>;
  attachments?: InputMaybe<Array<InputMaybe<Email_attachmentRef>>>;
  body?: InputMaybe<Scalars['String']>;
  bodyPreview?: InputMaybe<Scalars['String']>;
  conversationId?: InputMaybe<Scalars['String']>;
  from?: InputMaybe<Email_fromRef>;
  guid?: InputMaybe<Scalars['String']>;
  hasAttachments?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  inboxItem?: InputMaybe<Inbox_itemRef>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  internetMessageId?: InputMaybe<Scalars['String']>;
  msftId?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  owner?: InputMaybe<Email_ownerType>;
  parentFolderId?: InputMaybe<Scalars['String']>;
  raw?: InputMaybe<Scalars['String']>;
  receivedDateTime?: InputMaybe<Scalars['String']>;
  sendGridId?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
  to?: InputMaybe<Array<Email_toRef>>;
  user?: InputMaybe<UserRef>;
  webLink?: InputMaybe<Scalars['String']>;
};

export type Email_attachment = {
  __typename?: 'Email_attachment';
  id: Scalars['ID'];
  resource?: Maybe<Resource>;
};


export type Email_attachmentresourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
};

export type Email_attachmentAggregateResult = {
  __typename?: 'Email_attachmentAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type Email_attachmentFilter = {
  and?: InputMaybe<Array<InputMaybe<Email_attachmentFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Email_attachmentHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Email_attachmentFilter>;
  or?: InputMaybe<Array<InputMaybe<Email_attachmentFilter>>>;
};

export enum Email_attachmentHasFilter {
  resource = 'resource'
}

export type Email_attachmentPatch = {
  resource?: InputMaybe<ResourceRef>;
};

export type Email_attachmentRef = {
  id?: InputMaybe<Scalars['ID']>;
  resource?: InputMaybe<ResourceRef>;
};

export type Email_from = {
  __typename?: 'Email_from';
  address?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type Email_fromAggregateResult = {
  __typename?: 'Email_fromAggregateResult';
  addressMax?: Maybe<Scalars['String']>;
  addressMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Email_fromFilter = {
  and?: InputMaybe<Array<InputMaybe<Email_fromFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Email_fromHasFilter>>>;
  not?: InputMaybe<Email_fromFilter>;
  or?: InputMaybe<Array<InputMaybe<Email_fromFilter>>>;
};

export enum Email_fromHasFilter {
  address = 'address',
  name = 'name'
}

export type Email_fromOrder = {
  asc?: InputMaybe<Email_fromOrderable>;
  desc?: InputMaybe<Email_fromOrderable>;
  then?: InputMaybe<Email_fromOrder>;
};

export enum Email_fromOrderable {
  address = 'address',
  name = 'name'
}

export type Email_fromPatch = {
  address?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Email_fromRef = {
  address?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export enum Email_ownerType {
  ACCOUNT = 'ACCOUNT',
  ORG360 = 'ORG360',
  USER = 'USER'
}

export type Email_to = {
  __typename?: 'Email_to';
  address?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type Email_toAggregateResult = {
  __typename?: 'Email_toAggregateResult';
  addressMax?: Maybe<Scalars['String']>;
  addressMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Email_toFilter = {
  and?: InputMaybe<Array<InputMaybe<Email_toFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Email_toHasFilter>>>;
  not?: InputMaybe<Email_toFilter>;
  or?: InputMaybe<Array<InputMaybe<Email_toFilter>>>;
};

export enum Email_toHasFilter {
  address = 'address',
  name = 'name'
}

export type Email_toOrder = {
  asc?: InputMaybe<Email_toOrderable>;
  desc?: InputMaybe<Email_toOrderable>;
  then?: InputMaybe<Email_toOrder>;
};

export enum Email_toOrderable {
  address = 'address',
  name = 'name'
}

export type Email_toPatch = {
  address?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Email_toRef = {
  address?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Event = {
  __typename?: 'Event';
  accounts?: Maybe<Array<Account_event>>;
  accountsAggregate?: Maybe<Account_eventAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  crmEvent?: Maybe<CRM_event>;
  description?: Maybe<Scalars['String']>;
  endDate?: Maybe<Scalars['DateTime']>;
  erpEvent?: Maybe<ERP_event>;
  id: Scalars['ID'];
  name: Scalars['String'];
  startDate: Scalars['DateTime'];
  status: Event_status;
};


export type EventaccountsArgs = {
  filter?: InputMaybe<Account_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_eventOrder>;
};


export type EventaccountsAggregateArgs = {
  filter?: InputMaybe<Account_eventFilter>;
};


export type EventcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type EventcrmEventArgs = {
  filter?: InputMaybe<CRM_eventFilter>;
};


export type EventerpEventArgs = {
  filter?: InputMaybe<ERP_eventFilter>;
};

export type EventAggregateResult = {
  __typename?: 'EventAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  endDateMax?: Maybe<Scalars['DateTime']>;
  endDateMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  startDateMax?: Maybe<Scalars['DateTime']>;
  startDateMin?: Maybe<Scalars['DateTime']>;
};

export type EventFilter = {
  and?: InputMaybe<Array<InputMaybe<EventFilter>>>;
  endDate?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<EventHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<EventFilter>;
  or?: InputMaybe<Array<InputMaybe<EventFilter>>>;
  startDate?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<Event_status_exact>;
};

export enum EventHasFilter {
  accounts = 'accounts',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  crmEvent = 'crmEvent',
  description = 'description',
  endDate = 'endDate',
  erpEvent = 'erpEvent',
  name = 'name',
  startDate = 'startDate',
  status = 'status'
}

export type EventOrder = {
  asc?: InputMaybe<EventOrderable>;
  desc?: InputMaybe<EventOrderable>;
  then?: InputMaybe<EventOrder>;
};

export enum EventOrderable {
  createdAt = 'createdAt',
  description = 'description',
  endDate = 'endDate',
  name = 'name',
  startDate = 'startDate'
}

export type EventPatch = {
  accounts?: InputMaybe<Array<Account_eventRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  crmEvent?: InputMaybe<CRM_eventRef>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  erpEvent?: InputMaybe<ERP_eventRef>;
  name?: InputMaybe<Scalars['String']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Event_status>;
};

export type EventRef = {
  accounts?: InputMaybe<Array<Account_eventRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  crmEvent?: InputMaybe<CRM_eventRef>;
  description?: InputMaybe<Scalars['String']>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  erpEvent?: InputMaybe<ERP_eventRef>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Event_status>;
};

export enum Event_status {
  CANCELLED = 'CANCELLED',
  DRAFT = 'DRAFT',
  PUBLISHED = 'PUBLISHED'
}

export type Event_status_exact = {
  between?: InputMaybe<Event_status>;
  eq?: InputMaybe<Event_status>;
  ge?: InputMaybe<Event_status>;
  gt?: InputMaybe<Event_status>;
  in?: InputMaybe<Array<InputMaybe<Event_status>>>;
  le?: InputMaybe<Event_status>;
  lt?: InputMaybe<Event_status>;
};

export type ExternalAPI_key = {
  __typename?: 'ExternalAPI_key';
  allowedOperations: Array<ExternalAPI_operations>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  id: Scalars['String'];
  label: Scalars['String'];
  org360: Org360;
  status: ExternalAPI_keyStatus;
};


export type ExternalAPI_keycreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ExternalAPI_keyorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type ExternalAPI_keyAggregateResult = {
  __typename?: 'ExternalAPI_keyAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  idMax?: Maybe<Scalars['String']>;
  idMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type ExternalAPI_keyFilter = {
  and?: InputMaybe<Array<InputMaybe<ExternalAPI_keyFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ExternalAPI_keyHasFilter>>>;
  id?: InputMaybe<StringHashFilter>;
  not?: InputMaybe<ExternalAPI_keyFilter>;
  or?: InputMaybe<Array<InputMaybe<ExternalAPI_keyFilter>>>;
};

export enum ExternalAPI_keyHasFilter {
  allowedOperations = 'allowedOperations',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  id = 'id',
  label = 'label',
  org360 = 'org360',
  status = 'status'
}

export type ExternalAPI_keyOrder = {
  asc?: InputMaybe<ExternalAPI_keyOrderable>;
  desc?: InputMaybe<ExternalAPI_keyOrderable>;
  then?: InputMaybe<ExternalAPI_keyOrder>;
};

export enum ExternalAPI_keyOrderable {
  createdAt = 'createdAt',
  id = 'id',
  label = 'label'
}

export type ExternalAPI_keyPatch = {
  allowedOperations?: InputMaybe<Array<ExternalAPI_operations>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  id?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  status?: InputMaybe<ExternalAPI_keyStatus>;
};

export type ExternalAPI_keyRef = {
  allowedOperations?: InputMaybe<Array<ExternalAPI_operations>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  id?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  status?: InputMaybe<ExternalAPI_keyStatus>;
};

export enum ExternalAPI_keyStatus {
  ACTIVE = 'ACTIVE',
  INACTIVE = 'INACTIVE'
}

export enum ExternalAPI_operations {
  PROCESS_SEND_GRID_EVENTS = 'PROCESS_SEND_GRID_EVENTS',
  PROCESS_SOURCE_FORMS = 'PROCESS_SOURCE_FORMS'
}

export type FloatFilter = {
  between?: InputMaybe<FloatRange>;
  eq?: InputMaybe<Scalars['Float']>;
  ge?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  le?: InputMaybe<Scalars['Float']>;
  lt?: InputMaybe<Scalars['Float']>;
};

export type FloatRange = {
  max: Scalars['Float'];
  min: Scalars['Float'];
};

export type FormBuilder = {
  __typename?: 'FormBuilder';
  forms: Array<FormBuilder_form>;
  formsAggregate?: Maybe<FormBuilder_formAggregateResult>;
  id: Scalars['ID'];
  org360: Org360;
};


export type FormBuilderformsArgs = {
  filter?: InputMaybe<FormBuilder_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_formOrder>;
};


export type FormBuilderformsAggregateArgs = {
  filter?: InputMaybe<FormBuilder_formFilter>;
};


export type FormBuilderorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type FormBuilderAggregateResult = {
  __typename?: 'FormBuilderAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type FormBuilderFilter = {
  and?: InputMaybe<Array<InputMaybe<FormBuilderFilter>>>;
  has?: InputMaybe<Array<InputMaybe<FormBuilderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<FormBuilderFilter>;
  or?: InputMaybe<Array<InputMaybe<FormBuilderFilter>>>;
};

export enum FormBuilderHasFilter {
  forms = 'forms',
  org360 = 'org360'
}

export type FormBuilderPatch = {
  forms?: InputMaybe<Array<FormBuilder_formRef>>;
  org360?: InputMaybe<Org360Ref>;
};

export type FormBuilderRef = {
  forms?: InputMaybe<Array<FormBuilder_formRef>>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
};

export type FormBuilder_form = {
  __typename?: 'FormBuilder_form';
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  description?: Maybe<Scalars['String']>;
  formBuilder: FormBuilder;
  id: Scalars['ID'];
  inputs: Array<FormBuilder_input>;
  inputsAggregate?: Maybe<FormBuilder_inputAggregateResult>;
  lmsForms: Array<LMS_form>;
  lmsFormsAggregate?: Maybe<LMS_formAggregateResult>;
  name: Scalars['String'];
  org360: Org360;
  status: FormBuilder_formStatus;
  updatedAt: Scalars['DateTime'];
};


export type FormBuilder_formcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type FormBuilder_formformBuilderArgs = {
  filter?: InputMaybe<FormBuilderFilter>;
};


export type FormBuilder_forminputsArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputOrder>;
};


export type FormBuilder_forminputsAggregateArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
};


export type FormBuilder_formlmsFormsArgs = {
  filter?: InputMaybe<LMS_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formOrder>;
};


export type FormBuilder_formlmsFormsAggregateArgs = {
  filter?: InputMaybe<LMS_formFilter>;
};


export type FormBuilder_formorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type FormBuilder_formAggregateResult = {
  __typename?: 'FormBuilder_formAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type FormBuilder_formFilter = {
  and?: InputMaybe<Array<InputMaybe<FormBuilder_formFilter>>>;
  has?: InputMaybe<Array<InputMaybe<FormBuilder_formHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<FormBuilder_formFilter>;
  or?: InputMaybe<Array<InputMaybe<FormBuilder_formFilter>>>;
  status?: InputMaybe<FormBuilder_formStatus_exact>;
};

export enum FormBuilder_formHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  formBuilder = 'formBuilder',
  inputs = 'inputs',
  lmsForms = 'lmsForms',
  name = 'name',
  org360 = 'org360',
  status = 'status',
  updatedAt = 'updatedAt'
}

export type FormBuilder_formOrder = {
  asc?: InputMaybe<FormBuilder_formOrderable>;
  desc?: InputMaybe<FormBuilder_formOrderable>;
  then?: InputMaybe<FormBuilder_formOrder>;
};

export enum FormBuilder_formOrderable {
  createdAt = 'createdAt',
  description = 'description',
  name = 'name',
  updatedAt = 'updatedAt'
}

export type FormBuilder_formPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  description?: InputMaybe<Scalars['String']>;
  formBuilder?: InputMaybe<FormBuilderRef>;
  inputs?: InputMaybe<Array<FormBuilder_inputRef>>;
  lmsForms?: InputMaybe<Array<LMS_formRef>>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  status?: InputMaybe<FormBuilder_formStatus>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type FormBuilder_formRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  description?: InputMaybe<Scalars['String']>;
  formBuilder?: InputMaybe<FormBuilderRef>;
  id?: InputMaybe<Scalars['ID']>;
  inputs?: InputMaybe<Array<FormBuilder_inputRef>>;
  lmsForms?: InputMaybe<Array<LMS_formRef>>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  status?: InputMaybe<FormBuilder_formStatus>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export enum FormBuilder_formStatus {
  ARCHIVED = 'ARCHIVED',
  DRAFT = 'DRAFT',
  PUBLISHED = 'PUBLISHED'
}

export type FormBuilder_formStatus_exact = {
  between?: InputMaybe<FormBuilder_formStatus>;
  eq?: InputMaybe<FormBuilder_formStatus>;
  ge?: InputMaybe<FormBuilder_formStatus>;
  gt?: InputMaybe<FormBuilder_formStatus>;
  in?: InputMaybe<Array<InputMaybe<FormBuilder_formStatus>>>;
  le?: InputMaybe<FormBuilder_formStatus>;
  lt?: InputMaybe<FormBuilder_formStatus>;
};

export type FormBuilder_input = {
  __typename?: 'FormBuilder_input';
  boolean?: Maybe<FormBuilder_inputBoolean>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  description?: Maybe<Scalars['String']>;
  form: FormBuilder_form;
  id: Scalars['ID'];
  index: Scalars['Int'];
  multipleChoice?: Maybe<FormBuilder_inputMultipleChoice>;
  number?: Maybe<FormBuilder_inputNumber>;
  text?: Maybe<FormBuilder_inputText>;
  title: Scalars['String'];
  type: FormBuilder_inputType;
  updatedAt: Scalars['DateTime'];
  value: Scalars['Float'];
};


export type FormBuilder_inputbooleanArgs = {
  filter?: InputMaybe<FormBuilder_inputBooleanFilter>;
};


export type FormBuilder_inputcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type FormBuilder_inputformArgs = {
  filter?: InputMaybe<FormBuilder_formFilter>;
};


export type FormBuilder_inputmultipleChoiceArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceFilter>;
};


export type FormBuilder_inputnumberArgs = {
  filter?: InputMaybe<FormBuilder_inputNumberFilter>;
};


export type FormBuilder_inputtextArgs = {
  filter?: InputMaybe<FormBuilder_inputTextFilter>;
};

export type FormBuilder_inputAggregateResult = {
  __typename?: 'FormBuilder_inputAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
  valueAvg?: Maybe<Scalars['Float']>;
  valueMax?: Maybe<Scalars['Float']>;
  valueMin?: Maybe<Scalars['Float']>;
  valueSum?: Maybe<Scalars['Float']>;
};

export type FormBuilder_inputBoolean = {
  __typename?: 'FormBuilder_inputBoolean';
  correctAnswer: Scalars['Boolean'];
  correctAnswerValue?: Maybe<Scalars['Boolean']>;
  id: Scalars['ID'];
  input: FormBuilder_input;
};


export type FormBuilder_inputBooleaninputArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
};

export type FormBuilder_inputBooleanAggregateResult = {
  __typename?: 'FormBuilder_inputBooleanAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type FormBuilder_inputBooleanFilter = {
  and?: InputMaybe<Array<InputMaybe<FormBuilder_inputBooleanFilter>>>;
  has?: InputMaybe<Array<InputMaybe<FormBuilder_inputBooleanHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<FormBuilder_inputBooleanFilter>;
  or?: InputMaybe<Array<InputMaybe<FormBuilder_inputBooleanFilter>>>;
};

export enum FormBuilder_inputBooleanHasFilter {
  correctAnswer = 'correctAnswer',
  correctAnswerValue = 'correctAnswerValue',
  input = 'input'
}

export type FormBuilder_inputBooleanPatch = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerValue?: InputMaybe<Scalars['Boolean']>;
  input?: InputMaybe<FormBuilder_inputRef>;
};

export type FormBuilder_inputBooleanRef = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerValue?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  input?: InputMaybe<FormBuilder_inputRef>;
};

export type FormBuilder_inputFilter = {
  and?: InputMaybe<Array<InputMaybe<FormBuilder_inputFilter>>>;
  has?: InputMaybe<Array<InputMaybe<FormBuilder_inputHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<FormBuilder_inputFilter>;
  or?: InputMaybe<Array<InputMaybe<FormBuilder_inputFilter>>>;
};

export enum FormBuilder_inputHasFilter {
  boolean = 'boolean',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  form = 'form',
  index = 'index',
  multipleChoice = 'multipleChoice',
  number = 'number',
  text = 'text',
  title = 'title',
  type = 'type',
  updatedAt = 'updatedAt',
  value = 'value'
}

export type FormBuilder_inputMultipleChoice = {
  __typename?: 'FormBuilder_inputMultipleChoice';
  correctAnswer: Scalars['Boolean'];
  correctAnswerValues?: Maybe<Array<FormBuilder_inputMultipleChoiceOption>>;
  correctAnswerValuesAggregate?: Maybe<FormBuilder_inputMultipleChoiceOptionAggregateResult>;
  id: Scalars['ID'];
  input: FormBuilder_input;
  isMultipleSelect: Scalars['Boolean'];
  optionValueType: FormBuilder_inputMultipleChoiceOptionValueType;
  options?: Maybe<Array<FormBuilder_inputMultipleChoiceOption>>;
  optionsAggregate?: Maybe<FormBuilder_inputMultipleChoiceOptionAggregateResult>;
};


export type FormBuilder_inputMultipleChoicecorrectAnswerValuesArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputMultipleChoiceOptionOrder>;
};


export type FormBuilder_inputMultipleChoicecorrectAnswerValuesAggregateArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
};


export type FormBuilder_inputMultipleChoiceinputArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
};


export type FormBuilder_inputMultipleChoiceoptionsArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputMultipleChoiceOptionOrder>;
};


export type FormBuilder_inputMultipleChoiceoptionsAggregateArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
};

export type FormBuilder_inputMultipleChoiceAggregateResult = {
  __typename?: 'FormBuilder_inputMultipleChoiceAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type FormBuilder_inputMultipleChoiceFilter = {
  and?: InputMaybe<Array<InputMaybe<FormBuilder_inputMultipleChoiceFilter>>>;
  has?: InputMaybe<Array<InputMaybe<FormBuilder_inputMultipleChoiceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<FormBuilder_inputMultipleChoiceFilter>;
  or?: InputMaybe<Array<InputMaybe<FormBuilder_inputMultipleChoiceFilter>>>;
};

export enum FormBuilder_inputMultipleChoiceHasFilter {
  correctAnswer = 'correctAnswer',
  correctAnswerValues = 'correctAnswerValues',
  input = 'input',
  isMultipleSelect = 'isMultipleSelect',
  optionValueType = 'optionValueType',
  options = 'options'
}

export type FormBuilder_inputMultipleChoiceOption = {
  __typename?: 'FormBuilder_inputMultipleChoiceOption';
  form: FormBuilder_form;
  id: Scalars['ID'];
  index: Scalars['Int'];
  input: FormBuilder_input;
  multipleChoice: FormBuilder_inputMultipleChoice;
  name: Scalars['String'];
  value?: Maybe<Scalars['String']>;
};


export type FormBuilder_inputMultipleChoiceOptionformArgs = {
  filter?: InputMaybe<FormBuilder_formFilter>;
};


export type FormBuilder_inputMultipleChoiceOptioninputArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
};


export type FormBuilder_inputMultipleChoiceOptionmultipleChoiceArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceFilter>;
};

export type FormBuilder_inputMultipleChoiceOptionAggregateResult = {
  __typename?: 'FormBuilder_inputMultipleChoiceOptionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  valueMax?: Maybe<Scalars['String']>;
  valueMin?: Maybe<Scalars['String']>;
};

export type FormBuilder_inputMultipleChoiceOptionFilter = {
  and?: InputMaybe<Array<InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<FormBuilder_inputMultipleChoiceOptionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
  or?: InputMaybe<Array<InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>>>;
};

export enum FormBuilder_inputMultipleChoiceOptionHasFilter {
  form = 'form',
  index = 'index',
  input = 'input',
  multipleChoice = 'multipleChoice',
  name = 'name',
  value = 'value'
}

export type FormBuilder_inputMultipleChoiceOptionOrder = {
  asc?: InputMaybe<FormBuilder_inputMultipleChoiceOptionOrderable>;
  desc?: InputMaybe<FormBuilder_inputMultipleChoiceOptionOrderable>;
  then?: InputMaybe<FormBuilder_inputMultipleChoiceOptionOrder>;
};

export enum FormBuilder_inputMultipleChoiceOptionOrderable {
  index = 'index',
  name = 'name',
  value = 'value'
}

export type FormBuilder_inputMultipleChoiceOptionPatch = {
  form?: InputMaybe<FormBuilder_formRef>;
  index?: InputMaybe<Scalars['Int']>;
  input?: InputMaybe<FormBuilder_inputRef>;
  multipleChoice?: InputMaybe<FormBuilder_inputMultipleChoiceRef>;
  name?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

export type FormBuilder_inputMultipleChoiceOptionRef = {
  form?: InputMaybe<FormBuilder_formRef>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  input?: InputMaybe<FormBuilder_inputRef>;
  multipleChoice?: InputMaybe<FormBuilder_inputMultipleChoiceRef>;
  name?: InputMaybe<Scalars['String']>;
  value?: InputMaybe<Scalars['String']>;
};

export enum FormBuilder_inputMultipleChoiceOptionValueType {
  NUMBER = 'NUMBER',
  STRING = 'STRING'
}

export type FormBuilder_inputMultipleChoicePatch = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerValues?: InputMaybe<Array<FormBuilder_inputMultipleChoiceOptionRef>>;
  input?: InputMaybe<FormBuilder_inputRef>;
  isMultipleSelect?: InputMaybe<Scalars['Boolean']>;
  optionValueType?: InputMaybe<FormBuilder_inputMultipleChoiceOptionValueType>;
  options?: InputMaybe<Array<FormBuilder_inputMultipleChoiceOptionRef>>;
};

export type FormBuilder_inputMultipleChoiceRef = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerValues?: InputMaybe<Array<FormBuilder_inputMultipleChoiceOptionRef>>;
  id?: InputMaybe<Scalars['ID']>;
  input?: InputMaybe<FormBuilder_inputRef>;
  isMultipleSelect?: InputMaybe<Scalars['Boolean']>;
  optionValueType?: InputMaybe<FormBuilder_inputMultipleChoiceOptionValueType>;
  options?: InputMaybe<Array<FormBuilder_inputMultipleChoiceOptionRef>>;
};

export type FormBuilder_inputNumber = {
  __typename?: 'FormBuilder_inputNumber';
  correctAnswer: Scalars['Boolean'];
  correctAnswerFloatValue?: Maybe<Scalars['Float']>;
  correctAnswerIntValue?: Maybe<Scalars['Int']>;
  id: Scalars['ID'];
  input: FormBuilder_input;
  type: FormBuilder_inputNumberType;
};


export type FormBuilder_inputNumberinputArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
};

export type FormBuilder_inputNumberAggregateResult = {
  __typename?: 'FormBuilder_inputNumberAggregateResult';
  correctAnswerFloatValueAvg?: Maybe<Scalars['Float']>;
  correctAnswerFloatValueMax?: Maybe<Scalars['Float']>;
  correctAnswerFloatValueMin?: Maybe<Scalars['Float']>;
  correctAnswerFloatValueSum?: Maybe<Scalars['Float']>;
  correctAnswerIntValueAvg?: Maybe<Scalars['Float']>;
  correctAnswerIntValueMax?: Maybe<Scalars['Int']>;
  correctAnswerIntValueMin?: Maybe<Scalars['Int']>;
  correctAnswerIntValueSum?: Maybe<Scalars['Int']>;
  count?: Maybe<Scalars['Int']>;
};

export type FormBuilder_inputNumberFilter = {
  and?: InputMaybe<Array<InputMaybe<FormBuilder_inputNumberFilter>>>;
  has?: InputMaybe<Array<InputMaybe<FormBuilder_inputNumberHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<FormBuilder_inputNumberFilter>;
  or?: InputMaybe<Array<InputMaybe<FormBuilder_inputNumberFilter>>>;
};

export enum FormBuilder_inputNumberHasFilter {
  correctAnswer = 'correctAnswer',
  correctAnswerFloatValue = 'correctAnswerFloatValue',
  correctAnswerIntValue = 'correctAnswerIntValue',
  input = 'input',
  type = 'type'
}

export type FormBuilder_inputNumberOrder = {
  asc?: InputMaybe<FormBuilder_inputNumberOrderable>;
  desc?: InputMaybe<FormBuilder_inputNumberOrderable>;
  then?: InputMaybe<FormBuilder_inputNumberOrder>;
};

export enum FormBuilder_inputNumberOrderable {
  correctAnswerFloatValue = 'correctAnswerFloatValue',
  correctAnswerIntValue = 'correctAnswerIntValue'
}

export type FormBuilder_inputNumberPatch = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerFloatValue?: InputMaybe<Scalars['Float']>;
  correctAnswerIntValue?: InputMaybe<Scalars['Int']>;
  input?: InputMaybe<FormBuilder_inputRef>;
  type?: InputMaybe<FormBuilder_inputNumberType>;
};

export type FormBuilder_inputNumberRef = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerFloatValue?: InputMaybe<Scalars['Float']>;
  correctAnswerIntValue?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['ID']>;
  input?: InputMaybe<FormBuilder_inputRef>;
  type?: InputMaybe<FormBuilder_inputNumberType>;
};

export enum FormBuilder_inputNumberType {
  INT = 'INT',
  REAL = 'REAL'
}

export type FormBuilder_inputOrder = {
  asc?: InputMaybe<FormBuilder_inputOrderable>;
  desc?: InputMaybe<FormBuilder_inputOrderable>;
  then?: InputMaybe<FormBuilder_inputOrder>;
};

export enum FormBuilder_inputOrderable {
  createdAt = 'createdAt',
  description = 'description',
  index = 'index',
  title = 'title',
  updatedAt = 'updatedAt',
  value = 'value'
}

export type FormBuilder_inputPatch = {
  boolean?: InputMaybe<FormBuilder_inputBooleanRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  description?: InputMaybe<Scalars['String']>;
  form?: InputMaybe<FormBuilder_formRef>;
  index?: InputMaybe<Scalars['Int']>;
  multipleChoice?: InputMaybe<FormBuilder_inputMultipleChoiceRef>;
  number?: InputMaybe<FormBuilder_inputNumberRef>;
  text?: InputMaybe<FormBuilder_inputTextRef>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<FormBuilder_inputType>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  value?: InputMaybe<Scalars['Float']>;
};

export type FormBuilder_inputRef = {
  boolean?: InputMaybe<FormBuilder_inputBooleanRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  description?: InputMaybe<Scalars['String']>;
  form?: InputMaybe<FormBuilder_formRef>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  multipleChoice?: InputMaybe<FormBuilder_inputMultipleChoiceRef>;
  number?: InputMaybe<FormBuilder_inputNumberRef>;
  text?: InputMaybe<FormBuilder_inputTextRef>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<FormBuilder_inputType>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  value?: InputMaybe<Scalars['Float']>;
};

export type FormBuilder_inputText = {
  __typename?: 'FormBuilder_inputText';
  correctAnswer: Scalars['Boolean'];
  correctAnswerValue?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  maxLength?: Maybe<Scalars['Int']>;
  rows: Scalars['Int'];
  type: FormBuilder_inputTextType;
};

export type FormBuilder_inputTextAggregateResult = {
  __typename?: 'FormBuilder_inputTextAggregateResult';
  correctAnswerValueMax?: Maybe<Scalars['String']>;
  correctAnswerValueMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  maxLengthAvg?: Maybe<Scalars['Float']>;
  maxLengthMax?: Maybe<Scalars['Int']>;
  maxLengthMin?: Maybe<Scalars['Int']>;
  maxLengthSum?: Maybe<Scalars['Int']>;
  rowsAvg?: Maybe<Scalars['Float']>;
  rowsMax?: Maybe<Scalars['Int']>;
  rowsMin?: Maybe<Scalars['Int']>;
  rowsSum?: Maybe<Scalars['Int']>;
};

export type FormBuilder_inputTextFilter = {
  and?: InputMaybe<Array<InputMaybe<FormBuilder_inputTextFilter>>>;
  has?: InputMaybe<Array<InputMaybe<FormBuilder_inputTextHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<FormBuilder_inputTextFilter>;
  or?: InputMaybe<Array<InputMaybe<FormBuilder_inputTextFilter>>>;
};

export enum FormBuilder_inputTextHasFilter {
  correctAnswer = 'correctAnswer',
  correctAnswerValue = 'correctAnswerValue',
  maxLength = 'maxLength',
  rows = 'rows',
  type = 'type'
}

export type FormBuilder_inputTextOrder = {
  asc?: InputMaybe<FormBuilder_inputTextOrderable>;
  desc?: InputMaybe<FormBuilder_inputTextOrderable>;
  then?: InputMaybe<FormBuilder_inputTextOrder>;
};

export enum FormBuilder_inputTextOrderable {
  correctAnswerValue = 'correctAnswerValue',
  maxLength = 'maxLength',
  rows = 'rows'
}

export type FormBuilder_inputTextPatch = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerValue?: InputMaybe<Scalars['String']>;
  maxLength?: InputMaybe<Scalars['Int']>;
  rows?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<FormBuilder_inputTextType>;
};

export type FormBuilder_inputTextRef = {
  correctAnswer?: InputMaybe<Scalars['Boolean']>;
  correctAnswerValue?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  maxLength?: InputMaybe<Scalars['Int']>;
  rows?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<FormBuilder_inputTextType>;
};

export enum FormBuilder_inputTextType {
  EDITOR = 'EDITOR',
  LINE = 'LINE',
  TEXTAREA = 'TEXTAREA'
}

export enum FormBuilder_inputType {
  BOOLEAN = 'BOOLEAN',
  MULTIPLE_CHOICE = 'MULTIPLE_CHOICE',
  NUMBER = 'NUMBER',
  TEXT = 'TEXT'
}

export type GeneralAccountingAccount = {
  __typename?: 'GeneralAccountingAccount';
  hasChildren: Scalars['Boolean'];
  id: Scalars['String'];
  name: Scalars['String'];
  number: Scalars['Int'];
  uuid: Scalars['ID'];
};

export type GeneralAccountingAccountAggregateResult = {
  __typename?: 'GeneralAccountingAccountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  idMax?: Maybe<Scalars['String']>;
  idMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  numberAvg?: Maybe<Scalars['Float']>;
  numberMax?: Maybe<Scalars['Int']>;
  numberMin?: Maybe<Scalars['Int']>;
  numberSum?: Maybe<Scalars['Int']>;
};

export type GeneralAccountingAccountFilter = {
  and?: InputMaybe<Array<InputMaybe<GeneralAccountingAccountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<GeneralAccountingAccountHasFilter>>>;
  hasChildren?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<StringHashFilter>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<GeneralAccountingAccountFilter>;
  number?: InputMaybe<IntFilter>;
  or?: InputMaybe<Array<InputMaybe<GeneralAccountingAccountFilter>>>;
  uuid?: InputMaybe<Array<Scalars['ID']>>;
};

export enum GeneralAccountingAccountHasFilter {
  hasChildren = 'hasChildren',
  id = 'id',
  name = 'name',
  number = 'number'
}

export type GeneralAccountingAccountOrder = {
  asc?: InputMaybe<GeneralAccountingAccountOrderable>;
  desc?: InputMaybe<GeneralAccountingAccountOrderable>;
  then?: InputMaybe<GeneralAccountingAccountOrder>;
};

export enum GeneralAccountingAccountOrderable {
  id = 'id',
  name = 'name',
  number = 'number'
}

export type GeneralAccountingAccountPatch = {
  hasChildren?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  number?: InputMaybe<Scalars['Int']>;
};

export type GeneralAccountingAccountRef = {
  hasChildren?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  number?: InputMaybe<Scalars['Int']>;
  uuid?: InputMaybe<Scalars['ID']>;
};

export type GenerateMutationParams = {
  add?: InputMaybe<Scalars['Boolean']>;
  delete?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<Scalars['Boolean']>;
};

export type GenerateQueryParams = {
  aggregate?: InputMaybe<Scalars['Boolean']>;
  get?: InputMaybe<Scalars['Boolean']>;
  password?: InputMaybe<Scalars['Boolean']>;
  query?: InputMaybe<Scalars['Boolean']>;
};

export enum HTTPMethod {
  DELETE = 'DELETE',
  GET = 'GET',
  PATCH = 'PATCH',
  POST = 'POST',
  PUT = 'PUT'
}

export type ImportProcess = {
  __typename?: 'ImportProcess';
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  elementOptions: Array<ImportProcess_elementOption>;
  elementType: ImportProcess_elementType;
  errors: Array<ImportProcess_itemError>;
  errorsAggregate?: Maybe<ImportProcess_itemErrorAggregateResult>;
  fields: Array<ImportProcess_elementField>;
  fieldsAggregate?: Maybe<ImportProcess_elementFieldAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  itemValues: Array<ImportProcess_itemValue>;
  itemValuesAggregate?: Maybe<ImportProcess_itemValueAggregateResult>;
  items: Array<ImportProcess_item>;
  itemsAggregate?: Maybe<ImportProcess_itemAggregateResult>;
  label: Scalars['String'];
  matches: Array<ImportProcess_match>;
  matchesAggregate?: Maybe<ImportProcess_matchAggregateResult>;
  org360: Org360;
  sourceValues: Array<ImportProcess_sourceValue>;
  sourceValuesAggregate?: Maybe<ImportProcess_sourceValueAggregateResult>;
  status: ImportProcess_status;
};


export type ImportProcesscreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ImportProcesserrorsArgs = {
  filter?: InputMaybe<ImportProcess_itemErrorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ImportProcesserrorsAggregateArgs = {
  filter?: InputMaybe<ImportProcess_itemErrorFilter>;
};


export type ImportProcessfieldsArgs = {
  filter?: InputMaybe<ImportProcess_elementFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ImportProcessfieldsAggregateArgs = {
  filter?: InputMaybe<ImportProcess_elementFieldFilter>;
};


export type ImportProcessitemValuesArgs = {
  filter?: InputMaybe<ImportProcess_itemValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemValueOrder>;
};


export type ImportProcessitemValuesAggregateArgs = {
  filter?: InputMaybe<ImportProcess_itemValueFilter>;
};


export type ImportProcessitemsArgs = {
  filter?: InputMaybe<ImportProcess_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemOrder>;
};


export type ImportProcessitemsAggregateArgs = {
  filter?: InputMaybe<ImportProcess_itemFilter>;
};


export type ImportProcessmatchesArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_matchOrder>;
};


export type ImportProcessmatchesAggregateArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
};


export type ImportProcessorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type ImportProcesssourceValuesArgs = {
  filter?: InputMaybe<ImportProcess_sourceValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_sourceValueOrder>;
};


export type ImportProcesssourceValuesAggregateArgs = {
  filter?: InputMaybe<ImportProcess_sourceValueFilter>;
};

export type ImportProcessAggregateResult = {
  __typename?: 'ImportProcessAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type ImportProcessFilter = {
  and?: InputMaybe<Array<InputMaybe<ImportProcessFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  elementOptions?: InputMaybe<ImportProcess_elementOption_hash>;
  elementType?: InputMaybe<ImportProcess_elementType_hash>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<ImportProcessHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ImportProcessFilter>;
  or?: InputMaybe<Array<InputMaybe<ImportProcessFilter>>>;
  status?: InputMaybe<ImportProcess_status_hash>;
};

export enum ImportProcessHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  elementOptions = 'elementOptions',
  elementType = 'elementType',
  errors = 'errors',
  fields = 'fields',
  guid = 'guid',
  itemValues = 'itemValues',
  items = 'items',
  label = 'label',
  matches = 'matches',
  org360 = 'org360',
  sourceValues = 'sourceValues',
  status = 'status'
}

export type ImportProcessOrder = {
  asc?: InputMaybe<ImportProcessOrderable>;
  desc?: InputMaybe<ImportProcessOrderable>;
  then?: InputMaybe<ImportProcessOrder>;
};

export enum ImportProcessOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  label = 'label'
}

export type ImportProcessPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  elementOptions?: InputMaybe<Array<ImportProcess_elementOption>>;
  elementType?: InputMaybe<ImportProcess_elementType>;
  errors?: InputMaybe<Array<ImportProcess_itemErrorRef>>;
  fields?: InputMaybe<Array<ImportProcess_elementFieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  itemValues?: InputMaybe<Array<ImportProcess_itemValueRef>>;
  items?: InputMaybe<Array<ImportProcess_itemRef>>;
  label?: InputMaybe<Scalars['String']>;
  matches?: InputMaybe<Array<ImportProcess_matchRef>>;
  org360?: InputMaybe<Org360Ref>;
  sourceValues?: InputMaybe<Array<ImportProcess_sourceValueRef>>;
  status?: InputMaybe<ImportProcess_status>;
};

export type ImportProcessRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  elementOptions?: InputMaybe<Array<ImportProcess_elementOption>>;
  elementType?: InputMaybe<ImportProcess_elementType>;
  errors?: InputMaybe<Array<ImportProcess_itemErrorRef>>;
  fields?: InputMaybe<Array<ImportProcess_elementFieldRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  itemValues?: InputMaybe<Array<ImportProcess_itemValueRef>>;
  items?: InputMaybe<Array<ImportProcess_itemRef>>;
  label?: InputMaybe<Scalars['String']>;
  matches?: InputMaybe<Array<ImportProcess_matchRef>>;
  org360?: InputMaybe<Org360Ref>;
  sourceValues?: InputMaybe<Array<ImportProcess_sourceValueRef>>;
  status?: InputMaybe<ImportProcess_status>;
};

export type ImportProcess_elementField = {
  __typename?: 'ImportProcess_elementField';
  id: Scalars['ID'];
  import: ImportProcess;
  matches: Array<ImportProcess_match>;
  matchesAggregate?: Maybe<ImportProcess_matchAggregateResult>;
  type: ImportProcess_elementFieldType;
};


export type ImportProcess_elementFieldimportArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
};


export type ImportProcess_elementFieldmatchesArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_matchOrder>;
};


export type ImportProcess_elementFieldmatchesAggregateArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
};

export type ImportProcess_elementFieldAggregateResult = {
  __typename?: 'ImportProcess_elementFieldAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type ImportProcess_elementFieldFilter = {
  and?: InputMaybe<Array<InputMaybe<ImportProcess_elementFieldFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ImportProcess_elementFieldHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ImportProcess_elementFieldFilter>;
  or?: InputMaybe<Array<InputMaybe<ImportProcess_elementFieldFilter>>>;
  type?: InputMaybe<ImportProcess_elementFieldType_hash>;
};

export enum ImportProcess_elementFieldHasFilter {
  import = 'import',
  matches = 'matches',
  type = 'type'
}

export type ImportProcess_elementFieldPatch = {
  import?: InputMaybe<ImportProcessRef>;
  matches?: InputMaybe<Array<ImportProcess_matchRef>>;
  type?: InputMaybe<ImportProcess_elementFieldType>;
};

export type ImportProcess_elementFieldRef = {
  id?: InputMaybe<Scalars['ID']>;
  import?: InputMaybe<ImportProcessRef>;
  matches?: InputMaybe<Array<ImportProcess_matchRef>>;
  type?: InputMaybe<ImportProcess_elementFieldType>;
};

export enum ImportProcess_elementFieldType {
  CONTACT_ADDRESS = 'CONTACT_ADDRESS',
  CONTACT_ADDRESS_ADDRESS_1 = 'CONTACT_ADDRESS_ADDRESS_1',
  CONTACT_ADDRESS_ADDRESS_2 = 'CONTACT_ADDRESS_ADDRESS_2',
  CONTACT_ADDRESS_COUNTRY = 'CONTACT_ADDRESS_COUNTRY',
  CONTACT_ADDRESS_LOCALITY = 'CONTACT_ADDRESS_LOCALITY',
  CONTACT_ADDRESS_NUMBER = 'CONTACT_ADDRESS_NUMBER',
  CONTACT_ADDRESS_POSTAL_CODE = 'CONTACT_ADDRESS_POSTAL_CODE',
  CONTACT_ADDRESS_PROVINCE = 'CONTACT_ADDRESS_PROVINCE',
  CONTACT_ADDRESS_ROAD_TYPE = 'CONTACT_ADDRESS_ROAD_TYPE',
  CONTACT_ADDRESS_TYPE = 'CONTACT_ADDRESS_TYPE',
  CONTACT_AREA = 'CONTACT_AREA',
  CONTACT_BILLING_BANK_ADDRESS = 'CONTACT_BILLING_BANK_ADDRESS',
  CONTACT_BILLING_BANK_HOLDER = 'CONTACT_BILLING_BANK_HOLDER',
  CONTACT_BILLING_BANK_IBAN = 'CONTACT_BILLING_BANK_IBAN',
  CONTACT_BILLING_BANK_NAME = 'CONTACT_BILLING_BANK_NAME',
  CONTACT_BILLING_TAX_ID = 'CONTACT_BILLING_TAX_ID',
  CONTACT_BUSINESS_SECTOR = 'CONTACT_BUSINESS_SECTOR',
  CONTACT_BUSINESS_YEARS_OF_EXPERIENCE = 'CONTACT_BUSINESS_YEARS_OF_EXPERIENCE',
  CONTACT_COMERCIAL_NAME = 'CONTACT_COMERCIAL_NAME',
  CONTACT_EMAIL_MAIN = 'CONTACT_EMAIL_MAIN',
  CONTACT_EMAIL_WORK = 'CONTACT_EMAIL_WORK',
  CONTACT_GUID = 'CONTACT_GUID',
  CONTACT_IDENTITY_NUMBER = 'CONTACT_IDENTITY_NUMBER',
  CONTACT_IS_UNSUBSCRIBED = 'CONTACT_IS_UNSUBSCRIBED',
  CONTACT_JOB_POSITION = 'CONTACT_JOB_POSITION',
  CONTACT_JOB_POSITION_DEPARTMENT = 'CONTACT_JOB_POSITION_DEPARTMENT',
  CONTACT_JOB_POSITION_NAME = 'CONTACT_JOB_POSITION_NAME',
  CONTACT_JOB_POSITION_ROLE = 'CONTACT_JOB_POSITION_ROLE',
  CONTACT_LINKEDIN = 'CONTACT_LINKEDIN',
  CONTACT_NAME = 'CONTACT_NAME',
  CONTACT_ORGANIZATION = 'CONTACT_ORGANIZATION',
  CONTACT_PHONE_MAIN = 'CONTACT_PHONE_MAIN',
  CONTACT_PHONE_WORK = 'CONTACT_PHONE_WORK',
  CONTACT_SOURCE = 'CONTACT_SOURCE',
  CONTACT_SURNAME = 'CONTACT_SURNAME',
  CONTACT_WEBSITE = 'CONTACT_WEBSITE',
  USER_EMAIL = 'USER_EMAIL',
  USER_USERNAME = 'USER_USERNAME'
}

export type ImportProcess_elementFieldType_hash = {
  eq?: InputMaybe<ImportProcess_elementFieldType>;
  in?: InputMaybe<Array<InputMaybe<ImportProcess_elementFieldType>>>;
};

export enum ImportProcess_elementOption {
  CONTACT_BLANK = 'CONTACT_BLANK',
  CONTACT_CUSTOMER = 'CONTACT_CUSTOMER',
  CONTACT_ORGANIZATION = 'CONTACT_ORGANIZATION',
  CONTACT_PERSON = 'CONTACT_PERSON',
  CONTACT_PROVIDER = 'CONTACT_PROVIDER',
  CONTACT_PROVIDER_TEACHER = 'CONTACT_PROVIDER_TEACHER',
  CONTACT_TEACHER = 'CONTACT_TEACHER'
}

export type ImportProcess_elementOption_hash = {
  eq?: InputMaybe<ImportProcess_elementOption>;
  in?: InputMaybe<Array<InputMaybe<ImportProcess_elementOption>>>;
};

export enum ImportProcess_elementType {
  CONTACT = 'CONTACT',
  USER = 'USER'
}

export type ImportProcess_elementType_hash = {
  eq?: InputMaybe<ImportProcess_elementType>;
  in?: InputMaybe<Array<InputMaybe<ImportProcess_elementType>>>;
};

export type ImportProcess_item = {
  __typename?: 'ImportProcess_item';
  approvedBy?: Maybe<Account>;
  approvedDate?: Maybe<Scalars['DateTime']>;
  errors: Array<ImportProcess_itemError>;
  errorsAggregate?: Maybe<ImportProcess_itemErrorAggregateResult>;
  exactContact?: Maybe<Contact>;
  id: Scalars['ID'];
  import: ImportProcess;
  mergeBy?: Maybe<Account>;
  mergeDate?: Maybe<Scalars['DateTime']>;
  raw?: Maybe<Scalars['String']>;
  status: ImportProcess_item_status;
  values: Array<ImportProcess_itemValue>;
  valuesAggregate?: Maybe<ImportProcess_itemValueAggregateResult>;
};


export type ImportProcess_itemapprovedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ImportProcess_itemerrorsArgs = {
  filter?: InputMaybe<ImportProcess_itemErrorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ImportProcess_itemerrorsAggregateArgs = {
  filter?: InputMaybe<ImportProcess_itemErrorFilter>;
};


export type ImportProcess_itemexactContactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type ImportProcess_itemimportArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
};


export type ImportProcess_itemmergeByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ImportProcess_itemvaluesArgs = {
  filter?: InputMaybe<ImportProcess_itemValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemValueOrder>;
};


export type ImportProcess_itemvaluesAggregateArgs = {
  filter?: InputMaybe<ImportProcess_itemValueFilter>;
};

export type ImportProcess_itemAggregateResult = {
  __typename?: 'ImportProcess_itemAggregateResult';
  approvedDateMax?: Maybe<Scalars['DateTime']>;
  approvedDateMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  mergeDateMax?: Maybe<Scalars['DateTime']>;
  mergeDateMin?: Maybe<Scalars['DateTime']>;
  rawMax?: Maybe<Scalars['String']>;
  rawMin?: Maybe<Scalars['String']>;
};

export type ImportProcess_itemError = {
  __typename?: 'ImportProcess_itemError';
  conflictContact?: Maybe<Contact>;
  fieldType: ImportProcess_elementFieldType;
  id: Scalars['ID'];
  import: ImportProcess;
  item: ImportProcess_item;
  level: ImportProcess_itemErrorLevel;
  type: ImportProcess_itemErrorType;
};


export type ImportProcess_itemErrorconflictContactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type ImportProcess_itemErrorimportArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
};


export type ImportProcess_itemErroritemArgs = {
  filter?: InputMaybe<ImportProcess_itemFilter>;
};

export type ImportProcess_itemErrorAggregateResult = {
  __typename?: 'ImportProcess_itemErrorAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type ImportProcess_itemErrorFilter = {
  and?: InputMaybe<Array<InputMaybe<ImportProcess_itemErrorFilter>>>;
  fieldType?: InputMaybe<ImportProcess_elementFieldType_hash>;
  has?: InputMaybe<Array<InputMaybe<ImportProcess_itemErrorHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  level?: InputMaybe<ImportProcess_itemErrorLevel_hash>;
  not?: InputMaybe<ImportProcess_itemErrorFilter>;
  or?: InputMaybe<Array<InputMaybe<ImportProcess_itemErrorFilter>>>;
  type?: InputMaybe<ImportProcess_itemErrorType_hash>;
};

export enum ImportProcess_itemErrorHasFilter {
  conflictContact = 'conflictContact',
  fieldType = 'fieldType',
  import = 'import',
  item = 'item',
  level = 'level',
  type = 'type'
}

export enum ImportProcess_itemErrorLevel {
  ERROR = 'ERROR',
  WARNING = 'WARNING'
}

export type ImportProcess_itemErrorLevel_hash = {
  eq?: InputMaybe<ImportProcess_itemErrorLevel>;
  in?: InputMaybe<Array<InputMaybe<ImportProcess_itemErrorLevel>>>;
};

export type ImportProcess_itemErrorPatch = {
  conflictContact?: InputMaybe<ContactRef>;
  fieldType?: InputMaybe<ImportProcess_elementFieldType>;
  import?: InputMaybe<ImportProcessRef>;
  item?: InputMaybe<ImportProcess_itemRef>;
  level?: InputMaybe<ImportProcess_itemErrorLevel>;
  type?: InputMaybe<ImportProcess_itemErrorType>;
};

export type ImportProcess_itemErrorRef = {
  conflictContact?: InputMaybe<ContactRef>;
  fieldType?: InputMaybe<ImportProcess_elementFieldType>;
  id?: InputMaybe<Scalars['ID']>;
  import?: InputMaybe<ImportProcessRef>;
  item?: InputMaybe<ImportProcess_itemRef>;
  level?: InputMaybe<ImportProcess_itemErrorLevel>;
  type?: InputMaybe<ImportProcess_itemErrorType>;
};

export enum ImportProcess_itemErrorType {
  ALREADY_EXISTS = 'ALREADY_EXISTS',
  INVALID_VALUE = 'INVALID_VALUE',
  MISSING_VALUE = 'MISSING_VALUE',
  REPEATED_VALUE = 'REPEATED_VALUE'
}

export type ImportProcess_itemErrorType_hash = {
  eq?: InputMaybe<ImportProcess_itemErrorType>;
  in?: InputMaybe<Array<InputMaybe<ImportProcess_itemErrorType>>>;
};

export type ImportProcess_itemFilter = {
  and?: InputMaybe<Array<InputMaybe<ImportProcess_itemFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ImportProcess_itemHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ImportProcess_itemFilter>;
  or?: InputMaybe<Array<InputMaybe<ImportProcess_itemFilter>>>;
  status?: InputMaybe<ImportProcess_item_status_hash>;
};

export enum ImportProcess_itemHasFilter {
  approvedBy = 'approvedBy',
  approvedDate = 'approvedDate',
  errors = 'errors',
  exactContact = 'exactContact',
  import = 'import',
  mergeBy = 'mergeBy',
  mergeDate = 'mergeDate',
  raw = 'raw',
  status = 'status',
  values = 'values'
}

export type ImportProcess_itemOrder = {
  asc?: InputMaybe<ImportProcess_itemOrderable>;
  desc?: InputMaybe<ImportProcess_itemOrderable>;
  then?: InputMaybe<ImportProcess_itemOrder>;
};

export enum ImportProcess_itemOrderable {
  approvedDate = 'approvedDate',
  mergeDate = 'mergeDate',
  raw = 'raw'
}

export type ImportProcess_itemPatch = {
  approvedBy?: InputMaybe<AccountRef>;
  approvedDate?: InputMaybe<Scalars['DateTime']>;
  errors?: InputMaybe<Array<ImportProcess_itemErrorRef>>;
  exactContact?: InputMaybe<ContactRef>;
  import?: InputMaybe<ImportProcessRef>;
  mergeBy?: InputMaybe<AccountRef>;
  mergeDate?: InputMaybe<Scalars['DateTime']>;
  raw?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<ImportProcess_item_status>;
  values?: InputMaybe<Array<ImportProcess_itemValueRef>>;
};

export type ImportProcess_itemRef = {
  approvedBy?: InputMaybe<AccountRef>;
  approvedDate?: InputMaybe<Scalars['DateTime']>;
  errors?: InputMaybe<Array<ImportProcess_itemErrorRef>>;
  exactContact?: InputMaybe<ContactRef>;
  id?: InputMaybe<Scalars['ID']>;
  import?: InputMaybe<ImportProcessRef>;
  mergeBy?: InputMaybe<AccountRef>;
  mergeDate?: InputMaybe<Scalars['DateTime']>;
  raw?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<ImportProcess_item_status>;
  values?: InputMaybe<Array<ImportProcess_itemValueRef>>;
};

export type ImportProcess_itemValue = {
  __typename?: 'ImportProcess_itemValue';
  fieldType: ImportProcess_elementFieldType;
  id: Scalars['ID'];
  import: ImportProcess;
  item: ImportProcess_item;
  value: Scalars['String'];
};


export type ImportProcess_itemValueimportArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
};


export type ImportProcess_itemValueitemArgs = {
  filter?: InputMaybe<ImportProcess_itemFilter>;
};

export type ImportProcess_itemValueAggregateResult = {
  __typename?: 'ImportProcess_itemValueAggregateResult';
  count?: Maybe<Scalars['Int']>;
  valueMax?: Maybe<Scalars['String']>;
  valueMin?: Maybe<Scalars['String']>;
};

export type ImportProcess_itemValueFilter = {
  and?: InputMaybe<Array<InputMaybe<ImportProcess_itemValueFilter>>>;
  fieldType?: InputMaybe<ImportProcess_elementFieldType_hash>;
  has?: InputMaybe<Array<InputMaybe<ImportProcess_itemValueHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ImportProcess_itemValueFilter>;
  or?: InputMaybe<Array<InputMaybe<ImportProcess_itemValueFilter>>>;
  value?: InputMaybe<StringTermFilter>;
};

export enum ImportProcess_itemValueHasFilter {
  fieldType = 'fieldType',
  import = 'import',
  item = 'item',
  value = 'value'
}

export type ImportProcess_itemValueOrder = {
  asc?: InputMaybe<ImportProcess_itemValueOrderable>;
  desc?: InputMaybe<ImportProcess_itemValueOrderable>;
  then?: InputMaybe<ImportProcess_itemValueOrder>;
};

export enum ImportProcess_itemValueOrderable {
  value = 'value'
}

export type ImportProcess_itemValuePatch = {
  fieldType?: InputMaybe<ImportProcess_elementFieldType>;
  import?: InputMaybe<ImportProcessRef>;
  item?: InputMaybe<ImportProcess_itemRef>;
  value?: InputMaybe<Scalars['String']>;
};

export type ImportProcess_itemValueRef = {
  fieldType?: InputMaybe<ImportProcess_elementFieldType>;
  id?: InputMaybe<Scalars['ID']>;
  import?: InputMaybe<ImportProcessRef>;
  item?: InputMaybe<ImportProcess_itemRef>;
  value?: InputMaybe<Scalars['String']>;
};

export enum ImportProcess_item_status {
  COMPLETED = 'COMPLETED',
  DISCARDED = 'DISCARDED',
  FAILED = 'FAILED',
  MERGED = 'MERGED',
  NEED_REVIEW = 'NEED_REVIEW',
  READY_TO_IMPORT = 'READY_TO_IMPORT',
  READY_TO_MERGE = 'READY_TO_MERGE'
}

export type ImportProcess_item_status_hash = {
  eq?: InputMaybe<ImportProcess_item_status>;
  in?: InputMaybe<Array<InputMaybe<ImportProcess_item_status>>>;
};

export type ImportProcess_match = {
  __typename?: 'ImportProcess_match';
  field: ImportProcess_elementField;
  guid: Scalars['String'];
  id: Scalars['ID'];
  import: ImportProcess;
  index: Scalars['Int'];
  sourceValue: ImportProcess_sourceValue;
};


export type ImportProcess_matchfieldArgs = {
  filter?: InputMaybe<ImportProcess_elementFieldFilter>;
};


export type ImportProcess_matchimportArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
};


export type ImportProcess_matchsourceValueArgs = {
  filter?: InputMaybe<ImportProcess_sourceValueFilter>;
};

export type ImportProcess_matchAggregateResult = {
  __typename?: 'ImportProcess_matchAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
};

export type ImportProcess_matchFilter = {
  and?: InputMaybe<Array<InputMaybe<ImportProcess_matchFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<ImportProcess_matchHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  not?: InputMaybe<ImportProcess_matchFilter>;
  or?: InputMaybe<Array<InputMaybe<ImportProcess_matchFilter>>>;
};

export enum ImportProcess_matchHasFilter {
  field = 'field',
  guid = 'guid',
  import = 'import',
  index = 'index',
  sourceValue = 'sourceValue'
}

export type ImportProcess_matchOrder = {
  asc?: InputMaybe<ImportProcess_matchOrderable>;
  desc?: InputMaybe<ImportProcess_matchOrderable>;
  then?: InputMaybe<ImportProcess_matchOrder>;
};

export enum ImportProcess_matchOrderable {
  guid = 'guid',
  index = 'index'
}

export type ImportProcess_matchPatch = {
  field?: InputMaybe<ImportProcess_elementFieldRef>;
  guid?: InputMaybe<Scalars['String']>;
  import?: InputMaybe<ImportProcessRef>;
  index?: InputMaybe<Scalars['Int']>;
  sourceValue?: InputMaybe<ImportProcess_sourceValueRef>;
};

export type ImportProcess_matchRef = {
  field?: InputMaybe<ImportProcess_elementFieldRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  import?: InputMaybe<ImportProcessRef>;
  index?: InputMaybe<Scalars['Int']>;
  sourceValue?: InputMaybe<ImportProcess_sourceValueRef>;
};

export type ImportProcess_sourceValue = {
  __typename?: 'ImportProcess_sourceValue';
  id: Scalars['ID'];
  import: ImportProcess;
  matches: Array<ImportProcess_match>;
  matchesAggregate?: Maybe<ImportProcess_matchAggregateResult>;
  value: Scalars['String'];
};


export type ImportProcess_sourceValueimportArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
};


export type ImportProcess_sourceValuematchesArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_matchOrder>;
};


export type ImportProcess_sourceValuematchesAggregateArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
};

export type ImportProcess_sourceValueAggregateResult = {
  __typename?: 'ImportProcess_sourceValueAggregateResult';
  count?: Maybe<Scalars['Int']>;
  valueMax?: Maybe<Scalars['String']>;
  valueMin?: Maybe<Scalars['String']>;
};

export type ImportProcess_sourceValueFilter = {
  and?: InputMaybe<Array<InputMaybe<ImportProcess_sourceValueFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ImportProcess_sourceValueHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ImportProcess_sourceValueFilter>;
  or?: InputMaybe<Array<InputMaybe<ImportProcess_sourceValueFilter>>>;
  value?: InputMaybe<StringTermFilter>;
};

export enum ImportProcess_sourceValueHasFilter {
  import = 'import',
  matches = 'matches',
  value = 'value'
}

export type ImportProcess_sourceValueOrder = {
  asc?: InputMaybe<ImportProcess_sourceValueOrderable>;
  desc?: InputMaybe<ImportProcess_sourceValueOrderable>;
  then?: InputMaybe<ImportProcess_sourceValueOrder>;
};

export enum ImportProcess_sourceValueOrderable {
  value = 'value'
}

export type ImportProcess_sourceValuePatch = {
  import?: InputMaybe<ImportProcessRef>;
  matches?: InputMaybe<Array<ImportProcess_matchRef>>;
  value?: InputMaybe<Scalars['String']>;
};

export type ImportProcess_sourceValueRef = {
  id?: InputMaybe<Scalars['ID']>;
  import?: InputMaybe<ImportProcessRef>;
  matches?: InputMaybe<Array<ImportProcess_matchRef>>;
  value?: InputMaybe<Scalars['String']>;
};

export enum ImportProcess_status {
  COMPLETED = 'COMPLETED',
  CONFIGURING = 'CONFIGURING',
  MATCHING = 'MATCHING',
  PENDING = 'PENDING',
  SCANING = 'SCANING'
}

export type ImportProcess_status_hash = {
  eq?: InputMaybe<ImportProcess_status>;
  in?: InputMaybe<Array<InputMaybe<ImportProcess_status>>>;
};

export type Inbox = {
  __typename?: 'Inbox';
  guid: Scalars['String'];
  id: Scalars['ID'];
  items: Array<Inbox_item>;
  itemsAggregate?: Maybe<Inbox_itemAggregateResult>;
  user: User;
};


export type InboxitemsArgs = {
  filter?: InputMaybe<Inbox_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Inbox_itemOrder>;
};


export type InboxitemsAggregateArgs = {
  filter?: InputMaybe<Inbox_itemFilter>;
};


export type InboxuserArgs = {
  filter?: InputMaybe<UserFilter>;
};

export type InboxAggregateResult = {
  __typename?: 'InboxAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type InboxFilter = {
  and?: InputMaybe<Array<InputMaybe<InboxFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<InboxHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<InboxFilter>;
  or?: InputMaybe<Array<InputMaybe<InboxFilter>>>;
};

export enum InboxHasFilter {
  guid = 'guid',
  items = 'items',
  user = 'user'
}

export type InboxOrder = {
  asc?: InputMaybe<InboxOrderable>;
  desc?: InputMaybe<InboxOrderable>;
  then?: InputMaybe<InboxOrder>;
};

export enum InboxOrderable {
  guid = 'guid'
}

export type InboxPatch = {
  guid?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<Inbox_itemRef>>;
  user?: InputMaybe<UserRef>;
};

export type InboxRef = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  items?: InputMaybe<Array<Inbox_itemRef>>;
  user?: InputMaybe<UserRef>;
};

export type Inbox_item = {
  __typename?: 'Inbox_item';
  createdAt: Scalars['DateTime'];
  email?: Maybe<Email>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  inbox: Inbox;
  status: Inbox_itemStatus;
  type: Inbox_itemType;
};


export type Inbox_itememailArgs = {
  filter?: InputMaybe<EmailFilter>;
};


export type Inbox_iteminboxArgs = {
  filter?: InputMaybe<InboxFilter>;
};

export type Inbox_itemAggregateResult = {
  __typename?: 'Inbox_itemAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Inbox_itemFilter = {
  and?: InputMaybe<Array<InputMaybe<Inbox_itemFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Inbox_itemHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Inbox_itemFilter>;
  or?: InputMaybe<Array<InputMaybe<Inbox_itemFilter>>>;
  status?: InputMaybe<Inbox_itemStatus_exact>;
  type?: InputMaybe<Inbox_itemType_exact>;
};

export enum Inbox_itemHasFilter {
  createdAt = 'createdAt',
  email = 'email',
  guid = 'guid',
  inbox = 'inbox',
  status = 'status',
  type = 'type'
}

export type Inbox_itemOrder = {
  asc?: InputMaybe<Inbox_itemOrderable>;
  desc?: InputMaybe<Inbox_itemOrderable>;
  then?: InputMaybe<Inbox_itemOrder>;
};

export enum Inbox_itemOrderable {
  createdAt = 'createdAt',
  guid = 'guid'
}

export type Inbox_itemPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<EmailRef>;
  guid?: InputMaybe<Scalars['String']>;
  inbox?: InputMaybe<InboxRef>;
  status?: InputMaybe<Inbox_itemStatus>;
  type?: InputMaybe<Inbox_itemType>;
};

export type Inbox_itemRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<EmailRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  inbox?: InputMaybe<InboxRef>;
  status?: InputMaybe<Inbox_itemStatus>;
  type?: InputMaybe<Inbox_itemType>;
};

export enum Inbox_itemStatus {
  DELETED = 'DELETED',
  ENDED = 'ENDED',
  ERROR = 'ERROR',
  NOT_ANSER = 'NOT_ANSER',
  ON_GOING = 'ON_GOING',
  READ = 'READ',
  SENDING = 'SENDING',
  SENT = 'SENT'
}

export type Inbox_itemStatus_exact = {
  between?: InputMaybe<Inbox_itemStatus>;
  eq?: InputMaybe<Inbox_itemStatus>;
  ge?: InputMaybe<Inbox_itemStatus>;
  gt?: InputMaybe<Inbox_itemStatus>;
  in?: InputMaybe<Array<InputMaybe<Inbox_itemStatus>>>;
  le?: InputMaybe<Inbox_itemStatus>;
  lt?: InputMaybe<Inbox_itemStatus>;
};

export enum Inbox_itemType {
  APP_CHAT = 'APP_CHAT',
  EMAIL = 'EMAIL',
  SMS = 'SMS',
  VIDEO_CALL = 'VIDEO_CALL',
  VOICE_CALL = 'VOICE_CALL',
  WHATSAPP = 'WHATSAPP'
}

export type Inbox_itemType_exact = {
  between?: InputMaybe<Inbox_itemType>;
  eq?: InputMaybe<Inbox_itemType>;
  ge?: InputMaybe<Inbox_itemType>;
  gt?: InputMaybe<Inbox_itemType>;
  in?: InputMaybe<Array<InputMaybe<Inbox_itemType>>>;
  le?: InputMaybe<Inbox_itemType>;
  lt?: InputMaybe<Inbox_itemType>;
};

export type Int64Filter = {
  between?: InputMaybe<Int64Range>;
  eq?: InputMaybe<Scalars['Int64']>;
  ge?: InputMaybe<Scalars['Int64']>;
  gt?: InputMaybe<Scalars['Int64']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int64']>>>;
  le?: InputMaybe<Scalars['Int64']>;
  lt?: InputMaybe<Scalars['Int64']>;
};

export type Int64Range = {
  max: Scalars['Int64'];
  min: Scalars['Int64'];
};

export type IntFilter = {
  between?: InputMaybe<IntRange>;
  eq?: InputMaybe<Scalars['Int']>;
  ge?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  le?: InputMaybe<Scalars['Int']>;
  lt?: InputMaybe<Scalars['Int']>;
};

export type IntRange = {
  max: Scalars['Int'];
  min: Scalars['Int'];
};

export type Integrations = {
  __typename?: 'Integrations';
  accounts?: Maybe<Array<Integrations_account>>;
  accountsAggregate?: Maybe<Integrations_accountAggregateResult>;
  id: Scalars['ID'];
  org360: Org360;
};


export type IntegrationsaccountsArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_accountOrder>;
};


export type IntegrationsaccountsAggregateArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type Integrationsorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type IntegrationsAggregateResult = {
  __typename?: 'IntegrationsAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type IntegrationsFilter = {
  and?: InputMaybe<Array<InputMaybe<IntegrationsFilter>>>;
  has?: InputMaybe<Array<InputMaybe<IntegrationsHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<IntegrationsFilter>;
  or?: InputMaybe<Array<InputMaybe<IntegrationsFilter>>>;
};

export enum IntegrationsHasFilter {
  accounts = 'accounts',
  org360 = 'org360'
}

export type IntegrationsPatch = {
  accounts?: InputMaybe<Array<Integrations_accountRef>>;
  org360?: InputMaybe<Org360Ref>;
};

export type IntegrationsRef = {
  accounts?: InputMaybe<Array<Integrations_accountRef>>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
};

export type Integrations_Digilab_Provider = {
  __typename?: 'Integrations_Digilab_Provider';
  createdAt: Scalars['DateTime'];
  digilabId: Scalars['String'];
  id: Scalars['ID'];
  integrationsAccount: Integrations_account;
  name?: Maybe<Scalars['String']>;
  org360: Org360;
};


export type Integrations_Digilab_ProviderintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type Integrations_Digilab_Providerorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type Integrations_Digilab_ProviderAggregateResult = {
  __typename?: 'Integrations_Digilab_ProviderAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  digilabIdMax?: Maybe<Scalars['String']>;
  digilabIdMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Integrations_Digilab_ProviderFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_Digilab_ProviderFilter>>>;
  digilabId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<Integrations_Digilab_ProviderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Integrations_Digilab_ProviderFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_Digilab_ProviderFilter>>>;
};

export enum Integrations_Digilab_ProviderHasFilter {
  createdAt = 'createdAt',
  digilabId = 'digilabId',
  integrationsAccount = 'integrationsAccount',
  name = 'name',
  org360 = 'org360'
}

export type Integrations_Digilab_ProviderOrder = {
  asc?: InputMaybe<Integrations_Digilab_ProviderOrderable>;
  desc?: InputMaybe<Integrations_Digilab_ProviderOrderable>;
  then?: InputMaybe<Integrations_Digilab_ProviderOrder>;
};

export enum Integrations_Digilab_ProviderOrderable {
  createdAt = 'createdAt',
  digilabId = 'digilabId',
  name = 'name'
}

export type Integrations_Digilab_ProviderPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  digilabId?: InputMaybe<Scalars['String']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
};

export type Integrations_Digilab_ProviderRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  digilabId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
};

export type Integrations_Google_Analytics_Provider = {
  __typename?: 'Integrations_Google_Analytics_Provider';
  accessToken?: Maybe<Scalars['String']>;
  clientSecret?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  experireAt?: Maybe<Scalars['DateTime']>;
  expireAt?: Maybe<Scalars['DateTime']>;
  expiresIn?: Maybe<Scalars['Int']>;
  extExpiresIn?: Maybe<Scalars['Int']>;
  googleAnalyticsId: Scalars['String'];
  id: Scalars['ID'];
  integrationsAccount: Integrations_account;
  name?: Maybe<Scalars['String']>;
  org360: Org360;
  propertyId?: Maybe<Scalars['String']>;
  refreshToken?: Maybe<Scalars['String']>;
  scope?: Maybe<Array<Scalars['String']>>;
  tokenType?: Maybe<Scalars['String']>;
  viewId?: Maybe<Scalars['String']>;
};


export type Integrations_Google_Analytics_ProviderintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type Integrations_Google_Analytics_Providerorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type Integrations_Google_Analytics_ProviderAggregateResult = {
  __typename?: 'Integrations_Google_Analytics_ProviderAggregateResult';
  accessTokenMax?: Maybe<Scalars['String']>;
  accessTokenMin?: Maybe<Scalars['String']>;
  clientSecretMax?: Maybe<Scalars['String']>;
  clientSecretMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  experireAtMax?: Maybe<Scalars['DateTime']>;
  experireAtMin?: Maybe<Scalars['DateTime']>;
  expireAtMax?: Maybe<Scalars['DateTime']>;
  expireAtMin?: Maybe<Scalars['DateTime']>;
  expiresInAvg?: Maybe<Scalars['Float']>;
  expiresInMax?: Maybe<Scalars['Int']>;
  expiresInMin?: Maybe<Scalars['Int']>;
  expiresInSum?: Maybe<Scalars['Int']>;
  extExpiresInAvg?: Maybe<Scalars['Float']>;
  extExpiresInMax?: Maybe<Scalars['Int']>;
  extExpiresInMin?: Maybe<Scalars['Int']>;
  extExpiresInSum?: Maybe<Scalars['Int']>;
  googleAnalyticsIdMax?: Maybe<Scalars['String']>;
  googleAnalyticsIdMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  propertyIdMax?: Maybe<Scalars['String']>;
  propertyIdMin?: Maybe<Scalars['String']>;
  refreshTokenMax?: Maybe<Scalars['String']>;
  refreshTokenMin?: Maybe<Scalars['String']>;
  tokenTypeMax?: Maybe<Scalars['String']>;
  tokenTypeMin?: Maybe<Scalars['String']>;
  viewIdMax?: Maybe<Scalars['String']>;
  viewIdMin?: Maybe<Scalars['String']>;
};

export type Integrations_Google_Analytics_ProviderFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_Google_Analytics_ProviderFilter>>>;
  googleAnalyticsId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<Integrations_Google_Analytics_ProviderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Integrations_Google_Analytics_ProviderFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_Google_Analytics_ProviderFilter>>>;
};

export enum Integrations_Google_Analytics_ProviderHasFilter {
  accessToken = 'accessToken',
  clientSecret = 'clientSecret',
  createdAt = 'createdAt',
  experireAt = 'experireAt',
  expireAt = 'expireAt',
  expiresIn = 'expiresIn',
  extExpiresIn = 'extExpiresIn',
  googleAnalyticsId = 'googleAnalyticsId',
  integrationsAccount = 'integrationsAccount',
  name = 'name',
  org360 = 'org360',
  propertyId = 'propertyId',
  refreshToken = 'refreshToken',
  scope = 'scope',
  tokenType = 'tokenType',
  viewId = 'viewId'
}

export type Integrations_Google_Analytics_ProviderOrder = {
  asc?: InputMaybe<Integrations_Google_Analytics_ProviderOrderable>;
  desc?: InputMaybe<Integrations_Google_Analytics_ProviderOrderable>;
  then?: InputMaybe<Integrations_Google_Analytics_ProviderOrder>;
};

export enum Integrations_Google_Analytics_ProviderOrderable {
  accessToken = 'accessToken',
  clientSecret = 'clientSecret',
  createdAt = 'createdAt',
  experireAt = 'experireAt',
  expireAt = 'expireAt',
  expiresIn = 'expiresIn',
  extExpiresIn = 'extExpiresIn',
  googleAnalyticsId = 'googleAnalyticsId',
  name = 'name',
  propertyId = 'propertyId',
  refreshToken = 'refreshToken',
  tokenType = 'tokenType',
  viewId = 'viewId'
}

export type Integrations_Google_Analytics_ProviderPatch = {
  accessToken?: InputMaybe<Scalars['String']>;
  clientSecret?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  experireAt?: InputMaybe<Scalars['DateTime']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  googleAnalyticsId?: InputMaybe<Scalars['String']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  propertyId?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
  viewId?: InputMaybe<Scalars['String']>;
};

export type Integrations_Google_Analytics_ProviderRef = {
  accessToken?: InputMaybe<Scalars['String']>;
  clientSecret?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  experireAt?: InputMaybe<Scalars['DateTime']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  googleAnalyticsId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  propertyId?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
  viewId?: InputMaybe<Scalars['String']>;
};

export type Integrations_Google_Provider = {
  __typename?: 'Integrations_Google_Provider';
  accessToken?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  experireAt?: Maybe<Scalars['DateTime']>;
  expiresIn?: Maybe<Scalars['Int']>;
  extExpiresIn?: Maybe<Scalars['Int']>;
  googleId: Scalars['String'];
  id: Scalars['ID'];
  integrationsAccount: Integrations_account;
  name?: Maybe<Scalars['String']>;
  org360: Org360;
  refreshToken?: Maybe<Scalars['String']>;
  scope?: Maybe<Array<Scalars['String']>>;
  secret?: Maybe<Scalars['String']>;
  tokenType?: Maybe<Scalars['String']>;
};


export type Integrations_Google_ProviderintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type Integrations_Google_Providerorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type Integrations_Google_ProviderAggregateResult = {
  __typename?: 'Integrations_Google_ProviderAggregateResult';
  accessTokenMax?: Maybe<Scalars['String']>;
  accessTokenMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  experireAtMax?: Maybe<Scalars['DateTime']>;
  experireAtMin?: Maybe<Scalars['DateTime']>;
  expiresInAvg?: Maybe<Scalars['Float']>;
  expiresInMax?: Maybe<Scalars['Int']>;
  expiresInMin?: Maybe<Scalars['Int']>;
  expiresInSum?: Maybe<Scalars['Int']>;
  extExpiresInAvg?: Maybe<Scalars['Float']>;
  extExpiresInMax?: Maybe<Scalars['Int']>;
  extExpiresInMin?: Maybe<Scalars['Int']>;
  extExpiresInSum?: Maybe<Scalars['Int']>;
  googleIdMax?: Maybe<Scalars['String']>;
  googleIdMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  refreshTokenMax?: Maybe<Scalars['String']>;
  refreshTokenMin?: Maybe<Scalars['String']>;
  secretMax?: Maybe<Scalars['String']>;
  secretMin?: Maybe<Scalars['String']>;
  tokenTypeMax?: Maybe<Scalars['String']>;
  tokenTypeMin?: Maybe<Scalars['String']>;
};

export type Integrations_Google_ProviderFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_Google_ProviderFilter>>>;
  googleId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<Integrations_Google_ProviderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Integrations_Google_ProviderFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_Google_ProviderFilter>>>;
};

export enum Integrations_Google_ProviderHasFilter {
  accessToken = 'accessToken',
  createdAt = 'createdAt',
  experireAt = 'experireAt',
  expiresIn = 'expiresIn',
  extExpiresIn = 'extExpiresIn',
  googleId = 'googleId',
  integrationsAccount = 'integrationsAccount',
  name = 'name',
  org360 = 'org360',
  refreshToken = 'refreshToken',
  scope = 'scope',
  secret = 'secret',
  tokenType = 'tokenType'
}

export type Integrations_Google_ProviderOrder = {
  asc?: InputMaybe<Integrations_Google_ProviderOrderable>;
  desc?: InputMaybe<Integrations_Google_ProviderOrderable>;
  then?: InputMaybe<Integrations_Google_ProviderOrder>;
};

export enum Integrations_Google_ProviderOrderable {
  accessToken = 'accessToken',
  createdAt = 'createdAt',
  experireAt = 'experireAt',
  expiresIn = 'expiresIn',
  extExpiresIn = 'extExpiresIn',
  googleId = 'googleId',
  name = 'name',
  refreshToken = 'refreshToken',
  secret = 'secret',
  tokenType = 'tokenType'
}

export type Integrations_Google_ProviderPatch = {
  accessToken?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  experireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  googleId?: InputMaybe<Scalars['String']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  secret?: InputMaybe<Scalars['String']>;
  tokenType?: InputMaybe<Scalars['String']>;
};

export type Integrations_Google_ProviderRef = {
  accessToken?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  experireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  googleId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  secret?: InputMaybe<Scalars['String']>;
  tokenType?: InputMaybe<Scalars['String']>;
};

export type Integrations_Link_Mobility_Provider = {
  __typename?: 'Integrations_Link_Mobility_Provider';
  accessToken?: Maybe<Scalars['String']>;
  expireAt?: Maybe<Scalars['DateTime']>;
  expiresIn?: Maybe<Scalars['Int']>;
  id: Scalars['ID'];
  integrationsAccount: Integrations_account;
  linkMobilityId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  org360: Org360;
  phone?: Maybe<Scalars['String']>;
  prefix?: Maybe<Scalars['String']>;
};


export type Integrations_Link_Mobility_ProviderintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type Integrations_Link_Mobility_Providerorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type Integrations_Link_Mobility_ProviderAggregateResult = {
  __typename?: 'Integrations_Link_Mobility_ProviderAggregateResult';
  accessTokenMax?: Maybe<Scalars['String']>;
  accessTokenMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  expireAtMax?: Maybe<Scalars['DateTime']>;
  expireAtMin?: Maybe<Scalars['DateTime']>;
  expiresInAvg?: Maybe<Scalars['Float']>;
  expiresInMax?: Maybe<Scalars['Int']>;
  expiresInMin?: Maybe<Scalars['Int']>;
  expiresInSum?: Maybe<Scalars['Int']>;
  linkMobilityIdMax?: Maybe<Scalars['String']>;
  linkMobilityIdMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  phoneMax?: Maybe<Scalars['String']>;
  phoneMin?: Maybe<Scalars['String']>;
  prefixMax?: Maybe<Scalars['String']>;
  prefixMin?: Maybe<Scalars['String']>;
};

export type Integrations_Link_Mobility_ProviderFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_Link_Mobility_ProviderFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Integrations_Link_Mobility_ProviderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  linkMobilityId?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<Integrations_Link_Mobility_ProviderFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_Link_Mobility_ProviderFilter>>>;
  phone?: InputMaybe<StringHashFilter>;
  prefix?: InputMaybe<StringExactFilter>;
};

export enum Integrations_Link_Mobility_ProviderHasFilter {
  accessToken = 'accessToken',
  expireAt = 'expireAt',
  expiresIn = 'expiresIn',
  integrationsAccount = 'integrationsAccount',
  linkMobilityId = 'linkMobilityId',
  name = 'name',
  org360 = 'org360',
  phone = 'phone',
  prefix = 'prefix'
}

export type Integrations_Link_Mobility_ProviderOrder = {
  asc?: InputMaybe<Integrations_Link_Mobility_ProviderOrderable>;
  desc?: InputMaybe<Integrations_Link_Mobility_ProviderOrderable>;
  then?: InputMaybe<Integrations_Link_Mobility_ProviderOrder>;
};

export enum Integrations_Link_Mobility_ProviderOrderable {
  accessToken = 'accessToken',
  expireAt = 'expireAt',
  expiresIn = 'expiresIn',
  linkMobilityId = 'linkMobilityId',
  name = 'name',
  phone = 'phone',
  prefix = 'prefix'
}

export type Integrations_Link_Mobility_ProviderPatch = {
  accessToken?: InputMaybe<Scalars['String']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  linkMobilityId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  phone?: InputMaybe<Scalars['String']>;
  prefix?: InputMaybe<Scalars['String']>;
};

export type Integrations_Link_Mobility_ProviderRef = {
  accessToken?: InputMaybe<Scalars['String']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  linkMobilityId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  phone?: InputMaybe<Scalars['String']>;
  prefix?: InputMaybe<Scalars['String']>;
};

export type Integrations_LinkedIn_Provider = {
  __typename?: 'Integrations_LinkedIn_Provider';
  accessToken?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  expireAt?: Maybe<Scalars['DateTime']>;
  expiresIn?: Maybe<Scalars['Int']>;
  extExpiresIn?: Maybe<Scalars['Int']>;
  id: Scalars['ID'];
  integrationsAccount: Integrations_account;
  linkedInId: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  org360: Org360;
  profilePic?: Maybe<Scalars['String']>;
  refreshToken?: Maybe<Scalars['String']>;
  scope?: Maybe<Array<Scalars['String']>>;
  tokenType?: Maybe<Scalars['String']>;
};


export type Integrations_LinkedIn_ProviderintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type Integrations_LinkedIn_Providerorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type Integrations_LinkedIn_ProviderAggregateResult = {
  __typename?: 'Integrations_LinkedIn_ProviderAggregateResult';
  accessTokenMax?: Maybe<Scalars['String']>;
  accessTokenMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  expireAtMax?: Maybe<Scalars['DateTime']>;
  expireAtMin?: Maybe<Scalars['DateTime']>;
  expiresInAvg?: Maybe<Scalars['Float']>;
  expiresInMax?: Maybe<Scalars['Int']>;
  expiresInMin?: Maybe<Scalars['Int']>;
  expiresInSum?: Maybe<Scalars['Int']>;
  extExpiresInAvg?: Maybe<Scalars['Float']>;
  extExpiresInMax?: Maybe<Scalars['Int']>;
  extExpiresInMin?: Maybe<Scalars['Int']>;
  extExpiresInSum?: Maybe<Scalars['Int']>;
  linkedInIdMax?: Maybe<Scalars['String']>;
  linkedInIdMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  profilePicMax?: Maybe<Scalars['String']>;
  profilePicMin?: Maybe<Scalars['String']>;
  refreshTokenMax?: Maybe<Scalars['String']>;
  refreshTokenMin?: Maybe<Scalars['String']>;
  tokenTypeMax?: Maybe<Scalars['String']>;
  tokenTypeMin?: Maybe<Scalars['String']>;
};

export type Integrations_LinkedIn_ProviderFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_LinkedIn_ProviderFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Integrations_LinkedIn_ProviderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  linkedInId?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<Integrations_LinkedIn_ProviderFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_LinkedIn_ProviderFilter>>>;
};

export enum Integrations_LinkedIn_ProviderHasFilter {
  accessToken = 'accessToken',
  createdAt = 'createdAt',
  expireAt = 'expireAt',
  expiresIn = 'expiresIn',
  extExpiresIn = 'extExpiresIn',
  integrationsAccount = 'integrationsAccount',
  linkedInId = 'linkedInId',
  name = 'name',
  org360 = 'org360',
  profilePic = 'profilePic',
  refreshToken = 'refreshToken',
  scope = 'scope',
  tokenType = 'tokenType'
}

export type Integrations_LinkedIn_ProviderOrder = {
  asc?: InputMaybe<Integrations_LinkedIn_ProviderOrderable>;
  desc?: InputMaybe<Integrations_LinkedIn_ProviderOrderable>;
  then?: InputMaybe<Integrations_LinkedIn_ProviderOrder>;
};

export enum Integrations_LinkedIn_ProviderOrderable {
  accessToken = 'accessToken',
  createdAt = 'createdAt',
  expireAt = 'expireAt',
  expiresIn = 'expiresIn',
  extExpiresIn = 'extExpiresIn',
  linkedInId = 'linkedInId',
  name = 'name',
  profilePic = 'profilePic',
  refreshToken = 'refreshToken',
  tokenType = 'tokenType'
}

export type Integrations_LinkedIn_ProviderPatch = {
  accessToken?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  linkedInId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  profilePic?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
};

export type Integrations_LinkedIn_ProviderRef = {
  accessToken?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  linkedInId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  profilePic?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
};

export type Integrations_MSFT_Meeting = {
  __typename?: 'Integrations_MSFT_Meeting';
  createdBy: Integrations_account;
  id: Scalars['String'];
  msftProvider: Integrations_MSFT_Provider;
  url: Scalars['String'];
};


export type Integrations_MSFT_MeetingcreatedByArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type Integrations_MSFT_MeetingmsftProviderArgs = {
  filter?: InputMaybe<Integrations_MSFT_ProviderFilter>;
};

export type Integrations_MSFT_MeetingAggregateResult = {
  __typename?: 'Integrations_MSFT_MeetingAggregateResult';
  count?: Maybe<Scalars['Int']>;
  idMax?: Maybe<Scalars['String']>;
  idMin?: Maybe<Scalars['String']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
};

export type Integrations_MSFT_MeetingFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_MSFT_MeetingFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Integrations_MSFT_MeetingHasFilter>>>;
  id?: InputMaybe<StringHashFilter>;
  not?: InputMaybe<Integrations_MSFT_MeetingFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_MSFT_MeetingFilter>>>;
};

export enum Integrations_MSFT_MeetingHasFilter {
  createdBy = 'createdBy',
  id = 'id',
  msftProvider = 'msftProvider',
  url = 'url'
}

export type Integrations_MSFT_MeetingOrder = {
  asc?: InputMaybe<Integrations_MSFT_MeetingOrderable>;
  desc?: InputMaybe<Integrations_MSFT_MeetingOrderable>;
  then?: InputMaybe<Integrations_MSFT_MeetingOrder>;
};

export enum Integrations_MSFT_MeetingOrderable {
  id = 'id',
  url = 'url'
}

export type Integrations_MSFT_MeetingPatch = {
  createdBy?: InputMaybe<Integrations_accountRef>;
  id?: InputMaybe<Scalars['String']>;
  msftProvider?: InputMaybe<Integrations_MSFT_ProviderRef>;
  url?: InputMaybe<Scalars['String']>;
};

export type Integrations_MSFT_MeetingRef = {
  createdBy?: InputMaybe<Integrations_accountRef>;
  id?: InputMaybe<Scalars['String']>;
  msftProvider?: InputMaybe<Integrations_MSFT_ProviderRef>;
  url?: InputMaybe<Scalars['String']>;
};

export type Integrations_MSFT_Provider = {
  __typename?: 'Integrations_MSFT_Provider';
  accessToken?: Maybe<Scalars['String']>;
  accountObject?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  email?: Maybe<Scalars['String']>;
  experireAt?: Maybe<Scalars['DateTime']>;
  expiresIn?: Maybe<Scalars['Int']>;
  extExpiresIn?: Maybe<Scalars['Int']>;
  id: Scalars['ID'];
  integrationsAccount: Integrations_account;
  meetings?: Maybe<Array<Integrations_MSFT_Meeting>>;
  meetingsAggregate?: Maybe<Integrations_MSFT_MeetingAggregateResult>;
  msftId: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  org360: Org360;
  refreshToken?: Maybe<Scalars['String']>;
  scope?: Maybe<Array<Scalars['String']>>;
  tokenType?: Maybe<Scalars['String']>;
  userName?: Maybe<Scalars['String']>;
};


export type Integrations_MSFT_ProviderintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type Integrations_MSFT_ProvidermeetingsArgs = {
  filter?: InputMaybe<Integrations_MSFT_MeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_MSFT_MeetingOrder>;
};


export type Integrations_MSFT_ProvidermeetingsAggregateArgs = {
  filter?: InputMaybe<Integrations_MSFT_MeetingFilter>;
};


export type Integrations_MSFT_Providerorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type Integrations_MSFT_ProviderAggregateResult = {
  __typename?: 'Integrations_MSFT_ProviderAggregateResult';
  accessTokenMax?: Maybe<Scalars['String']>;
  accessTokenMin?: Maybe<Scalars['String']>;
  accountObjectMax?: Maybe<Scalars['String']>;
  accountObjectMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  emailMax?: Maybe<Scalars['String']>;
  emailMin?: Maybe<Scalars['String']>;
  experireAtMax?: Maybe<Scalars['DateTime']>;
  experireAtMin?: Maybe<Scalars['DateTime']>;
  expiresInAvg?: Maybe<Scalars['Float']>;
  expiresInMax?: Maybe<Scalars['Int']>;
  expiresInMin?: Maybe<Scalars['Int']>;
  expiresInSum?: Maybe<Scalars['Int']>;
  extExpiresInAvg?: Maybe<Scalars['Float']>;
  extExpiresInMax?: Maybe<Scalars['Int']>;
  extExpiresInMin?: Maybe<Scalars['Int']>;
  extExpiresInSum?: Maybe<Scalars['Int']>;
  msftIdMax?: Maybe<Scalars['String']>;
  msftIdMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  refreshTokenMax?: Maybe<Scalars['String']>;
  refreshTokenMin?: Maybe<Scalars['String']>;
  tokenTypeMax?: Maybe<Scalars['String']>;
  tokenTypeMin?: Maybe<Scalars['String']>;
  userNameMax?: Maybe<Scalars['String']>;
  userNameMin?: Maybe<Scalars['String']>;
};

export type Integrations_MSFT_ProviderFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_MSFT_ProviderFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Integrations_MSFT_ProviderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  msftId?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<Integrations_MSFT_ProviderFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_MSFT_ProviderFilter>>>;
};

export enum Integrations_MSFT_ProviderHasFilter {
  accessToken = 'accessToken',
  accountObject = 'accountObject',
  createdAt = 'createdAt',
  email = 'email',
  experireAt = 'experireAt',
  expiresIn = 'expiresIn',
  extExpiresIn = 'extExpiresIn',
  integrationsAccount = 'integrationsAccount',
  meetings = 'meetings',
  msftId = 'msftId',
  name = 'name',
  org360 = 'org360',
  refreshToken = 'refreshToken',
  scope = 'scope',
  tokenType = 'tokenType',
  userName = 'userName'
}

export type Integrations_MSFT_ProviderOrder = {
  asc?: InputMaybe<Integrations_MSFT_ProviderOrderable>;
  desc?: InputMaybe<Integrations_MSFT_ProviderOrderable>;
  then?: InputMaybe<Integrations_MSFT_ProviderOrder>;
};

export enum Integrations_MSFT_ProviderOrderable {
  accessToken = 'accessToken',
  accountObject = 'accountObject',
  createdAt = 'createdAt',
  email = 'email',
  experireAt = 'experireAt',
  expiresIn = 'expiresIn',
  extExpiresIn = 'extExpiresIn',
  msftId = 'msftId',
  name = 'name',
  refreshToken = 'refreshToken',
  tokenType = 'tokenType',
  userName = 'userName'
}

export type Integrations_MSFT_ProviderPatch = {
  accessToken?: InputMaybe<Scalars['String']>;
  accountObject?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  experireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  meetings?: InputMaybe<Array<Integrations_MSFT_MeetingRef>>;
  msftId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
  userName?: InputMaybe<Scalars['String']>;
};

export type Integrations_MSFT_ProviderRef = {
  accessToken?: InputMaybe<Scalars['String']>;
  accountObject?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  experireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  meetings?: InputMaybe<Array<Integrations_MSFT_MeetingRef>>;
  msftId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
  userName?: InputMaybe<Scalars['String']>;
};

export type Integrations_Meta_Provider = {
  __typename?: 'Integrations_Meta_Provider';
  accessToken?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  expireAt?: Maybe<Scalars['DateTime']>;
  expiresIn?: Maybe<Scalars['Int']>;
  extExpiresIn?: Maybe<Scalars['Int']>;
  id: Scalars['ID'];
  integrationsAccount: Integrations_account;
  metaId: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  org360: Org360;
  refreshToken?: Maybe<Scalars['String']>;
  scope?: Maybe<Array<Scalars['String']>>;
  tokenType?: Maybe<Scalars['String']>;
};


export type Integrations_Meta_ProviderintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type Integrations_Meta_Providerorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type Integrations_Meta_ProviderAggregateResult = {
  __typename?: 'Integrations_Meta_ProviderAggregateResult';
  accessTokenMax?: Maybe<Scalars['String']>;
  accessTokenMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  expireAtMax?: Maybe<Scalars['DateTime']>;
  expireAtMin?: Maybe<Scalars['DateTime']>;
  expiresInAvg?: Maybe<Scalars['Float']>;
  expiresInMax?: Maybe<Scalars['Int']>;
  expiresInMin?: Maybe<Scalars['Int']>;
  expiresInSum?: Maybe<Scalars['Int']>;
  extExpiresInAvg?: Maybe<Scalars['Float']>;
  extExpiresInMax?: Maybe<Scalars['Int']>;
  extExpiresInMin?: Maybe<Scalars['Int']>;
  extExpiresInSum?: Maybe<Scalars['Int']>;
  metaIdMax?: Maybe<Scalars['String']>;
  metaIdMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  refreshTokenMax?: Maybe<Scalars['String']>;
  refreshTokenMin?: Maybe<Scalars['String']>;
  tokenTypeMax?: Maybe<Scalars['String']>;
  tokenTypeMin?: Maybe<Scalars['String']>;
};

export type Integrations_Meta_ProviderFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_Meta_ProviderFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Integrations_Meta_ProviderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  metaId?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<Integrations_Meta_ProviderFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_Meta_ProviderFilter>>>;
};

export enum Integrations_Meta_ProviderHasFilter {
  accessToken = 'accessToken',
  createdAt = 'createdAt',
  expireAt = 'expireAt',
  expiresIn = 'expiresIn',
  extExpiresIn = 'extExpiresIn',
  integrationsAccount = 'integrationsAccount',
  metaId = 'metaId',
  name = 'name',
  org360 = 'org360',
  refreshToken = 'refreshToken',
  scope = 'scope',
  tokenType = 'tokenType'
}

export type Integrations_Meta_ProviderOrder = {
  asc?: InputMaybe<Integrations_Meta_ProviderOrderable>;
  desc?: InputMaybe<Integrations_Meta_ProviderOrderable>;
  then?: InputMaybe<Integrations_Meta_ProviderOrder>;
};

export enum Integrations_Meta_ProviderOrderable {
  accessToken = 'accessToken',
  createdAt = 'createdAt',
  expireAt = 'expireAt',
  expiresIn = 'expiresIn',
  extExpiresIn = 'extExpiresIn',
  metaId = 'metaId',
  name = 'name',
  refreshToken = 'refreshToken',
  tokenType = 'tokenType'
}

export type Integrations_Meta_ProviderPatch = {
  accessToken?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  metaId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
};

export type Integrations_Meta_ProviderRef = {
  accessToken?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  expiresIn?: InputMaybe<Scalars['Int']>;
  extExpiresIn?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  metaId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  refreshToken?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Array<Scalars['String']>>;
  tokenType?: InputMaybe<Scalars['String']>;
};

export type Integrations_SendGrid_Provider = {
  __typename?: 'Integrations_SendGrid_Provider';
  email: Scalars['String'];
  id: Scalars['ID'];
  integrationsAccount: Integrations_account;
  name: Scalars['String'];
};


export type Integrations_SendGrid_ProviderintegrationsAccountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};

export type Integrations_SendGrid_ProviderAggregateResult = {
  __typename?: 'Integrations_SendGrid_ProviderAggregateResult';
  count?: Maybe<Scalars['Int']>;
  emailMax?: Maybe<Scalars['String']>;
  emailMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Integrations_SendGrid_ProviderFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_SendGrid_ProviderFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Integrations_SendGrid_ProviderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Integrations_SendGrid_ProviderFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_SendGrid_ProviderFilter>>>;
};

export enum Integrations_SendGrid_ProviderHasFilter {
  email = 'email',
  integrationsAccount = 'integrationsAccount',
  name = 'name'
}

export type Integrations_SendGrid_ProviderOrder = {
  asc?: InputMaybe<Integrations_SendGrid_ProviderOrderable>;
  desc?: InputMaybe<Integrations_SendGrid_ProviderOrderable>;
  then?: InputMaybe<Integrations_SendGrid_ProviderOrder>;
};

export enum Integrations_SendGrid_ProviderOrderable {
  email = 'email',
  name = 'name'
}

export type Integrations_SendGrid_ProviderPatch = {
  email?: InputMaybe<Scalars['String']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  name?: InputMaybe<Scalars['String']>;
};

export type Integrations_SendGrid_ProviderRef = {
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  integrationsAccount?: InputMaybe<Integrations_accountRef>;
  name?: InputMaybe<Scalars['String']>;
};

export type Integrations_Sendgrid_emailEvent = {
  __typename?: 'Integrations_Sendgrid_emailEvent';
  cpid?: Maybe<Scalars['String']>;
  cpx?: Maybe<Scalars['String']>;
  cx?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  iax?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  ip?: Maybe<Scalars['String']>;
  response?: Maybe<Scalars['String']>;
  sg_event_id?: Maybe<Scalars['String']>;
  sg_message_id?: Maybe<Scalars['String']>;
  sg_template_id?: Maybe<Scalars['String']>;
  sg_template_name?: Maybe<Scalars['String']>;
  smpt_id?: Maybe<Scalars['String']>;
  tls?: Maybe<Scalars['String']>;
  ts: Scalars['DateTime'];
};

export type Integrations_Sendgrid_emailEventAggregateResult = {
  __typename?: 'Integrations_Sendgrid_emailEventAggregateResult';
  count?: Maybe<Scalars['Int']>;
  cpidMax?: Maybe<Scalars['String']>;
  cpidMin?: Maybe<Scalars['String']>;
  cpxMax?: Maybe<Scalars['String']>;
  cpxMin?: Maybe<Scalars['String']>;
  cxMax?: Maybe<Scalars['String']>;
  cxMin?: Maybe<Scalars['String']>;
  emailMax?: Maybe<Scalars['String']>;
  emailMin?: Maybe<Scalars['String']>;
  eventMax?: Maybe<Scalars['String']>;
  eventMin?: Maybe<Scalars['String']>;
  iaxMax?: Maybe<Scalars['String']>;
  iaxMin?: Maybe<Scalars['String']>;
  ipMax?: Maybe<Scalars['String']>;
  ipMin?: Maybe<Scalars['String']>;
  responseMax?: Maybe<Scalars['String']>;
  responseMin?: Maybe<Scalars['String']>;
  sg_event_idMax?: Maybe<Scalars['String']>;
  sg_event_idMin?: Maybe<Scalars['String']>;
  sg_message_idMax?: Maybe<Scalars['String']>;
  sg_message_idMin?: Maybe<Scalars['String']>;
  sg_template_idMax?: Maybe<Scalars['String']>;
  sg_template_idMin?: Maybe<Scalars['String']>;
  sg_template_nameMax?: Maybe<Scalars['String']>;
  sg_template_nameMin?: Maybe<Scalars['String']>;
  smpt_idMax?: Maybe<Scalars['String']>;
  smpt_idMin?: Maybe<Scalars['String']>;
  tlsMax?: Maybe<Scalars['String']>;
  tlsMin?: Maybe<Scalars['String']>;
  tsMax?: Maybe<Scalars['DateTime']>;
  tsMin?: Maybe<Scalars['DateTime']>;
};

export type Integrations_Sendgrid_emailEventFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_Sendgrid_emailEventFilter>>>;
  cpid?: InputMaybe<StringTermFilter>;
  cpx?: InputMaybe<StringTermFilter>;
  cx?: InputMaybe<StringTermFilter>;
  email?: InputMaybe<StringTermFilter>;
  event?: InputMaybe<StringTermFilter>;
  has?: InputMaybe<Array<InputMaybe<Integrations_Sendgrid_emailEventHasFilter>>>;
  iax?: InputMaybe<StringTermFilter>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  ip?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<Integrations_Sendgrid_emailEventFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_Sendgrid_emailEventFilter>>>;
  ts?: InputMaybe<DateTimeFilter>;
};

export enum Integrations_Sendgrid_emailEventHasFilter {
  cpid = 'cpid',
  cpx = 'cpx',
  cx = 'cx',
  email = 'email',
  event = 'event',
  iax = 'iax',
  ip = 'ip',
  response = 'response',
  sg_event_id = 'sg_event_id',
  sg_message_id = 'sg_message_id',
  sg_template_id = 'sg_template_id',
  sg_template_name = 'sg_template_name',
  smpt_id = 'smpt_id',
  tls = 'tls',
  ts = 'ts'
}

export type Integrations_Sendgrid_emailEventOrder = {
  asc?: InputMaybe<Integrations_Sendgrid_emailEventOrderable>;
  desc?: InputMaybe<Integrations_Sendgrid_emailEventOrderable>;
  then?: InputMaybe<Integrations_Sendgrid_emailEventOrder>;
};

export enum Integrations_Sendgrid_emailEventOrderable {
  cpid = 'cpid',
  cpx = 'cpx',
  cx = 'cx',
  email = 'email',
  event = 'event',
  iax = 'iax',
  ip = 'ip',
  response = 'response',
  sg_event_id = 'sg_event_id',
  sg_message_id = 'sg_message_id',
  sg_template_id = 'sg_template_id',
  sg_template_name = 'sg_template_name',
  smpt_id = 'smpt_id',
  tls = 'tls',
  ts = 'ts'
}

export type Integrations_Sendgrid_emailEventPatch = {
  cpid?: InputMaybe<Scalars['String']>;
  cpx?: InputMaybe<Scalars['String']>;
  cx?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<Scalars['String']>;
  iax?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  response?: InputMaybe<Scalars['String']>;
  sg_event_id?: InputMaybe<Scalars['String']>;
  sg_message_id?: InputMaybe<Scalars['String']>;
  sg_template_id?: InputMaybe<Scalars['String']>;
  sg_template_name?: InputMaybe<Scalars['String']>;
  smpt_id?: InputMaybe<Scalars['String']>;
  tls?: InputMaybe<Scalars['String']>;
  ts?: InputMaybe<Scalars['DateTime']>;
};

export type Integrations_Sendgrid_emailEventRef = {
  cpid?: InputMaybe<Scalars['String']>;
  cpx?: InputMaybe<Scalars['String']>;
  cx?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<Scalars['String']>;
  iax?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  ip?: InputMaybe<Scalars['String']>;
  response?: InputMaybe<Scalars['String']>;
  sg_event_id?: InputMaybe<Scalars['String']>;
  sg_message_id?: InputMaybe<Scalars['String']>;
  sg_template_id?: InputMaybe<Scalars['String']>;
  sg_template_name?: InputMaybe<Scalars['String']>;
  smpt_id?: InputMaybe<Scalars['String']>;
  tls?: InputMaybe<Scalars['String']>;
  ts?: InputMaybe<Scalars['DateTime']>;
};

export type Integrations_account = {
  __typename?: 'Integrations_account';
  account?: Maybe<Account>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  digilabProvider?: Maybe<Integrations_Digilab_Provider>;
  emails?: Maybe<Array<Email>>;
  emailsAggregate?: Maybe<EmailAggregateResult>;
  googleAnalyticsProvider?: Maybe<Integrations_Google_Analytics_Provider>;
  googleProvider?: Maybe<Integrations_Google_Provider>;
  id: Scalars['ID'];
  integrations: Integrations;
  linkMobilityProvider?: Maybe<Integrations_Link_Mobility_Provider>;
  linkedInProvider?: Maybe<Integrations_LinkedIn_Provider>;
  metaProvider?: Maybe<Integrations_Meta_Provider>;
  msftProvider?: Maybe<Integrations_MSFT_Provider>;
  org360: Org360;
  ownerType: Integrations_accountOwnertype;
  scopes?: Maybe<Array<Integrations_scope>>;
  sendGridProvider?: Maybe<Integrations_SendGrid_Provider>;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
};


export type Integrations_accountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Integrations_accountcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Integrations_accountdigilabProviderArgs = {
  filter?: InputMaybe<Integrations_Digilab_ProviderFilter>;
};


export type Integrations_accountemailsArgs = {
  filter?: InputMaybe<EmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailOrder>;
};


export type Integrations_accountemailsAggregateArgs = {
  filter?: InputMaybe<EmailFilter>;
};


export type Integrations_accountgoogleAnalyticsProviderArgs = {
  filter?: InputMaybe<Integrations_Google_Analytics_ProviderFilter>;
};


export type Integrations_accountgoogleProviderArgs = {
  filter?: InputMaybe<Integrations_Google_ProviderFilter>;
};


export type Integrations_accountintegrationsArgs = {
  filter?: InputMaybe<IntegrationsFilter>;
};


export type Integrations_accountlinkMobilityProviderArgs = {
  filter?: InputMaybe<Integrations_Link_Mobility_ProviderFilter>;
};


export type Integrations_accountlinkedInProviderArgs = {
  filter?: InputMaybe<Integrations_LinkedIn_ProviderFilter>;
};


export type Integrations_accountmetaProviderArgs = {
  filter?: InputMaybe<Integrations_Meta_ProviderFilter>;
};


export type Integrations_accountmsftProviderArgs = {
  filter?: InputMaybe<Integrations_MSFT_ProviderFilter>;
};


export type Integrations_accountorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type Integrations_accountsendGridProviderArgs = {
  filter?: InputMaybe<Integrations_SendGrid_ProviderFilter>;
};


export type Integrations_accountuserArgs = {
  filter?: InputMaybe<UserFilter>;
};

export type Integrations_accountAggregateResult = {
  __typename?: 'Integrations_accountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type Integrations_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_accountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Integrations_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Integrations_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_accountFilter>>>;
  ownerType?: InputMaybe<Integrations_accountOwnertype_exact>;
  scopes?: InputMaybe<Integrations_scope_exact>;
};

export enum Integrations_accountHasFilter {
  account = 'account',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  digilabProvider = 'digilabProvider',
  emails = 'emails',
  googleAnalyticsProvider = 'googleAnalyticsProvider',
  googleProvider = 'googleProvider',
  integrations = 'integrations',
  linkMobilityProvider = 'linkMobilityProvider',
  linkedInProvider = 'linkedInProvider',
  metaProvider = 'metaProvider',
  msftProvider = 'msftProvider',
  org360 = 'org360',
  ownerType = 'ownerType',
  scopes = 'scopes',
  sendGridProvider = 'sendGridProvider',
  updatedAt = 'updatedAt',
  user = 'user'
}

export type Integrations_accountOrder = {
  asc?: InputMaybe<Integrations_accountOrderable>;
  desc?: InputMaybe<Integrations_accountOrderable>;
  then?: InputMaybe<Integrations_accountOrder>;
};

export enum Integrations_accountOrderable {
  createdAt = 'createdAt',
  updatedAt = 'updatedAt'
}

export enum Integrations_accountOwnertype {
  ACCOUNT = 'ACCOUNT',
  ORG360 = 'ORG360',
  USER = 'USER'
}

export type Integrations_accountOwnertype_exact = {
  between?: InputMaybe<Integrations_accountOwnertype>;
  eq?: InputMaybe<Integrations_accountOwnertype>;
  ge?: InputMaybe<Integrations_accountOwnertype>;
  gt?: InputMaybe<Integrations_accountOwnertype>;
  in?: InputMaybe<Array<InputMaybe<Integrations_accountOwnertype>>>;
  le?: InputMaybe<Integrations_accountOwnertype>;
  lt?: InputMaybe<Integrations_accountOwnertype>;
};

export type Integrations_accountPatch = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  digilabProvider?: InputMaybe<Integrations_Digilab_ProviderRef>;
  emails?: InputMaybe<Array<EmailRef>>;
  googleAnalyticsProvider?: InputMaybe<Integrations_Google_Analytics_ProviderRef>;
  googleProvider?: InputMaybe<Integrations_Google_ProviderRef>;
  integrations?: InputMaybe<IntegrationsRef>;
  linkMobilityProvider?: InputMaybe<Integrations_Link_Mobility_ProviderRef>;
  linkedInProvider?: InputMaybe<Integrations_LinkedIn_ProviderRef>;
  metaProvider?: InputMaybe<Integrations_Meta_ProviderRef>;
  msftProvider?: InputMaybe<Integrations_MSFT_ProviderRef>;
  org360?: InputMaybe<Org360Ref>;
  ownerType?: InputMaybe<Integrations_accountOwnertype>;
  scopes?: InputMaybe<Array<Integrations_scope>>;
  sendGridProvider?: InputMaybe<Integrations_SendGrid_ProviderRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserRef>;
};

export type Integrations_accountRef = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  digilabProvider?: InputMaybe<Integrations_Digilab_ProviderRef>;
  emails?: InputMaybe<Array<EmailRef>>;
  googleAnalyticsProvider?: InputMaybe<Integrations_Google_Analytics_ProviderRef>;
  googleProvider?: InputMaybe<Integrations_Google_ProviderRef>;
  id?: InputMaybe<Scalars['ID']>;
  integrations?: InputMaybe<IntegrationsRef>;
  linkMobilityProvider?: InputMaybe<Integrations_Link_Mobility_ProviderRef>;
  linkedInProvider?: InputMaybe<Integrations_LinkedIn_ProviderRef>;
  metaProvider?: InputMaybe<Integrations_Meta_ProviderRef>;
  msftProvider?: InputMaybe<Integrations_MSFT_ProviderRef>;
  org360?: InputMaybe<Org360Ref>;
  ownerType?: InputMaybe<Integrations_accountOwnertype>;
  scopes?: InputMaybe<Array<Integrations_scope>>;
  sendGridProvider?: InputMaybe<Integrations_SendGrid_ProviderRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserRef>;
};

export type Integrations_carrefour_operartionsLog = {
  __typename?: 'Integrations_carrefour_operartionsLog';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  createdByUserEmail: Scalars['String'];
  date: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  index: Scalars['Int'];
  operation: Scalars['String'];
  ref: Scalars['String'];
  response: Scalars['String'];
  status: Integrations_carrefour_operartionsLogStatus;
};


export type Integrations_carrefour_operartionsLogcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};

export type Integrations_carrefour_operartionsLogAggregateResult = {
  __typename?: 'Integrations_carrefour_operartionsLogAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  createdByUserEmailMax?: Maybe<Scalars['String']>;
  createdByUserEmailMin?: Maybe<Scalars['String']>;
  dateMax?: Maybe<Scalars['DateTime']>;
  dateMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  operationMax?: Maybe<Scalars['String']>;
  operationMin?: Maybe<Scalars['String']>;
  refMax?: Maybe<Scalars['String']>;
  refMin?: Maybe<Scalars['String']>;
  responseMax?: Maybe<Scalars['String']>;
  responseMin?: Maybe<Scalars['String']>;
};

export type Integrations_carrefour_operartionsLogFilter = {
  and?: InputMaybe<Array<InputMaybe<Integrations_carrefour_operartionsLogFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  createdByUserEmail?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  date?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Integrations_carrefour_operartionsLogHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  index?: InputMaybe<IntFilter>;
  not?: InputMaybe<Integrations_carrefour_operartionsLogFilter>;
  operation?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  or?: InputMaybe<Array<InputMaybe<Integrations_carrefour_operartionsLogFilter>>>;
  ref?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  response?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  status?: InputMaybe<Integrations_carrefour_operartionsLogStatus_exact>;
};

export enum Integrations_carrefour_operartionsLogHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  createdByUserEmail = 'createdByUserEmail',
  date = 'date',
  guid = 'guid',
  index = 'index',
  operation = 'operation',
  ref = 'ref',
  response = 'response',
  status = 'status'
}

export type Integrations_carrefour_operartionsLogOrder = {
  asc?: InputMaybe<Integrations_carrefour_operartionsLogOrderable>;
  desc?: InputMaybe<Integrations_carrefour_operartionsLogOrderable>;
  then?: InputMaybe<Integrations_carrefour_operartionsLogOrder>;
};

export enum Integrations_carrefour_operartionsLogOrderable {
  createdAt = 'createdAt',
  createdByUserEmail = 'createdByUserEmail',
  date = 'date',
  guid = 'guid',
  index = 'index',
  operation = 'operation',
  ref = 'ref',
  response = 'response'
}

export type Integrations_carrefour_operartionsLogPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  createdByUserEmail?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  index?: InputMaybe<Scalars['Int']>;
  operation?: InputMaybe<Scalars['String']>;
  ref?: InputMaybe<Scalars['String']>;
  response?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Integrations_carrefour_operartionsLogStatus>;
};

export type Integrations_carrefour_operartionsLogRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  createdByUserEmail?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  operation?: InputMaybe<Scalars['String']>;
  ref?: InputMaybe<Scalars['String']>;
  response?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Integrations_carrefour_operartionsLogStatus>;
};

export enum Integrations_carrefour_operartionsLogStatus {
  PENDING = 'PENDING',
  REJECTED = 'REJECTED',
  SUCCESS = 'SUCCESS'
}

export type Integrations_carrefour_operartionsLogStatus_exact = {
  between?: InputMaybe<Integrations_carrefour_operartionsLogStatus>;
  eq?: InputMaybe<Integrations_carrefour_operartionsLogStatus>;
  ge?: InputMaybe<Integrations_carrefour_operartionsLogStatus>;
  gt?: InputMaybe<Integrations_carrefour_operartionsLogStatus>;
  in?: InputMaybe<Array<InputMaybe<Integrations_carrefour_operartionsLogStatus>>>;
  le?: InputMaybe<Integrations_carrefour_operartionsLogStatus>;
  lt?: InputMaybe<Integrations_carrefour_operartionsLogStatus>;
};

export enum Integrations_scope {
  CALL = 'CALL',
  CHAT = 'CHAT',
  EMAIL = 'EMAIL',
  LOGIN_PROVIDER = 'LOGIN_PROVIDER',
  MEETING = 'MEETING',
  SMS = 'SMS',
  TWOFA = 'TWOFA',
  VIDEO_CALL = 'VIDEO_CALL'
}

export type Integrations_scope_exact = {
  between?: InputMaybe<Integrations_scope>;
  eq?: InputMaybe<Integrations_scope>;
  ge?: InputMaybe<Integrations_scope>;
  gt?: InputMaybe<Integrations_scope>;
  in?: InputMaybe<Array<InputMaybe<Integrations_scope>>>;
  le?: InputMaybe<Integrations_scope>;
  lt?: InputMaybe<Integrations_scope>;
};

export type IntersectsFilter = {
  multiPolygon?: InputMaybe<MultiPolygonRef>;
  polygon?: InputMaybe<PolygonRef>;
};

export type JobPosition = {
  __typename?: 'JobPosition';
  id: Scalars['ID'];
  name: Scalars['String'];
  org360?: Maybe<Org360>;
};


export type JobPositionorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type JobPositionAggregateResult = {
  __typename?: 'JobPositionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type JobPositionFilter = {
  and?: InputMaybe<Array<InputMaybe<JobPositionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<JobPositionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<JobPositionFilter>;
  or?: InputMaybe<Array<InputMaybe<JobPositionFilter>>>;
};

export enum JobPositionHasFilter {
  name = 'name',
  org360 = 'org360'
}

export type JobPositionOrder = {
  asc?: InputMaybe<JobPositionOrderable>;
  desc?: InputMaybe<JobPositionOrderable>;
  then?: InputMaybe<JobPositionOrder>;
};

export enum JobPositionOrderable {
  name = 'name'
}

export type JobPositionPatch = {
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
};

export type JobPositionRef = {
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
};

export type LMS_PACKAGE = {
  __typename?: 'LMS_PACKAGE';
  accounts: Array<LMS_account>;
  accountsAggregate?: Maybe<LMS_accountAggregateResult>;
  blockStudentProgress: Array<LMS_blockStudentProgress>;
  blockStudentProgressAggregate?: Maybe<LMS_blockStudentProgressAggregateResult>;
  blocks: Array<LMS_block>;
  blocksAggregate?: Maybe<LMS_blockAggregateResult>;
  contacts: Array<LMS_contact>;
  contactsAggregate?: Maybe<LMS_contactAggregateResult>;
  courseCategories: Array<LMS_courseCategory>;
  courseCategoriesAggregate?: Maybe<LMS_courseCategoryAggregateResult>;
  courseStudentProgress: Array<LMS_courseStudentProgress>;
  courseStudentProgressAggregate?: Maybe<LMS_courseStudentProgressAggregateResult>;
  courseVersions: Array<LMS_courseVersion>;
  courseVersionsAggregate?: Maybe<LMS_courseVersionAggregateResult>;
  courses: Array<LMS_course>;
  coursesAggregate?: Maybe<LMS_courseAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<Account>;
  formStudentProgress: Array<LMS_formStudentProgress>;
  formStudentProgressAggregate?: Maybe<LMS_formStudentProgressAggregateResult>;
  forms: Array<LMS_form>;
  formsAggregate?: Maybe<LMS_formAggregateResult>;
  groupAccountFormAnswers: Array<LMS_groupAccountFormAnswer>;
  groupAccountFormAnswersAggregate?: Maybe<LMS_groupAccountFormAnswerAggregateResult>;
  groupAccountFormAttempts: Array<LMS_groupAccountFormAttempt>;
  groupAccountFormAttemptsAggregate?: Maybe<LMS_groupAccountFormAttemptAggregateResult>;
  groupAccounts: Array<LMS_groupAccount>;
  groupAccountsAggregate?: Maybe<LMS_groupAccountAggregateResult>;
  groupBlockConfigs: Array<LMS_groupBlockConfig>;
  groupBlockConfigsAggregate?: Maybe<LMS_groupBlockConfigAggregateResult>;
  groupCourseConfigs: Array<LMS_groupCourseConfig>;
  groupCourseConfigsAggregate?: Maybe<LMS_groupCourseConfigAggregateResult>;
  groupFormConfigCalculationRanges: Array<LMS_groupFormConfigCalculationRange>;
  groupFormConfigCalculationRangesAggregate?: Maybe<LMS_groupFormConfigCalculationRangeAggregateResult>;
  groupFormConfigCalculations: Array<LMS_groupFormConfigCalculation>;
  groupFormConfigCalculationsAggregate?: Maybe<LMS_groupFormConfigCalculationAggregateResult>;
  groupFormConfigs: Array<LMS_groupFormConfig>;
  groupFormConfigsAggregate?: Maybe<LMS_groupFormConfigAggregateResult>;
  groupLessonConfigs: Array<LMS_groupLessonConfig>;
  groupLessonConfigsAggregate?: Maybe<LMS_groupLessonConfigAggregateResult>;
  groupLessonMeetingConfigs: Array<LMS_groupLessonMeetingConfig>;
  groupLessonMeetingConfigsAggregate?: Maybe<LMS_groupLessonMeetingConfigAggregateResult>;
  groupLessonTeacherConfigs: Array<LMS_groupLessonTeacherConfig>;
  groupLessonTeacherConfigsAggregate?: Maybe<LMS_groupLessonTeacherConfigAggregateResult>;
  groupResourceConfigs: Array<LMS_groupResourceConfig>;
  groupResourceConfigsAggregate?: Maybe<LMS_groupResourceConfigAggregateResult>;
  groups: Array<LMS_group>;
  groupsAggregate?: Maybe<LMS_groupAggregateResult>;
  id: Scalars['ID'];
  lessonStudentProgress: Array<LMS_lessonStudentProgress>;
  lessonStudentProgressAggregate?: Maybe<LMS_lessonStudentProgressAggregateResult>;
  lessons: Array<LMS_lesson>;
  lessonsAggregate?: Maybe<LMS_lessonAggregateResult>;
  logs: Array<LMS_accountLog>;
  logsAggregate?: Maybe<LMS_accountLogAggregateResult>;
  meetingStudentProgress: Array<LMS_meetingStudentProgress>;
  meetingStudentProgressAggregate?: Maybe<LMS_meetingStudentProgressAggregateResult>;
  name: Scalars['String'];
  org360: Org360;
  products: Array<LMS_product>;
  productsAggregate?: Maybe<LMS_productAggregateResult>;
  resourceStudentProgress: Array<LMS_resourceStudentProgress>;
  resourceStudentProgressAggregate?: Maybe<LMS_resourceStudentProgressAggregateResult>;
  resources: Array<LMS_resource>;
  resourcesAggregate?: Maybe<LMS_resourceAggregateResult>;
  sections: Array<LMS_section>;
  sectionsAggregate?: Maybe<LMS_sectionAggregateResult>;
  studentVideoReports: Array<LMS_resourceStudentVideoReport>;
  studentVideoReportsAggregate?: Maybe<LMS_resourceStudentVideoReportAggregateResult>;
  thumbnails: Array<LMS_thumbnail>;
  thumbnailsAggregate?: Maybe<LMS_thumbnailAggregateResult>;
};


export type LMS_PACKAGEaccountsArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};


export type LMS_PACKAGEaccountsAggregateArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_PACKAGEblockStudentProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockStudentProgressOrder>;
};


export type LMS_PACKAGEblockStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
};


export type LMS_PACKAGEblocksArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockOrder>;
};


export type LMS_PACKAGEblocksAggregateArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type LMS_PACKAGEcontactsArgs = {
  filter?: InputMaybe<LMS_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_contactOrder>;
};


export type LMS_PACKAGEcontactsAggregateArgs = {
  filter?: InputMaybe<LMS_contactFilter>;
};


export type LMS_PACKAGEcourseCategoriesArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseCategoryOrder>;
};


export type LMS_PACKAGEcourseCategoriesAggregateArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
};


export type LMS_PACKAGEcourseStudentProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseStudentProgressOrder>;
};


export type LMS_PACKAGEcourseStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
};


export type LMS_PACKAGEcourseVersionsArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseVersionOrder>;
};


export type LMS_PACKAGEcourseVersionsAggregateArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};


export type LMS_PACKAGEcoursesArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseOrder>;
};


export type LMS_PACKAGEcoursesAggregateArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type LMS_PACKAGEcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type LMS_PACKAGEformStudentProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};


export type LMS_PACKAGEformStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
};


export type LMS_PACKAGEformsArgs = {
  filter?: InputMaybe<LMS_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formOrder>;
};


export type LMS_PACKAGEformsAggregateArgs = {
  filter?: InputMaybe<LMS_formFilter>;
};


export type LMS_PACKAGEgroupAccountFormAnswersArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAnswerOrder>;
};


export type LMS_PACKAGEgroupAccountFormAnswersAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
};


export type LMS_PACKAGEgroupAccountFormAttemptsArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAttemptOrder>;
};


export type LMS_PACKAGEgroupAccountFormAttemptsAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
};


export type LMS_PACKAGEgroupAccountsArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountOrder>;
};


export type LMS_PACKAGEgroupAccountsAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_PACKAGEgroupBlockConfigsArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupBlockConfigOrder>;
};


export type LMS_PACKAGEgroupBlockConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_PACKAGEgroupCourseConfigsArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupCourseConfigOrder>;
};


export type LMS_PACKAGEgroupCourseConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_PACKAGEgroupFormConfigCalculationRangesArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationRangeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationRangeOrder>;
};


export type LMS_PACKAGEgroupFormConfigCalculationRangesAggregateArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationRangeFilter>;
};


export type LMS_PACKAGEgroupFormConfigCalculationsArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationOrder>;
};


export type LMS_PACKAGEgroupFormConfigCalculationsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationFilter>;
};


export type LMS_PACKAGEgroupFormConfigsArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};


export type LMS_PACKAGEgroupFormConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_PACKAGEgroupLessonConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonConfigOrder>;
};


export type LMS_PACKAGEgroupLessonConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_PACKAGEgroupLessonMeetingConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_PACKAGEgroupLessonMeetingConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
};


export type LMS_PACKAGEgroupLessonTeacherConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};


export type LMS_PACKAGEgroupLessonTeacherConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
};


export type LMS_PACKAGEgroupResourceConfigsArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};


export type LMS_PACKAGEgroupResourceConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type LMS_PACKAGEgroupsArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupOrder>;
};


export type LMS_PACKAGEgroupsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_PACKAGElessonStudentProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonStudentProgressOrder>;
};


export type LMS_PACKAGElessonStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
};


export type LMS_PACKAGElessonsArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonOrder>;
};


export type LMS_PACKAGElessonsAggregateArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type LMS_PACKAGElogsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_PACKAGElogsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type LMS_PACKAGEmeetingStudentProgressArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_meetingStudentProgressOrder>;
};


export type LMS_PACKAGEmeetingStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
};


export type LMS_PACKAGEorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type LMS_PACKAGEproductsArgs = {
  filter?: InputMaybe<LMS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_productOrder>;
};


export type LMS_PACKAGEproductsAggregateArgs = {
  filter?: InputMaybe<LMS_productFilter>;
};


export type LMS_PACKAGEresourceStudentProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};


export type LMS_PACKAGEresourceStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
};


export type LMS_PACKAGEresourcesArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};


export type LMS_PACKAGEresourcesAggregateArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
};


export type LMS_PACKAGEsectionsArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_sectionOrder>;
};


export type LMS_PACKAGEsectionsAggregateArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
};


export type LMS_PACKAGEstudentVideoReportsArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReportOrder>;
};


export type LMS_PACKAGEstudentVideoReportsAggregateArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
};


export type LMS_PACKAGEthumbnailsArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_thumbnailOrder>;
};


export type LMS_PACKAGEthumbnailsAggregateArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
};

export type LMS_PACKAGEAggregateResult = {
  __typename?: 'LMS_PACKAGEAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type LMS_PACKAGEFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_PACKAGEFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_PACKAGEHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_PACKAGEFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_PACKAGEFilter>>>;
};

export enum LMS_PACKAGEHasFilter {
  accounts = 'accounts',
  blockStudentProgress = 'blockStudentProgress',
  blocks = 'blocks',
  contacts = 'contacts',
  courseCategories = 'courseCategories',
  courseStudentProgress = 'courseStudentProgress',
  courseVersions = 'courseVersions',
  courses = 'courses',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  formStudentProgress = 'formStudentProgress',
  forms = 'forms',
  groupAccountFormAnswers = 'groupAccountFormAnswers',
  groupAccountFormAttempts = 'groupAccountFormAttempts',
  groupAccounts = 'groupAccounts',
  groupBlockConfigs = 'groupBlockConfigs',
  groupCourseConfigs = 'groupCourseConfigs',
  groupFormConfigCalculationRanges = 'groupFormConfigCalculationRanges',
  groupFormConfigCalculations = 'groupFormConfigCalculations',
  groupFormConfigs = 'groupFormConfigs',
  groupLessonConfigs = 'groupLessonConfigs',
  groupLessonMeetingConfigs = 'groupLessonMeetingConfigs',
  groupLessonTeacherConfigs = 'groupLessonTeacherConfigs',
  groupResourceConfigs = 'groupResourceConfigs',
  groups = 'groups',
  lessonStudentProgress = 'lessonStudentProgress',
  lessons = 'lessons',
  logs = 'logs',
  meetingStudentProgress = 'meetingStudentProgress',
  name = 'name',
  org360 = 'org360',
  products = 'products',
  resourceStudentProgress = 'resourceStudentProgress',
  resources = 'resources',
  sections = 'sections',
  studentVideoReports = 'studentVideoReports',
  thumbnails = 'thumbnails'
}

export type LMS_PACKAGEOrder = {
  asc?: InputMaybe<LMS_PACKAGEOrderable>;
  desc?: InputMaybe<LMS_PACKAGEOrderable>;
  then?: InputMaybe<LMS_PACKAGEOrder>;
};

export enum LMS_PACKAGEOrderable {
  createdAt = 'createdAt',
  name = 'name'
}

export type LMS_PACKAGEPatch = {
  accounts?: InputMaybe<Array<LMS_accountRef>>;
  blockStudentProgress?: InputMaybe<Array<LMS_blockStudentProgressRef>>;
  blocks?: InputMaybe<Array<LMS_blockRef>>;
  contacts?: InputMaybe<Array<LMS_contactRef>>;
  courseCategories?: InputMaybe<Array<LMS_courseCategoryRef>>;
  courseStudentProgress?: InputMaybe<Array<LMS_courseStudentProgressRef>>;
  courseVersions?: InputMaybe<Array<LMS_courseVersionRef>>;
  courses?: InputMaybe<Array<LMS_courseRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  formStudentProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  forms?: InputMaybe<Array<LMS_formRef>>;
  groupAccountFormAnswers?: InputMaybe<Array<LMS_groupAccountFormAnswerRef>>;
  groupAccountFormAttempts?: InputMaybe<Array<LMS_groupAccountFormAttemptRef>>;
  groupAccounts?: InputMaybe<Array<LMS_groupAccountRef>>;
  groupBlockConfigs?: InputMaybe<Array<LMS_groupBlockConfigRef>>;
  groupCourseConfigs?: InputMaybe<Array<LMS_groupCourseConfigRef>>;
  groupFormConfigCalculationRanges?: InputMaybe<Array<LMS_groupFormConfigCalculationRangeRef>>;
  groupFormConfigCalculations?: InputMaybe<Array<LMS_groupFormConfigCalculationRef>>;
  groupFormConfigs?: InputMaybe<Array<LMS_groupFormConfigRef>>;
  groupLessonConfigs?: InputMaybe<Array<LMS_groupLessonConfigRef>>;
  groupLessonMeetingConfigs?: InputMaybe<Array<LMS_groupLessonMeetingConfigRef>>;
  groupLessonTeacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
  groupResourceConfigs?: InputMaybe<Array<LMS_groupResourceConfigRef>>;
  groups?: InputMaybe<Array<LMS_groupRef>>;
  lessonStudentProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  lessons?: InputMaybe<Array<LMS_lessonRef>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meetingStudentProgress?: InputMaybe<Array<LMS_meetingStudentProgressRef>>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  products?: InputMaybe<Array<LMS_productRef>>;
  resourceStudentProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
  studentVideoReports?: InputMaybe<Array<LMS_resourceStudentVideoReportRef>>;
  thumbnails?: InputMaybe<Array<LMS_thumbnailRef>>;
};

export type LMS_PACKAGERef = {
  accounts?: InputMaybe<Array<LMS_accountRef>>;
  blockStudentProgress?: InputMaybe<Array<LMS_blockStudentProgressRef>>;
  blocks?: InputMaybe<Array<LMS_blockRef>>;
  contacts?: InputMaybe<Array<LMS_contactRef>>;
  courseCategories?: InputMaybe<Array<LMS_courseCategoryRef>>;
  courseStudentProgress?: InputMaybe<Array<LMS_courseStudentProgressRef>>;
  courseVersions?: InputMaybe<Array<LMS_courseVersionRef>>;
  courses?: InputMaybe<Array<LMS_courseRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  formStudentProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  forms?: InputMaybe<Array<LMS_formRef>>;
  groupAccountFormAnswers?: InputMaybe<Array<LMS_groupAccountFormAnswerRef>>;
  groupAccountFormAttempts?: InputMaybe<Array<LMS_groupAccountFormAttemptRef>>;
  groupAccounts?: InputMaybe<Array<LMS_groupAccountRef>>;
  groupBlockConfigs?: InputMaybe<Array<LMS_groupBlockConfigRef>>;
  groupCourseConfigs?: InputMaybe<Array<LMS_groupCourseConfigRef>>;
  groupFormConfigCalculationRanges?: InputMaybe<Array<LMS_groupFormConfigCalculationRangeRef>>;
  groupFormConfigCalculations?: InputMaybe<Array<LMS_groupFormConfigCalculationRef>>;
  groupFormConfigs?: InputMaybe<Array<LMS_groupFormConfigRef>>;
  groupLessonConfigs?: InputMaybe<Array<LMS_groupLessonConfigRef>>;
  groupLessonMeetingConfigs?: InputMaybe<Array<LMS_groupLessonMeetingConfigRef>>;
  groupLessonTeacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
  groupResourceConfigs?: InputMaybe<Array<LMS_groupResourceConfigRef>>;
  groups?: InputMaybe<Array<LMS_groupRef>>;
  id?: InputMaybe<Scalars['ID']>;
  lessonStudentProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  lessons?: InputMaybe<Array<LMS_lessonRef>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meetingStudentProgress?: InputMaybe<Array<LMS_meetingStudentProgressRef>>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  products?: InputMaybe<Array<LMS_productRef>>;
  resourceStudentProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
  studentVideoReports?: InputMaybe<Array<LMS_resourceStudentVideoReportRef>>;
  thumbnails?: InputMaybe<Array<LMS_thumbnailRef>>;
};

export type LMS_account = {
  __typename?: 'LMS_account';
  account: Account;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  groupAccounts: Array<LMS_groupAccount>;
  groupAccountsAggregate?: Maybe<LMS_groupAccountAggregateResult>;
  groupLessonTeacherConfigs: Array<LMS_groupLessonTeacherConfig>;
  groupLessonTeacherConfigsAggregate?: Maybe<LMS_groupLessonTeacherConfigAggregateResult>;
  id: Scalars['ID'];
  logs: Array<LMS_accountLog>;
  logsAggregate?: Maybe<LMS_accountLogAggregateResult>;
  package: LMS_PACKAGE;
  role: LMS_roleType;
};


export type LMS_accountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type LMS_accountcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type LMS_accountgroupAccountsArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountOrder>;
};


export type LMS_accountgroupAccountsAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_accountgroupLessonTeacherConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};


export type LMS_accountgroupLessonTeacherConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
};


export type LMS_accountlogsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_accountlogsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type LMS_accountpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};

export type LMS_accountAggregateResult = {
  __typename?: 'LMS_accountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_accountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_accountFilter>>>;
  role?: InputMaybe<LMS_roleType_exact>;
};

export enum LMS_accountHasFilter {
  account = 'account',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  groupAccounts = 'groupAccounts',
  groupLessonTeacherConfigs = 'groupLessonTeacherConfigs',
  logs = 'logs',
  package = 'package',
  role = 'role'
}

export type LMS_accountLog = {
  __typename?: 'LMS_accountLog';
  account: LMS_account;
  details: Array<LMS_accountLogDetail>;
  detailsAggregate?: Maybe<LMS_accountLogDetailAggregateResult>;
  group?: Maybe<LMS_group>;
  groupAccount?: Maybe<LMS_groupAccount>;
  groupBlockConfig?: Maybe<LMS_groupBlockConfig>;
  groupCourseConfig?: Maybe<LMS_groupCourseConfig>;
  groupFormConfig?: Maybe<LMS_groupFormConfig>;
  groupLessonConfig?: Maybe<LMS_groupLessonConfig>;
  groupLessonMeetingConfig?: Maybe<LMS_groupLessonMeetingConfig>;
  groupResourceConfig?: Maybe<LMS_groupResourceConfig>;
  id: Scalars['ID'];
  log: Account_log;
  package: LMS_PACKAGE;
  type: LMS_logType;
};


export type LMS_accountLogaccountArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_accountLogdetailsArgs = {
  filter?: InputMaybe<LMS_accountLogDetailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountLogDetailOrder>;
};


export type LMS_accountLogdetailsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogDetailFilter>;
};


export type LMS_accountLoggroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_accountLoggroupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_accountLoggroupBlockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_accountLoggroupCourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_accountLoggroupFormConfigArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_accountLoggroupLessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_accountLoggroupLessonMeetingConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
};


export type LMS_accountLoggroupResourceConfigArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type LMS_accountLoglogArgs = {
  filter?: InputMaybe<Account_logFilter>;
};


export type LMS_accountLogpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};

export type LMS_accountLogAggregateResult = {
  __typename?: 'LMS_accountLogAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type LMS_accountLogDetail = {
  __typename?: 'LMS_accountLogDetail';
  id: Scalars['ID'];
  log: LMS_accountLog;
  type: LMS_accountLogDetailType;
  value?: Maybe<Scalars['String']>;
};


export type LMS_accountLogDetaillogArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};

export type LMS_accountLogDetailAggregateResult = {
  __typename?: 'LMS_accountLogDetailAggregateResult';
  count?: Maybe<Scalars['Int']>;
  valueMax?: Maybe<Scalars['String']>;
  valueMin?: Maybe<Scalars['String']>;
};

export type LMS_accountLogDetailFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_accountLogDetailFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_accountLogDetailHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_accountLogDetailFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_accountLogDetailFilter>>>;
  type?: InputMaybe<LMS_accountLogDetailType_hash>;
};

export enum LMS_accountLogDetailHasFilter {
  log = 'log',
  type = 'type',
  value = 'value'
}

export type LMS_accountLogDetailOrder = {
  asc?: InputMaybe<LMS_accountLogDetailOrderable>;
  desc?: InputMaybe<LMS_accountLogDetailOrderable>;
  then?: InputMaybe<LMS_accountLogDetailOrder>;
};

export enum LMS_accountLogDetailOrderable {
  value = 'value'
}

export type LMS_accountLogDetailPatch = {
  log?: InputMaybe<LMS_accountLogRef>;
  type?: InputMaybe<LMS_accountLogDetailType>;
  value?: InputMaybe<Scalars['String']>;
};

export type LMS_accountLogDetailRef = {
  id?: InputMaybe<Scalars['ID']>;
  log?: InputMaybe<LMS_accountLogRef>;
  type?: InputMaybe<LMS_accountLogDetailType>;
  value?: InputMaybe<Scalars['String']>;
};

export enum LMS_accountLogDetailType {
  VIDEO_CHANGE_TIME = 'VIDEO_CHANGE_TIME',
  VIDEO_CHANGE_VOLUME = 'VIDEO_CHANGE_VOLUME'
}

export type LMS_accountLogDetailType_hash = {
  eq?: InputMaybe<LMS_accountLogDetailType>;
  in?: InputMaybe<Array<InputMaybe<LMS_accountLogDetailType>>>;
};

export type LMS_accountLogFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_accountLogFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_accountLogHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_accountLogFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_accountLogFilter>>>;
  type?: InputMaybe<LMS_logType_hash>;
};

export enum LMS_accountLogHasFilter {
  account = 'account',
  details = 'details',
  group = 'group',
  groupAccount = 'groupAccount',
  groupBlockConfig = 'groupBlockConfig',
  groupCourseConfig = 'groupCourseConfig',
  groupFormConfig = 'groupFormConfig',
  groupLessonConfig = 'groupLessonConfig',
  groupLessonMeetingConfig = 'groupLessonMeetingConfig',
  groupResourceConfig = 'groupResourceConfig',
  log = 'log',
  package = 'package',
  type = 'type'
}

export type LMS_accountLogPatch = {
  account?: InputMaybe<LMS_accountRef>;
  details?: InputMaybe<Array<LMS_accountLogDetailRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupBlockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  groupCourseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  groupFormConfig?: InputMaybe<LMS_groupFormConfigRef>;
  groupLessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  groupLessonMeetingConfig?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  groupResourceConfig?: InputMaybe<LMS_groupResourceConfigRef>;
  log?: InputMaybe<Account_logRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  type?: InputMaybe<LMS_logType>;
};

export type LMS_accountLogRef = {
  account?: InputMaybe<LMS_accountRef>;
  details?: InputMaybe<Array<LMS_accountLogDetailRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupBlockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  groupCourseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  groupFormConfig?: InputMaybe<LMS_groupFormConfigRef>;
  groupLessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  groupLessonMeetingConfig?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  groupResourceConfig?: InputMaybe<LMS_groupResourceConfigRef>;
  id?: InputMaybe<Scalars['ID']>;
  log?: InputMaybe<Account_logRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  type?: InputMaybe<LMS_logType>;
};

export type LMS_accountOrder = {
  asc?: InputMaybe<LMS_accountOrderable>;
  desc?: InputMaybe<LMS_accountOrderable>;
  then?: InputMaybe<LMS_accountOrder>;
};

export enum LMS_accountOrderable {
  createdAt = 'createdAt'
}

export type LMS_accountPatch = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  groupAccounts?: InputMaybe<Array<LMS_groupAccountRef>>;
  groupLessonTeacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  role?: InputMaybe<LMS_roleType>;
};

export type LMS_accountRef = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  groupAccounts?: InputMaybe<Array<LMS_groupAccountRef>>;
  groupLessonTeacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
  id?: InputMaybe<Scalars['ID']>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  role?: InputMaybe<LMS_roleType>;
};

export type LMS_block = {
  __typename?: 'LMS_block';
  authors: Array<LMS_account>;
  authorsAggregate?: Maybe<LMS_accountAggregateResult>;
  course: LMS_course;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  description?: Maybe<Scalars['String']>;
  forms: Array<LMS_form>;
  formsAggregate?: Maybe<LMS_formAggregateResult>;
  groupBlockConfigs: Array<LMS_groupBlockConfig>;
  groupBlockConfigsAggregate?: Maybe<LMS_groupBlockConfigAggregateResult>;
  id: Scalars['ID'];
  index: Scalars['Int'];
  lessons: Array<LMS_lesson>;
  lessonsAggregate?: Maybe<LMS_lessonAggregateResult>;
  name: Scalars['String'];
  package: LMS_PACKAGE;
  previousBlockVersion?: Maybe<LMS_block>;
  resources: Array<LMS_resource>;
  resourcesAggregate?: Maybe<LMS_resourceAggregateResult>;
  sections: Array<LMS_section>;
  sectionsAggregate?: Maybe<LMS_sectionAggregateResult>;
  thumbnail?: Maybe<LMS_thumbnail>;
  updatedAt: Scalars['DateTime'];
  version: LMS_courseVersion;
};


export type LMS_blockauthorsArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};


export type LMS_blockauthorsAggregateArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_blockcourseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type LMS_blockcreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_blockformsArgs = {
  filter?: InputMaybe<LMS_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formOrder>;
};


export type LMS_blockformsAggregateArgs = {
  filter?: InputMaybe<LMS_formFilter>;
};


export type LMS_blockgroupBlockConfigsArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupBlockConfigOrder>;
};


export type LMS_blockgroupBlockConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_blocklessonsArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonOrder>;
};


export type LMS_blocklessonsAggregateArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type LMS_blockpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_blockpreviousBlockVersionArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type LMS_blockresourcesArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};


export type LMS_blockresourcesAggregateArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
};


export type LMS_blocksectionsArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_sectionOrder>;
};


export type LMS_blocksectionsAggregateArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
};


export type LMS_blockthumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
};


export type LMS_blockversionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};

export type LMS_blockAggregateResult = {
  __typename?: 'LMS_blockAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_blockFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_blockFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_blockHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_blockFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_blockFilter>>>;
};

export enum LMS_blockHasFilter {
  authors = 'authors',
  course = 'course',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  forms = 'forms',
  groupBlockConfigs = 'groupBlockConfigs',
  index = 'index',
  lessons = 'lessons',
  name = 'name',
  package = 'package',
  previousBlockVersion = 'previousBlockVersion',
  resources = 'resources',
  sections = 'sections',
  thumbnail = 'thumbnail',
  updatedAt = 'updatedAt',
  version = 'version'
}

export type LMS_blockOrder = {
  asc?: InputMaybe<LMS_blockOrderable>;
  desc?: InputMaybe<LMS_blockOrderable>;
  then?: InputMaybe<LMS_blockOrder>;
};

export enum LMS_blockOrderable {
  createdAt = 'createdAt',
  description = 'description',
  index = 'index',
  name = 'name',
  updatedAt = 'updatedAt'
}

export type LMS_blockPatch = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  forms?: InputMaybe<Array<LMS_formRef>>;
  groupBlockConfigs?: InputMaybe<Array<LMS_groupBlockConfigRef>>;
  index?: InputMaybe<Scalars['Int']>;
  lessons?: InputMaybe<Array<LMS_lessonRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  previousBlockVersion?: InputMaybe<LMS_blockRef>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  version?: InputMaybe<LMS_courseVersionRef>;
};

export type LMS_blockRef = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  forms?: InputMaybe<Array<LMS_formRef>>;
  groupBlockConfigs?: InputMaybe<Array<LMS_groupBlockConfigRef>>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  lessons?: InputMaybe<Array<LMS_lessonRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  previousBlockVersion?: InputMaybe<LMS_blockRef>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  version?: InputMaybe<LMS_courseVersionRef>;
};

export type LMS_blockStudentProgress = {
  __typename?: 'LMS_blockStudentProgress';
  courseProgress: LMS_courseStudentProgress;
  formProgress: Array<LMS_formStudentProgress>;
  formProgressAggregate?: Maybe<LMS_formStudentProgressAggregateResult>;
  group: LMS_group;
  groupAccount: LMS_groupAccount;
  groupBlockConfig: LMS_groupBlockConfig;
  id: Scalars['ID'];
  lessonProgress: Array<LMS_lessonStudentProgress>;
  lessonProgressAggregate?: Maybe<LMS_lessonStudentProgressAggregateResult>;
  package?: Maybe<LMS_PACKAGE>;
  progress: Scalars['Int'];
  resourceProgress: Array<LMS_resourceStudentProgress>;
  resourceProgressAggregate?: Maybe<LMS_resourceStudentProgressAggregateResult>;
  score: Scalars['Int'];
  scoreDate?: Maybe<Scalars['DateTime']>;
  status: LMS_studentProgressStatus;
};


export type LMS_blockStudentProgresscourseProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
};


export type LMS_blockStudentProgressformProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};


export type LMS_blockStudentProgressformProgressAggregateArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
};


export type LMS_blockStudentProgressgroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_blockStudentProgressgroupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_blockStudentProgressgroupBlockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_blockStudentProgresslessonProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonStudentProgressOrder>;
};


export type LMS_blockStudentProgresslessonProgressAggregateArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
};


export type LMS_blockStudentProgresspackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_blockStudentProgressresourceProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};


export type LMS_blockStudentProgressresourceProgressAggregateArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
};

export type LMS_blockStudentProgressAggregateResult = {
  __typename?: 'LMS_blockStudentProgressAggregateResult';
  count?: Maybe<Scalars['Int']>;
  progressAvg?: Maybe<Scalars['Float']>;
  progressMax?: Maybe<Scalars['Int']>;
  progressMin?: Maybe<Scalars['Int']>;
  progressSum?: Maybe<Scalars['Int']>;
  scoreAvg?: Maybe<Scalars['Float']>;
  scoreDateMax?: Maybe<Scalars['DateTime']>;
  scoreDateMin?: Maybe<Scalars['DateTime']>;
  scoreMax?: Maybe<Scalars['Int']>;
  scoreMin?: Maybe<Scalars['Int']>;
  scoreSum?: Maybe<Scalars['Int']>;
};

export type LMS_blockStudentProgressFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_blockStudentProgressFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_blockStudentProgressHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_blockStudentProgressFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_blockStudentProgressFilter>>>;
  progress?: InputMaybe<IntFilter>;
  scoreDate?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<LMS_studentProgressStatus_hash>;
};

export enum LMS_blockStudentProgressHasFilter {
  courseProgress = 'courseProgress',
  formProgress = 'formProgress',
  group = 'group',
  groupAccount = 'groupAccount',
  groupBlockConfig = 'groupBlockConfig',
  lessonProgress = 'lessonProgress',
  package = 'package',
  progress = 'progress',
  resourceProgress = 'resourceProgress',
  score = 'score',
  scoreDate = 'scoreDate',
  status = 'status'
}

export type LMS_blockStudentProgressOrder = {
  asc?: InputMaybe<LMS_blockStudentProgressOrderable>;
  desc?: InputMaybe<LMS_blockStudentProgressOrderable>;
  then?: InputMaybe<LMS_blockStudentProgressOrder>;
};

export enum LMS_blockStudentProgressOrderable {
  progress = 'progress',
  score = 'score',
  scoreDate = 'scoreDate'
}

export type LMS_blockStudentProgressPatch = {
  courseProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  formProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupBlockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  lessonProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  resourceProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type LMS_blockStudentProgressRef = {
  courseProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  formProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupBlockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  id?: InputMaybe<Scalars['ID']>;
  lessonProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  resourceProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type LMS_contact = {
  __typename?: 'LMS_contact';
  contact: Contact;
  createdAt: Scalars['DateTime'];
  id: Scalars['ID'];
  package: LMS_PACKAGE;
  role: Array<LMS_roleType>;
};


export type LMS_contactcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type LMS_contactpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};

export type LMS_contactAggregateResult = {
  __typename?: 'LMS_contactAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_contactFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_contactFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_contactHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_contactFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_contactFilter>>>;
};

export enum LMS_contactHasFilter {
  contact = 'contact',
  createdAt = 'createdAt',
  package = 'package',
  role = 'role'
}

export type LMS_contactOrder = {
  asc?: InputMaybe<LMS_contactOrderable>;
  desc?: InputMaybe<LMS_contactOrderable>;
  then?: InputMaybe<LMS_contactOrder>;
};

export enum LMS_contactOrderable {
  createdAt = 'createdAt'
}

export type LMS_contactPatch = {
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  role?: InputMaybe<Array<LMS_roleType>>;
};

export type LMS_contactRef = {
  contact?: InputMaybe<ContactRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  role?: InputMaybe<Array<LMS_roleType>>;
};

export type LMS_course = {
  __typename?: 'LMS_course';
  authors: Array<LMS_account>;
  authorsAggregate?: Maybe<LMS_accountAggregateResult>;
  blocks: Array<LMS_block>;
  blocksAggregate?: Maybe<LMS_blockAggregateResult>;
  categories: Array<LMS_courseCategory>;
  categoriesAggregate?: Maybe<LMS_courseCategoryAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  deletedBy?: Maybe<LMS_account>;
  deletedDate?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  disabledBy?: Maybe<LMS_account>;
  disabledDate?: Maybe<Scalars['DateTime']>;
  forms: Array<LMS_form>;
  formsAggregate?: Maybe<LMS_formAggregateResult>;
  id: Scalars['ID'];
  isDeleted: Scalars['Boolean'];
  isDisabled: Scalars['Boolean'];
  lessons: Array<LMS_lesson>;
  lessonsAggregate?: Maybe<LMS_lessonAggregateResult>;
  name: Scalars['String'];
  package?: Maybe<LMS_PACKAGE>;
  products: Array<LMS_product>;
  productsAggregate?: Maybe<LMS_productAggregateResult>;
  resources: Array<LMS_resource>;
  resourcesAggregate?: Maybe<LMS_resourceAggregateResult>;
  sections: Array<LMS_section>;
  sectionsAggregate?: Maybe<LMS_sectionAggregateResult>;
  status?: Maybe<LMS_courseStatus>;
  thumbnail?: Maybe<LMS_thumbnail>;
  versions: Array<LMS_courseVersion>;
  versionsAggregate?: Maybe<LMS_courseVersionAggregateResult>;
};


export type LMS_courseauthorsArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};


export type LMS_courseauthorsAggregateArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_courseblocksArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockOrder>;
};


export type LMS_courseblocksAggregateArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type LMS_coursecategoriesArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseCategoryOrder>;
};


export type LMS_coursecategoriesAggregateArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
};


export type LMS_coursecreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_coursedeletedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_coursedisabledByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_courseformsArgs = {
  filter?: InputMaybe<LMS_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formOrder>;
};


export type LMS_courseformsAggregateArgs = {
  filter?: InputMaybe<LMS_formFilter>;
};


export type LMS_courselessonsArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonOrder>;
};


export type LMS_courselessonsAggregateArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type LMS_coursepackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_courseproductsArgs = {
  filter?: InputMaybe<LMS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_productOrder>;
};


export type LMS_courseproductsAggregateArgs = {
  filter?: InputMaybe<LMS_productFilter>;
};


export type LMS_courseresourcesArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};


export type LMS_courseresourcesAggregateArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
};


export type LMS_coursesectionsArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_sectionOrder>;
};


export type LMS_coursesectionsAggregateArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
};


export type LMS_coursethumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
};


export type LMS_courseversionsArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseVersionOrder>;
};


export type LMS_courseversionsAggregateArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};

export type LMS_courseAggregateResult = {
  __typename?: 'LMS_courseAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  deletedDateMax?: Maybe<Scalars['DateTime']>;
  deletedDateMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  disabledDateMax?: Maybe<Scalars['DateTime']>;
  disabledDateMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type LMS_courseCategory = {
  __typename?: 'LMS_courseCategory';
  color: Scalars['String'];
  courseVersions: Array<LMS_courseVersion>;
  courseVersionsAggregate?: Maybe<LMS_courseVersionAggregateResult>;
  courses: Array<LMS_course>;
  coursesAggregate?: Maybe<LMS_courseAggregateResult>;
  id: Scalars['ID'];
  name: Scalars['String'];
  package: LMS_PACKAGE;
};


export type LMS_courseCategorycourseVersionsArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseVersionOrder>;
};


export type LMS_courseCategorycourseVersionsAggregateArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};


export type LMS_courseCategorycoursesArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseOrder>;
};


export type LMS_courseCategorycoursesAggregateArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type LMS_courseCategorypackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};

export type LMS_courseCategoryAggregateResult = {
  __typename?: 'LMS_courseCategoryAggregateResult';
  colorMax?: Maybe<Scalars['String']>;
  colorMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type LMS_courseCategoryFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_courseCategoryFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_courseCategoryHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<LMS_courseCategoryFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_courseCategoryFilter>>>;
};

export enum LMS_courseCategoryHasFilter {
  color = 'color',
  courseVersions = 'courseVersions',
  courses = 'courses',
  name = 'name',
  package = 'package'
}

export type LMS_courseCategoryOrder = {
  asc?: InputMaybe<LMS_courseCategoryOrderable>;
  desc?: InputMaybe<LMS_courseCategoryOrderable>;
  then?: InputMaybe<LMS_courseCategoryOrder>;
};

export enum LMS_courseCategoryOrderable {
  color = 'color',
  name = 'name'
}

export type LMS_courseCategoryPatch = {
  color?: InputMaybe<Scalars['String']>;
  courseVersions?: InputMaybe<Array<LMS_courseVersionRef>>;
  courses?: InputMaybe<Array<LMS_courseRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
};

export type LMS_courseCategoryRef = {
  color?: InputMaybe<Scalars['String']>;
  courseVersions?: InputMaybe<Array<LMS_courseVersionRef>>;
  courses?: InputMaybe<Array<LMS_courseRef>>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
};

export type LMS_courseFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_courseFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_courseHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<LMS_courseFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_courseFilter>>>;
  status?: InputMaybe<LMS_courseStatus_hash>;
};

export enum LMS_courseHasFilter {
  authors = 'authors',
  blocks = 'blocks',
  categories = 'categories',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  deletedBy = 'deletedBy',
  deletedDate = 'deletedDate',
  description = 'description',
  disabledBy = 'disabledBy',
  disabledDate = 'disabledDate',
  forms = 'forms',
  isDeleted = 'isDeleted',
  isDisabled = 'isDisabled',
  lessons = 'lessons',
  name = 'name',
  package = 'package',
  products = 'products',
  resources = 'resources',
  sections = 'sections',
  status = 'status',
  thumbnail = 'thumbnail',
  versions = 'versions'
}

export type LMS_courseOrder = {
  asc?: InputMaybe<LMS_courseOrderable>;
  desc?: InputMaybe<LMS_courseOrderable>;
  then?: InputMaybe<LMS_courseOrder>;
};

export enum LMS_courseOrderable {
  createdAt = 'createdAt',
  deletedDate = 'deletedDate',
  description = 'description',
  disabledDate = 'disabledDate',
  name = 'name'
}

export type LMS_coursePatch = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  blocks?: InputMaybe<Array<LMS_blockRef>>;
  categories?: InputMaybe<Array<LMS_courseCategoryRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  deletedBy?: InputMaybe<LMS_accountRef>;
  deletedDate?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  disabledBy?: InputMaybe<LMS_accountRef>;
  disabledDate?: InputMaybe<Scalars['DateTime']>;
  forms?: InputMaybe<Array<LMS_formRef>>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  lessons?: InputMaybe<Array<LMS_lessonRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  products?: InputMaybe<Array<LMS_productRef>>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
  status?: InputMaybe<LMS_courseStatus>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  versions?: InputMaybe<Array<LMS_courseVersionRef>>;
};

export type LMS_courseRef = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  blocks?: InputMaybe<Array<LMS_blockRef>>;
  categories?: InputMaybe<Array<LMS_courseCategoryRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  deletedBy?: InputMaybe<LMS_accountRef>;
  deletedDate?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  disabledBy?: InputMaybe<LMS_accountRef>;
  disabledDate?: InputMaybe<Scalars['DateTime']>;
  forms?: InputMaybe<Array<LMS_formRef>>;
  id?: InputMaybe<Scalars['ID']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  lessons?: InputMaybe<Array<LMS_lessonRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  products?: InputMaybe<Array<LMS_productRef>>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
  status?: InputMaybe<LMS_courseStatus>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  versions?: InputMaybe<Array<LMS_courseVersionRef>>;
};

export enum LMS_courseStatus {
  ACTIVE = 'ACTIVE',
  ARCHIVED = 'ARCHIVED',
  DELETED = 'DELETED',
  INACTIVE = 'INACTIVE'
}

export type LMS_courseStatus_hash = {
  eq?: InputMaybe<LMS_courseStatus>;
  in?: InputMaybe<Array<InputMaybe<LMS_courseStatus>>>;
};

export type LMS_courseStudentProgress = {
  __typename?: 'LMS_courseStudentProgress';
  blockProgress: Array<LMS_blockStudentProgress>;
  blockProgressAggregate?: Maybe<LMS_blockStudentProgressAggregateResult>;
  formProgress: Array<LMS_formStudentProgress>;
  formProgressAggregate?: Maybe<LMS_formStudentProgressAggregateResult>;
  group: LMS_group;
  groupAccount: LMS_groupAccount;
  groupCourseConfig: LMS_groupCourseConfig;
  id: Scalars['ID'];
  lessonProgress: Array<LMS_lessonStudentProgress>;
  lessonProgressAggregate?: Maybe<LMS_lessonStudentProgressAggregateResult>;
  package?: Maybe<LMS_PACKAGE>;
  progress: Scalars['Int'];
  resourceProgress: Array<LMS_resourceStudentProgress>;
  resourceProgressAggregate?: Maybe<LMS_resourceStudentProgressAggregateResult>;
  score: Scalars['Int'];
  scoreDate?: Maybe<Scalars['DateTime']>;
  status: LMS_studentProgressStatus;
};


export type LMS_courseStudentProgressblockProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockStudentProgressOrder>;
};


export type LMS_courseStudentProgressblockProgressAggregateArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
};


export type LMS_courseStudentProgressformProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};


export type LMS_courseStudentProgressformProgressAggregateArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
};


export type LMS_courseStudentProgressgroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_courseStudentProgressgroupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_courseStudentProgressgroupCourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_courseStudentProgresslessonProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonStudentProgressOrder>;
};


export type LMS_courseStudentProgresslessonProgressAggregateArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
};


export type LMS_courseStudentProgresspackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_courseStudentProgressresourceProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};


export type LMS_courseStudentProgressresourceProgressAggregateArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
};

export type LMS_courseStudentProgressAggregateResult = {
  __typename?: 'LMS_courseStudentProgressAggregateResult';
  count?: Maybe<Scalars['Int']>;
  progressAvg?: Maybe<Scalars['Float']>;
  progressMax?: Maybe<Scalars['Int']>;
  progressMin?: Maybe<Scalars['Int']>;
  progressSum?: Maybe<Scalars['Int']>;
  scoreAvg?: Maybe<Scalars['Float']>;
  scoreDateMax?: Maybe<Scalars['DateTime']>;
  scoreDateMin?: Maybe<Scalars['DateTime']>;
  scoreMax?: Maybe<Scalars['Int']>;
  scoreMin?: Maybe<Scalars['Int']>;
  scoreSum?: Maybe<Scalars['Int']>;
};

export type LMS_courseStudentProgressFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_courseStudentProgressFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_courseStudentProgressHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_courseStudentProgressFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_courseStudentProgressFilter>>>;
  progress?: InputMaybe<IntFilter>;
  scoreDate?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<LMS_studentProgressStatus_hash>;
};

export enum LMS_courseStudentProgressHasFilter {
  blockProgress = 'blockProgress',
  formProgress = 'formProgress',
  group = 'group',
  groupAccount = 'groupAccount',
  groupCourseConfig = 'groupCourseConfig',
  lessonProgress = 'lessonProgress',
  package = 'package',
  progress = 'progress',
  resourceProgress = 'resourceProgress',
  score = 'score',
  scoreDate = 'scoreDate',
  status = 'status'
}

export type LMS_courseStudentProgressOrder = {
  asc?: InputMaybe<LMS_courseStudentProgressOrderable>;
  desc?: InputMaybe<LMS_courseStudentProgressOrderable>;
  then?: InputMaybe<LMS_courseStudentProgressOrder>;
};

export enum LMS_courseStudentProgressOrderable {
  progress = 'progress',
  score = 'score',
  scoreDate = 'scoreDate'
}

export type LMS_courseStudentProgressPatch = {
  blockProgress?: InputMaybe<Array<LMS_blockStudentProgressRef>>;
  formProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupCourseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  lessonProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  resourceProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type LMS_courseStudentProgressRef = {
  blockProgress?: InputMaybe<Array<LMS_blockStudentProgressRef>>;
  formProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupCourseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  id?: InputMaybe<Scalars['ID']>;
  lessonProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  resourceProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type LMS_courseVersion = {
  __typename?: 'LMS_courseVersion';
  authors: Array<LMS_account>;
  authorsAggregate?: Maybe<LMS_accountAggregateResult>;
  blocks: Array<LMS_block>;
  blocksAggregate?: Maybe<LMS_blockAggregateResult>;
  buyProduct?: Maybe<LMS_product>;
  categories: Array<LMS_courseCategory>;
  categoriesAggregate?: Maybe<LMS_courseCategoryAggregateResult>;
  childVersions: Array<LMS_courseVersion>;
  childVersionsAggregate?: Maybe<LMS_courseVersionAggregateResult>;
  course?: Maybe<LMS_course>;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  deletedBy?: Maybe<LMS_account>;
  deletedDate?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  disabledBy?: Maybe<LMS_account>;
  disabledDate?: Maybe<Scalars['DateTime']>;
  forms: Array<LMS_form>;
  formsAggregate?: Maybe<LMS_formAggregateResult>;
  groupCourseConfigs: Array<LMS_groupCourseConfig>;
  groupCourseConfigsAggregate?: Maybe<LMS_groupCourseConfigAggregateResult>;
  groups: Array<LMS_group>;
  groupsAggregate?: Maybe<LMS_groupAggregateResult>;
  id: Scalars['ID'];
  isDeleted: Scalars['Boolean'];
  isDisabled: Scalars['Boolean'];
  isInCampaign: Scalars['Boolean'];
  lessons: Array<LMS_lesson>;
  lessonsAggregate?: Maybe<LMS_lessonAggregateResult>;
  name: Scalars['String'];
  package: LMS_PACKAGE;
  parentVersion?: Maybe<LMS_courseVersion>;
  resources: Array<LMS_resource>;
  resourcesAggregate?: Maybe<LMS_resourceAggregateResult>;
  saleProduct?: Maybe<LMS_product>;
  sections: Array<LMS_section>;
  sectionsAggregate?: Maybe<LMS_sectionAggregateResult>;
  status: LMS_courseVersionStatus;
  thumbnail?: Maybe<LMS_thumbnail>;
  version: Scalars['Int'];
};


export type LMS_courseVersionauthorsArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};


export type LMS_courseVersionauthorsAggregateArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_courseVersionblocksArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockOrder>;
};


export type LMS_courseVersionblocksAggregateArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type LMS_courseVersionbuyProductArgs = {
  filter?: InputMaybe<LMS_productFilter>;
};


export type LMS_courseVersioncategoriesArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseCategoryOrder>;
};


export type LMS_courseVersioncategoriesAggregateArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
};


export type LMS_courseVersionchildVersionsArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseVersionOrder>;
};


export type LMS_courseVersionchildVersionsAggregateArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};


export type LMS_courseVersioncourseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type LMS_courseVersioncreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_courseVersiondeletedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_courseVersiondisabledByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_courseVersionformsArgs = {
  filter?: InputMaybe<LMS_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formOrder>;
};


export type LMS_courseVersionformsAggregateArgs = {
  filter?: InputMaybe<LMS_formFilter>;
};


export type LMS_courseVersiongroupCourseConfigsArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupCourseConfigOrder>;
};


export type LMS_courseVersiongroupCourseConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_courseVersiongroupsArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupOrder>;
};


export type LMS_courseVersiongroupsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_courseVersionlessonsArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonOrder>;
};


export type LMS_courseVersionlessonsAggregateArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type LMS_courseVersionpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_courseVersionparentVersionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};


export type LMS_courseVersionresourcesArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};


export type LMS_courseVersionresourcesAggregateArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
};


export type LMS_courseVersionsaleProductArgs = {
  filter?: InputMaybe<LMS_productFilter>;
};


export type LMS_courseVersionsectionsArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_sectionOrder>;
};


export type LMS_courseVersionsectionsAggregateArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
};


export type LMS_courseVersionthumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
};

export type LMS_courseVersionAggregateResult = {
  __typename?: 'LMS_courseVersionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  deletedDateMax?: Maybe<Scalars['DateTime']>;
  deletedDateMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  disabledDateMax?: Maybe<Scalars['DateTime']>;
  disabledDateMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  versionAvg?: Maybe<Scalars['Float']>;
  versionMax?: Maybe<Scalars['Int']>;
  versionMin?: Maybe<Scalars['Int']>;
  versionSum?: Maybe<Scalars['Int']>;
};

export type LMS_courseVersionFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_courseVersionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_courseVersionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isInCampaign?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<LMS_courseVersionFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_courseVersionFilter>>>;
  status?: InputMaybe<LMS_courseVersionStatus_hash>;
};

export enum LMS_courseVersionHasFilter {
  authors = 'authors',
  blocks = 'blocks',
  buyProduct = 'buyProduct',
  categories = 'categories',
  childVersions = 'childVersions',
  course = 'course',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  deletedBy = 'deletedBy',
  deletedDate = 'deletedDate',
  description = 'description',
  disabledBy = 'disabledBy',
  disabledDate = 'disabledDate',
  forms = 'forms',
  groupCourseConfigs = 'groupCourseConfigs',
  groups = 'groups',
  isDeleted = 'isDeleted',
  isDisabled = 'isDisabled',
  isInCampaign = 'isInCampaign',
  lessons = 'lessons',
  name = 'name',
  package = 'package',
  parentVersion = 'parentVersion',
  resources = 'resources',
  saleProduct = 'saleProduct',
  sections = 'sections',
  status = 'status',
  thumbnail = 'thumbnail',
  version = 'version'
}

export type LMS_courseVersionOrder = {
  asc?: InputMaybe<LMS_courseVersionOrderable>;
  desc?: InputMaybe<LMS_courseVersionOrderable>;
  then?: InputMaybe<LMS_courseVersionOrder>;
};

export enum LMS_courseVersionOrderable {
  createdAt = 'createdAt',
  deletedDate = 'deletedDate',
  description = 'description',
  disabledDate = 'disabledDate',
  name = 'name',
  version = 'version'
}

export type LMS_courseVersionPatch = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  blocks?: InputMaybe<Array<LMS_blockRef>>;
  buyProduct?: InputMaybe<LMS_productRef>;
  categories?: InputMaybe<Array<LMS_courseCategoryRef>>;
  childVersions?: InputMaybe<Array<LMS_courseVersionRef>>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  deletedBy?: InputMaybe<LMS_accountRef>;
  deletedDate?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  disabledBy?: InputMaybe<LMS_accountRef>;
  disabledDate?: InputMaybe<Scalars['DateTime']>;
  forms?: InputMaybe<Array<LMS_formRef>>;
  groupCourseConfigs?: InputMaybe<Array<LMS_groupCourseConfigRef>>;
  groups?: InputMaybe<Array<LMS_groupRef>>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isInCampaign?: InputMaybe<Scalars['Boolean']>;
  lessons?: InputMaybe<Array<LMS_lessonRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  parentVersion?: InputMaybe<LMS_courseVersionRef>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  saleProduct?: InputMaybe<LMS_productRef>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
  status?: InputMaybe<LMS_courseVersionStatus>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  version?: InputMaybe<Scalars['Int']>;
};

export type LMS_courseVersionRef = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  blocks?: InputMaybe<Array<LMS_blockRef>>;
  buyProduct?: InputMaybe<LMS_productRef>;
  categories?: InputMaybe<Array<LMS_courseCategoryRef>>;
  childVersions?: InputMaybe<Array<LMS_courseVersionRef>>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  deletedBy?: InputMaybe<LMS_accountRef>;
  deletedDate?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  disabledBy?: InputMaybe<LMS_accountRef>;
  disabledDate?: InputMaybe<Scalars['DateTime']>;
  forms?: InputMaybe<Array<LMS_formRef>>;
  groupCourseConfigs?: InputMaybe<Array<LMS_groupCourseConfigRef>>;
  groups?: InputMaybe<Array<LMS_groupRef>>;
  id?: InputMaybe<Scalars['ID']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isInCampaign?: InputMaybe<Scalars['Boolean']>;
  lessons?: InputMaybe<Array<LMS_lessonRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  parentVersion?: InputMaybe<LMS_courseVersionRef>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  saleProduct?: InputMaybe<LMS_productRef>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
  status?: InputMaybe<LMS_courseVersionStatus>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  version?: InputMaybe<Scalars['Int']>;
};

export enum LMS_courseVersionStatus {
  ACTIVE = 'ACTIVE',
  ARCHIVED = 'ARCHIVED',
  DELETED = 'DELETED',
  DRAFT = 'DRAFT',
  INACTIVE = 'INACTIVE',
  PUBLISHED = 'PUBLISHED'
}

export type LMS_courseVersionStatus_hash = {
  eq?: InputMaybe<LMS_courseVersionStatus>;
  in?: InputMaybe<Array<InputMaybe<LMS_courseVersionStatus>>>;
};

export type LMS_form = {
  __typename?: 'LMS_form';
  block: LMS_block;
  course: LMS_course;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  form: FormBuilder_form;
  groupFormConfigs: Array<LMS_groupFormConfig>;
  groupFormConfigsAggregate?: Maybe<LMS_groupFormConfigAggregateResult>;
  id: Scalars['ID'];
  lesson: LMS_lesson;
  package: LMS_PACKAGE;
  previousFormVersion?: Maybe<LMS_form>;
  version: LMS_courseVersion;
};


export type LMS_formblockArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type LMS_formcourseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type LMS_formcreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_formformArgs = {
  filter?: InputMaybe<FormBuilder_formFilter>;
};


export type LMS_formgroupFormConfigsArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};


export type LMS_formgroupFormConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_formlessonArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type LMS_formpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_formpreviousFormVersionArgs = {
  filter?: InputMaybe<LMS_formFilter>;
};


export type LMS_formversionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};

export type LMS_formAggregateResult = {
  __typename?: 'LMS_formAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_formFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_formFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_formHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_formFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_formFilter>>>;
};

export enum LMS_formHasFilter {
  block = 'block',
  course = 'course',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  form = 'form',
  groupFormConfigs = 'groupFormConfigs',
  lesson = 'lesson',
  package = 'package',
  previousFormVersion = 'previousFormVersion',
  version = 'version'
}

export type LMS_formOrder = {
  asc?: InputMaybe<LMS_formOrderable>;
  desc?: InputMaybe<LMS_formOrderable>;
  then?: InputMaybe<LMS_formOrder>;
};

export enum LMS_formOrderable {
  createdAt = 'createdAt'
}

export type LMS_formPatch = {
  block?: InputMaybe<LMS_blockRef>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  form?: InputMaybe<FormBuilder_formRef>;
  groupFormConfigs?: InputMaybe<Array<LMS_groupFormConfigRef>>;
  lesson?: InputMaybe<LMS_lessonRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  previousFormVersion?: InputMaybe<LMS_formRef>;
  version?: InputMaybe<LMS_courseVersionRef>;
};

export type LMS_formRef = {
  block?: InputMaybe<LMS_blockRef>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  form?: InputMaybe<FormBuilder_formRef>;
  groupFormConfigs?: InputMaybe<Array<LMS_groupFormConfigRef>>;
  id?: InputMaybe<Scalars['ID']>;
  lesson?: InputMaybe<LMS_lessonRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  previousFormVersion?: InputMaybe<LMS_formRef>;
  version?: InputMaybe<LMS_courseVersionRef>;
};

export type LMS_formStudentProgress = {
  __typename?: 'LMS_formStudentProgress';
  blockProgress: LMS_blockStudentProgress;
  courseProgress: LMS_courseStudentProgress;
  formAttempts: Array<LMS_groupAccountFormAttempt>;
  formAttemptsAggregate?: Maybe<LMS_groupAccountFormAttemptAggregateResult>;
  group: LMS_group;
  groupAccount: LMS_groupAccount;
  groupFormConfig: LMS_groupFormConfig;
  id: Scalars['ID'];
  lessonProgress: LMS_lessonStudentProgress;
  package?: Maybe<LMS_PACKAGE>;
  progress: Scalars['Int'];
  score: Scalars['Int'];
  scoreDate?: Maybe<Scalars['DateTime']>;
  status: LMS_studentProgressStatus;
};


export type LMS_formStudentProgressblockProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
};


export type LMS_formStudentProgresscourseProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
};


export type LMS_formStudentProgressformAttemptsArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAttemptOrder>;
};


export type LMS_formStudentProgressformAttemptsAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
};


export type LMS_formStudentProgressgroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_formStudentProgressgroupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_formStudentProgressgroupFormConfigArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_formStudentProgresslessonProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
};


export type LMS_formStudentProgresspackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};

export type LMS_formStudentProgressAggregateResult = {
  __typename?: 'LMS_formStudentProgressAggregateResult';
  count?: Maybe<Scalars['Int']>;
  progressAvg?: Maybe<Scalars['Float']>;
  progressMax?: Maybe<Scalars['Int']>;
  progressMin?: Maybe<Scalars['Int']>;
  progressSum?: Maybe<Scalars['Int']>;
  scoreAvg?: Maybe<Scalars['Float']>;
  scoreDateMax?: Maybe<Scalars['DateTime']>;
  scoreDateMin?: Maybe<Scalars['DateTime']>;
  scoreMax?: Maybe<Scalars['Int']>;
  scoreMin?: Maybe<Scalars['Int']>;
  scoreSum?: Maybe<Scalars['Int']>;
};

export type LMS_formStudentProgressFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_formStudentProgressFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_formStudentProgressHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_formStudentProgressFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_formStudentProgressFilter>>>;
  progress?: InputMaybe<IntFilter>;
  scoreDate?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<LMS_studentProgressStatus_hash>;
};

export enum LMS_formStudentProgressHasFilter {
  blockProgress = 'blockProgress',
  courseProgress = 'courseProgress',
  formAttempts = 'formAttempts',
  group = 'group',
  groupAccount = 'groupAccount',
  groupFormConfig = 'groupFormConfig',
  lessonProgress = 'lessonProgress',
  package = 'package',
  progress = 'progress',
  score = 'score',
  scoreDate = 'scoreDate',
  status = 'status'
}

export type LMS_formStudentProgressOrder = {
  asc?: InputMaybe<LMS_formStudentProgressOrderable>;
  desc?: InputMaybe<LMS_formStudentProgressOrderable>;
  then?: InputMaybe<LMS_formStudentProgressOrder>;
};

export enum LMS_formStudentProgressOrderable {
  progress = 'progress',
  score = 'score',
  scoreDate = 'scoreDate'
}

export type LMS_formStudentProgressPatch = {
  blockProgress?: InputMaybe<LMS_blockStudentProgressRef>;
  courseProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  formAttempts?: InputMaybe<Array<LMS_groupAccountFormAttemptRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupFormConfig?: InputMaybe<LMS_groupFormConfigRef>;
  lessonProgress?: InputMaybe<LMS_lessonStudentProgressRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type LMS_formStudentProgressRef = {
  blockProgress?: InputMaybe<LMS_blockStudentProgressRef>;
  courseProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  formAttempts?: InputMaybe<Array<LMS_groupAccountFormAttemptRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupFormConfig?: InputMaybe<LMS_groupFormConfigRef>;
  id?: InputMaybe<Scalars['ID']>;
  lessonProgress?: InputMaybe<LMS_lessonStudentProgressRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type LMS_group = {
  __typename?: 'LMS_group';
  activeBy?: Maybe<LMS_account>;
  activeDate?: Maybe<Scalars['DateTime']>;
  archivedBy?: Maybe<LMS_account>;
  archivedDate?: Maybe<Scalars['DateTime']>;
  authors: Array<LMS_account>;
  authorsAggregate?: Maybe<LMS_accountAggregateResult>;
  blockConfigs: Array<LMS_groupBlockConfig>;
  blockConfigsAggregate?: Maybe<LMS_groupBlockConfigAggregateResult>;
  blockStudentProgress: Array<LMS_blockStudentProgress>;
  blockStudentProgressAggregate?: Maybe<LMS_blockStudentProgressAggregateResult>;
  courseConfig: LMS_groupCourseConfig;
  courseStudentProgress: Array<LMS_courseStudentProgress>;
  courseStudentProgressAggregate?: Maybe<LMS_courseStudentProgressAggregateResult>;
  courseVersion: LMS_courseVersion;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  deletedBy?: Maybe<LMS_account>;
  deletedDate?: Maybe<Scalars['DateTime']>;
  disabledBy?: Maybe<LMS_account>;
  disabledDate?: Maybe<Scalars['DateTime']>;
  formAttemps: Array<LMS_groupAccountFormAttempt>;
  formAttempsAggregate?: Maybe<LMS_groupAccountFormAttemptAggregateResult>;
  formConfigs: Array<LMS_groupFormConfig>;
  formConfigsAggregate?: Maybe<LMS_groupFormConfigAggregateResult>;
  formStudentProgress: Array<LMS_formStudentProgress>;
  formStudentProgressAggregate?: Maybe<LMS_formStudentProgressAggregateResult>;
  groupAccounts: Array<LMS_groupAccount>;
  groupAccountsAggregate?: Maybe<LMS_groupAccountAggregateResult>;
  id: Scalars['ID'];
  lessonConfigs: Array<LMS_groupLessonConfig>;
  lessonConfigsAggregate?: Maybe<LMS_groupLessonConfigAggregateResult>;
  lessonStudentProgress: Array<LMS_lessonStudentProgress>;
  lessonStudentProgressAggregate?: Maybe<LMS_lessonStudentProgressAggregateResult>;
  lessonTeacherConfigs: Array<LMS_groupLessonTeacherConfig>;
  lessonTeacherConfigsAggregate?: Maybe<LMS_groupLessonTeacherConfigAggregateResult>;
  logs: Array<LMS_accountLog>;
  logsAggregate?: Maybe<LMS_accountLogAggregateResult>;
  meetingConfigs: Array<LMS_groupLessonMeetingConfig>;
  meetingConfigsAggregate?: Maybe<LMS_groupLessonMeetingConfigAggregateResult>;
  meetingStudentProgress: Array<LMS_meetingStudentProgress>;
  meetingStudentProgressAggregate?: Maybe<LMS_meetingStudentProgressAggregateResult>;
  name: Scalars['String'];
  package: LMS_PACKAGE;
  resourceConfigs: Array<LMS_groupResourceConfig>;
  resourceConfigsAggregate?: Maybe<LMS_groupResourceConfigAggregateResult>;
  resourceStudentProgress: Array<LMS_resourceStudentProgress>;
  resourceStudentProgressAggregate?: Maybe<LMS_resourceStudentProgressAggregateResult>;
  status: LMS_groupStatus;
  thumbnail?: Maybe<LMS_thumbnail>;
};


export type LMS_groupactiveByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_grouparchivedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_groupauthorsArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};


export type LMS_groupauthorsAggregateArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_groupblockConfigsArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupBlockConfigOrder>;
};


export type LMS_groupblockConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_groupblockStudentProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockStudentProgressOrder>;
};


export type LMS_groupblockStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
};


export type LMS_groupcourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_groupcourseStudentProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseStudentProgressOrder>;
};


export type LMS_groupcourseStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
};


export type LMS_groupcourseVersionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};


export type LMS_groupcreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_groupdeletedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_groupdisabledByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_groupformAttempsArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAttemptOrder>;
};


export type LMS_groupformAttempsAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
};


export type LMS_groupformConfigsArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};


export type LMS_groupformConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_groupformStudentProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};


export type LMS_groupformStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
};


export type LMS_groupgroupAccountsArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountOrder>;
};


export type LMS_groupgroupAccountsAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_grouplessonConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonConfigOrder>;
};


export type LMS_grouplessonConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_grouplessonStudentProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonStudentProgressOrder>;
};


export type LMS_grouplessonStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
};


export type LMS_grouplessonTeacherConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};


export type LMS_grouplessonTeacherConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
};


export type LMS_grouplogsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_grouplogsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type LMS_groupmeetingConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_groupmeetingConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
};


export type LMS_groupmeetingStudentProgressArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_meetingStudentProgressOrder>;
};


export type LMS_groupmeetingStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
};


export type LMS_grouppackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupresourceConfigsArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};


export type LMS_groupresourceConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type LMS_groupresourceStudentProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};


export type LMS_groupresourceStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
};


export type LMS_groupthumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
};

export type LMS_groupAccount = {
  __typename?: 'LMS_groupAccount';
  account: LMS_account;
  blockStudentProgress: Array<LMS_blockStudentProgress>;
  blockStudentProgressAggregate?: Maybe<LMS_blockStudentProgressAggregateResult>;
  courseStudentProgress?: Maybe<LMS_courseStudentProgress>;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  formAnswers: Array<LMS_groupAccountFormAnswer>;
  formAnswersAggregate?: Maybe<LMS_groupAccountFormAnswerAggregateResult>;
  formAttempts: Array<Maybe<LMS_groupAccountFormAttempt>>;
  formAttemptsAggregate?: Maybe<LMS_groupAccountFormAttemptAggregateResult>;
  formStudentProgress: Array<LMS_formStudentProgress>;
  formStudentProgressAggregate?: Maybe<LMS_formStudentProgressAggregateResult>;
  group: LMS_group;
  groupLessonTeacherConfigs: Array<LMS_groupLessonTeacherConfig>;
  groupLessonTeacherConfigsAggregate?: Maybe<LMS_groupLessonTeacherConfigAggregateResult>;
  id: Scalars['ID'];
  lessonStudentProgress: Array<LMS_lessonStudentProgress>;
  lessonStudentProgressAggregate?: Maybe<LMS_lessonStudentProgressAggregateResult>;
  logs: Array<LMS_accountLog>;
  logsAggregate?: Maybe<LMS_accountLogAggregateResult>;
  meetingStudentProgress: Array<LMS_meetingStudentProgress>;
  meetingStudentProgressAggregate?: Maybe<LMS_meetingStudentProgressAggregateResult>;
  package: LMS_PACKAGE;
  resourceStudentProgress: Array<LMS_resourceStudentProgress>;
  resourceStudentProgressAggregate?: Maybe<LMS_resourceStudentProgressAggregateResult>;
  role: LMS_roleType;
};


export type LMS_groupAccountaccountArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_groupAccountblockStudentProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockStudentProgressOrder>;
};


export type LMS_groupAccountblockStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
};


export type LMS_groupAccountcourseStudentProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
};


export type LMS_groupAccountcreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_groupAccountformAnswersArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAnswerOrder>;
};


export type LMS_groupAccountformAnswersAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
};


export type LMS_groupAccountformAttemptsArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAttemptOrder>;
};


export type LMS_groupAccountformAttemptsAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
};


export type LMS_groupAccountformStudentProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};


export type LMS_groupAccountformStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
};


export type LMS_groupAccountgroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_groupAccountgroupLessonTeacherConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};


export type LMS_groupAccountgroupLessonTeacherConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
};


export type LMS_groupAccountlessonStudentProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonStudentProgressOrder>;
};


export type LMS_groupAccountlessonStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
};


export type LMS_groupAccountlogsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_groupAccountlogsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type LMS_groupAccountmeetingStudentProgressArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_meetingStudentProgressOrder>;
};


export type LMS_groupAccountmeetingStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
};


export type LMS_groupAccountpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupAccountresourceStudentProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};


export type LMS_groupAccountresourceStudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
};

export type LMS_groupAccountAggregateResult = {
  __typename?: 'LMS_groupAccountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_groupAccountFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupAccountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupAccountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_groupAccountFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupAccountFilter>>>;
  role?: InputMaybe<LMS_roleType_exact>;
};

export type LMS_groupAccountFormAnswer = {
  __typename?: 'LMS_groupAccountFormAnswer';
  boolean?: Maybe<Scalars['Boolean']>;
  groupAccount?: Maybe<LMS_groupAccount>;
  groupAccountFormAttempt: LMS_groupAccountFormAttempt;
  groupFormConfig: LMS_groupFormConfig;
  id: Scalars['ID'];
  input: FormBuilder_input;
  multipleChoice: Array<FormBuilder_inputMultipleChoiceOption>;
  multipleChoiceAggregate?: Maybe<FormBuilder_inputMultipleChoiceOptionAggregateResult>;
  number?: Maybe<Scalars['Float']>;
  package: LMS_PACKAGE;
  score?: Maybe<Scalars['Float']>;
  text?: Maybe<Scalars['String']>;
};


export type LMS_groupAccountFormAnswergroupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_groupAccountFormAnswergroupAccountFormAttemptArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
};


export type LMS_groupAccountFormAnswergroupFormConfigArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_groupAccountFormAnswerinputArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
};


export type LMS_groupAccountFormAnswermultipleChoiceArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputMultipleChoiceOptionOrder>;
};


export type LMS_groupAccountFormAnswermultipleChoiceAggregateArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
};


export type LMS_groupAccountFormAnswerpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};

export type LMS_groupAccountFormAnswerAggregateResult = {
  __typename?: 'LMS_groupAccountFormAnswerAggregateResult';
  count?: Maybe<Scalars['Int']>;
  numberAvg?: Maybe<Scalars['Float']>;
  numberMax?: Maybe<Scalars['Float']>;
  numberMin?: Maybe<Scalars['Float']>;
  numberSum?: Maybe<Scalars['Float']>;
  scoreAvg?: Maybe<Scalars['Float']>;
  scoreMax?: Maybe<Scalars['Float']>;
  scoreMin?: Maybe<Scalars['Float']>;
  scoreSum?: Maybe<Scalars['Float']>;
  textMax?: Maybe<Scalars['String']>;
  textMin?: Maybe<Scalars['String']>;
};

export type LMS_groupAccountFormAnswerFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupAccountFormAnswerFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupAccountFormAnswerHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupAccountFormAnswerFilter>>>;
};

export enum LMS_groupAccountFormAnswerHasFilter {
  boolean = 'boolean',
  groupAccount = 'groupAccount',
  groupAccountFormAttempt = 'groupAccountFormAttempt',
  groupFormConfig = 'groupFormConfig',
  input = 'input',
  multipleChoice = 'multipleChoice',
  number = 'number',
  package = 'package',
  score = 'score',
  text = 'text'
}

export type LMS_groupAccountFormAnswerOrder = {
  asc?: InputMaybe<LMS_groupAccountFormAnswerOrderable>;
  desc?: InputMaybe<LMS_groupAccountFormAnswerOrderable>;
  then?: InputMaybe<LMS_groupAccountFormAnswerOrder>;
};

export enum LMS_groupAccountFormAnswerOrderable {
  number = 'number',
  score = 'score',
  text = 'text'
}

export type LMS_groupAccountFormAnswerPatch = {
  boolean?: InputMaybe<Scalars['Boolean']>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupAccountFormAttempt?: InputMaybe<LMS_groupAccountFormAttemptRef>;
  groupFormConfig?: InputMaybe<LMS_groupFormConfigRef>;
  input?: InputMaybe<FormBuilder_inputRef>;
  multipleChoice?: InputMaybe<Array<FormBuilder_inputMultipleChoiceOptionRef>>;
  number?: InputMaybe<Scalars['Float']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  score?: InputMaybe<Scalars['Float']>;
  text?: InputMaybe<Scalars['String']>;
};

export type LMS_groupAccountFormAnswerRef = {
  boolean?: InputMaybe<Scalars['Boolean']>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupAccountFormAttempt?: InputMaybe<LMS_groupAccountFormAttemptRef>;
  groupFormConfig?: InputMaybe<LMS_groupFormConfigRef>;
  id?: InputMaybe<Scalars['ID']>;
  input?: InputMaybe<FormBuilder_inputRef>;
  multipleChoice?: InputMaybe<Array<FormBuilder_inputMultipleChoiceOptionRef>>;
  number?: InputMaybe<Scalars['Float']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  score?: InputMaybe<Scalars['Float']>;
  text?: InputMaybe<Scalars['String']>;
};

export type LMS_groupAccountFormAttempt = {
  __typename?: 'LMS_groupAccountFormAttempt';
  answers: Array<LMS_groupAccountFormAnswer>;
  answersAggregate?: Maybe<LMS_groupAccountFormAnswerAggregateResult>;
  assessmentAt?: Maybe<Scalars['DateTime']>;
  autoAssessment?: Maybe<Scalars['Boolean']>;
  createdAt: Scalars['DateTime'];
  deliverAt?: Maybe<Scalars['DateTime']>;
  formStudentProgress?: Maybe<LMS_formStudentProgress>;
  group: LMS_group;
  groupAccount?: Maybe<LMS_groupAccount>;
  groupFormConfig: LMS_groupFormConfig;
  groupFormConfigId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  package: LMS_PACKAGE;
  reviewers: Array<LMS_account>;
  reviewersAggregate?: Maybe<LMS_accountAggregateResult>;
  score?: Maybe<Scalars['Float']>;
};


export type LMS_groupAccountFormAttemptanswersArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAnswerOrder>;
};


export type LMS_groupAccountFormAttemptanswersAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
};


export type LMS_groupAccountFormAttemptformStudentProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
};


export type LMS_groupAccountFormAttemptgroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_groupAccountFormAttemptgroupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_groupAccountFormAttemptgroupFormConfigArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_groupAccountFormAttemptpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupAccountFormAttemptreviewersArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};


export type LMS_groupAccountFormAttemptreviewersAggregateArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};

export type LMS_groupAccountFormAttemptAggregateResult = {
  __typename?: 'LMS_groupAccountFormAttemptAggregateResult';
  assessmentAtMax?: Maybe<Scalars['DateTime']>;
  assessmentAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  deliverAtMax?: Maybe<Scalars['DateTime']>;
  deliverAtMin?: Maybe<Scalars['DateTime']>;
  groupFormConfigIdMax?: Maybe<Scalars['String']>;
  groupFormConfigIdMin?: Maybe<Scalars['String']>;
  scoreAvg?: Maybe<Scalars['Float']>;
  scoreMax?: Maybe<Scalars['Float']>;
  scoreMin?: Maybe<Scalars['Float']>;
  scoreSum?: Maybe<Scalars['Float']>;
};

export type LMS_groupAccountFormAttemptFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupAccountFormAttemptFilter>>>;
  groupFormConfigId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupAccountFormAttemptHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupAccountFormAttemptFilter>>>;
};

export enum LMS_groupAccountFormAttemptHasFilter {
  answers = 'answers',
  assessmentAt = 'assessmentAt',
  autoAssessment = 'autoAssessment',
  createdAt = 'createdAt',
  deliverAt = 'deliverAt',
  formStudentProgress = 'formStudentProgress',
  group = 'group',
  groupAccount = 'groupAccount',
  groupFormConfig = 'groupFormConfig',
  groupFormConfigId = 'groupFormConfigId',
  package = 'package',
  reviewers = 'reviewers',
  score = 'score'
}

export type LMS_groupAccountFormAttemptOrder = {
  asc?: InputMaybe<LMS_groupAccountFormAttemptOrderable>;
  desc?: InputMaybe<LMS_groupAccountFormAttemptOrderable>;
  then?: InputMaybe<LMS_groupAccountFormAttemptOrder>;
};

export enum LMS_groupAccountFormAttemptOrderable {
  assessmentAt = 'assessmentAt',
  createdAt = 'createdAt',
  deliverAt = 'deliverAt',
  groupFormConfigId = 'groupFormConfigId',
  score = 'score'
}

export type LMS_groupAccountFormAttemptPatch = {
  answers?: InputMaybe<Array<LMS_groupAccountFormAnswerRef>>;
  assessmentAt?: InputMaybe<Scalars['DateTime']>;
  autoAssessment?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deliverAt?: InputMaybe<Scalars['DateTime']>;
  formStudentProgress?: InputMaybe<LMS_formStudentProgressRef>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupFormConfig?: InputMaybe<LMS_groupFormConfigRef>;
  groupFormConfigId?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  reviewers?: InputMaybe<Array<LMS_accountRef>>;
  score?: InputMaybe<Scalars['Float']>;
};

export type LMS_groupAccountFormAttemptRef = {
  answers?: InputMaybe<Array<LMS_groupAccountFormAnswerRef>>;
  assessmentAt?: InputMaybe<Scalars['DateTime']>;
  autoAssessment?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deliverAt?: InputMaybe<Scalars['DateTime']>;
  formStudentProgress?: InputMaybe<LMS_formStudentProgressRef>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupFormConfig?: InputMaybe<LMS_groupFormConfigRef>;
  groupFormConfigId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  reviewers?: InputMaybe<Array<LMS_accountRef>>;
  score?: InputMaybe<Scalars['Float']>;
};

export enum LMS_groupAccountHasFilter {
  account = 'account',
  blockStudentProgress = 'blockStudentProgress',
  courseStudentProgress = 'courseStudentProgress',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  formAnswers = 'formAnswers',
  formAttempts = 'formAttempts',
  formStudentProgress = 'formStudentProgress',
  group = 'group',
  groupLessonTeacherConfigs = 'groupLessonTeacherConfigs',
  lessonStudentProgress = 'lessonStudentProgress',
  logs = 'logs',
  meetingStudentProgress = 'meetingStudentProgress',
  package = 'package',
  resourceStudentProgress = 'resourceStudentProgress',
  role = 'role'
}

export type LMS_groupAccountOrder = {
  asc?: InputMaybe<LMS_groupAccountOrderable>;
  desc?: InputMaybe<LMS_groupAccountOrderable>;
  then?: InputMaybe<LMS_groupAccountOrder>;
};

export enum LMS_groupAccountOrderable {
  createdAt = 'createdAt'
}

export type LMS_groupAccountPatch = {
  account?: InputMaybe<LMS_accountRef>;
  blockStudentProgress?: InputMaybe<Array<LMS_blockStudentProgressRef>>;
  courseStudentProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  formAnswers?: InputMaybe<Array<LMS_groupAccountFormAnswerRef>>;
  formAttempts?: InputMaybe<Array<InputMaybe<LMS_groupAccountFormAttemptRef>>>;
  formStudentProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupLessonTeacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
  lessonStudentProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meetingStudentProgress?: InputMaybe<Array<LMS_meetingStudentProgressRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  resourceStudentProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  role?: InputMaybe<LMS_roleType>;
};

export type LMS_groupAccountRef = {
  account?: InputMaybe<LMS_accountRef>;
  blockStudentProgress?: InputMaybe<Array<LMS_blockStudentProgressRef>>;
  courseStudentProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  formAnswers?: InputMaybe<Array<LMS_groupAccountFormAnswerRef>>;
  formAttempts?: InputMaybe<Array<InputMaybe<LMS_groupAccountFormAttemptRef>>>;
  formStudentProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupLessonTeacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
  id?: InputMaybe<Scalars['ID']>;
  lessonStudentProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meetingStudentProgress?: InputMaybe<Array<LMS_meetingStudentProgressRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  resourceStudentProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  role?: InputMaybe<LMS_roleType>;
};

export type LMS_groupAggregateResult = {
  __typename?: 'LMS_groupAggregateResult';
  activeDateMax?: Maybe<Scalars['DateTime']>;
  activeDateMin?: Maybe<Scalars['DateTime']>;
  archivedDateMax?: Maybe<Scalars['DateTime']>;
  archivedDateMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  deletedDateMax?: Maybe<Scalars['DateTime']>;
  deletedDateMin?: Maybe<Scalars['DateTime']>;
  disabledDateMax?: Maybe<Scalars['DateTime']>;
  disabledDateMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type LMS_groupBlockConfig = {
  __typename?: 'LMS_groupBlockConfig';
  block: LMS_block;
  blockByDate?: Maybe<Scalars['Boolean']>;
  courseConfig: LMS_groupCourseConfig;
  endDate?: Maybe<Scalars['DateTime']>;
  formConfigs: Array<Maybe<LMS_groupFormConfig>>;
  formConfigsAggregate?: Maybe<LMS_groupFormConfigAggregateResult>;
  group: LMS_group;
  id: Scalars['ID'];
  isCountAsProgress?: Maybe<Scalars['Boolean']>;
  lessonConfigs: Array<Maybe<LMS_groupLessonConfig>>;
  lessonConfigsAggregate?: Maybe<LMS_groupLessonConfigAggregateResult>;
  lessonTeacherConfigs: Array<Maybe<LMS_groupLessonTeacherConfig>>;
  lessonTeacherConfigsAggregate?: Maybe<LMS_groupLessonTeacherConfigAggregateResult>;
  logs: Array<LMS_accountLog>;
  logsAggregate?: Maybe<LMS_accountLogAggregateResult>;
  meetingConfigs: Array<Maybe<LMS_groupLessonMeetingConfig>>;
  meetingConfigsAggregate?: Maybe<LMS_groupLessonMeetingConfigAggregateResult>;
  package: LMS_PACKAGE;
  progressValue?: Maybe<Scalars['Float']>;
  resourceConfigs?: Maybe<Array<Maybe<LMS_groupResourceConfig>>>;
  resourceConfigsAggregate?: Maybe<LMS_groupResourceConfigAggregateResult>;
  startDate?: Maybe<Scalars['DateTime']>;
  studentProgress: Array<Maybe<LMS_blockStudentProgress>>;
  studentProgressAggregate?: Maybe<LMS_blockStudentProgressAggregateResult>;
};


export type LMS_groupBlockConfigblockArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type LMS_groupBlockConfigcourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_groupBlockConfigformConfigsArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};


export type LMS_groupBlockConfigformConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_groupBlockConfiggroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_groupBlockConfiglessonConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonConfigOrder>;
};


export type LMS_groupBlockConfiglessonConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_groupBlockConfiglessonTeacherConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};


export type LMS_groupBlockConfiglessonTeacherConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
};


export type LMS_groupBlockConfiglogsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_groupBlockConfiglogsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type LMS_groupBlockConfigmeetingConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_groupBlockConfigmeetingConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
};


export type LMS_groupBlockConfigpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupBlockConfigresourceConfigsArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};


export type LMS_groupBlockConfigresourceConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type LMS_groupBlockConfigstudentProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockStudentProgressOrder>;
};


export type LMS_groupBlockConfigstudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
};

export type LMS_groupBlockConfigAggregateResult = {
  __typename?: 'LMS_groupBlockConfigAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endDateMax?: Maybe<Scalars['DateTime']>;
  endDateMin?: Maybe<Scalars['DateTime']>;
  progressValueAvg?: Maybe<Scalars['Float']>;
  progressValueMax?: Maybe<Scalars['Float']>;
  progressValueMin?: Maybe<Scalars['Float']>;
  progressValueSum?: Maybe<Scalars['Float']>;
  startDateMax?: Maybe<Scalars['DateTime']>;
  startDateMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_groupBlockConfigFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupBlockConfigFilter>>>;
  endDate?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupBlockConfigHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_groupBlockConfigFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupBlockConfigFilter>>>;
  startDate?: InputMaybe<DateTimeFilter>;
};

export enum LMS_groupBlockConfigHasFilter {
  block = 'block',
  blockByDate = 'blockByDate',
  courseConfig = 'courseConfig',
  endDate = 'endDate',
  formConfigs = 'formConfigs',
  group = 'group',
  isCountAsProgress = 'isCountAsProgress',
  lessonConfigs = 'lessonConfigs',
  lessonTeacherConfigs = 'lessonTeacherConfigs',
  logs = 'logs',
  meetingConfigs = 'meetingConfigs',
  package = 'package',
  progressValue = 'progressValue',
  resourceConfigs = 'resourceConfigs',
  startDate = 'startDate',
  studentProgress = 'studentProgress'
}

export type LMS_groupBlockConfigOrder = {
  asc?: InputMaybe<LMS_groupBlockConfigOrderable>;
  desc?: InputMaybe<LMS_groupBlockConfigOrderable>;
  then?: InputMaybe<LMS_groupBlockConfigOrder>;
};

export enum LMS_groupBlockConfigOrderable {
  endDate = 'endDate',
  progressValue = 'progressValue',
  startDate = 'startDate'
}

export type LMS_groupBlockConfigPatch = {
  block?: InputMaybe<LMS_blockRef>;
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  formConfigs?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigRef>>>;
  group?: InputMaybe<LMS_groupRef>;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  lessonConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonConfigRef>>>;
  lessonTeacherConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonTeacherConfigRef>>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meetingConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonMeetingConfigRef>>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progressValue?: InputMaybe<Scalars['Float']>;
  resourceConfigs?: InputMaybe<Array<InputMaybe<LMS_groupResourceConfigRef>>>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress?: InputMaybe<Array<InputMaybe<LMS_blockStudentProgressRef>>>;
};

export type LMS_groupBlockConfigRef = {
  block?: InputMaybe<LMS_blockRef>;
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  formConfigs?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigRef>>>;
  group?: InputMaybe<LMS_groupRef>;
  id?: InputMaybe<Scalars['ID']>;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  lessonConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonConfigRef>>>;
  lessonTeacherConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonTeacherConfigRef>>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meetingConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonMeetingConfigRef>>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progressValue?: InputMaybe<Scalars['Float']>;
  resourceConfigs?: InputMaybe<Array<InputMaybe<LMS_groupResourceConfigRef>>>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress?: InputMaybe<Array<InputMaybe<LMS_blockStudentProgressRef>>>;
};

export type LMS_groupCourseConfig = {
  __typename?: 'LMS_groupCourseConfig';
  blockByDate?: Maybe<Scalars['Boolean']>;
  blockConfigs: Array<Maybe<LMS_groupBlockConfig>>;
  blockConfigsAggregate?: Maybe<LMS_groupBlockConfigAggregateResult>;
  courseVersion: LMS_courseVersion;
  endDate?: Maybe<Scalars['DateTime']>;
  formConfigs: Array<Maybe<LMS_groupFormConfig>>;
  formConfigsAggregate?: Maybe<LMS_groupFormConfigAggregateResult>;
  group: LMS_group;
  id: Scalars['ID'];
  lessonConfigs: Array<Maybe<LMS_groupLessonConfig>>;
  lessonConfigsAggregate?: Maybe<LMS_groupLessonConfigAggregateResult>;
  lessonTeacherConfigs: Array<Maybe<LMS_groupLessonTeacherConfig>>;
  lessonTeacherConfigsAggregate?: Maybe<LMS_groupLessonTeacherConfigAggregateResult>;
  logs: Array<LMS_accountLog>;
  logsAggregate?: Maybe<LMS_accountLogAggregateResult>;
  meetingConfigs: Array<Maybe<LMS_groupLessonMeetingConfig>>;
  meetingConfigsAggregate?: Maybe<LMS_groupLessonMeetingConfigAggregateResult>;
  package: LMS_PACKAGE;
  resourceConfigs: Array<Maybe<LMS_groupResourceConfig>>;
  resourceConfigsAggregate?: Maybe<LMS_groupResourceConfigAggregateResult>;
  startDate?: Maybe<Scalars['DateTime']>;
  studentProgress: Array<Maybe<LMS_courseStudentProgress>>;
  studentProgressAggregate?: Maybe<LMS_courseStudentProgressAggregateResult>;
};


export type LMS_groupCourseConfigblockConfigsArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupBlockConfigOrder>;
};


export type LMS_groupCourseConfigblockConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_groupCourseConfigcourseVersionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};


export type LMS_groupCourseConfigformConfigsArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};


export type LMS_groupCourseConfigformConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_groupCourseConfiggroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_groupCourseConfiglessonConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonConfigOrder>;
};


export type LMS_groupCourseConfiglessonConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_groupCourseConfiglessonTeacherConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};


export type LMS_groupCourseConfiglessonTeacherConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
};


export type LMS_groupCourseConfiglogsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_groupCourseConfiglogsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type LMS_groupCourseConfigmeetingConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_groupCourseConfigmeetingConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
};


export type LMS_groupCourseConfigpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupCourseConfigresourceConfigsArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};


export type LMS_groupCourseConfigresourceConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type LMS_groupCourseConfigstudentProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseStudentProgressOrder>;
};


export type LMS_groupCourseConfigstudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
};

export type LMS_groupCourseConfigAggregateResult = {
  __typename?: 'LMS_groupCourseConfigAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endDateMax?: Maybe<Scalars['DateTime']>;
  endDateMin?: Maybe<Scalars['DateTime']>;
  startDateMax?: Maybe<Scalars['DateTime']>;
  startDateMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_groupCourseConfigFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupCourseConfigFilter>>>;
  endDate?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupCourseConfigHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_groupCourseConfigFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupCourseConfigFilter>>>;
  startDate?: InputMaybe<DateTimeFilter>;
};

export enum LMS_groupCourseConfigHasFilter {
  blockByDate = 'blockByDate',
  blockConfigs = 'blockConfigs',
  courseVersion = 'courseVersion',
  endDate = 'endDate',
  formConfigs = 'formConfigs',
  group = 'group',
  lessonConfigs = 'lessonConfigs',
  lessonTeacherConfigs = 'lessonTeacherConfigs',
  logs = 'logs',
  meetingConfigs = 'meetingConfigs',
  package = 'package',
  resourceConfigs = 'resourceConfigs',
  startDate = 'startDate',
  studentProgress = 'studentProgress'
}

export type LMS_groupCourseConfigOrder = {
  asc?: InputMaybe<LMS_groupCourseConfigOrderable>;
  desc?: InputMaybe<LMS_groupCourseConfigOrderable>;
  then?: InputMaybe<LMS_groupCourseConfigOrder>;
};

export enum LMS_groupCourseConfigOrderable {
  endDate = 'endDate',
  startDate = 'startDate'
}

export type LMS_groupCourseConfigPatch = {
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  blockConfigs?: InputMaybe<Array<InputMaybe<LMS_groupBlockConfigRef>>>;
  courseVersion?: InputMaybe<LMS_courseVersionRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  formConfigs?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigRef>>>;
  group?: InputMaybe<LMS_groupRef>;
  lessonConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonConfigRef>>>;
  lessonTeacherConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonTeacherConfigRef>>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meetingConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonMeetingConfigRef>>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  resourceConfigs?: InputMaybe<Array<InputMaybe<LMS_groupResourceConfigRef>>>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress?: InputMaybe<Array<InputMaybe<LMS_courseStudentProgressRef>>>;
};

export type LMS_groupCourseConfigRef = {
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  blockConfigs?: InputMaybe<Array<InputMaybe<LMS_groupBlockConfigRef>>>;
  courseVersion?: InputMaybe<LMS_courseVersionRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  formConfigs?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigRef>>>;
  group?: InputMaybe<LMS_groupRef>;
  id?: InputMaybe<Scalars['ID']>;
  lessonConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonConfigRef>>>;
  lessonTeacherConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonTeacherConfigRef>>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meetingConfigs?: InputMaybe<Array<InputMaybe<LMS_groupLessonMeetingConfigRef>>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  resourceConfigs?: InputMaybe<Array<InputMaybe<LMS_groupResourceConfigRef>>>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress?: InputMaybe<Array<InputMaybe<LMS_courseStudentProgressRef>>>;
};

export type LMS_groupFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<LMS_groupFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupFilter>>>;
  status?: InputMaybe<LMS_groupStatus_exact>;
};

export type LMS_groupFormConfig = {
  __typename?: 'LMS_groupFormConfig';
  attempts?: Maybe<Scalars['Int']>;
  blockConfig: LMS_groupBlockConfig;
  courseConfig: LMS_groupCourseConfig;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  customCalculation?: Maybe<LMS_groupFormConfigCalculation>;
  endDate?: Maybe<Scalars['DateTime']>;
  form: LMS_form;
  formAnswers: Array<LMS_groupAccountFormAnswer>;
  formAnswersAggregate?: Maybe<LMS_groupAccountFormAnswerAggregateResult>;
  formAttempts: Array<LMS_groupAccountFormAttempt>;
  formAttemptsAggregate?: Maybe<LMS_groupAccountFormAttemptAggregateResult>;
  group: LMS_group;
  id: Scalars['ID'];
  isAnonymous: Scalars['Boolean'];
  isCountAsProgress?: Maybe<Scalars['Boolean']>;
  lessonConfig: LMS_groupLessonConfig;
  logs: Array<LMS_accountLog>;
  logsAggregate?: Maybe<LMS_accountLogAggregateResult>;
  maximumGrade?: Maybe<Scalars['Float']>;
  minimumGrade?: Maybe<Scalars['Float']>;
  package: LMS_PACKAGE;
  progressValue?: Maybe<Scalars['Int']>;
  publicToken?: Maybe<Scalars['String']>;
  questOptionsSuffle?: Maybe<Scalars['Boolean']>;
  questSuffle?: Maybe<Scalars['Boolean']>;
  startDate?: Maybe<Scalars['DateTime']>;
  studentProgress: Array<LMS_formStudentProgress>;
  studentProgressAggregate?: Maybe<LMS_formStudentProgressAggregateResult>;
  teacherConfigs: Array<LMS_groupLessonTeacherConfig>;
  teacherConfigsAggregate?: Maybe<LMS_groupLessonTeacherConfigAggregateResult>;
  type: LMS_groupFormConfigType;
};


export type LMS_groupFormConfigblockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_groupFormConfigcourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_groupFormConfigcreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_groupFormConfigcustomCalculationArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationFilter>;
};


export type LMS_groupFormConfigformArgs = {
  filter?: InputMaybe<LMS_formFilter>;
};


export type LMS_groupFormConfigformAnswersArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAnswerOrder>;
};


export type LMS_groupFormConfigformAnswersAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
};


export type LMS_groupFormConfigformAttemptsArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAttemptOrder>;
};


export type LMS_groupFormConfigformAttemptsAggregateArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
};


export type LMS_groupFormConfiggroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_groupFormConfiglessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_groupFormConfiglogsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_groupFormConfiglogsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type LMS_groupFormConfigpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupFormConfigstudentProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};


export type LMS_groupFormConfigstudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
};


export type LMS_groupFormConfigteacherConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};


export type LMS_groupFormConfigteacherConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
};

export type LMS_groupFormConfigAggregateResult = {
  __typename?: 'LMS_groupFormConfigAggregateResult';
  attemptsAvg?: Maybe<Scalars['Float']>;
  attemptsMax?: Maybe<Scalars['Int']>;
  attemptsMin?: Maybe<Scalars['Int']>;
  attemptsSum?: Maybe<Scalars['Int']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  endDateMax?: Maybe<Scalars['DateTime']>;
  endDateMin?: Maybe<Scalars['DateTime']>;
  maximumGradeAvg?: Maybe<Scalars['Float']>;
  maximumGradeMax?: Maybe<Scalars['Float']>;
  maximumGradeMin?: Maybe<Scalars['Float']>;
  maximumGradeSum?: Maybe<Scalars['Float']>;
  minimumGradeAvg?: Maybe<Scalars['Float']>;
  minimumGradeMax?: Maybe<Scalars['Float']>;
  minimumGradeMin?: Maybe<Scalars['Float']>;
  minimumGradeSum?: Maybe<Scalars['Float']>;
  progressValueAvg?: Maybe<Scalars['Float']>;
  progressValueMax?: Maybe<Scalars['Int']>;
  progressValueMin?: Maybe<Scalars['Int']>;
  progressValueSum?: Maybe<Scalars['Int']>;
  publicTokenMax?: Maybe<Scalars['String']>;
  publicTokenMin?: Maybe<Scalars['String']>;
  startDateMax?: Maybe<Scalars['DateTime']>;
  startDateMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_groupFormConfigCalculation = {
  __typename?: 'LMS_groupFormConfigCalculation';
  formConfigs: Array<LMS_groupFormConfig>;
  formConfigsAggregate?: Maybe<LMS_groupFormConfigAggregateResult>;
  id: Scalars['ID'];
  name: Scalars['String'];
  package: LMS_PACKAGE;
  ranges: Array<LMS_groupFormConfigCalculationRange>;
  rangesAggregate?: Maybe<LMS_groupFormConfigCalculationRangeAggregateResult>;
};


export type LMS_groupFormConfigCalculationformConfigsArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};


export type LMS_groupFormConfigCalculationformConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_groupFormConfigCalculationpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupFormConfigCalculationrangesArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationRangeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationRangeOrder>;
};


export type LMS_groupFormConfigCalculationrangesAggregateArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationRangeFilter>;
};

export type LMS_groupFormConfigCalculationAggregateResult = {
  __typename?: 'LMS_groupFormConfigCalculationAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type LMS_groupFormConfigCalculationFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigCalculationFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigCalculationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<LMS_groupFormConfigCalculationFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigCalculationFilter>>>;
};

export enum LMS_groupFormConfigCalculationHasFilter {
  formConfigs = 'formConfigs',
  name = 'name',
  package = 'package',
  ranges = 'ranges'
}

export type LMS_groupFormConfigCalculationOrder = {
  asc?: InputMaybe<LMS_groupFormConfigCalculationOrderable>;
  desc?: InputMaybe<LMS_groupFormConfigCalculationOrderable>;
  then?: InputMaybe<LMS_groupFormConfigCalculationOrder>;
};

export enum LMS_groupFormConfigCalculationOrderable {
  name = 'name'
}

export type LMS_groupFormConfigCalculationPatch = {
  formConfigs?: InputMaybe<Array<LMS_groupFormConfigRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  ranges?: InputMaybe<Array<LMS_groupFormConfigCalculationRangeRef>>;
};

export type LMS_groupFormConfigCalculationRange = {
  __typename?: 'LMS_groupFormConfigCalculationRange';
  customCalculation: LMS_groupFormConfigCalculation;
  id: Scalars['ID'];
  label: Scalars['String'];
  max: Scalars['Float'];
  min: Scalars['Float'];
  package: LMS_PACKAGE;
};


export type LMS_groupFormConfigCalculationRangecustomCalculationArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationFilter>;
};


export type LMS_groupFormConfigCalculationRangepackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};

export type LMS_groupFormConfigCalculationRangeAggregateResult = {
  __typename?: 'LMS_groupFormConfigCalculationRangeAggregateResult';
  count?: Maybe<Scalars['Int']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
  maxAvg?: Maybe<Scalars['Float']>;
  maxMax?: Maybe<Scalars['Float']>;
  maxMin?: Maybe<Scalars['Float']>;
  maxSum?: Maybe<Scalars['Float']>;
  minAvg?: Maybe<Scalars['Float']>;
  minMax?: Maybe<Scalars['Float']>;
  minMin?: Maybe<Scalars['Float']>;
  minSum?: Maybe<Scalars['Float']>;
};

export type LMS_groupFormConfigCalculationRangeFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigCalculationRangeFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigCalculationRangeHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_groupFormConfigCalculationRangeFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigCalculationRangeFilter>>>;
};

export enum LMS_groupFormConfigCalculationRangeHasFilter {
  customCalculation = 'customCalculation',
  label = 'label',
  max = 'max',
  min = 'min',
  package = 'package'
}

export type LMS_groupFormConfigCalculationRangeOrder = {
  asc?: InputMaybe<LMS_groupFormConfigCalculationRangeOrderable>;
  desc?: InputMaybe<LMS_groupFormConfigCalculationRangeOrderable>;
  then?: InputMaybe<LMS_groupFormConfigCalculationRangeOrder>;
};

export enum LMS_groupFormConfigCalculationRangeOrderable {
  label = 'label',
  max = 'max',
  min = 'min'
}

export type LMS_groupFormConfigCalculationRangePatch = {
  customCalculation?: InputMaybe<LMS_groupFormConfigCalculationRef>;
  label?: InputMaybe<Scalars['String']>;
  max?: InputMaybe<Scalars['Float']>;
  min?: InputMaybe<Scalars['Float']>;
  package?: InputMaybe<LMS_PACKAGERef>;
};

export type LMS_groupFormConfigCalculationRangeRef = {
  customCalculation?: InputMaybe<LMS_groupFormConfigCalculationRef>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  max?: InputMaybe<Scalars['Float']>;
  min?: InputMaybe<Scalars['Float']>;
  package?: InputMaybe<LMS_PACKAGERef>;
};

export type LMS_groupFormConfigCalculationRef = {
  formConfigs?: InputMaybe<Array<LMS_groupFormConfigRef>>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  ranges?: InputMaybe<Array<LMS_groupFormConfigCalculationRangeRef>>;
};

export type LMS_groupFormConfigFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isAnonymous?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<LMS_groupFormConfigFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupFormConfigFilter>>>;
  publicToken?: InputMaybe<StringExactFilter>;
};

export enum LMS_groupFormConfigHasFilter {
  attempts = 'attempts',
  blockConfig = 'blockConfig',
  courseConfig = 'courseConfig',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  customCalculation = 'customCalculation',
  endDate = 'endDate',
  form = 'form',
  formAnswers = 'formAnswers',
  formAttempts = 'formAttempts',
  group = 'group',
  isAnonymous = 'isAnonymous',
  isCountAsProgress = 'isCountAsProgress',
  lessonConfig = 'lessonConfig',
  logs = 'logs',
  maximumGrade = 'maximumGrade',
  minimumGrade = 'minimumGrade',
  package = 'package',
  progressValue = 'progressValue',
  publicToken = 'publicToken',
  questOptionsSuffle = 'questOptionsSuffle',
  questSuffle = 'questSuffle',
  startDate = 'startDate',
  studentProgress = 'studentProgress',
  teacherConfigs = 'teacherConfigs',
  type = 'type'
}

export type LMS_groupFormConfigOrder = {
  asc?: InputMaybe<LMS_groupFormConfigOrderable>;
  desc?: InputMaybe<LMS_groupFormConfigOrderable>;
  then?: InputMaybe<LMS_groupFormConfigOrder>;
};

export enum LMS_groupFormConfigOrderable {
  attempts = 'attempts',
  createdAt = 'createdAt',
  endDate = 'endDate',
  maximumGrade = 'maximumGrade',
  minimumGrade = 'minimumGrade',
  progressValue = 'progressValue',
  publicToken = 'publicToken',
  startDate = 'startDate'
}

export type LMS_groupFormConfigPatch = {
  attempts?: InputMaybe<Scalars['Int']>;
  blockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  customCalculation?: InputMaybe<LMS_groupFormConfigCalculationRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  form?: InputMaybe<LMS_formRef>;
  formAnswers?: InputMaybe<Array<LMS_groupAccountFormAnswerRef>>;
  formAttempts?: InputMaybe<Array<LMS_groupAccountFormAttemptRef>>;
  group?: InputMaybe<LMS_groupRef>;
  isAnonymous?: InputMaybe<Scalars['Boolean']>;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  lessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  maximumGrade?: InputMaybe<Scalars['Float']>;
  minimumGrade?: InputMaybe<Scalars['Float']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progressValue?: InputMaybe<Scalars['Int']>;
  publicToken?: InputMaybe<Scalars['String']>;
  questOptionsSuffle?: InputMaybe<Scalars['Boolean']>;
  questSuffle?: InputMaybe<Scalars['Boolean']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  teacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
  type?: InputMaybe<LMS_groupFormConfigType>;
};

export type LMS_groupFormConfigRef = {
  attempts?: InputMaybe<Scalars['Int']>;
  blockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  customCalculation?: InputMaybe<LMS_groupFormConfigCalculationRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  form?: InputMaybe<LMS_formRef>;
  formAnswers?: InputMaybe<Array<LMS_groupAccountFormAnswerRef>>;
  formAttempts?: InputMaybe<Array<LMS_groupAccountFormAttemptRef>>;
  group?: InputMaybe<LMS_groupRef>;
  id?: InputMaybe<Scalars['ID']>;
  isAnonymous?: InputMaybe<Scalars['Boolean']>;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  lessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  maximumGrade?: InputMaybe<Scalars['Float']>;
  minimumGrade?: InputMaybe<Scalars['Float']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progressValue?: InputMaybe<Scalars['Int']>;
  publicToken?: InputMaybe<Scalars['String']>;
  questOptionsSuffle?: InputMaybe<Scalars['Boolean']>;
  questSuffle?: InputMaybe<Scalars['Boolean']>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  teacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
  type?: InputMaybe<LMS_groupFormConfigType>;
};

export enum LMS_groupFormConfigType {
  EXAM = 'EXAM',
  SURVEY = 'SURVEY',
  TASK = 'TASK'
}

export enum LMS_groupHasFilter {
  activeBy = 'activeBy',
  activeDate = 'activeDate',
  archivedBy = 'archivedBy',
  archivedDate = 'archivedDate',
  authors = 'authors',
  blockConfigs = 'blockConfigs',
  blockStudentProgress = 'blockStudentProgress',
  courseConfig = 'courseConfig',
  courseStudentProgress = 'courseStudentProgress',
  courseVersion = 'courseVersion',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  deletedBy = 'deletedBy',
  deletedDate = 'deletedDate',
  disabledBy = 'disabledBy',
  disabledDate = 'disabledDate',
  formAttemps = 'formAttemps',
  formConfigs = 'formConfigs',
  formStudentProgress = 'formStudentProgress',
  groupAccounts = 'groupAccounts',
  lessonConfigs = 'lessonConfigs',
  lessonStudentProgress = 'lessonStudentProgress',
  lessonTeacherConfigs = 'lessonTeacherConfigs',
  logs = 'logs',
  meetingConfigs = 'meetingConfigs',
  meetingStudentProgress = 'meetingStudentProgress',
  name = 'name',
  package = 'package',
  resourceConfigs = 'resourceConfigs',
  resourceStudentProgress = 'resourceStudentProgress',
  status = 'status',
  thumbnail = 'thumbnail'
}

export type LMS_groupLessonConfig = {
  __typename?: 'LMS_groupLessonConfig';
  blockByDate?: Maybe<Scalars['Boolean']>;
  blockConfig: LMS_groupBlockConfig;
  courseConfig: LMS_groupCourseConfig;
  endDate?: Maybe<Scalars['DateTime']>;
  formConfigs: Array<LMS_groupFormConfig>;
  formConfigsAggregate?: Maybe<LMS_groupFormConfigAggregateResult>;
  group: LMS_group;
  id: Scalars['ID'];
  isCountAsProgress?: Maybe<Scalars['Boolean']>;
  lesson: LMS_lesson;
  logs: Array<LMS_accountLog>;
  logsAggregate?: Maybe<LMS_accountLogAggregateResult>;
  meeting?: Maybe<LMS_groupLessonMeetingConfig>;
  package: LMS_PACKAGE;
  progressValue?: Maybe<Scalars['Float']>;
  resourceConfigs: Array<LMS_groupResourceConfig>;
  resourceConfigsAggregate?: Maybe<LMS_groupResourceConfigAggregateResult>;
  startDate?: Maybe<Scalars['DateTime']>;
  studentProgress: Array<LMS_lessonStudentProgress>;
  studentProgressAggregate?: Maybe<LMS_lessonStudentProgressAggregateResult>;
  teacherConfigs: Array<LMS_groupLessonTeacherConfig>;
  teacherConfigsAggregate?: Maybe<LMS_groupLessonTeacherConfigAggregateResult>;
};


export type LMS_groupLessonConfigblockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_groupLessonConfigcourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_groupLessonConfigformConfigsArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};


export type LMS_groupLessonConfigformConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_groupLessonConfiggroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_groupLessonConfiglessonArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type LMS_groupLessonConfiglogsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_groupLessonConfiglogsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type LMS_groupLessonConfigmeetingArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
};


export type LMS_groupLessonConfigpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupLessonConfigresourceConfigsArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};


export type LMS_groupLessonConfigresourceConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type LMS_groupLessonConfigstudentProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonStudentProgressOrder>;
};


export type LMS_groupLessonConfigstudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
};


export type LMS_groupLessonConfigteacherConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};


export type LMS_groupLessonConfigteacherConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
};

export type LMS_groupLessonConfigAggregateResult = {
  __typename?: 'LMS_groupLessonConfigAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endDateMax?: Maybe<Scalars['DateTime']>;
  endDateMin?: Maybe<Scalars['DateTime']>;
  progressValueAvg?: Maybe<Scalars['Float']>;
  progressValueMax?: Maybe<Scalars['Float']>;
  progressValueMin?: Maybe<Scalars['Float']>;
  progressValueSum?: Maybe<Scalars['Float']>;
  startDateMax?: Maybe<Scalars['DateTime']>;
  startDateMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_groupLessonConfigFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupLessonConfigFilter>>>;
  endDate?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupLessonConfigHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_groupLessonConfigFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupLessonConfigFilter>>>;
  startDate?: InputMaybe<DateTimeFilter>;
};

export enum LMS_groupLessonConfigHasFilter {
  blockByDate = 'blockByDate',
  blockConfig = 'blockConfig',
  courseConfig = 'courseConfig',
  endDate = 'endDate',
  formConfigs = 'formConfigs',
  group = 'group',
  isCountAsProgress = 'isCountAsProgress',
  lesson = 'lesson',
  logs = 'logs',
  meeting = 'meeting',
  package = 'package',
  progressValue = 'progressValue',
  resourceConfigs = 'resourceConfigs',
  startDate = 'startDate',
  studentProgress = 'studentProgress',
  teacherConfigs = 'teacherConfigs'
}

export type LMS_groupLessonConfigOrder = {
  asc?: InputMaybe<LMS_groupLessonConfigOrderable>;
  desc?: InputMaybe<LMS_groupLessonConfigOrderable>;
  then?: InputMaybe<LMS_groupLessonConfigOrder>;
};

export enum LMS_groupLessonConfigOrderable {
  endDate = 'endDate',
  progressValue = 'progressValue',
  startDate = 'startDate'
}

export type LMS_groupLessonConfigPatch = {
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  blockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  formConfigs?: InputMaybe<Array<LMS_groupFormConfigRef>>;
  group?: InputMaybe<LMS_groupRef>;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  lesson?: InputMaybe<LMS_lessonRef>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meeting?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progressValue?: InputMaybe<Scalars['Float']>;
  resourceConfigs?: InputMaybe<Array<LMS_groupResourceConfigRef>>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  teacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
};

export type LMS_groupLessonConfigRef = {
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  blockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  formConfigs?: InputMaybe<Array<LMS_groupFormConfigRef>>;
  group?: InputMaybe<LMS_groupRef>;
  id?: InputMaybe<Scalars['ID']>;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  lesson?: InputMaybe<LMS_lessonRef>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meeting?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progressValue?: InputMaybe<Scalars['Float']>;
  resourceConfigs?: InputMaybe<Array<LMS_groupResourceConfigRef>>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  teacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
};

export type LMS_groupLessonMeetingConfig = {
  __typename?: 'LMS_groupLessonMeetingConfig';
  blockConfig: LMS_groupBlockConfig;
  courseConfig: LMS_groupCourseConfig;
  group: LMS_group;
  id: Scalars['ID'];
  lessonConfig: LMS_groupLessonConfig;
  logs: Array<LMS_accountLog>;
  logsAggregate?: Maybe<LMS_accountLogAggregateResult>;
  meeting: Meeting;
  package: LMS_PACKAGE;
  resources: Array<LMS_groupResourceConfig>;
  resourcesAggregate?: Maybe<LMS_groupResourceConfigAggregateResult>;
  studentProgress: Array<LMS_meetingStudentProgress>;
  studentProgressAggregate?: Maybe<LMS_meetingStudentProgressAggregateResult>;
};


export type LMS_groupLessonMeetingConfigblockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_groupLessonMeetingConfigcourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_groupLessonMeetingConfiggroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_groupLessonMeetingConfiglessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_groupLessonMeetingConfiglogsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_groupLessonMeetingConfiglogsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type LMS_groupLessonMeetingConfigmeetingArgs = {
  filter?: InputMaybe<MeetingFilter>;
};


export type LMS_groupLessonMeetingConfigpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupLessonMeetingConfigresourcesArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};


export type LMS_groupLessonMeetingConfigresourcesAggregateArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type LMS_groupLessonMeetingConfigstudentProgressArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_meetingStudentProgressOrder>;
};


export type LMS_groupLessonMeetingConfigstudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
};

export type LMS_groupLessonMeetingConfigAggregateResult = {
  __typename?: 'LMS_groupLessonMeetingConfigAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type LMS_groupLessonMeetingConfigFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupLessonMeetingConfigFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupLessonMeetingConfigHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupLessonMeetingConfigFilter>>>;
};

export enum LMS_groupLessonMeetingConfigHasFilter {
  blockConfig = 'blockConfig',
  courseConfig = 'courseConfig',
  group = 'group',
  lessonConfig = 'lessonConfig',
  logs = 'logs',
  meeting = 'meeting',
  package = 'package',
  resources = 'resources',
  studentProgress = 'studentProgress'
}

export type LMS_groupLessonMeetingConfigPatch = {
  blockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  group?: InputMaybe<LMS_groupRef>;
  lessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meeting?: InputMaybe<MeetingRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  resources?: InputMaybe<Array<LMS_groupResourceConfigRef>>;
  studentProgress?: InputMaybe<Array<LMS_meetingStudentProgressRef>>;
};

export type LMS_groupLessonMeetingConfigRef = {
  blockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  group?: InputMaybe<LMS_groupRef>;
  id?: InputMaybe<Scalars['ID']>;
  lessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meeting?: InputMaybe<MeetingRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  resources?: InputMaybe<Array<LMS_groupResourceConfigRef>>;
  studentProgress?: InputMaybe<Array<LMS_meetingStudentProgressRef>>;
};

export type LMS_groupLessonTeacherConfig = {
  __typename?: 'LMS_groupLessonTeacherConfig';
  account: LMS_account;
  blockConfig: LMS_groupBlockConfig;
  courseConfig: LMS_groupCourseConfig;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  erpInvoiceItem?: Maybe<ERP_invoiceItem>;
  formConfig?: Maybe<LMS_groupFormConfig>;
  group: LMS_group;
  groupAccount: LMS_groupAccount;
  id: Scalars['ID'];
  isExtra?: Maybe<Scalars['Boolean']>;
  isValidated?: Maybe<Scalars['Boolean']>;
  lessonConfig: LMS_groupLessonConfig;
  package: LMS_PACKAGE;
  time: Scalars['Int'];
  validatedAt?: Maybe<Scalars['DateTime']>;
  validatedBy?: Maybe<LMS_account>;
};


export type LMS_groupLessonTeacherConfigaccountArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_groupLessonTeacherConfigblockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_groupLessonTeacherConfigcourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_groupLessonTeacherConfigcreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_groupLessonTeacherConfigerpInvoiceItemArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
};


export type LMS_groupLessonTeacherConfigformConfigArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type LMS_groupLessonTeacherConfiggroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_groupLessonTeacherConfiggroupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_groupLessonTeacherConfiglessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_groupLessonTeacherConfigpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupLessonTeacherConfigvalidatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};

export type LMS_groupLessonTeacherConfigAggregateResult = {
  __typename?: 'LMS_groupLessonTeacherConfigAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  timeAvg?: Maybe<Scalars['Float']>;
  timeMax?: Maybe<Scalars['Int']>;
  timeMin?: Maybe<Scalars['Int']>;
  timeSum?: Maybe<Scalars['Int']>;
  validatedAtMax?: Maybe<Scalars['DateTime']>;
  validatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_groupLessonTeacherConfigFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupLessonTeacherConfigFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupLessonTeacherConfigHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isValidated?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupLessonTeacherConfigFilter>>>;
  time?: InputMaybe<IntFilter>;
  validatedAt?: InputMaybe<DateTimeFilter>;
};

export enum LMS_groupLessonTeacherConfigHasFilter {
  account = 'account',
  blockConfig = 'blockConfig',
  courseConfig = 'courseConfig',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  erpInvoiceItem = 'erpInvoiceItem',
  formConfig = 'formConfig',
  group = 'group',
  groupAccount = 'groupAccount',
  isExtra = 'isExtra',
  isValidated = 'isValidated',
  lessonConfig = 'lessonConfig',
  package = 'package',
  time = 'time',
  validatedAt = 'validatedAt',
  validatedBy = 'validatedBy'
}

export type LMS_groupLessonTeacherConfigOrder = {
  asc?: InputMaybe<LMS_groupLessonTeacherConfigOrderable>;
  desc?: InputMaybe<LMS_groupLessonTeacherConfigOrderable>;
  then?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};

export enum LMS_groupLessonTeacherConfigOrderable {
  createdAt = 'createdAt',
  time = 'time',
  validatedAt = 'validatedAt'
}

export type LMS_groupLessonTeacherConfigPatch = {
  account?: InputMaybe<LMS_accountRef>;
  blockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  erpInvoiceItem?: InputMaybe<ERP_invoiceItemRef>;
  formConfig?: InputMaybe<LMS_groupFormConfigRef>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  isExtra?: InputMaybe<Scalars['Boolean']>;
  isValidated?: InputMaybe<Scalars['Boolean']>;
  lessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  time?: InputMaybe<Scalars['Int']>;
  validatedAt?: InputMaybe<Scalars['DateTime']>;
  validatedBy?: InputMaybe<LMS_accountRef>;
};

export type LMS_groupLessonTeacherConfigRef = {
  account?: InputMaybe<LMS_accountRef>;
  blockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  erpInvoiceItem?: InputMaybe<ERP_invoiceItemRef>;
  formConfig?: InputMaybe<LMS_groupFormConfigRef>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  id?: InputMaybe<Scalars['ID']>;
  isExtra?: InputMaybe<Scalars['Boolean']>;
  isValidated?: InputMaybe<Scalars['Boolean']>;
  lessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  time?: InputMaybe<Scalars['Int']>;
  validatedAt?: InputMaybe<Scalars['DateTime']>;
  validatedBy?: InputMaybe<LMS_accountRef>;
};

export type LMS_groupOrder = {
  asc?: InputMaybe<LMS_groupOrderable>;
  desc?: InputMaybe<LMS_groupOrderable>;
  then?: InputMaybe<LMS_groupOrder>;
};

export enum LMS_groupOrderable {
  activeDate = 'activeDate',
  archivedDate = 'archivedDate',
  createdAt = 'createdAt',
  deletedDate = 'deletedDate',
  disabledDate = 'disabledDate',
  name = 'name'
}

export type LMS_groupPatch = {
  activeBy?: InputMaybe<LMS_accountRef>;
  activeDate?: InputMaybe<Scalars['DateTime']>;
  archivedBy?: InputMaybe<LMS_accountRef>;
  archivedDate?: InputMaybe<Scalars['DateTime']>;
  authors?: InputMaybe<Array<LMS_accountRef>>;
  blockConfigs?: InputMaybe<Array<LMS_groupBlockConfigRef>>;
  blockStudentProgress?: InputMaybe<Array<LMS_blockStudentProgressRef>>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  courseStudentProgress?: InputMaybe<Array<LMS_courseStudentProgressRef>>;
  courseVersion?: InputMaybe<LMS_courseVersionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  deletedBy?: InputMaybe<LMS_accountRef>;
  deletedDate?: InputMaybe<Scalars['DateTime']>;
  disabledBy?: InputMaybe<LMS_accountRef>;
  disabledDate?: InputMaybe<Scalars['DateTime']>;
  formAttemps?: InputMaybe<Array<LMS_groupAccountFormAttemptRef>>;
  formConfigs?: InputMaybe<Array<LMS_groupFormConfigRef>>;
  formStudentProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  groupAccounts?: InputMaybe<Array<LMS_groupAccountRef>>;
  lessonConfigs?: InputMaybe<Array<LMS_groupLessonConfigRef>>;
  lessonStudentProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  lessonTeacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meetingConfigs?: InputMaybe<Array<LMS_groupLessonMeetingConfigRef>>;
  meetingStudentProgress?: InputMaybe<Array<LMS_meetingStudentProgressRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  resourceConfigs?: InputMaybe<Array<LMS_groupResourceConfigRef>>;
  resourceStudentProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  status?: InputMaybe<LMS_groupStatus>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
};

export type LMS_groupRef = {
  activeBy?: InputMaybe<LMS_accountRef>;
  activeDate?: InputMaybe<Scalars['DateTime']>;
  archivedBy?: InputMaybe<LMS_accountRef>;
  archivedDate?: InputMaybe<Scalars['DateTime']>;
  authors?: InputMaybe<Array<LMS_accountRef>>;
  blockConfigs?: InputMaybe<Array<LMS_groupBlockConfigRef>>;
  blockStudentProgress?: InputMaybe<Array<LMS_blockStudentProgressRef>>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  courseStudentProgress?: InputMaybe<Array<LMS_courseStudentProgressRef>>;
  courseVersion?: InputMaybe<LMS_courseVersionRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  deletedBy?: InputMaybe<LMS_accountRef>;
  deletedDate?: InputMaybe<Scalars['DateTime']>;
  disabledBy?: InputMaybe<LMS_accountRef>;
  disabledDate?: InputMaybe<Scalars['DateTime']>;
  formAttemps?: InputMaybe<Array<LMS_groupAccountFormAttemptRef>>;
  formConfigs?: InputMaybe<Array<LMS_groupFormConfigRef>>;
  formStudentProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  groupAccounts?: InputMaybe<Array<LMS_groupAccountRef>>;
  id?: InputMaybe<Scalars['ID']>;
  lessonConfigs?: InputMaybe<Array<LMS_groupLessonConfigRef>>;
  lessonStudentProgress?: InputMaybe<Array<LMS_lessonStudentProgressRef>>;
  lessonTeacherConfigs?: InputMaybe<Array<LMS_groupLessonTeacherConfigRef>>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meetingConfigs?: InputMaybe<Array<LMS_groupLessonMeetingConfigRef>>;
  meetingStudentProgress?: InputMaybe<Array<LMS_meetingStudentProgressRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  resourceConfigs?: InputMaybe<Array<LMS_groupResourceConfigRef>>;
  resourceStudentProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  status?: InputMaybe<LMS_groupStatus>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
};

export type LMS_groupResourceConfig = {
  __typename?: 'LMS_groupResourceConfig';
  blockByDate?: Maybe<Scalars['Boolean']>;
  blockConfig: LMS_groupBlockConfig;
  courseConfig: LMS_groupCourseConfig;
  endDate?: Maybe<Scalars['DateTime']>;
  group: LMS_group;
  id: Scalars['ID'];
  isCountAsProgress?: Maybe<Scalars['Boolean']>;
  isHidden?: Maybe<Scalars['Boolean']>;
  lessonConfig: LMS_groupLessonConfig;
  logs: Array<LMS_accountLog>;
  logsAggregate?: Maybe<LMS_accountLogAggregateResult>;
  meeting?: Maybe<LMS_groupLessonMeetingConfig>;
  package: LMS_PACKAGE;
  progressValue?: Maybe<Scalars['Float']>;
  resource: LMS_resource;
  startDate?: Maybe<Scalars['DateTime']>;
  studentProgress: Array<LMS_resourceStudentProgress>;
  studentProgressAggregate?: Maybe<LMS_resourceStudentProgressAggregateResult>;
  studentVideoReports: Array<LMS_resourceStudentVideoReport>;
  studentVideoReportsAggregate?: Maybe<LMS_resourceStudentVideoReportAggregateResult>;
};


export type LMS_groupResourceConfigblockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type LMS_groupResourceConfigcourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type LMS_groupResourceConfiggroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_groupResourceConfiglessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_groupResourceConfiglogsArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type LMS_groupResourceConfiglogsAggregateArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type LMS_groupResourceConfigmeetingArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
};


export type LMS_groupResourceConfigpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_groupResourceConfigresourceArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
};


export type LMS_groupResourceConfigstudentProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};


export type LMS_groupResourceConfigstudentProgressAggregateArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
};


export type LMS_groupResourceConfigstudentVideoReportsArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReportOrder>;
};


export type LMS_groupResourceConfigstudentVideoReportsAggregateArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
};

export type LMS_groupResourceConfigAggregateResult = {
  __typename?: 'LMS_groupResourceConfigAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endDateMax?: Maybe<Scalars['DateTime']>;
  endDateMin?: Maybe<Scalars['DateTime']>;
  progressValueAvg?: Maybe<Scalars['Float']>;
  progressValueMax?: Maybe<Scalars['Float']>;
  progressValueMin?: Maybe<Scalars['Float']>;
  progressValueSum?: Maybe<Scalars['Float']>;
  startDateMax?: Maybe<Scalars['DateTime']>;
  startDateMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_groupResourceConfigFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_groupResourceConfigFilter>>>;
  endDate?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<LMS_groupResourceConfigHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_groupResourceConfigFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_groupResourceConfigFilter>>>;
  startDate?: InputMaybe<DateTimeFilter>;
};

export enum LMS_groupResourceConfigHasFilter {
  blockByDate = 'blockByDate',
  blockConfig = 'blockConfig',
  courseConfig = 'courseConfig',
  endDate = 'endDate',
  group = 'group',
  isCountAsProgress = 'isCountAsProgress',
  isHidden = 'isHidden',
  lessonConfig = 'lessonConfig',
  logs = 'logs',
  meeting = 'meeting',
  package = 'package',
  progressValue = 'progressValue',
  resource = 'resource',
  startDate = 'startDate',
  studentProgress = 'studentProgress',
  studentVideoReports = 'studentVideoReports'
}

export type LMS_groupResourceConfigOrder = {
  asc?: InputMaybe<LMS_groupResourceConfigOrderable>;
  desc?: InputMaybe<LMS_groupResourceConfigOrderable>;
  then?: InputMaybe<LMS_groupResourceConfigOrder>;
};

export enum LMS_groupResourceConfigOrderable {
  endDate = 'endDate',
  progressValue = 'progressValue',
  startDate = 'startDate'
}

export type LMS_groupResourceConfigPatch = {
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  blockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  group?: InputMaybe<LMS_groupRef>;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  lessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meeting?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progressValue?: InputMaybe<Scalars['Float']>;
  resource?: InputMaybe<LMS_resourceRef>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  studentVideoReports?: InputMaybe<Array<LMS_resourceStudentVideoReportRef>>;
};

export type LMS_groupResourceConfigRef = {
  blockByDate?: InputMaybe<Scalars['Boolean']>;
  blockConfig?: InputMaybe<LMS_groupBlockConfigRef>;
  courseConfig?: InputMaybe<LMS_groupCourseConfigRef>;
  endDate?: InputMaybe<Scalars['DateTime']>;
  group?: InputMaybe<LMS_groupRef>;
  id?: InputMaybe<Scalars['ID']>;
  isCountAsProgress?: InputMaybe<Scalars['Boolean']>;
  isHidden?: InputMaybe<Scalars['Boolean']>;
  lessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  logs?: InputMaybe<Array<LMS_accountLogRef>>;
  meeting?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progressValue?: InputMaybe<Scalars['Float']>;
  resource?: InputMaybe<LMS_resourceRef>;
  startDate?: InputMaybe<Scalars['DateTime']>;
  studentProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  studentVideoReports?: InputMaybe<Array<LMS_resourceStudentVideoReportRef>>;
};

export enum LMS_groupStatus {
  ACTIVE = 'ACTIVE',
  ARCHIVED = 'ARCHIVED',
  DELETED = 'DELETED',
  DISABLED = 'DISABLED',
  DRAFT = 'DRAFT'
}

export type LMS_groupStatus_exact = {
  between?: InputMaybe<LMS_groupStatus>;
  eq?: InputMaybe<LMS_groupStatus>;
  ge?: InputMaybe<LMS_groupStatus>;
  gt?: InputMaybe<LMS_groupStatus>;
  in?: InputMaybe<Array<InputMaybe<LMS_groupStatus>>>;
  le?: InputMaybe<LMS_groupStatus>;
  lt?: InputMaybe<LMS_groupStatus>;
};

export type LMS_lesson = {
  __typename?: 'LMS_lesson';
  authors: Array<LMS_account>;
  authorsAggregate?: Maybe<LMS_accountAggregateResult>;
  block: LMS_block;
  course: LMS_course;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  description?: Maybe<Scalars['String']>;
  forms: Array<LMS_form>;
  formsAggregate?: Maybe<LMS_formAggregateResult>;
  groupLessonConfigs: Array<LMS_groupLessonConfig>;
  groupLessonConfigsAggregate?: Maybe<LMS_groupLessonConfigAggregateResult>;
  id: Scalars['ID'];
  index: Scalars['Int'];
  name: Scalars['String'];
  package: LMS_PACKAGE;
  previousLessonVersion?: Maybe<LMS_lesson>;
  resources: Array<LMS_resource>;
  resourcesAggregate?: Maybe<LMS_resourceAggregateResult>;
  sections: Array<LMS_section>;
  sectionsAggregate?: Maybe<LMS_sectionAggregateResult>;
  thumbnail?: Maybe<LMS_thumbnail>;
  version: LMS_courseVersion;
};


export type LMS_lessonauthorsArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};


export type LMS_lessonauthorsAggregateArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_lessonblockArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type LMS_lessoncourseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type LMS_lessoncreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_lessonformsArgs = {
  filter?: InputMaybe<LMS_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formOrder>;
};


export type LMS_lessonformsAggregateArgs = {
  filter?: InputMaybe<LMS_formFilter>;
};


export type LMS_lessongroupLessonConfigsArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonConfigOrder>;
};


export type LMS_lessongroupLessonConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_lessonpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_lessonpreviousLessonVersionArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type LMS_lessonresourcesArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};


export type LMS_lessonresourcesAggregateArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
};


export type LMS_lessonsectionsArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_sectionOrder>;
};


export type LMS_lessonsectionsAggregateArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
};


export type LMS_lessonthumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
};


export type LMS_lessonversionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};

export type LMS_lessonAggregateResult = {
  __typename?: 'LMS_lessonAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type LMS_lessonFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_lessonFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_lessonHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_lessonFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_lessonFilter>>>;
};

export enum LMS_lessonHasFilter {
  authors = 'authors',
  block = 'block',
  course = 'course',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  forms = 'forms',
  groupLessonConfigs = 'groupLessonConfigs',
  index = 'index',
  name = 'name',
  package = 'package',
  previousLessonVersion = 'previousLessonVersion',
  resources = 'resources',
  sections = 'sections',
  thumbnail = 'thumbnail',
  version = 'version'
}

export type LMS_lessonOrder = {
  asc?: InputMaybe<LMS_lessonOrderable>;
  desc?: InputMaybe<LMS_lessonOrderable>;
  then?: InputMaybe<LMS_lessonOrder>;
};

export enum LMS_lessonOrderable {
  createdAt = 'createdAt',
  description = 'description',
  index = 'index',
  name = 'name'
}

export type LMS_lessonPatch = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  block?: InputMaybe<LMS_blockRef>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  forms?: InputMaybe<Array<LMS_formRef>>;
  groupLessonConfigs?: InputMaybe<Array<LMS_groupLessonConfigRef>>;
  index?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  previousLessonVersion?: InputMaybe<LMS_lessonRef>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  version?: InputMaybe<LMS_courseVersionRef>;
};

export type LMS_lessonRef = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  block?: InputMaybe<LMS_blockRef>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  forms?: InputMaybe<Array<LMS_formRef>>;
  groupLessonConfigs?: InputMaybe<Array<LMS_groupLessonConfigRef>>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  previousLessonVersion?: InputMaybe<LMS_lessonRef>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  version?: InputMaybe<LMS_courseVersionRef>;
};

export type LMS_lessonStudentProgress = {
  __typename?: 'LMS_lessonStudentProgress';
  blockProgress: LMS_blockStudentProgress;
  courseProgress: LMS_courseStudentProgress;
  formProgress: Array<LMS_formStudentProgress>;
  formProgressAggregate?: Maybe<LMS_formStudentProgressAggregateResult>;
  group: LMS_group;
  groupAccount: LMS_groupAccount;
  groupLessonConfig: LMS_groupLessonConfig;
  id: Scalars['ID'];
  package?: Maybe<LMS_PACKAGE>;
  progress: Scalars['Int'];
  resourceProgress: Array<LMS_resourceStudentProgress>;
  resourceProgressAggregate?: Maybe<LMS_resourceStudentProgressAggregateResult>;
  score: Scalars['Int'];
  scoreDate?: Maybe<Scalars['DateTime']>;
  status: LMS_studentProgressStatus;
};


export type LMS_lessonStudentProgressblockProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
};


export type LMS_lessonStudentProgresscourseProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
};


export type LMS_lessonStudentProgressformProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};


export type LMS_lessonStudentProgressformProgressAggregateArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
};


export type LMS_lessonStudentProgressgroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_lessonStudentProgressgroupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_lessonStudentProgressgroupLessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type LMS_lessonStudentProgresspackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_lessonStudentProgressresourceProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};


export type LMS_lessonStudentProgressresourceProgressAggregateArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
};

export type LMS_lessonStudentProgressAggregateResult = {
  __typename?: 'LMS_lessonStudentProgressAggregateResult';
  count?: Maybe<Scalars['Int']>;
  progressAvg?: Maybe<Scalars['Float']>;
  progressMax?: Maybe<Scalars['Int']>;
  progressMin?: Maybe<Scalars['Int']>;
  progressSum?: Maybe<Scalars['Int']>;
  scoreAvg?: Maybe<Scalars['Float']>;
  scoreDateMax?: Maybe<Scalars['DateTime']>;
  scoreDateMin?: Maybe<Scalars['DateTime']>;
  scoreMax?: Maybe<Scalars['Int']>;
  scoreMin?: Maybe<Scalars['Int']>;
  scoreSum?: Maybe<Scalars['Int']>;
};

export type LMS_lessonStudentProgressFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_lessonStudentProgressFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_lessonStudentProgressHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_lessonStudentProgressFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_lessonStudentProgressFilter>>>;
  progress?: InputMaybe<IntFilter>;
  scoreDate?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<LMS_studentProgressStatus_hash>;
};

export enum LMS_lessonStudentProgressHasFilter {
  blockProgress = 'blockProgress',
  courseProgress = 'courseProgress',
  formProgress = 'formProgress',
  group = 'group',
  groupAccount = 'groupAccount',
  groupLessonConfig = 'groupLessonConfig',
  package = 'package',
  progress = 'progress',
  resourceProgress = 'resourceProgress',
  score = 'score',
  scoreDate = 'scoreDate',
  status = 'status'
}

export type LMS_lessonStudentProgressOrder = {
  asc?: InputMaybe<LMS_lessonStudentProgressOrderable>;
  desc?: InputMaybe<LMS_lessonStudentProgressOrderable>;
  then?: InputMaybe<LMS_lessonStudentProgressOrder>;
};

export enum LMS_lessonStudentProgressOrderable {
  progress = 'progress',
  score = 'score',
  scoreDate = 'scoreDate'
}

export type LMS_lessonStudentProgressPatch = {
  blockProgress?: InputMaybe<LMS_blockStudentProgressRef>;
  courseProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  formProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupLessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  resourceProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export type LMS_lessonStudentProgressRef = {
  blockProgress?: InputMaybe<LMS_blockStudentProgressRef>;
  courseProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  formProgress?: InputMaybe<Array<LMS_formStudentProgressRef>>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupLessonConfig?: InputMaybe<LMS_groupLessonConfigRef>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  resourceProgress?: InputMaybe<Array<LMS_resourceStudentProgressRef>>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
};

export enum LMS_logType {
  CLOSE_GROUP_RESOURCE_DOC = 'CLOSE_GROUP_RESOURCE_DOC',
  CLOSE_GROUP_RESOURCE_VIDEO = 'CLOSE_GROUP_RESOURCE_VIDEO',
  END_GROUP_RESOURCE_VIDEO = 'END_GROUP_RESOURCE_VIDEO',
  MUTE_GROUP_RESOURCE_VIDEO = 'MUTE_GROUP_RESOURCE_VIDEO',
  OPEN_GROUP_BLOCK = 'OPEN_GROUP_BLOCK',
  OPEN_GROUP_COURSE = 'OPEN_GROUP_COURSE',
  OPEN_GROUP_LESSON = 'OPEN_GROUP_LESSON',
  OPEN_GROUP_RESOURCE_DOC = 'OPEN_GROUP_RESOURCE_DOC',
  OPEN_GROUP_RESOURCE_VIDEO = 'OPEN_GROUP_RESOURCE_VIDEO',
  OPEN_OVERVIEW = 'OPEN_OVERVIEW',
  PAUSE_GROUP_RESOURCE_VIDEO = 'PAUSE_GROUP_RESOURCE_VIDEO',
  PLAY_GROUP_RESOURCE_VIDEO = 'PLAY_GROUP_RESOURCE_VIDEO',
  START_GROUP_RESOURCE_VIDEO = 'START_GROUP_RESOURCE_VIDEO',
  UNMUTE_GROUP_RESOURCE_VIDEO = 'UNMUTE_GROUP_RESOURCE_VIDEO'
}

export type LMS_logType_hash = {
  eq?: InputMaybe<LMS_logType>;
  in?: InputMaybe<Array<InputMaybe<LMS_logType>>>;
};

export type LMS_meetingStudentProgress = {
  __typename?: 'LMS_meetingStudentProgress';
  group: LMS_group;
  groupAccount: LMS_groupAccount;
  id: Scalars['ID'];
  isAttended?: Maybe<Scalars['Boolean']>;
  isManualVerified?: Maybe<Scalars['Boolean']>;
  meeting: LMS_groupLessonMeetingConfig;
  package: LMS_PACKAGE;
  verifyBy?: Maybe<LMS_account>;
  verifyDate?: Maybe<Scalars['DateTime']>;
};


export type LMS_meetingStudentProgressgroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_meetingStudentProgressgroupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_meetingStudentProgressmeetingArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
};


export type LMS_meetingStudentProgresspackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_meetingStudentProgressverifyByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};

export type LMS_meetingStudentProgressAggregateResult = {
  __typename?: 'LMS_meetingStudentProgressAggregateResult';
  count?: Maybe<Scalars['Int']>;
  verifyDateMax?: Maybe<Scalars['DateTime']>;
  verifyDateMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_meetingStudentProgressFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_meetingStudentProgressFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_meetingStudentProgressHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isAttended?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<LMS_meetingStudentProgressFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_meetingStudentProgressFilter>>>;
  verifyDate?: InputMaybe<DateTimeFilter>;
};

export enum LMS_meetingStudentProgressHasFilter {
  group = 'group',
  groupAccount = 'groupAccount',
  isAttended = 'isAttended',
  isManualVerified = 'isManualVerified',
  meeting = 'meeting',
  package = 'package',
  verifyBy = 'verifyBy',
  verifyDate = 'verifyDate'
}

export type LMS_meetingStudentProgressOrder = {
  asc?: InputMaybe<LMS_meetingStudentProgressOrderable>;
  desc?: InputMaybe<LMS_meetingStudentProgressOrderable>;
  then?: InputMaybe<LMS_meetingStudentProgressOrder>;
};

export enum LMS_meetingStudentProgressOrderable {
  verifyDate = 'verifyDate'
}

export type LMS_meetingStudentProgressPatch = {
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  isAttended?: InputMaybe<Scalars['Boolean']>;
  isManualVerified?: InputMaybe<Scalars['Boolean']>;
  meeting?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  verifyBy?: InputMaybe<LMS_accountRef>;
  verifyDate?: InputMaybe<Scalars['DateTime']>;
};

export type LMS_meetingStudentProgressRef = {
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  id?: InputMaybe<Scalars['ID']>;
  isAttended?: InputMaybe<Scalars['Boolean']>;
  isManualVerified?: InputMaybe<Scalars['Boolean']>;
  meeting?: InputMaybe<LMS_groupLessonMeetingConfigRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  verifyBy?: InputMaybe<LMS_accountRef>;
  verifyDate?: InputMaybe<Scalars['DateTime']>;
};

export type LMS_product = {
  __typename?: 'LMS_product';
  buyCourseVersion?: Maybe<LMS_courseVersion>;
  course?: Maybe<LMS_course>;
  hours: Scalars['Int'];
  id: Scalars['ID'];
  package?: Maybe<LMS_PACKAGE>;
  product: Product;
  saleCourseVersion?: Maybe<LMS_courseVersion>;
  sessions: Scalars['Int'];
};


export type LMS_productbuyCourseVersionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};


export type LMS_productcourseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type LMS_productpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_productproductArgs = {
  filter?: InputMaybe<ProductFilter>;
};


export type LMS_productsaleCourseVersionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};

export type LMS_productAggregateResult = {
  __typename?: 'LMS_productAggregateResult';
  count?: Maybe<Scalars['Int']>;
  hoursAvg?: Maybe<Scalars['Float']>;
  hoursMax?: Maybe<Scalars['Int']>;
  hoursMin?: Maybe<Scalars['Int']>;
  hoursSum?: Maybe<Scalars['Int']>;
  sessionsAvg?: Maybe<Scalars['Float']>;
  sessionsMax?: Maybe<Scalars['Int']>;
  sessionsMin?: Maybe<Scalars['Int']>;
  sessionsSum?: Maybe<Scalars['Int']>;
};

export type LMS_productFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_productFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_productHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_productFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_productFilter>>>;
};

export enum LMS_productHasFilter {
  buyCourseVersion = 'buyCourseVersion',
  course = 'course',
  hours = 'hours',
  package = 'package',
  product = 'product',
  saleCourseVersion = 'saleCourseVersion',
  sessions = 'sessions'
}

export type LMS_productOrder = {
  asc?: InputMaybe<LMS_productOrderable>;
  desc?: InputMaybe<LMS_productOrderable>;
  then?: InputMaybe<LMS_productOrder>;
};

export enum LMS_productOrderable {
  hours = 'hours',
  sessions = 'sessions'
}

export type LMS_productPatch = {
  buyCourseVersion?: InputMaybe<LMS_courseVersionRef>;
  course?: InputMaybe<LMS_courseRef>;
  hours?: InputMaybe<Scalars['Int']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  product?: InputMaybe<ProductRef>;
  saleCourseVersion?: InputMaybe<LMS_courseVersionRef>;
  sessions?: InputMaybe<Scalars['Int']>;
};

export type LMS_productRef = {
  buyCourseVersion?: InputMaybe<LMS_courseVersionRef>;
  course?: InputMaybe<LMS_courseRef>;
  hours?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  product?: InputMaybe<ProductRef>;
  saleCourseVersion?: InputMaybe<LMS_courseVersionRef>;
  sessions?: InputMaybe<Scalars['Int']>;
};

export type LMS_resource = {
  __typename?: 'LMS_resource';
  authors: Array<LMS_account>;
  authorsAggregate?: Maybe<LMS_accountAggregateResult>;
  block: LMS_block;
  course: LMS_course;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  description?: Maybe<Scalars['String']>;
  groupResourceConfigs: Array<LMS_groupResourceConfig>;
  groupResourceConfigsAggregate?: Maybe<LMS_groupResourceConfigAggregateResult>;
  id: Scalars['ID'];
  index?: Maybe<Scalars['Int']>;
  isGroupAutoConfig: Scalars['Boolean'];
  lesson: LMS_lesson;
  name: Scalars['String'];
  package: LMS_PACKAGE;
  previousResourceVersion?: Maybe<LMS_resource>;
  resource: Resource;
  section?: Maybe<LMS_section>;
  version: LMS_courseVersion;
};


export type LMS_resourceauthorsArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};


export type LMS_resourceauthorsAggregateArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_resourceblockArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type LMS_resourcecourseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type LMS_resourcecreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_resourcegroupResourceConfigsArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};


export type LMS_resourcegroupResourceConfigsAggregateArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type LMS_resourcelessonArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type LMS_resourcepackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_resourcepreviousResourceVersionArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
};


export type LMS_resourceresourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
};


export type LMS_resourcesectionArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
};


export type LMS_resourceversionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};

export type LMS_resourceAggregateResult = {
  __typename?: 'LMS_resourceAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type LMS_resourceFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_resourceFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_resourceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isGroupAutoConfig?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<LMS_resourceFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_resourceFilter>>>;
};

export enum LMS_resourceHasFilter {
  authors = 'authors',
  block = 'block',
  course = 'course',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  groupResourceConfigs = 'groupResourceConfigs',
  index = 'index',
  isGroupAutoConfig = 'isGroupAutoConfig',
  lesson = 'lesson',
  name = 'name',
  package = 'package',
  previousResourceVersion = 'previousResourceVersion',
  resource = 'resource',
  section = 'section',
  version = 'version'
}

export type LMS_resourceOrder = {
  asc?: InputMaybe<LMS_resourceOrderable>;
  desc?: InputMaybe<LMS_resourceOrderable>;
  then?: InputMaybe<LMS_resourceOrder>;
};

export enum LMS_resourceOrderable {
  createdAt = 'createdAt',
  description = 'description',
  index = 'index',
  name = 'name'
}

export type LMS_resourcePatch = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  block?: InputMaybe<LMS_blockRef>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  groupResourceConfigs?: InputMaybe<Array<LMS_groupResourceConfigRef>>;
  index?: InputMaybe<Scalars['Int']>;
  isGroupAutoConfig?: InputMaybe<Scalars['Boolean']>;
  lesson?: InputMaybe<LMS_lessonRef>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  previousResourceVersion?: InputMaybe<LMS_resourceRef>;
  resource?: InputMaybe<ResourceRef>;
  section?: InputMaybe<LMS_sectionRef>;
  version?: InputMaybe<LMS_courseVersionRef>;
};

export type LMS_resourceRef = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  block?: InputMaybe<LMS_blockRef>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  description?: InputMaybe<Scalars['String']>;
  groupResourceConfigs?: InputMaybe<Array<LMS_groupResourceConfigRef>>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  isGroupAutoConfig?: InputMaybe<Scalars['Boolean']>;
  lesson?: InputMaybe<LMS_lessonRef>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  previousResourceVersion?: InputMaybe<LMS_resourceRef>;
  resource?: InputMaybe<ResourceRef>;
  section?: InputMaybe<LMS_sectionRef>;
  version?: InputMaybe<LMS_courseVersionRef>;
};

export type LMS_resourceStudentProgress = {
  __typename?: 'LMS_resourceStudentProgress';
  blockProgress: LMS_blockStudentProgress;
  courseProgress: LMS_courseStudentProgress;
  group: LMS_group;
  groupAccount: LMS_groupAccount;
  groupResourceConfig: LMS_groupResourceConfig;
  id: Scalars['ID'];
  lessonProgress: LMS_lessonStudentProgress;
  package?: Maybe<LMS_PACKAGE>;
  progress: Scalars['Int'];
  score: Scalars['Int'];
  scoreDate?: Maybe<Scalars['DateTime']>;
  status: LMS_studentProgressStatus;
  videoReport?: Maybe<LMS_resourceStudentVideoReport>;
};


export type LMS_resourceStudentProgressblockProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
};


export type LMS_resourceStudentProgresscourseProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
};


export type LMS_resourceStudentProgressgroupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_resourceStudentProgressgroupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type LMS_resourceStudentProgressgroupResourceConfigArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type LMS_resourceStudentProgresslessonProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
};


export type LMS_resourceStudentProgresspackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_resourceStudentProgressvideoReportArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
};

export type LMS_resourceStudentProgressAggregateResult = {
  __typename?: 'LMS_resourceStudentProgressAggregateResult';
  count?: Maybe<Scalars['Int']>;
  progressAvg?: Maybe<Scalars['Float']>;
  progressMax?: Maybe<Scalars['Int']>;
  progressMin?: Maybe<Scalars['Int']>;
  progressSum?: Maybe<Scalars['Int']>;
  scoreAvg?: Maybe<Scalars['Float']>;
  scoreDateMax?: Maybe<Scalars['DateTime']>;
  scoreDateMin?: Maybe<Scalars['DateTime']>;
  scoreMax?: Maybe<Scalars['Int']>;
  scoreMin?: Maybe<Scalars['Int']>;
  scoreSum?: Maybe<Scalars['Int']>;
};

export type LMS_resourceStudentProgressFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_resourceStudentProgressFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_resourceStudentProgressHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_resourceStudentProgressFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_resourceStudentProgressFilter>>>;
  progress?: InputMaybe<IntFilter>;
  scoreDate?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<LMS_studentProgressStatus_hash>;
};

export enum LMS_resourceStudentProgressHasFilter {
  blockProgress = 'blockProgress',
  courseProgress = 'courseProgress',
  group = 'group',
  groupAccount = 'groupAccount',
  groupResourceConfig = 'groupResourceConfig',
  lessonProgress = 'lessonProgress',
  package = 'package',
  progress = 'progress',
  score = 'score',
  scoreDate = 'scoreDate',
  status = 'status',
  videoReport = 'videoReport'
}

export type LMS_resourceStudentProgressOrder = {
  asc?: InputMaybe<LMS_resourceStudentProgressOrderable>;
  desc?: InputMaybe<LMS_resourceStudentProgressOrderable>;
  then?: InputMaybe<LMS_resourceStudentProgressOrder>;
};

export enum LMS_resourceStudentProgressOrderable {
  progress = 'progress',
  score = 'score',
  scoreDate = 'scoreDate'
}

export type LMS_resourceStudentProgressPatch = {
  blockProgress?: InputMaybe<LMS_blockStudentProgressRef>;
  courseProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupResourceConfig?: InputMaybe<LMS_groupResourceConfigRef>;
  lessonProgress?: InputMaybe<LMS_lessonStudentProgressRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
  videoReport?: InputMaybe<LMS_resourceStudentVideoReportRef>;
};

export type LMS_resourceStudentProgressRef = {
  blockProgress?: InputMaybe<LMS_blockStudentProgressRef>;
  courseProgress?: InputMaybe<LMS_courseStudentProgressRef>;
  group?: InputMaybe<LMS_groupRef>;
  groupAccount?: InputMaybe<LMS_groupAccountRef>;
  groupResourceConfig?: InputMaybe<LMS_groupResourceConfigRef>;
  id?: InputMaybe<Scalars['ID']>;
  lessonProgress?: InputMaybe<LMS_lessonStudentProgressRef>;
  package?: InputMaybe<LMS_PACKAGERef>;
  progress?: InputMaybe<Scalars['Int']>;
  score?: InputMaybe<Scalars['Int']>;
  scoreDate?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<LMS_studentProgressStatus>;
  videoReport?: InputMaybe<LMS_resourceStudentVideoReportRef>;
};

export type LMS_resourceStudentVideoReport = {
  __typename?: 'LMS_resourceStudentVideoReport';
  createdAt: Scalars['DateTime'];
  groupResourceConfig: LMS_groupResourceConfig;
  id: Scalars['ID'];
  intervals: Array<LMS_resourceStudentVideoReport_interval>;
  intervalsAggregate?: Maybe<LMS_resourceStudentVideoReport_intervalAggregateResult>;
  package?: Maybe<LMS_PACKAGE>;
  score: Scalars['Int'];
  studentProgress: LMS_resourceStudentProgress;
  updatedAt: Scalars['DateTime'];
  version: Scalars['Int'];
};


export type LMS_resourceStudentVideoReportgroupResourceConfigArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type LMS_resourceStudentVideoReportintervalsArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReport_intervalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReport_intervalOrder>;
};


export type LMS_resourceStudentVideoReportintervalsAggregateArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReport_intervalFilter>;
};


export type LMS_resourceStudentVideoReportpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_resourceStudentVideoReportstudentProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
};

export type LMS_resourceStudentVideoReportAggregateResult = {
  __typename?: 'LMS_resourceStudentVideoReportAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  scoreAvg?: Maybe<Scalars['Float']>;
  scoreMax?: Maybe<Scalars['Int']>;
  scoreMin?: Maybe<Scalars['Int']>;
  scoreSum?: Maybe<Scalars['Int']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
  versionAvg?: Maybe<Scalars['Float']>;
  versionMax?: Maybe<Scalars['Int']>;
  versionMin?: Maybe<Scalars['Int']>;
  versionSum?: Maybe<Scalars['Int']>;
};

export type LMS_resourceStudentVideoReportFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_resourceStudentVideoReportFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<LMS_resourceStudentVideoReportHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_resourceStudentVideoReportFilter>>>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export enum LMS_resourceStudentVideoReportHasFilter {
  createdAt = 'createdAt',
  groupResourceConfig = 'groupResourceConfig',
  intervals = 'intervals',
  package = 'package',
  score = 'score',
  studentProgress = 'studentProgress',
  updatedAt = 'updatedAt',
  version = 'version'
}

export type LMS_resourceStudentVideoReportOrder = {
  asc?: InputMaybe<LMS_resourceStudentVideoReportOrderable>;
  desc?: InputMaybe<LMS_resourceStudentVideoReportOrderable>;
  then?: InputMaybe<LMS_resourceStudentVideoReportOrder>;
};

export enum LMS_resourceStudentVideoReportOrderable {
  createdAt = 'createdAt',
  score = 'score',
  updatedAt = 'updatedAt',
  version = 'version'
}

export type LMS_resourceStudentVideoReportPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  groupResourceConfig?: InputMaybe<LMS_groupResourceConfigRef>;
  intervals?: InputMaybe<Array<LMS_resourceStudentVideoReport_intervalRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  score?: InputMaybe<Scalars['Int']>;
  studentProgress?: InputMaybe<LMS_resourceStudentProgressRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  version?: InputMaybe<Scalars['Int']>;
};

export type LMS_resourceStudentVideoReportRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  groupResourceConfig?: InputMaybe<LMS_groupResourceConfigRef>;
  id?: InputMaybe<Scalars['ID']>;
  intervals?: InputMaybe<Array<LMS_resourceStudentVideoReport_intervalRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  score?: InputMaybe<Scalars['Int']>;
  studentProgress?: InputMaybe<LMS_resourceStudentProgressRef>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  version?: InputMaybe<Scalars['Int']>;
};

export type LMS_resourceStudentVideoReport_interval = {
  __typename?: 'LMS_resourceStudentVideoReport_interval';
  end: Scalars['Int'];
  endAt: Scalars['DateTime'];
  id: Scalars['ID'];
  report: LMS_resourceStudentVideoReport;
  start: Scalars['Int'];
  startAt: Scalars['DateTime'];
  version: Scalars['Int'];
  volume: Scalars['Int'];
};


export type LMS_resourceStudentVideoReport_intervalreportArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
};

export type LMS_resourceStudentVideoReport_intervalAggregateResult = {
  __typename?: 'LMS_resourceStudentVideoReport_intervalAggregateResult';
  count?: Maybe<Scalars['Int']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  endAvg?: Maybe<Scalars['Float']>;
  endMax?: Maybe<Scalars['Int']>;
  endMin?: Maybe<Scalars['Int']>;
  endSum?: Maybe<Scalars['Int']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
  startAvg?: Maybe<Scalars['Float']>;
  startMax?: Maybe<Scalars['Int']>;
  startMin?: Maybe<Scalars['Int']>;
  startSum?: Maybe<Scalars['Int']>;
  versionAvg?: Maybe<Scalars['Float']>;
  versionMax?: Maybe<Scalars['Int']>;
  versionMin?: Maybe<Scalars['Int']>;
  versionSum?: Maybe<Scalars['Int']>;
  volumeAvg?: Maybe<Scalars['Float']>;
  volumeMax?: Maybe<Scalars['Int']>;
  volumeMin?: Maybe<Scalars['Int']>;
  volumeSum?: Maybe<Scalars['Int']>;
};

export type LMS_resourceStudentVideoReport_intervalFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_resourceStudentVideoReport_intervalFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_resourceStudentVideoReport_intervalHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_resourceStudentVideoReport_intervalFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_resourceStudentVideoReport_intervalFilter>>>;
};

export enum LMS_resourceStudentVideoReport_intervalHasFilter {
  end = 'end',
  endAt = 'endAt',
  report = 'report',
  start = 'start',
  startAt = 'startAt',
  version = 'version',
  volume = 'volume'
}

export type LMS_resourceStudentVideoReport_intervalOrder = {
  asc?: InputMaybe<LMS_resourceStudentVideoReport_intervalOrderable>;
  desc?: InputMaybe<LMS_resourceStudentVideoReport_intervalOrderable>;
  then?: InputMaybe<LMS_resourceStudentVideoReport_intervalOrder>;
};

export enum LMS_resourceStudentVideoReport_intervalOrderable {
  end = 'end',
  endAt = 'endAt',
  start = 'start',
  startAt = 'startAt',
  version = 'version',
  volume = 'volume'
}

export type LMS_resourceStudentVideoReport_intervalPatch = {
  end?: InputMaybe<Scalars['Int']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  report?: InputMaybe<LMS_resourceStudentVideoReportRef>;
  start?: InputMaybe<Scalars['Int']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  version?: InputMaybe<Scalars['Int']>;
  volume?: InputMaybe<Scalars['Int']>;
};

export type LMS_resourceStudentVideoReport_intervalRef = {
  end?: InputMaybe<Scalars['Int']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  report?: InputMaybe<LMS_resourceStudentVideoReportRef>;
  start?: InputMaybe<Scalars['Int']>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  version?: InputMaybe<Scalars['Int']>;
  volume?: InputMaybe<Scalars['Int']>;
};

export enum LMS_roleType {
  ADMIN = 'ADMIN',
  DIRECTOR = 'DIRECTOR',
  DISABLED = 'DISABLED',
  FINANCE = 'FINANCE',
  OVERSEER = 'OVERSEER',
  STUDENT = 'STUDENT',
  TEACHER = 'TEACHER'
}

export type LMS_roleType_exact = {
  between?: InputMaybe<LMS_roleType>;
  eq?: InputMaybe<LMS_roleType>;
  ge?: InputMaybe<LMS_roleType>;
  gt?: InputMaybe<LMS_roleType>;
  in?: InputMaybe<Array<InputMaybe<LMS_roleType>>>;
  le?: InputMaybe<LMS_roleType>;
  lt?: InputMaybe<LMS_roleType>;
};

export type LMS_section = {
  __typename?: 'LMS_section';
  authors: Array<LMS_account>;
  authorsAggregate?: Maybe<LMS_accountAggregateResult>;
  block: LMS_block;
  content?: Maybe<Scalars['String']>;
  contentRaw?: Maybe<Scalars['String']>;
  course: LMS_course;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  id: Scalars['ID'];
  index?: Maybe<Scalars['Int']>;
  lesson: LMS_lesson;
  name: Scalars['String'];
  package: LMS_PACKAGE;
  previousSectionVersion?: Maybe<LMS_section>;
  resources: Array<LMS_resource>;
  resourcesAggregate?: Maybe<LMS_resourceAggregateResult>;
  thumbnail?: Maybe<LMS_thumbnail>;
  version: LMS_courseVersion;
};


export type LMS_sectionauthorsArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};


export type LMS_sectionauthorsAggregateArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_sectionblockArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type LMS_sectioncourseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type LMS_sectioncreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_sectionlessonArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type LMS_sectionpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_sectionpreviousSectionVersionArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
};


export type LMS_sectionresourcesArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};


export type LMS_sectionresourcesAggregateArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
};


export type LMS_sectionthumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
};


export type LMS_sectionversionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};

export type LMS_sectionAggregateResult = {
  __typename?: 'LMS_sectionAggregateResult';
  contentMax?: Maybe<Scalars['String']>;
  contentMin?: Maybe<Scalars['String']>;
  contentRawMax?: Maybe<Scalars['String']>;
  contentRawMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type LMS_sectionFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_sectionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_sectionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_sectionFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_sectionFilter>>>;
};

export enum LMS_sectionHasFilter {
  authors = 'authors',
  block = 'block',
  content = 'content',
  contentRaw = 'contentRaw',
  course = 'course',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  index = 'index',
  lesson = 'lesson',
  name = 'name',
  package = 'package',
  previousSectionVersion = 'previousSectionVersion',
  resources = 'resources',
  thumbnail = 'thumbnail',
  version = 'version'
}

export type LMS_sectionOrder = {
  asc?: InputMaybe<LMS_sectionOrderable>;
  desc?: InputMaybe<LMS_sectionOrderable>;
  then?: InputMaybe<LMS_sectionOrder>;
};

export enum LMS_sectionOrderable {
  content = 'content',
  contentRaw = 'contentRaw',
  createdAt = 'createdAt',
  index = 'index',
  name = 'name'
}

export type LMS_sectionPatch = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  block?: InputMaybe<LMS_blockRef>;
  content?: InputMaybe<Scalars['String']>;
  contentRaw?: InputMaybe<Scalars['String']>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  index?: InputMaybe<Scalars['Int']>;
  lesson?: InputMaybe<LMS_lessonRef>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  previousSectionVersion?: InputMaybe<LMS_sectionRef>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  version?: InputMaybe<LMS_courseVersionRef>;
};

export type LMS_sectionRef = {
  authors?: InputMaybe<Array<LMS_accountRef>>;
  block?: InputMaybe<LMS_blockRef>;
  content?: InputMaybe<Scalars['String']>;
  contentRaw?: InputMaybe<Scalars['String']>;
  course?: InputMaybe<LMS_courseRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  lesson?: InputMaybe<LMS_lessonRef>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<LMS_PACKAGERef>;
  previousSectionVersion?: InputMaybe<LMS_sectionRef>;
  resources?: InputMaybe<Array<LMS_resourceRef>>;
  thumbnail?: InputMaybe<LMS_thumbnailRef>;
  version?: InputMaybe<LMS_courseVersionRef>;
};

export enum LMS_studentProgressStatus {
  COMPLETED = 'COMPLETED',
  IN_PROGRESS = 'IN_PROGRESS',
  NOT_STARTED = 'NOT_STARTED'
}

export type LMS_studentProgressStatus_hash = {
  eq?: InputMaybe<LMS_studentProgressStatus>;
  in?: InputMaybe<Array<InputMaybe<LMS_studentProgressStatus>>>;
};

export type LMS_thumbnail = {
  __typename?: 'LMS_thumbnail';
  blocks: Array<LMS_block>;
  blocksAggregate?: Maybe<LMS_blockAggregateResult>;
  courseVersions: Array<LMS_courseVersion>;
  courseVersionsAggregate?: Maybe<LMS_courseVersionAggregateResult>;
  courses: Array<LMS_course>;
  coursesAggregate?: Maybe<LMS_courseAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: LMS_account;
  groups: Array<LMS_group>;
  groupsAggregate?: Maybe<LMS_groupAggregateResult>;
  id: Scalars['ID'];
  lessons: Array<LMS_lesson>;
  lessonsAggregate?: Maybe<LMS_lessonAggregateResult>;
  package: LMS_PACKAGE;
  resource: Resource;
  sections: Array<LMS_section>;
  sectionsAggregate?: Maybe<LMS_sectionAggregateResult>;
};


export type LMS_thumbnailblocksArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockOrder>;
};


export type LMS_thumbnailblocksAggregateArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type LMS_thumbnailcourseVersionsArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseVersionOrder>;
};


export type LMS_thumbnailcourseVersionsAggregateArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};


export type LMS_thumbnailcoursesArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseOrder>;
};


export type LMS_thumbnailcoursesAggregateArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type LMS_thumbnailcreatedByArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type LMS_thumbnailgroupsArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupOrder>;
};


export type LMS_thumbnailgroupsAggregateArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type LMS_thumbnaillessonsArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonOrder>;
};


export type LMS_thumbnaillessonsAggregateArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type LMS_thumbnailpackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type LMS_thumbnailresourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
};


export type LMS_thumbnailsectionsArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_sectionOrder>;
};


export type LMS_thumbnailsectionsAggregateArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
};

export type LMS_thumbnailAggregateResult = {
  __typename?: 'LMS_thumbnailAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
};

export type LMS_thumbnailFilter = {
  and?: InputMaybe<Array<InputMaybe<LMS_thumbnailFilter>>>;
  has?: InputMaybe<Array<InputMaybe<LMS_thumbnailHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LMS_thumbnailFilter>;
  or?: InputMaybe<Array<InputMaybe<LMS_thumbnailFilter>>>;
};

export enum LMS_thumbnailHasFilter {
  blocks = 'blocks',
  courseVersions = 'courseVersions',
  courses = 'courses',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  groups = 'groups',
  lessons = 'lessons',
  package = 'package',
  resource = 'resource',
  sections = 'sections'
}

export type LMS_thumbnailOrder = {
  asc?: InputMaybe<LMS_thumbnailOrderable>;
  desc?: InputMaybe<LMS_thumbnailOrderable>;
  then?: InputMaybe<LMS_thumbnailOrder>;
};

export enum LMS_thumbnailOrderable {
  createdAt = 'createdAt'
}

export type LMS_thumbnailPatch = {
  blocks?: InputMaybe<Array<LMS_blockRef>>;
  courseVersions?: InputMaybe<Array<LMS_courseVersionRef>>;
  courses?: InputMaybe<Array<LMS_courseRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  groups?: InputMaybe<Array<LMS_groupRef>>;
  lessons?: InputMaybe<Array<LMS_lessonRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  resource?: InputMaybe<ResourceRef>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
};

export type LMS_thumbnailRef = {
  blocks?: InputMaybe<Array<LMS_blockRef>>;
  courseVersions?: InputMaybe<Array<LMS_courseVersionRef>>;
  courses?: InputMaybe<Array<LMS_courseRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<LMS_accountRef>;
  groups?: InputMaybe<Array<LMS_groupRef>>;
  id?: InputMaybe<Scalars['ID']>;
  lessons?: InputMaybe<Array<LMS_lessonRef>>;
  package?: InputMaybe<LMS_PACKAGERef>;
  resource?: InputMaybe<ResourceRef>;
  sections?: InputMaybe<Array<LMS_sectionRef>>;
};

export type Logger_log = {
  __typename?: 'Logger_log';
  accountGUID?: Maybe<Scalars['String']>;
  actionKey?: Maybe<Scalars['String']>;
  appGUID?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  ip?: Maybe<Scalars['String']>;
  lat?: Maybe<Scalars['Float']>;
  latLonAccuracy?: Maybe<Logger_log_latLonAccuracy>;
  lon?: Maybe<Scalars['Float']>;
  org360GUID?: Maybe<Scalars['String']>;
  platformGUID?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  type?: Maybe<Logger_logType>;
  url?: Maybe<Scalars['String']>;
  userGUID?: Maybe<Scalars['String']>;
  ux?: Maybe<Scalars['String']>;
};

export type Logger_logAggregateResult = {
  __typename?: 'Logger_logAggregateResult';
  accountGUIDMax?: Maybe<Scalars['String']>;
  accountGUIDMin?: Maybe<Scalars['String']>;
  actionKeyMax?: Maybe<Scalars['String']>;
  actionKeyMin?: Maybe<Scalars['String']>;
  appGUIDMax?: Maybe<Scalars['String']>;
  appGUIDMin?: Maybe<Scalars['String']>;
  cityMax?: Maybe<Scalars['String']>;
  cityMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  countryMax?: Maybe<Scalars['String']>;
  countryMin?: Maybe<Scalars['String']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  ipMax?: Maybe<Scalars['String']>;
  ipMin?: Maybe<Scalars['String']>;
  latAvg?: Maybe<Scalars['Float']>;
  latMax?: Maybe<Scalars['Float']>;
  latMin?: Maybe<Scalars['Float']>;
  latSum?: Maybe<Scalars['Float']>;
  lonAvg?: Maybe<Scalars['Float']>;
  lonMax?: Maybe<Scalars['Float']>;
  lonMin?: Maybe<Scalars['Float']>;
  lonSum?: Maybe<Scalars['Float']>;
  org360GUIDMax?: Maybe<Scalars['String']>;
  org360GUIDMin?: Maybe<Scalars['String']>;
  platformGUIDMax?: Maybe<Scalars['String']>;
  platformGUIDMin?: Maybe<Scalars['String']>;
  regionMax?: Maybe<Scalars['String']>;
  regionMin?: Maybe<Scalars['String']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
  userGUIDMax?: Maybe<Scalars['String']>;
  userGUIDMin?: Maybe<Scalars['String']>;
  uxMax?: Maybe<Scalars['String']>;
  uxMin?: Maybe<Scalars['String']>;
};

export type Logger_logFilter = {
  accountGUID?: InputMaybe<StringExactFilter>;
  actionKey?: InputMaybe<StringExactFilter>;
  and?: InputMaybe<Array<InputMaybe<Logger_logFilter>>>;
  appGUID?: InputMaybe<StringExactFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Logger_logHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  latLonAccuracy?: InputMaybe<Logger_log_latLonAccuracy_exact>;
  not?: InputMaybe<Logger_logFilter>;
  or?: InputMaybe<Array<InputMaybe<Logger_logFilter>>>;
  org360GUID?: InputMaybe<StringExactFilter>;
  type?: InputMaybe<Logger_logType_exact>;
  url?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  userGUID?: InputMaybe<StringExactFilter>;
  ux?: InputMaybe<StringExactFilter>;
};

export enum Logger_logHasFilter {
  accountGUID = 'accountGUID',
  actionKey = 'actionKey',
  appGUID = 'appGUID',
  city = 'city',
  country = 'country',
  createdAt = 'createdAt',
  guid = 'guid',
  ip = 'ip',
  lat = 'lat',
  latLonAccuracy = 'latLonAccuracy',
  lon = 'lon',
  org360GUID = 'org360GUID',
  platformGUID = 'platformGUID',
  region = 'region',
  type = 'type',
  url = 'url',
  userGUID = 'userGUID',
  ux = 'ux'
}

export type Logger_logOrder = {
  asc?: InputMaybe<Logger_logOrderable>;
  desc?: InputMaybe<Logger_logOrderable>;
  then?: InputMaybe<Logger_logOrder>;
};

export enum Logger_logOrderable {
  accountGUID = 'accountGUID',
  actionKey = 'actionKey',
  appGUID = 'appGUID',
  city = 'city',
  country = 'country',
  createdAt = 'createdAt',
  guid = 'guid',
  ip = 'ip',
  lat = 'lat',
  lon = 'lon',
  org360GUID = 'org360GUID',
  platformGUID = 'platformGUID',
  region = 'region',
  url = 'url',
  userGUID = 'userGUID',
  ux = 'ux'
}

export type Logger_logPatch = {
  accountGUID?: InputMaybe<Scalars['String']>;
  actionKey?: InputMaybe<Scalars['String']>;
  appGUID?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  lat?: InputMaybe<Scalars['Float']>;
  latLonAccuracy?: InputMaybe<Logger_log_latLonAccuracy>;
  lon?: InputMaybe<Scalars['Float']>;
  org360GUID?: InputMaybe<Scalars['String']>;
  platformGUID?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Logger_logType>;
  url?: InputMaybe<Scalars['String']>;
  userGUID?: InputMaybe<Scalars['String']>;
  ux?: InputMaybe<Scalars['String']>;
};

export type Logger_logRef = {
  accountGUID?: InputMaybe<Scalars['String']>;
  actionKey?: InputMaybe<Scalars['String']>;
  appGUID?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  ip?: InputMaybe<Scalars['String']>;
  lat?: InputMaybe<Scalars['Float']>;
  latLonAccuracy?: InputMaybe<Logger_log_latLonAccuracy>;
  lon?: InputMaybe<Scalars['Float']>;
  org360GUID?: InputMaybe<Scalars['String']>;
  platformGUID?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Logger_logType>;
  url?: InputMaybe<Scalars['String']>;
  userGUID?: InputMaybe<Scalars['String']>;
  ux?: InputMaybe<Scalars['String']>;
};

export enum Logger_logType {
  CLICK = 'CLICK',
  CREATE = 'CREATE',
  CUSTOM = 'CUSTOM',
  DELETE = 'DELETE',
  DOWNLOAD = 'DOWNLOAD',
  ERROR = 'ERROR',
  LOGIN = 'LOGIN',
  LOGOUT = 'LOGOUT',
  READ = 'READ',
  UNKNOWN = 'UNKNOWN',
  UPDATE = 'UPDATE'
}

export type Logger_logType_exact = {
  between?: InputMaybe<Logger_logType>;
  eq?: InputMaybe<Logger_logType>;
  ge?: InputMaybe<Logger_logType>;
  gt?: InputMaybe<Logger_logType>;
  in?: InputMaybe<Array<InputMaybe<Logger_logType>>>;
  le?: InputMaybe<Logger_logType>;
  lt?: InputMaybe<Logger_logType>;
};

export enum Logger_log_latLonAccuracy {
  APPROXIMATE = 'APPROXIMATE',
  NONE = 'NONE',
  PROVIDE_BY_USER = 'PROVIDE_BY_USER'
}

export type Logger_log_latLonAccuracy_exact = {
  between?: InputMaybe<Logger_log_latLonAccuracy>;
  eq?: InputMaybe<Logger_log_latLonAccuracy>;
  ge?: InputMaybe<Logger_log_latLonAccuracy>;
  gt?: InputMaybe<Logger_log_latLonAccuracy>;
  in?: InputMaybe<Array<InputMaybe<Logger_log_latLonAccuracy>>>;
  le?: InputMaybe<Logger_log_latLonAccuracy>;
  lt?: InputMaybe<Logger_log_latLonAccuracy>;
};

export type LoginProvider = {
  __typename?: 'LoginProvider';
  accessToken?: Maybe<Scalars['String']>;
  accountObject?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  email?: Maybe<Scalars['String']>;
  expireAt?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  phone?: Maybe<Scalars['String']>;
  providerId?: Maybe<Scalars['String']>;
  refreshToken?: Maybe<Scalars['String']>;
  status: LoginProviderStatus;
  type: LoginProviderType;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
  username?: Maybe<Scalars['String']>;
};


export type LoginProvideruserArgs = {
  filter?: InputMaybe<UserFilter>;
};

export type LoginProviderAggregateResult = {
  __typename?: 'LoginProviderAggregateResult';
  accessTokenMax?: Maybe<Scalars['String']>;
  accessTokenMin?: Maybe<Scalars['String']>;
  accountObjectMax?: Maybe<Scalars['String']>;
  accountObjectMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  emailMax?: Maybe<Scalars['String']>;
  emailMin?: Maybe<Scalars['String']>;
  expireAtMax?: Maybe<Scalars['DateTime']>;
  expireAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  phoneMax?: Maybe<Scalars['String']>;
  phoneMin?: Maybe<Scalars['String']>;
  providerIdMax?: Maybe<Scalars['String']>;
  providerIdMin?: Maybe<Scalars['String']>;
  refreshTokenMax?: Maybe<Scalars['String']>;
  refreshTokenMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
  usernameMax?: Maybe<Scalars['String']>;
  usernameMin?: Maybe<Scalars['String']>;
};

export type LoginProviderFilter = {
  and?: InputMaybe<Array<InputMaybe<LoginProviderFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  email?: InputMaybe<StringExactFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<LoginProviderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<LoginProviderFilter>;
  or?: InputMaybe<Array<InputMaybe<LoginProviderFilter>>>;
  phone?: InputMaybe<StringExactFilter>;
  providerId?: InputMaybe<StringExactFilter>;
  status?: InputMaybe<LoginProviderStatus_exact>;
  type?: InputMaybe<LoginProviderType_exact>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  username?: InputMaybe<StringExactFilter>;
};

export enum LoginProviderHasFilter {
  accessToken = 'accessToken',
  accountObject = 'accountObject',
  createdAt = 'createdAt',
  email = 'email',
  expireAt = 'expireAt',
  guid = 'guid',
  phone = 'phone',
  providerId = 'providerId',
  refreshToken = 'refreshToken',
  status = 'status',
  type = 'type',
  updatedAt = 'updatedAt',
  user = 'user',
  username = 'username'
}

export type LoginProviderOrder = {
  asc?: InputMaybe<LoginProviderOrderable>;
  desc?: InputMaybe<LoginProviderOrderable>;
  then?: InputMaybe<LoginProviderOrder>;
};

export enum LoginProviderOrderable {
  accessToken = 'accessToken',
  accountObject = 'accountObject',
  createdAt = 'createdAt',
  email = 'email',
  expireAt = 'expireAt',
  guid = 'guid',
  phone = 'phone',
  providerId = 'providerId',
  refreshToken = 'refreshToken',
  updatedAt = 'updatedAt',
  username = 'username'
}

export type LoginProviderPatch = {
  accessToken?: InputMaybe<Scalars['String']>;
  accountObject?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  providerId?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<LoginProviderStatus>;
  type?: InputMaybe<LoginProviderType>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserRef>;
  username?: InputMaybe<Scalars['String']>;
};

export type LoginProviderRef = {
  accessToken?: InputMaybe<Scalars['String']>;
  accountObject?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  expireAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  phone?: InputMaybe<Scalars['String']>;
  providerId?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<LoginProviderStatus>;
  type?: InputMaybe<LoginProviderType>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserRef>;
  username?: InputMaybe<Scalars['String']>;
};

export enum LoginProviderStatus {
  ACTIVE = 'ACTIVE',
  DELETED = 'DELETED',
  INACTIVE = 'INACTIVE'
}

export type LoginProviderStatus_exact = {
  between?: InputMaybe<LoginProviderStatus>;
  eq?: InputMaybe<LoginProviderStatus>;
  ge?: InputMaybe<LoginProviderStatus>;
  gt?: InputMaybe<LoginProviderStatus>;
  in?: InputMaybe<Array<InputMaybe<LoginProviderStatus>>>;
  le?: InputMaybe<LoginProviderStatus>;
  lt?: InputMaybe<LoginProviderStatus>;
};

export enum LoginProviderType {
  APPLE = 'APPLE',
  FACEBOOK = 'FACEBOOK',
  GITHUB = 'GITHUB',
  GOOGLE = 'GOOGLE',
  INSTAGRAM = 'INSTAGRAM',
  LINKEDIN = 'LINKEDIN',
  MSFT = 'MSFT',
  PASSWORD = 'PASSWORD',
  SSO = 'SSO'
}

export type LoginProviderType_exact = {
  between?: InputMaybe<LoginProviderType>;
  eq?: InputMaybe<LoginProviderType>;
  ge?: InputMaybe<LoginProviderType>;
  gt?: InputMaybe<LoginProviderType>;
  in?: InputMaybe<Array<InputMaybe<LoginProviderType>>>;
  le?: InputMaybe<LoginProviderType>;
  lt?: InputMaybe<LoginProviderType>;
};

export type Meeting = {
  __typename?: 'Meeting';
  createdBy: Account;
  date: Scalars['DateTime'];
  description?: Maybe<Scalars['String']>;
  endTime: Scalars['String'];
  estimatedTime: Scalars['Int'];
  id: Scalars['ID'];
  org360?: Maybe<Org360>;
  participants?: Maybe<Array<MeetingAccount>>;
  participantsAggregate?: Maybe<MeetingAccountAggregateResult>;
  provider?: Maybe<MeetingProvider>;
  reminders?: Maybe<Array<Scheduler_task>>;
  remindersAggregate?: Maybe<Scheduler_taskAggregateResult>;
  startTime: Scalars['String'];
  time: Scalars['Int'];
  title: Scalars['String'];
  type: MeetingType;
};


export type MeetingcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Meetingorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type MeetingparticipantsArgs = {
  filter?: InputMaybe<MeetingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingAccountOrder>;
};


export type MeetingparticipantsAggregateArgs = {
  filter?: InputMaybe<MeetingAccountFilter>;
};


export type MeetingproviderArgs = {
  filter?: InputMaybe<MeetingProviderFilter>;
};


export type MeetingremindersArgs = {
  filter?: InputMaybe<Scheduler_taskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_taskOrder>;
};


export type MeetingremindersAggregateArgs = {
  filter?: InputMaybe<Scheduler_taskFilter>;
};

export type MeetingAccount = {
  __typename?: 'MeetingAccount';
  account: Account;
  connections?: Maybe<Array<Maybe<Scalars['DateTime']>>>;
  disconnections?: Maybe<Array<Maybe<Scalars['DateTime']>>>;
  displayName: Scalars['String'];
  displayRoleName?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  meeting: Meeting;
  role: MeetingRole;
};


export type MeetingAccountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type MeetingAccountmeetingArgs = {
  filter?: InputMaybe<MeetingFilter>;
};

export type MeetingAccountAggregateResult = {
  __typename?: 'MeetingAccountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  displayNameMax?: Maybe<Scalars['String']>;
  displayNameMin?: Maybe<Scalars['String']>;
  displayRoleNameMax?: Maybe<Scalars['String']>;
  displayRoleNameMin?: Maybe<Scalars['String']>;
};

export type MeetingAccountFilter = {
  and?: InputMaybe<Array<InputMaybe<MeetingAccountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<MeetingAccountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<MeetingAccountFilter>;
  or?: InputMaybe<Array<InputMaybe<MeetingAccountFilter>>>;
};

export enum MeetingAccountHasFilter {
  account = 'account',
  connections = 'connections',
  disconnections = 'disconnections',
  displayName = 'displayName',
  displayRoleName = 'displayRoleName',
  meeting = 'meeting',
  role = 'role'
}

export type MeetingAccountOrder = {
  asc?: InputMaybe<MeetingAccountOrderable>;
  desc?: InputMaybe<MeetingAccountOrderable>;
  then?: InputMaybe<MeetingAccountOrder>;
};

export enum MeetingAccountOrderable {
  displayName = 'displayName',
  displayRoleName = 'displayRoleName'
}

export type MeetingAccountPatch = {
  account?: InputMaybe<AccountRef>;
  connections?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  disconnections?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  displayName?: InputMaybe<Scalars['String']>;
  displayRoleName?: InputMaybe<Scalars['String']>;
  meeting?: InputMaybe<MeetingRef>;
  role?: InputMaybe<MeetingRole>;
};

export type MeetingAccountRef = {
  account?: InputMaybe<AccountRef>;
  connections?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  disconnections?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  displayName?: InputMaybe<Scalars['String']>;
  displayRoleName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  meeting?: InputMaybe<MeetingRef>;
  role?: InputMaybe<MeetingRole>;
};

export type MeetingAggregateResult = {
  __typename?: 'MeetingAggregateResult';
  count?: Maybe<Scalars['Int']>;
  dateMax?: Maybe<Scalars['DateTime']>;
  dateMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  endTimeMax?: Maybe<Scalars['String']>;
  endTimeMin?: Maybe<Scalars['String']>;
  estimatedTimeAvg?: Maybe<Scalars['Float']>;
  estimatedTimeMax?: Maybe<Scalars['Int']>;
  estimatedTimeMin?: Maybe<Scalars['Int']>;
  estimatedTimeSum?: Maybe<Scalars['Int']>;
  startTimeMax?: Maybe<Scalars['String']>;
  startTimeMin?: Maybe<Scalars['String']>;
  timeAvg?: Maybe<Scalars['Float']>;
  timeMax?: Maybe<Scalars['Int']>;
  timeMin?: Maybe<Scalars['Int']>;
  timeSum?: Maybe<Scalars['Int']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
};

export enum MeetingDoctors_featureVideoCall {
  DISABLED = 'DISABLED',
  ENABLED = 'ENABLED'
}

export type MeetingDoctors_featureVideoCall_exact = {
  between?: InputMaybe<MeetingDoctors_featureVideoCall>;
  eq?: InputMaybe<MeetingDoctors_featureVideoCall>;
  ge?: InputMaybe<MeetingDoctors_featureVideoCall>;
  gt?: InputMaybe<MeetingDoctors_featureVideoCall>;
  in?: InputMaybe<Array<InputMaybe<MeetingDoctors_featureVideoCall>>>;
  le?: InputMaybe<MeetingDoctors_featureVideoCall>;
  lt?: InputMaybe<MeetingDoctors_featureVideoCall>;
};

export type MeetingDoctors_user = {
  __typename?: 'MeetingDoctors_user';
  company_group_code?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  pet: PETPASS_pet;
  status: MeetingDoctors_userStatus;
  user: PETPASS_user;
  video_call: MeetingDoctors_featureVideoCall;
  video_call_1to1: MeetingDoctors_featureVideoCall;
};


export type MeetingDoctors_userpetArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};


export type MeetingDoctors_useruserArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};

export type MeetingDoctors_userAggregateResult = {
  __typename?: 'MeetingDoctors_userAggregateResult';
  company_group_codeMax?: Maybe<Scalars['String']>;
  company_group_codeMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type MeetingDoctors_userFilter = {
  and?: InputMaybe<Array<InputMaybe<MeetingDoctors_userFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<MeetingDoctors_userHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<MeetingDoctors_userFilter>;
  or?: InputMaybe<Array<InputMaybe<MeetingDoctors_userFilter>>>;
  status?: InputMaybe<MeetingDoctors_userStatus_exact>;
  video_call?: InputMaybe<MeetingDoctors_featureVideoCall_exact>;
  video_call_1to1?: InputMaybe<MeetingDoctors_featureVideoCall_exact>;
};

export enum MeetingDoctors_userHasFilter {
  company_group_code = 'company_group_code',
  guid = 'guid',
  pet = 'pet',
  status = 'status',
  user = 'user',
  video_call = 'video_call',
  video_call_1to1 = 'video_call_1to1'
}

export type MeetingDoctors_userOrder = {
  asc?: InputMaybe<MeetingDoctors_userOrderable>;
  desc?: InputMaybe<MeetingDoctors_userOrderable>;
  then?: InputMaybe<MeetingDoctors_userOrder>;
};

export enum MeetingDoctors_userOrderable {
  company_group_code = 'company_group_code',
  guid = 'guid'
}

export type MeetingDoctors_userPatch = {
  company_group_code?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  pet?: InputMaybe<PETPASS_petRef>;
  status?: InputMaybe<MeetingDoctors_userStatus>;
  user?: InputMaybe<PETPASS_userRef>;
  video_call?: InputMaybe<MeetingDoctors_featureVideoCall>;
  video_call_1to1?: InputMaybe<MeetingDoctors_featureVideoCall>;
};

export type MeetingDoctors_userRef = {
  company_group_code?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  pet?: InputMaybe<PETPASS_petRef>;
  status?: InputMaybe<MeetingDoctors_userStatus>;
  user?: InputMaybe<PETPASS_userRef>;
  video_call?: InputMaybe<MeetingDoctors_featureVideoCall>;
  video_call_1to1?: InputMaybe<MeetingDoctors_featureVideoCall>;
};

export enum MeetingDoctors_userStatus {
  FREE = 'FREE',
  NO_ACCESS = 'NO_ACCESS',
  PREMIUM = 'PREMIUM'
}

export type MeetingDoctors_userStatus_exact = {
  between?: InputMaybe<MeetingDoctors_userStatus>;
  eq?: InputMaybe<MeetingDoctors_userStatus>;
  ge?: InputMaybe<MeetingDoctors_userStatus>;
  gt?: InputMaybe<MeetingDoctors_userStatus>;
  in?: InputMaybe<Array<InputMaybe<MeetingDoctors_userStatus>>>;
  le?: InputMaybe<MeetingDoctors_userStatus>;
  lt?: InputMaybe<MeetingDoctors_userStatus>;
};

export type MeetingFilter = {
  and?: InputMaybe<Array<InputMaybe<MeetingFilter>>>;
  has?: InputMaybe<Array<InputMaybe<MeetingHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<MeetingFilter>;
  or?: InputMaybe<Array<InputMaybe<MeetingFilter>>>;
};

export enum MeetingHasFilter {
  createdBy = 'createdBy',
  date = 'date',
  description = 'description',
  endTime = 'endTime',
  estimatedTime = 'estimatedTime',
  org360 = 'org360',
  participants = 'participants',
  provider = 'provider',
  reminders = 'reminders',
  startTime = 'startTime',
  time = 'time',
  title = 'title',
  type = 'type'
}

export type MeetingOrder = {
  asc?: InputMaybe<MeetingOrderable>;
  desc?: InputMaybe<MeetingOrderable>;
  then?: InputMaybe<MeetingOrder>;
};

export enum MeetingOrderable {
  date = 'date',
  description = 'description',
  endTime = 'endTime',
  estimatedTime = 'estimatedTime',
  startTime = 'startTime',
  time = 'time',
  title = 'title'
}

export type MeetingPatch = {
  createdBy?: InputMaybe<AccountRef>;
  date?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['String']>;
  estimatedTime?: InputMaybe<Scalars['Int']>;
  org360?: InputMaybe<Org360Ref>;
  participants?: InputMaybe<Array<MeetingAccountRef>>;
  provider?: InputMaybe<MeetingProviderRef>;
  reminders?: InputMaybe<Array<Scheduler_taskRef>>;
  startTime?: InputMaybe<Scalars['String']>;
  time?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<MeetingType>;
};

export type MeetingProvider = {
  __typename?: 'MeetingProvider';
  accessCode?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  msftProviderInfo?: Maybe<Integrations_MSFT_Meeting>;
  provider: Integrations_account;
  url: Scalars['String'];
};


export type MeetingProvidermsftProviderInfoArgs = {
  filter?: InputMaybe<Integrations_MSFT_MeetingFilter>;
};


export type MeetingProviderproviderArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};

export type MeetingProviderAggregateResult = {
  __typename?: 'MeetingProviderAggregateResult';
  accessCodeMax?: Maybe<Scalars['String']>;
  accessCodeMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
};

export type MeetingProviderFilter = {
  and?: InputMaybe<Array<InputMaybe<MeetingProviderFilter>>>;
  has?: InputMaybe<Array<InputMaybe<MeetingProviderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<MeetingProviderFilter>;
  or?: InputMaybe<Array<InputMaybe<MeetingProviderFilter>>>;
};

export enum MeetingProviderHasFilter {
  accessCode = 'accessCode',
  msftProviderInfo = 'msftProviderInfo',
  provider = 'provider',
  url = 'url'
}

export type MeetingProviderOrder = {
  asc?: InputMaybe<MeetingProviderOrderable>;
  desc?: InputMaybe<MeetingProviderOrderable>;
  then?: InputMaybe<MeetingProviderOrder>;
};

export enum MeetingProviderOrderable {
  accessCode = 'accessCode',
  url = 'url'
}

export type MeetingProviderPatch = {
  accessCode?: InputMaybe<Scalars['String']>;
  msftProviderInfo?: InputMaybe<Integrations_MSFT_MeetingRef>;
  provider?: InputMaybe<Integrations_accountRef>;
  url?: InputMaybe<Scalars['String']>;
};

export type MeetingProviderRef = {
  accessCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  msftProviderInfo?: InputMaybe<Integrations_MSFT_MeetingRef>;
  provider?: InputMaybe<Integrations_accountRef>;
  url?: InputMaybe<Scalars['String']>;
};

export type MeetingRef = {
  createdBy?: InputMaybe<AccountRef>;
  date?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  endTime?: InputMaybe<Scalars['String']>;
  estimatedTime?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  participants?: InputMaybe<Array<MeetingAccountRef>>;
  provider?: InputMaybe<MeetingProviderRef>;
  reminders?: InputMaybe<Array<Scheduler_taskRef>>;
  startTime?: InputMaybe<Scalars['String']>;
  time?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<MeetingType>;
};

export enum MeetingRole {
  GUEST = 'GUEST',
  OWNER = 'OWNER'
}

export enum MeetingType {
  IN_PERSON = 'IN_PERSON',
  MIXED = 'MIXED',
  ONLINE = 'ONLINE'
}

export enum Mode {
  BATCH = 'BATCH',
  SINGLE = 'SINGLE'
}

export type MultiPolygon = {
  __typename?: 'MultiPolygon';
  polygons: Array<Polygon>;
};

export type MultiPolygonRef = {
  polygons: Array<PolygonRef>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addAUDITS_PACKAGE?: Maybe<AddAUDITS_PACKAGEPayload>;
  addAUDITS_account?: Maybe<AddAUDITS_accountPayload>;
  addAUDITS_document?: Maybe<AddAUDITS_documentPayload>;
  addAUDITS_document_block?: Maybe<AddAUDITS_document_blockPayload>;
  addAUDITS_document_blockImage?: Maybe<AddAUDITS_document_blockImagePayload>;
  addAUDITS_document_blockQuote?: Maybe<AddAUDITS_document_blockQuotePayload>;
  addAUDITS_document_blockTable?: Maybe<AddAUDITS_document_blockTablePayload>;
  addAUDITS_document_blockTableCell?: Maybe<AddAUDITS_document_blockTableCellPayload>;
  addAUDITS_document_blockTableColumn?: Maybe<AddAUDITS_document_blockTableColumnPayload>;
  addAUDITS_document_blockTableRow?: Maybe<AddAUDITS_document_blockTableRowPayload>;
  addAUDITS_document_blockText?: Maybe<AddAUDITS_document_blockTextPayload>;
  addAUDITS_document_blockTitle?: Maybe<AddAUDITS_document_blockTitlePayload>;
  addAUDITS_file?: Maybe<AddAUDITS_filePayload>;
  addAUDITS_project?: Maybe<AddAUDITS_projectPayload>;
  addAUDITS_project_version?: Maybe<AddAUDITS_project_versionPayload>;
  addAUDITS_review?: Maybe<AddAUDITS_reviewPayload>;
  addAUDITS_review_account?: Maybe<AddAUDITS_review_accountPayload>;
  addAUDITS_review_comment?: Maybe<AddAUDITS_review_commentPayload>;
  addAccount?: Maybe<AddAccountPayload>;
  addAccount_event?: Maybe<AddAccount_eventPayload>;
  addAccount_log?: Maybe<AddAccount_logPayload>;
  addAccount_notification?: Maybe<AddAccount_notificationPayload>;
  addAccount_session?: Maybe<AddAccount_sessionPayload>;
  addAccount_sessionConnection?: Maybe<AddAccount_sessionConnectionPayload>;
  addAccount_sessionConnectionTask?: Maybe<AddAccount_sessionConnectionTaskPayload>;
  addAccount_sessionTask?: Maybe<AddAccount_sessionTaskPayload>;
  addAddress?: Maybe<AddAddressPayload>;
  addBank?: Maybe<AddBankPayload>;
  addBankAccount?: Maybe<AddBankAccountPayload>;
  addCMS_PACKAGE?: Maybe<AddCMS_PACKAGEPayload>;
  addCMS_account?: Maybe<AddCMS_accountPayload>;
  addCMS_app?: Maybe<AddCMS_appPayload>;
  addCMS_appContact?: Maybe<AddCMS_appContactPayload>;
  addCMS_authorAlias?: Maybe<AddCMS_authorAliasPayload>;
  addCMS_contact?: Maybe<AddCMS_contactPayload>;
  addCMS_file?: Maybe<AddCMS_filePayload>;
  addCMS_website?: Maybe<AddCMS_websitePayload>;
  addCMS_website_page?: Maybe<AddCMS_website_pagePayload>;
  addCMS_website_page_block?: Maybe<AddCMS_website_page_blockPayload>;
  addCMS_website_page_blockCombo?: Maybe<AddCMS_website_page_blockComboPayload>;
  addCMS_website_page_blockImage?: Maybe<AddCMS_website_page_blockImagePayload>;
  addCMS_website_page_blockLink?: Maybe<AddCMS_website_page_blockLinkPayload>;
  addCMS_website_page_blockText?: Maybe<AddCMS_website_page_blockTextPayload>;
  addCMS_website_page_blockTitle?: Maybe<AddCMS_website_page_blockTitlePayload>;
  addCRM_PACKAGE?: Maybe<AddCRM_PACKAGEPayload>;
  addCRM_account?: Maybe<AddCRM_accountPayload>;
  addCRM_accountContactsTableColumn?: Maybe<AddCRM_accountContactsTableColumnPayload>;
  addCRM_accountContactsTableFilter?: Maybe<AddCRM_accountContactsTableFilterPayload>;
  addCRM_accountEvent?: Maybe<AddCRM_accountEventPayload>;
  addCRM_action?: Maybe<AddCRM_actionPayload>;
  addCRM_actionCall?: Maybe<AddCRM_actionCallPayload>;
  addCRM_actionChat?: Maybe<AddCRM_actionChatPayload>;
  addCRM_actionEmail?: Maybe<AddCRM_actionEmailPayload>;
  addCRM_actionMeeting?: Maybe<AddCRM_actionMeetingPayload>;
  addCRM_area?: Maybe<AddCRM_areaPayload>;
  addCRM_campaign?: Maybe<AddCRM_campaignPayload>;
  addCRM_campaignContact?: Maybe<AddCRM_campaignContactPayload>;
  addCRM_campaignContactEvent?: Maybe<AddCRM_campaignContactEventPayload>;
  addCRM_campaignDeliver?: Maybe<AddCRM_campaignDeliverPayload>;
  addCRM_campaignEmailTemplate?: Maybe<AddCRM_campaignEmailTemplatePayload>;
  addCRM_contact?: Maybe<AddCRM_contactPayload>;
  addCRM_contactAction?: Maybe<AddCRM_contactActionPayload>;
  addCRM_contactActionCall?: Maybe<AddCRM_contactActionCallPayload>;
  addCRM_contactActionChat?: Maybe<AddCRM_contactActionChatPayload>;
  addCRM_contactActionEmail?: Maybe<AddCRM_contactActionEmailPayload>;
  addCRM_contactActionMeeting?: Maybe<AddCRM_contactActionMeetingPayload>;
  addCRM_contactActionStatusChange?: Maybe<AddCRM_contactActionStatusChangePayload>;
  addCRM_contactAnswer?: Maybe<AddCRM_contactAnswerPayload>;
  addCRM_contactInput?: Maybe<AddCRM_contactInputPayload>;
  addCRM_contactInputSubStatus?: Maybe<AddCRM_contactInputSubStatusPayload>;
  addCRM_contactInputValue?: Maybe<AddCRM_contactInputValuePayload>;
  addCRM_contactList?: Maybe<AddCRM_contactListPayload>;
  addCRM_emailTemplate?: Maybe<AddCRM_emailTemplatePayload>;
  addCRM_event?: Maybe<AddCRM_eventPayload>;
  addCRM_funnel?: Maybe<AddCRM_funnelPayload>;
  addCRM_funnelAction?: Maybe<AddCRM_funnelActionPayload>;
  addCRM_funnelStatus?: Maybe<AddCRM_funnelStatusPayload>;
  addCRM_opportunityLog?: Maybe<AddCRM_opportunityLogPayload>;
  addCRM_opportunityPaymentPlanItem?: Maybe<AddCRM_opportunityPaymentPlanItemPayload>;
  addCRM_overview?: Maybe<AddCRM_overviewPayload>;
  addCRM_proposal?: Maybe<AddCRM_proposalPayload>;
  addCRM_role?: Maybe<AddCRM_rolePayload>;
  addCRM_socialMediaCampaign?: Maybe<AddCRM_socialMediaCampaignPayload>;
  addCRM_socialMediaCampaign_media?: Maybe<AddCRM_socialMediaCampaign_mediaPayload>;
  addCRM_socialMediaCampaign_post?: Maybe<AddCRM_socialMediaCampaign_postPayload>;
  addCRM_source?: Maybe<AddCRM_sourcePayload>;
  addCRM_sourceCategory?: Maybe<AddCRM_sourceCategoryPayload>;
  addCRM_sourceForm?: Maybe<AddCRM_sourceFormPayload>;
  addCRM_sourceFormField?: Maybe<AddCRM_sourceFormFieldPayload>;
  addCRM_sourceFormReason?: Maybe<AddCRM_sourceFormReasonPayload>;
  addCRM_sourceForm_emailTemplate?: Maybe<AddCRM_sourceForm_emailTemplatePayload>;
  addCRM_team?: Maybe<AddCRM_teamPayload>;
  addCRM_teamAccount?: Maybe<AddCRM_teamAccountPayload>;
  addCRM_teamAction?: Maybe<AddCRM_teamActionPayload>;
  addCRM_teamActionBoardEffect?: Maybe<AddCRM_teamActionBoardEffectPayload>;
  addCRM_teamBoard?: Maybe<AddCRM_teamBoardPayload>;
  addCRM_teamBoardItem?: Maybe<AddCRM_teamBoardItemPayload>;
  addCRM_teamBoardStatus?: Maybe<AddCRM_teamBoardStatusPayload>;
  addCRM_teamBoardSubStatus?: Maybe<AddCRM_teamBoardSubStatusPayload>;
  addCRM_teamBoardTask?: Maybe<AddCRM_teamBoardTaskPayload>;
  addChatbots_PACKAGE?: Maybe<AddChatbots_PACKAGEPayload>;
  addChatbots_account?: Maybe<AddChatbots_accountPayload>;
  addChatbots_area?: Maybe<AddChatbots_areaPayload>;
  addChatbots_areaAccount?: Maybe<AddChatbots_areaAccountPayload>;
  addChatbots_externalAPI?: Maybe<AddChatbots_externalAPIPayload>;
  addChatbots_externalAPI_field?: Maybe<AddChatbots_externalAPI_fieldPayload>;
  addChatbots_process?: Maybe<AddChatbots_processPayload>;
  addChatbots_processAPI?: Maybe<AddChatbots_processAPIPayload>;
  addChatbots_processAccount?: Maybe<AddChatbots_processAccountPayload>;
  addChatbots_processAction?: Maybe<AddChatbots_processActionPayload>;
  addChatbots_processButton?: Maybe<AddChatbots_processButtonPayload>;
  addChatbots_processField?: Maybe<AddChatbots_processFieldPayload>;
  addChatbots_processFilterParam?: Maybe<AddChatbots_processFilterParamPayload>;
  addChatbots_processOperation?: Maybe<AddChatbots_processOperationPayload>;
  addChatbots_processStatus?: Maybe<AddChatbots_processStatusPayload>;
  addChatbots_processTableHead?: Maybe<AddChatbots_processTableHeadPayload>;
  addChatbots_processTableHeadConfig?: Maybe<AddChatbots_processTableHeadConfigPayload>;
  addChatbots_processTableMatchReplace?: Maybe<AddChatbots_processTableMatchReplacePayload>;
  addChatbots_processValidation?: Maybe<AddChatbots_processValidationPayload>;
  addChatbots_processValidationOperation?: Maybe<AddChatbots_processValidationOperationPayload>;
  addChatbots_processValidationOperation_document?: Maybe<AddChatbots_processValidationOperation_documentPayload>;
  addChatbots_processValidationOperation_document_file?: Maybe<AddChatbots_processValidationOperation_document_filePayload>;
  addChatbots_processsValidationOperation_field?: Maybe<AddChatbots_processsValidationOperation_fieldPayload>;
  addChatbots_validation?: Maybe<AddChatbots_validationPayload>;
  addChatbots_validationDocument?: Maybe<AddChatbots_validationDocumentPayload>;
  addChatbots_validationDocument_file?: Maybe<AddChatbots_validationDocument_filePayload>;
  addChatbots_validationField?: Maybe<AddChatbots_validationFieldPayload>;
  addCompanySector?: Maybe<AddCompanySectorPayload>;
  addContact?: Maybe<AddContactPayload>;
  addContact_billingInfo?: Maybe<AddContact_billingInfoPayload>;
  addContact_businessInfo?: Maybe<AddContact_businessInfoPayload>;
  addContact_email?: Maybe<AddContact_emailPayload>;
  addContact_importLog?: Maybe<AddContact_importLogPayload>;
  addContact_jobPosition?: Maybe<AddContact_jobPositionPayload>;
  addContact_phone?: Maybe<AddContact_phonePayload>;
  addCountry?: Maybe<AddCountryPayload>;
  addCurrency?: Maybe<AddCurrencyPayload>;
  addDynamicTable?: Maybe<AddDynamicTablePayload>;
  addDynamicTable_account?: Maybe<AddDynamicTable_accountPayload>;
  addDynamicTable_head?: Maybe<AddDynamicTable_headPayload>;
  addDynamicTable_headValueBooleanOptions?: Maybe<AddDynamicTable_headValueBooleanOptionsPayload>;
  addDynamicTable_headValueCurrencyOptions?: Maybe<AddDynamicTable_headValueCurrencyOptionsPayload>;
  addDynamicTable_headValueDateOptions?: Maybe<AddDynamicTable_headValueDateOptionsPayload>;
  addDynamicTable_headValueLinkOptions?: Maybe<AddDynamicTable_headValueLinkOptionsPayload>;
  addDynamicTable_headValueNumberOptions?: Maybe<AddDynamicTable_headValueNumberOptionsPayload>;
  addE360App?: Maybe<AddE360AppPayload>;
  addE360App_domain?: Maybe<AddE360App_domainPayload>;
  addE360App_location?: Maybe<AddE360App_locationPayload>;
  addE360App_locationFile?: Maybe<AddE360App_locationFilePayload>;
  addE360App_locationSchedule?: Maybe<AddE360App_locationSchedulePayload>;
  addE360App_location_appoinment?: Maybe<AddE360App_location_appoinmentPayload>;
  addE360App_location_appoinmentLots?: Maybe<AddE360App_location_appoinmentLotsPayload>;
  addE360App_location_area?: Maybe<AddE360App_location_areaPayload>;
  addE360App_location_area_resource?: Maybe<AddE360App_location_area_resourcePayload>;
  addE360App_location_area_workShift?: Maybe<AddE360App_location_area_workShiftPayload>;
  addE360App_location_menu?: Maybe<AddE360App_location_menuPayload>;
  addE360App_location_menu_combo?: Maybe<AddE360App_location_menu_comboPayload>;
  addE360App_location_menu_item?: Maybe<AddE360App_location_menu_itemPayload>;
  addE360App_location_menu_section?: Maybe<AddE360App_location_menu_sectionPayload>;
  addE360App_location_menu_section_item?: Maybe<AddE360App_location_menu_section_itemPayload>;
  addE360App_location_menu_subSection?: Maybe<AddE360App_location_menu_subSectionPayload>;
  addE360App_location_menu_tag?: Maybe<AddE360App_location_menu_tagPayload>;
  addE360App_notification?: Maybe<AddE360App_notificationPayload>;
  addE360App_organization?: Maybe<AddE360App_organizationPayload>;
  addE360App_organization_user?: Maybe<AddE360App_organization_userPayload>;
  addE360App_partner?: Maybe<AddE360App_partnerPayload>;
  addE360App_partner_webhook?: Maybe<AddE360App_partner_webhookPayload>;
  addE360App_shop?: Maybe<AddE360App_shopPayload>;
  addE360App_shop_contract?: Maybe<AddE360App_shop_contractPayload>;
  addE360App_shop_customer_contract?: Maybe<AddE360App_shop_customer_contractPayload>;
  addE360App_shop_customer_contractService?: Maybe<AddE360App_shop_customer_contractServicePayload>;
  addE360App_shop_customer_contract_renewal?: Maybe<AddE360App_shop_customer_contract_renewalPayload>;
  addE360App_shop_operation?: Maybe<AddE360App_shop_operationPayload>;
  addE360App_shop_partner_contract?: Maybe<AddE360App_shop_partner_contractPayload>;
  addE360App_shop_product?: Maybe<AddE360App_shop_productPayload>;
  addE360App_shop_productItem?: Maybe<AddE360App_shop_productItemPayload>;
  addE360App_shop_productService?: Maybe<AddE360App_shop_productServicePayload>;
  addE360App_shop_promoProduct?: Maybe<AddE360App_shop_promoProductPayload>;
  addE360App_shop_promotion?: Maybe<AddE360App_shop_promotionPayload>;
  addE360App_shop_promotionCode?: Maybe<AddE360App_shop_promotionCodePayload>;
  addE360App_shop_purchase?: Maybe<AddE360App_shop_purchasePayload>;
  addE360App_shop_purchaseProviderEvent?: Maybe<AddE360App_shop_purchaseProviderEventPayload>;
  addE360App_stablishment?: Maybe<AddE360App_stablishmentPayload>;
  addE360App_stablishment_user?: Maybe<AddE360App_stablishment_userPayload>;
  addE360App_user?: Maybe<AddE360App_userPayload>;
  addE360App_userLog?: Maybe<AddE360App_userLogPayload>;
  addE360App_userSession?: Maybe<AddE360App_userSessionPayload>;
  addE360App_userSessionConnection?: Maybe<AddE360App_userSessionConnectionPayload>;
  addE360App_userSessionConnectionTask?: Maybe<AddE360App_userSessionConnectionTaskPayload>;
  addE360App_userSessionTask?: Maybe<AddE360App_userSessionTaskPayload>;
  addE360App_user_notification?: Maybe<AddE360App_user_notificationPayload>;
  addE360App_user_partner?: Maybe<AddE360App_user_partnerPayload>;
  addE360Storage_file?: Maybe<AddE360Storage_filePayload>;
  addERP_PACKAGE?: Maybe<AddERP_PACKAGEPayload>;
  addERP_account?: Maybe<AddERP_accountPayload>;
  addERP_accountEvent?: Maybe<AddERP_accountEventPayload>;
  addERP_accountingAccount?: Maybe<AddERP_accountingAccountPayload>;
  addERP_contact?: Maybe<AddERP_contactPayload>;
  addERP_contactAction?: Maybe<AddERP_contactActionPayload>;
  addERP_contactSerie?: Maybe<AddERP_contactSeriePayload>;
  addERP_event?: Maybe<AddERP_eventPayload>;
  addERP_invoice?: Maybe<AddERP_invoicePayload>;
  addERP_invoiceItem?: Maybe<AddERP_invoiceItemPayload>;
  addERP_invoiceNote?: Maybe<AddERP_invoiceNotePayload>;
  addERP_organizationBillingInfo?: Maybe<AddERP_organizationBillingInfoPayload>;
  addERP_paymentPlan?: Maybe<AddERP_paymentPlanPayload>;
  addERP_product?: Maybe<AddERP_productPayload>;
  addERP_resource?: Maybe<AddERP_resourcePayload>;
  addERP_role?: Maybe<AddERP_rolePayload>;
  addERP_seat?: Maybe<AddERP_seatPayload>;
  addERP_seatLine?: Maybe<AddERP_seatLinePayload>;
  addERP_tax?: Maybe<AddERP_taxPayload>;
  addERP_withholding?: Maybe<AddERP_withholdingPayload>;
  addEmail?: Maybe<AddEmailPayload>;
  addEmailEditor?: Maybe<AddEmailEditorPayload>;
  addEmailEditor_template?: Maybe<AddEmailEditor_templatePayload>;
  addEmail_attachment?: Maybe<AddEmail_attachmentPayload>;
  addEmail_from?: Maybe<AddEmail_fromPayload>;
  addEmail_to?: Maybe<AddEmail_toPayload>;
  addEvent?: Maybe<AddEventPayload>;
  addExternalAPI_key?: Maybe<AddExternalAPI_keyPayload>;
  addFormBuilder?: Maybe<AddFormBuilderPayload>;
  addFormBuilder_form?: Maybe<AddFormBuilder_formPayload>;
  addFormBuilder_input?: Maybe<AddFormBuilder_inputPayload>;
  addFormBuilder_inputBoolean?: Maybe<AddFormBuilder_inputBooleanPayload>;
  addFormBuilder_inputMultipleChoice?: Maybe<AddFormBuilder_inputMultipleChoicePayload>;
  addFormBuilder_inputMultipleChoiceOption?: Maybe<AddFormBuilder_inputMultipleChoiceOptionPayload>;
  addFormBuilder_inputNumber?: Maybe<AddFormBuilder_inputNumberPayload>;
  addFormBuilder_inputText?: Maybe<AddFormBuilder_inputTextPayload>;
  addGeneralAccountingAccount?: Maybe<AddGeneralAccountingAccountPayload>;
  addImportProcess?: Maybe<AddImportProcessPayload>;
  addImportProcess_elementField?: Maybe<AddImportProcess_elementFieldPayload>;
  addImportProcess_item?: Maybe<AddImportProcess_itemPayload>;
  addImportProcess_itemError?: Maybe<AddImportProcess_itemErrorPayload>;
  addImportProcess_itemValue?: Maybe<AddImportProcess_itemValuePayload>;
  addImportProcess_match?: Maybe<AddImportProcess_matchPayload>;
  addImportProcess_sourceValue?: Maybe<AddImportProcess_sourceValuePayload>;
  addInbox?: Maybe<AddInboxPayload>;
  addInbox_item?: Maybe<AddInbox_itemPayload>;
  addIntegrations?: Maybe<AddIntegrationsPayload>;
  addIntegrations_Digilab_Provider?: Maybe<AddIntegrations_Digilab_ProviderPayload>;
  addIntegrations_Google_Analytics_Provider?: Maybe<AddIntegrations_Google_Analytics_ProviderPayload>;
  addIntegrations_Google_Provider?: Maybe<AddIntegrations_Google_ProviderPayload>;
  addIntegrations_Link_Mobility_Provider?: Maybe<AddIntegrations_Link_Mobility_ProviderPayload>;
  addIntegrations_LinkedIn_Provider?: Maybe<AddIntegrations_LinkedIn_ProviderPayload>;
  addIntegrations_MSFT_Meeting?: Maybe<AddIntegrations_MSFT_MeetingPayload>;
  addIntegrations_MSFT_Provider?: Maybe<AddIntegrations_MSFT_ProviderPayload>;
  addIntegrations_Meta_Provider?: Maybe<AddIntegrations_Meta_ProviderPayload>;
  addIntegrations_SendGrid_Provider?: Maybe<AddIntegrations_SendGrid_ProviderPayload>;
  addIntegrations_Sendgrid_emailEvent?: Maybe<AddIntegrations_Sendgrid_emailEventPayload>;
  addIntegrations_account?: Maybe<AddIntegrations_accountPayload>;
  addIntegrations_carrefour_operartionsLog?: Maybe<AddIntegrations_carrefour_operartionsLogPayload>;
  addJobPosition?: Maybe<AddJobPositionPayload>;
  addLMS_PACKAGE?: Maybe<AddLMS_PACKAGEPayload>;
  addLMS_account?: Maybe<AddLMS_accountPayload>;
  addLMS_accountLog?: Maybe<AddLMS_accountLogPayload>;
  addLMS_accountLogDetail?: Maybe<AddLMS_accountLogDetailPayload>;
  addLMS_block?: Maybe<AddLMS_blockPayload>;
  addLMS_blockStudentProgress?: Maybe<AddLMS_blockStudentProgressPayload>;
  addLMS_contact?: Maybe<AddLMS_contactPayload>;
  addLMS_course?: Maybe<AddLMS_coursePayload>;
  addLMS_courseCategory?: Maybe<AddLMS_courseCategoryPayload>;
  addLMS_courseStudentProgress?: Maybe<AddLMS_courseStudentProgressPayload>;
  addLMS_courseVersion?: Maybe<AddLMS_courseVersionPayload>;
  addLMS_form?: Maybe<AddLMS_formPayload>;
  addLMS_formStudentProgress?: Maybe<AddLMS_formStudentProgressPayload>;
  addLMS_group?: Maybe<AddLMS_groupPayload>;
  addLMS_groupAccount?: Maybe<AddLMS_groupAccountPayload>;
  addLMS_groupAccountFormAnswer?: Maybe<AddLMS_groupAccountFormAnswerPayload>;
  addLMS_groupAccountFormAttempt?: Maybe<AddLMS_groupAccountFormAttemptPayload>;
  addLMS_groupBlockConfig?: Maybe<AddLMS_groupBlockConfigPayload>;
  addLMS_groupCourseConfig?: Maybe<AddLMS_groupCourseConfigPayload>;
  addLMS_groupFormConfig?: Maybe<AddLMS_groupFormConfigPayload>;
  addLMS_groupFormConfigCalculation?: Maybe<AddLMS_groupFormConfigCalculationPayload>;
  addLMS_groupFormConfigCalculationRange?: Maybe<AddLMS_groupFormConfigCalculationRangePayload>;
  addLMS_groupLessonConfig?: Maybe<AddLMS_groupLessonConfigPayload>;
  addLMS_groupLessonMeetingConfig?: Maybe<AddLMS_groupLessonMeetingConfigPayload>;
  addLMS_groupLessonTeacherConfig?: Maybe<AddLMS_groupLessonTeacherConfigPayload>;
  addLMS_groupResourceConfig?: Maybe<AddLMS_groupResourceConfigPayload>;
  addLMS_lesson?: Maybe<AddLMS_lessonPayload>;
  addLMS_lessonStudentProgress?: Maybe<AddLMS_lessonStudentProgressPayload>;
  addLMS_meetingStudentProgress?: Maybe<AddLMS_meetingStudentProgressPayload>;
  addLMS_product?: Maybe<AddLMS_productPayload>;
  addLMS_resource?: Maybe<AddLMS_resourcePayload>;
  addLMS_resourceStudentProgress?: Maybe<AddLMS_resourceStudentProgressPayload>;
  addLMS_resourceStudentVideoReport?: Maybe<AddLMS_resourceStudentVideoReportPayload>;
  addLMS_resourceStudentVideoReport_interval?: Maybe<AddLMS_resourceStudentVideoReport_intervalPayload>;
  addLMS_section?: Maybe<AddLMS_sectionPayload>;
  addLMS_thumbnail?: Maybe<AddLMS_thumbnailPayload>;
  addLogger_log?: Maybe<AddLogger_logPayload>;
  addLoginProvider?: Maybe<AddLoginProviderPayload>;
  addMeeting?: Maybe<AddMeetingPayload>;
  addMeetingAccount?: Maybe<AddMeetingAccountPayload>;
  addMeetingDoctors_user?: Maybe<AddMeetingDoctors_userPayload>;
  addMeetingProvider?: Maybe<AddMeetingProviderPayload>;
  addNavigation?: Maybe<AddNavigationPayload>;
  addNavigation_route?: Maybe<AddNavigation_routePayload>;
  addORG_PACKAGE?: Maybe<AddORG_PACKAGEPayload>;
  addORG_account?: Maybe<AddORG_accountPayload>;
  addORG_role?: Maybe<AddORG_rolePayload>;
  addOrg?: Maybe<AddOrgPayload>;
  addOrg360?: Maybe<AddOrg360Payload>;
  addOrg360_theme?: Maybe<AddOrg360_themePayload>;
  addOrgDomain?: Maybe<AddOrgDomainPayload>;
  addOrganization_department?: Maybe<AddOrganization_departmentPayload>;
  addPETPASS_APP?: Maybe<AddPETPASS_APPPayload>;
  addPETPASS_banner?: Maybe<AddPETPASS_bannerPayload>;
  addPETPASS_contract?: Maybe<AddPETPASS_contractPayload>;
  addPETPASS_file?: Maybe<AddPETPASS_filePayload>;
  addPETPASS_insurance?: Maybe<AddPETPASS_insurancePayload>;
  addPETPASS_insurance_company?: Maybe<AddPETPASS_insurance_companyPayload>;
  addPETPASS_location?: Maybe<AddPETPASS_locationPayload>;
  addPETPASS_locationPolicy?: Maybe<AddPETPASS_locationPolicyPayload>;
  addPETPASS_locator?: Maybe<AddPETPASS_locatorPayload>;
  addPETPASS_partner?: Maybe<AddPETPASS_partnerPayload>;
  addPETPASS_pet?: Maybe<AddPETPASS_petPayload>;
  addPETPASS_petToken?: Maybe<AddPETPASS_petTokenPayload>;
  addPETPASS_pet_external_insurance?: Maybe<AddPETPASS_pet_external_insurancePayload>;
  addPETPASS_pet_insurance?: Maybe<AddPETPASS_pet_insurancePayload>;
  addPETPASS_product?: Maybe<AddPETPASS_productPayload>;
  addPETPASS_purchase?: Maybe<AddPETPASS_purchasePayload>;
  addPETPASS_sos?: Maybe<AddPETPASS_sosPayload>;
  addPETPASS_sos_event?: Maybe<AddPETPASS_sos_eventPayload>;
  addPETPASS_user?: Maybe<AddPETPASS_userPayload>;
  addPerson?: Maybe<AddPersonPayload>;
  addPet?: Maybe<AddPetPayload>;
  addPetBreed?: Maybe<AddPetBreedPayload>;
  addPetType?: Maybe<AddPetTypePayload>;
  addPet_file?: Maybe<AddPet_filePayload>;
  addPet_vaccination?: Maybe<AddPet_vaccinationPayload>;
  addPet_vaccine?: Maybe<AddPet_vaccinePayload>;
  addProduct?: Maybe<AddProductPayload>;
  addProduct_category?: Maybe<AddProduct_categoryPayload>;
  addProduct_item?: Maybe<AddProduct_itemPayload>;
  addProduct_paymentPlanItem?: Maybe<AddProduct_paymentPlanItemPayload>;
  addProposal?: Maybe<AddProposalPayload>;
  addProposal_resource?: Maybe<AddProposal_resourcePayload>;
  addProposal_stakeholder?: Maybe<AddProposal_stakeholderPayload>;
  addProposal_stakeholderResource?: Maybe<AddProposal_stakeholderResourcePayload>;
  addProposal_stakeholderToken?: Maybe<AddProposal_stakeholderTokenPayload>;
  addResource?: Maybe<AddResourcePayload>;
  addResourceToken?: Maybe<AddResourceTokenPayload>;
  addSMS?: Maybe<AddSMSPayload>;
  addScheduler?: Maybe<AddSchedulerPayload>;
  addScheduler_action?: Maybe<AddScheduler_actionPayload>;
  addScheduler_externalAction?: Maybe<AddScheduler_externalActionPayload>;
  addScheduler_managerAction?: Maybe<AddScheduler_managerActionPayload>;
  addScheduler_task?: Maybe<AddScheduler_taskPayload>;
  addSearchIndex_contact?: Maybe<AddSearchIndex_contactPayload>;
  addServiceAccount?: Maybe<AddServiceAccountPayload>;
  addShortUrl?: Maybe<AddShortUrlPayload>;
  addShortUrl_domain?: Maybe<AddShortUrl_domainPayload>;
  addStorage?: Maybe<AddStoragePayload>;
  addStorage_file?: Maybe<AddStorage_filePayload>;
  addStorage_fileByDemand?: Maybe<AddStorage_fileByDemandPayload>;
  addStorage_fileOperationToken?: Maybe<AddStorage_fileOperationTokenPayload>;
  addTwoFactorToken?: Maybe<AddTwoFactorTokenPayload>;
  addUnit?: Maybe<AddUnitPayload>;
  addUser?: Maybe<AddUserPayload>;
  addUser_token?: Maybe<AddUser_tokenPayload>;
  addVET_PACKAGE?: Maybe<AddVET_PACKAGEPayload>;
  addVET_account?: Maybe<AddVET_accountPayload>;
  addVET_contact?: Maybe<AddVET_contactPayload>;
  addVET_pet?: Maybe<AddVET_petPayload>;
  addWebhook?: Maybe<AddWebhookPayload>;
  addWebhook_provider?: Maybe<AddWebhook_providerPayload>;
  addWebhook_providerOrigin?: Maybe<AddWebhook_providerOriginPayload>;
  deleteAUDITS_PACKAGE?: Maybe<DeleteAUDITS_PACKAGEPayload>;
  deleteAUDITS_account?: Maybe<DeleteAUDITS_accountPayload>;
  deleteAUDITS_document?: Maybe<DeleteAUDITS_documentPayload>;
  deleteAUDITS_document_block?: Maybe<DeleteAUDITS_document_blockPayload>;
  deleteAUDITS_document_blockImage?: Maybe<DeleteAUDITS_document_blockImagePayload>;
  deleteAUDITS_document_blockQuote?: Maybe<DeleteAUDITS_document_blockQuotePayload>;
  deleteAUDITS_document_blockTable?: Maybe<DeleteAUDITS_document_blockTablePayload>;
  deleteAUDITS_document_blockTableCell?: Maybe<DeleteAUDITS_document_blockTableCellPayload>;
  deleteAUDITS_document_blockTableColumn?: Maybe<DeleteAUDITS_document_blockTableColumnPayload>;
  deleteAUDITS_document_blockTableRow?: Maybe<DeleteAUDITS_document_blockTableRowPayload>;
  deleteAUDITS_document_blockText?: Maybe<DeleteAUDITS_document_blockTextPayload>;
  deleteAUDITS_document_blockTitle?: Maybe<DeleteAUDITS_document_blockTitlePayload>;
  deleteAUDITS_file?: Maybe<DeleteAUDITS_filePayload>;
  deleteAUDITS_project?: Maybe<DeleteAUDITS_projectPayload>;
  deleteAUDITS_project_version?: Maybe<DeleteAUDITS_project_versionPayload>;
  deleteAUDITS_review?: Maybe<DeleteAUDITS_reviewPayload>;
  deleteAUDITS_review_account?: Maybe<DeleteAUDITS_review_accountPayload>;
  deleteAUDITS_review_comment?: Maybe<DeleteAUDITS_review_commentPayload>;
  deleteAccount?: Maybe<DeleteAccountPayload>;
  deleteAccount_event?: Maybe<DeleteAccount_eventPayload>;
  deleteAccount_log?: Maybe<DeleteAccount_logPayload>;
  deleteAccount_notification?: Maybe<DeleteAccount_notificationPayload>;
  deleteAccount_session?: Maybe<DeleteAccount_sessionPayload>;
  deleteAccount_sessionConnection?: Maybe<DeleteAccount_sessionConnectionPayload>;
  deleteAccount_sessionConnectionTask?: Maybe<DeleteAccount_sessionConnectionTaskPayload>;
  deleteAccount_sessionTask?: Maybe<DeleteAccount_sessionTaskPayload>;
  deleteAddress?: Maybe<DeleteAddressPayload>;
  deleteBank?: Maybe<DeleteBankPayload>;
  deleteBankAccount?: Maybe<DeleteBankAccountPayload>;
  deleteCMS_PACKAGE?: Maybe<DeleteCMS_PACKAGEPayload>;
  deleteCMS_account?: Maybe<DeleteCMS_accountPayload>;
  deleteCMS_app?: Maybe<DeleteCMS_appPayload>;
  deleteCMS_appContact?: Maybe<DeleteCMS_appContactPayload>;
  deleteCMS_authorAlias?: Maybe<DeleteCMS_authorAliasPayload>;
  deleteCMS_contact?: Maybe<DeleteCMS_contactPayload>;
  deleteCMS_file?: Maybe<DeleteCMS_filePayload>;
  deleteCMS_website?: Maybe<DeleteCMS_websitePayload>;
  deleteCMS_website_page?: Maybe<DeleteCMS_website_pagePayload>;
  deleteCMS_website_page_block?: Maybe<DeleteCMS_website_page_blockPayload>;
  deleteCMS_website_page_blockCombo?: Maybe<DeleteCMS_website_page_blockComboPayload>;
  deleteCMS_website_page_blockImage?: Maybe<DeleteCMS_website_page_blockImagePayload>;
  deleteCMS_website_page_blockLink?: Maybe<DeleteCMS_website_page_blockLinkPayload>;
  deleteCMS_website_page_blockText?: Maybe<DeleteCMS_website_page_blockTextPayload>;
  deleteCMS_website_page_blockTitle?: Maybe<DeleteCMS_website_page_blockTitlePayload>;
  deleteCRM_PACKAGE?: Maybe<DeleteCRM_PACKAGEPayload>;
  deleteCRM_account?: Maybe<DeleteCRM_accountPayload>;
  deleteCRM_accountContactsTableColumn?: Maybe<DeleteCRM_accountContactsTableColumnPayload>;
  deleteCRM_accountContactsTableFilter?: Maybe<DeleteCRM_accountContactsTableFilterPayload>;
  deleteCRM_accountEvent?: Maybe<DeleteCRM_accountEventPayload>;
  deleteCRM_action?: Maybe<DeleteCRM_actionPayload>;
  deleteCRM_actionCall?: Maybe<DeleteCRM_actionCallPayload>;
  deleteCRM_actionChat?: Maybe<DeleteCRM_actionChatPayload>;
  deleteCRM_actionEmail?: Maybe<DeleteCRM_actionEmailPayload>;
  deleteCRM_actionMeeting?: Maybe<DeleteCRM_actionMeetingPayload>;
  deleteCRM_area?: Maybe<DeleteCRM_areaPayload>;
  deleteCRM_campaign?: Maybe<DeleteCRM_campaignPayload>;
  deleteCRM_campaignContact?: Maybe<DeleteCRM_campaignContactPayload>;
  deleteCRM_campaignContactEvent?: Maybe<DeleteCRM_campaignContactEventPayload>;
  deleteCRM_campaignDeliver?: Maybe<DeleteCRM_campaignDeliverPayload>;
  deleteCRM_campaignEmailTemplate?: Maybe<DeleteCRM_campaignEmailTemplatePayload>;
  deleteCRM_contact?: Maybe<DeleteCRM_contactPayload>;
  deleteCRM_contactAction?: Maybe<DeleteCRM_contactActionPayload>;
  deleteCRM_contactActionCall?: Maybe<DeleteCRM_contactActionCallPayload>;
  deleteCRM_contactActionChat?: Maybe<DeleteCRM_contactActionChatPayload>;
  deleteCRM_contactActionEmail?: Maybe<DeleteCRM_contactActionEmailPayload>;
  deleteCRM_contactActionMeeting?: Maybe<DeleteCRM_contactActionMeetingPayload>;
  deleteCRM_contactActionStatusChange?: Maybe<DeleteCRM_contactActionStatusChangePayload>;
  deleteCRM_contactAnswer?: Maybe<DeleteCRM_contactAnswerPayload>;
  deleteCRM_contactInput?: Maybe<DeleteCRM_contactInputPayload>;
  deleteCRM_contactInputSubStatus?: Maybe<DeleteCRM_contactInputSubStatusPayload>;
  deleteCRM_contactInputValue?: Maybe<DeleteCRM_contactInputValuePayload>;
  deleteCRM_contactList?: Maybe<DeleteCRM_contactListPayload>;
  deleteCRM_emailTemplate?: Maybe<DeleteCRM_emailTemplatePayload>;
  deleteCRM_event?: Maybe<DeleteCRM_eventPayload>;
  deleteCRM_funnel?: Maybe<DeleteCRM_funnelPayload>;
  deleteCRM_funnelAction?: Maybe<DeleteCRM_funnelActionPayload>;
  deleteCRM_funnelStatus?: Maybe<DeleteCRM_funnelStatusPayload>;
  deleteCRM_opportunityLog?: Maybe<DeleteCRM_opportunityLogPayload>;
  deleteCRM_opportunityPaymentPlanItem?: Maybe<DeleteCRM_opportunityPaymentPlanItemPayload>;
  deleteCRM_overview?: Maybe<DeleteCRM_overviewPayload>;
  deleteCRM_proposal?: Maybe<DeleteCRM_proposalPayload>;
  deleteCRM_role?: Maybe<DeleteCRM_rolePayload>;
  deleteCRM_socialMediaCampaign?: Maybe<DeleteCRM_socialMediaCampaignPayload>;
  deleteCRM_socialMediaCampaign_media?: Maybe<DeleteCRM_socialMediaCampaign_mediaPayload>;
  deleteCRM_socialMediaCampaign_post?: Maybe<DeleteCRM_socialMediaCampaign_postPayload>;
  deleteCRM_source?: Maybe<DeleteCRM_sourcePayload>;
  deleteCRM_sourceCategory?: Maybe<DeleteCRM_sourceCategoryPayload>;
  deleteCRM_sourceForm?: Maybe<DeleteCRM_sourceFormPayload>;
  deleteCRM_sourceFormField?: Maybe<DeleteCRM_sourceFormFieldPayload>;
  deleteCRM_sourceFormReason?: Maybe<DeleteCRM_sourceFormReasonPayload>;
  deleteCRM_sourceForm_emailTemplate?: Maybe<DeleteCRM_sourceForm_emailTemplatePayload>;
  deleteCRM_team?: Maybe<DeleteCRM_teamPayload>;
  deleteCRM_teamAccount?: Maybe<DeleteCRM_teamAccountPayload>;
  deleteCRM_teamAction?: Maybe<DeleteCRM_teamActionPayload>;
  deleteCRM_teamActionBoardEffect?: Maybe<DeleteCRM_teamActionBoardEffectPayload>;
  deleteCRM_teamBoard?: Maybe<DeleteCRM_teamBoardPayload>;
  deleteCRM_teamBoardItem?: Maybe<DeleteCRM_teamBoardItemPayload>;
  deleteCRM_teamBoardStatus?: Maybe<DeleteCRM_teamBoardStatusPayload>;
  deleteCRM_teamBoardSubStatus?: Maybe<DeleteCRM_teamBoardSubStatusPayload>;
  deleteCRM_teamBoardTask?: Maybe<DeleteCRM_teamBoardTaskPayload>;
  deleteChatbots_PACKAGE?: Maybe<DeleteChatbots_PACKAGEPayload>;
  deleteChatbots_account?: Maybe<DeleteChatbots_accountPayload>;
  deleteChatbots_area?: Maybe<DeleteChatbots_areaPayload>;
  deleteChatbots_areaAccount?: Maybe<DeleteChatbots_areaAccountPayload>;
  deleteChatbots_externalAPI?: Maybe<DeleteChatbots_externalAPIPayload>;
  deleteChatbots_externalAPI_field?: Maybe<DeleteChatbots_externalAPI_fieldPayload>;
  deleteChatbots_process?: Maybe<DeleteChatbots_processPayload>;
  deleteChatbots_processAPI?: Maybe<DeleteChatbots_processAPIPayload>;
  deleteChatbots_processAccount?: Maybe<DeleteChatbots_processAccountPayload>;
  deleteChatbots_processAction?: Maybe<DeleteChatbots_processActionPayload>;
  deleteChatbots_processButton?: Maybe<DeleteChatbots_processButtonPayload>;
  deleteChatbots_processField?: Maybe<DeleteChatbots_processFieldPayload>;
  deleteChatbots_processFilterParam?: Maybe<DeleteChatbots_processFilterParamPayload>;
  deleteChatbots_processOperation?: Maybe<DeleteChatbots_processOperationPayload>;
  deleteChatbots_processStatus?: Maybe<DeleteChatbots_processStatusPayload>;
  deleteChatbots_processTableHead?: Maybe<DeleteChatbots_processTableHeadPayload>;
  deleteChatbots_processTableHeadConfig?: Maybe<DeleteChatbots_processTableHeadConfigPayload>;
  deleteChatbots_processTableMatchReplace?: Maybe<DeleteChatbots_processTableMatchReplacePayload>;
  deleteChatbots_processValidation?: Maybe<DeleteChatbots_processValidationPayload>;
  deleteChatbots_processValidationOperation?: Maybe<DeleteChatbots_processValidationOperationPayload>;
  deleteChatbots_processValidationOperation_document?: Maybe<DeleteChatbots_processValidationOperation_documentPayload>;
  deleteChatbots_processValidationOperation_document_file?: Maybe<DeleteChatbots_processValidationOperation_document_filePayload>;
  deleteChatbots_processsValidationOperation_field?: Maybe<DeleteChatbots_processsValidationOperation_fieldPayload>;
  deleteChatbots_validation?: Maybe<DeleteChatbots_validationPayload>;
  deleteChatbots_validationDocument?: Maybe<DeleteChatbots_validationDocumentPayload>;
  deleteChatbots_validationDocument_file?: Maybe<DeleteChatbots_validationDocument_filePayload>;
  deleteChatbots_validationField?: Maybe<DeleteChatbots_validationFieldPayload>;
  deleteCompanySector?: Maybe<DeleteCompanySectorPayload>;
  deleteContact?: Maybe<DeleteContactPayload>;
  deleteContact_billingInfo?: Maybe<DeleteContact_billingInfoPayload>;
  deleteContact_businessInfo?: Maybe<DeleteContact_businessInfoPayload>;
  deleteContact_email?: Maybe<DeleteContact_emailPayload>;
  deleteContact_importLog?: Maybe<DeleteContact_importLogPayload>;
  deleteContact_jobPosition?: Maybe<DeleteContact_jobPositionPayload>;
  deleteContact_phone?: Maybe<DeleteContact_phonePayload>;
  deleteCountry?: Maybe<DeleteCountryPayload>;
  deleteCurrency?: Maybe<DeleteCurrencyPayload>;
  deleteDynamicTable?: Maybe<DeleteDynamicTablePayload>;
  deleteDynamicTable_account?: Maybe<DeleteDynamicTable_accountPayload>;
  deleteDynamicTable_head?: Maybe<DeleteDynamicTable_headPayload>;
  deleteDynamicTable_headValueBooleanOptions?: Maybe<DeleteDynamicTable_headValueBooleanOptionsPayload>;
  deleteDynamicTable_headValueCurrencyOptions?: Maybe<DeleteDynamicTable_headValueCurrencyOptionsPayload>;
  deleteDynamicTable_headValueDateOptions?: Maybe<DeleteDynamicTable_headValueDateOptionsPayload>;
  deleteDynamicTable_headValueLinkOptions?: Maybe<DeleteDynamicTable_headValueLinkOptionsPayload>;
  deleteDynamicTable_headValueNumberOptions?: Maybe<DeleteDynamicTable_headValueNumberOptionsPayload>;
  deleteE360App?: Maybe<DeleteE360AppPayload>;
  deleteE360App_domain?: Maybe<DeleteE360App_domainPayload>;
  deleteE360App_location?: Maybe<DeleteE360App_locationPayload>;
  deleteE360App_locationFile?: Maybe<DeleteE360App_locationFilePayload>;
  deleteE360App_locationSchedule?: Maybe<DeleteE360App_locationSchedulePayload>;
  deleteE360App_location_appoinment?: Maybe<DeleteE360App_location_appoinmentPayload>;
  deleteE360App_location_appoinmentLots?: Maybe<DeleteE360App_location_appoinmentLotsPayload>;
  deleteE360App_location_area?: Maybe<DeleteE360App_location_areaPayload>;
  deleteE360App_location_area_resource?: Maybe<DeleteE360App_location_area_resourcePayload>;
  deleteE360App_location_area_workShift?: Maybe<DeleteE360App_location_area_workShiftPayload>;
  deleteE360App_location_menu?: Maybe<DeleteE360App_location_menuPayload>;
  deleteE360App_location_menu_combo?: Maybe<DeleteE360App_location_menu_comboPayload>;
  deleteE360App_location_menu_item?: Maybe<DeleteE360App_location_menu_itemPayload>;
  deleteE360App_location_menu_section?: Maybe<DeleteE360App_location_menu_sectionPayload>;
  deleteE360App_location_menu_section_item?: Maybe<DeleteE360App_location_menu_section_itemPayload>;
  deleteE360App_location_menu_subSection?: Maybe<DeleteE360App_location_menu_subSectionPayload>;
  deleteE360App_location_menu_tag?: Maybe<DeleteE360App_location_menu_tagPayload>;
  deleteE360App_notification?: Maybe<DeleteE360App_notificationPayload>;
  deleteE360App_organization?: Maybe<DeleteE360App_organizationPayload>;
  deleteE360App_organization_user?: Maybe<DeleteE360App_organization_userPayload>;
  deleteE360App_partner?: Maybe<DeleteE360App_partnerPayload>;
  deleteE360App_partner_webhook?: Maybe<DeleteE360App_partner_webhookPayload>;
  deleteE360App_shop?: Maybe<DeleteE360App_shopPayload>;
  deleteE360App_shop_contract?: Maybe<DeleteE360App_shop_contractPayload>;
  deleteE360App_shop_customer_contract?: Maybe<DeleteE360App_shop_customer_contractPayload>;
  deleteE360App_shop_customer_contractService?: Maybe<DeleteE360App_shop_customer_contractServicePayload>;
  deleteE360App_shop_customer_contract_renewal?: Maybe<DeleteE360App_shop_customer_contract_renewalPayload>;
  deleteE360App_shop_operation?: Maybe<DeleteE360App_shop_operationPayload>;
  deleteE360App_shop_partner_contract?: Maybe<DeleteE360App_shop_partner_contractPayload>;
  deleteE360App_shop_product?: Maybe<DeleteE360App_shop_productPayload>;
  deleteE360App_shop_productItem?: Maybe<DeleteE360App_shop_productItemPayload>;
  deleteE360App_shop_productService?: Maybe<DeleteE360App_shop_productServicePayload>;
  deleteE360App_shop_promoProduct?: Maybe<DeleteE360App_shop_promoProductPayload>;
  deleteE360App_shop_promotion?: Maybe<DeleteE360App_shop_promotionPayload>;
  deleteE360App_shop_promotionCode?: Maybe<DeleteE360App_shop_promotionCodePayload>;
  deleteE360App_shop_purchase?: Maybe<DeleteE360App_shop_purchasePayload>;
  deleteE360App_shop_purchaseProviderEvent?: Maybe<DeleteE360App_shop_purchaseProviderEventPayload>;
  deleteE360App_stablishment?: Maybe<DeleteE360App_stablishmentPayload>;
  deleteE360App_stablishment_user?: Maybe<DeleteE360App_stablishment_userPayload>;
  deleteE360App_user?: Maybe<DeleteE360App_userPayload>;
  deleteE360App_userLog?: Maybe<DeleteE360App_userLogPayload>;
  deleteE360App_userSession?: Maybe<DeleteE360App_userSessionPayload>;
  deleteE360App_userSessionConnection?: Maybe<DeleteE360App_userSessionConnectionPayload>;
  deleteE360App_userSessionConnectionTask?: Maybe<DeleteE360App_userSessionConnectionTaskPayload>;
  deleteE360App_userSessionTask?: Maybe<DeleteE360App_userSessionTaskPayload>;
  deleteE360App_user_notification?: Maybe<DeleteE360App_user_notificationPayload>;
  deleteE360App_user_partner?: Maybe<DeleteE360App_user_partnerPayload>;
  deleteE360Storage_file?: Maybe<DeleteE360Storage_filePayload>;
  deleteERP_PACKAGE?: Maybe<DeleteERP_PACKAGEPayload>;
  deleteERP_account?: Maybe<DeleteERP_accountPayload>;
  deleteERP_accountEvent?: Maybe<DeleteERP_accountEventPayload>;
  deleteERP_accountingAccount?: Maybe<DeleteERP_accountingAccountPayload>;
  deleteERP_contact?: Maybe<DeleteERP_contactPayload>;
  deleteERP_contactAction?: Maybe<DeleteERP_contactActionPayload>;
  deleteERP_contactSerie?: Maybe<DeleteERP_contactSeriePayload>;
  deleteERP_event?: Maybe<DeleteERP_eventPayload>;
  deleteERP_invoice?: Maybe<DeleteERP_invoicePayload>;
  deleteERP_invoiceItem?: Maybe<DeleteERP_invoiceItemPayload>;
  deleteERP_invoiceNote?: Maybe<DeleteERP_invoiceNotePayload>;
  deleteERP_organizationBillingInfo?: Maybe<DeleteERP_organizationBillingInfoPayload>;
  deleteERP_paymentPlan?: Maybe<DeleteERP_paymentPlanPayload>;
  deleteERP_product?: Maybe<DeleteERP_productPayload>;
  deleteERP_resource?: Maybe<DeleteERP_resourcePayload>;
  deleteERP_role?: Maybe<DeleteERP_rolePayload>;
  deleteERP_seat?: Maybe<DeleteERP_seatPayload>;
  deleteERP_seatLine?: Maybe<DeleteERP_seatLinePayload>;
  deleteERP_tax?: Maybe<DeleteERP_taxPayload>;
  deleteERP_withholding?: Maybe<DeleteERP_withholdingPayload>;
  deleteEmail?: Maybe<DeleteEmailPayload>;
  deleteEmailEditor?: Maybe<DeleteEmailEditorPayload>;
  deleteEmailEditor_template?: Maybe<DeleteEmailEditor_templatePayload>;
  deleteEmail_attachment?: Maybe<DeleteEmail_attachmentPayload>;
  deleteEmail_from?: Maybe<DeleteEmail_fromPayload>;
  deleteEmail_to?: Maybe<DeleteEmail_toPayload>;
  deleteEvent?: Maybe<DeleteEventPayload>;
  deleteExternalAPI_key?: Maybe<DeleteExternalAPI_keyPayload>;
  deleteFormBuilder?: Maybe<DeleteFormBuilderPayload>;
  deleteFormBuilder_form?: Maybe<DeleteFormBuilder_formPayload>;
  deleteFormBuilder_input?: Maybe<DeleteFormBuilder_inputPayload>;
  deleteFormBuilder_inputBoolean?: Maybe<DeleteFormBuilder_inputBooleanPayload>;
  deleteFormBuilder_inputMultipleChoice?: Maybe<DeleteFormBuilder_inputMultipleChoicePayload>;
  deleteFormBuilder_inputMultipleChoiceOption?: Maybe<DeleteFormBuilder_inputMultipleChoiceOptionPayload>;
  deleteFormBuilder_inputNumber?: Maybe<DeleteFormBuilder_inputNumberPayload>;
  deleteFormBuilder_inputText?: Maybe<DeleteFormBuilder_inputTextPayload>;
  deleteGeneralAccountingAccount?: Maybe<DeleteGeneralAccountingAccountPayload>;
  deleteImportProcess?: Maybe<DeleteImportProcessPayload>;
  deleteImportProcess_elementField?: Maybe<DeleteImportProcess_elementFieldPayload>;
  deleteImportProcess_item?: Maybe<DeleteImportProcess_itemPayload>;
  deleteImportProcess_itemError?: Maybe<DeleteImportProcess_itemErrorPayload>;
  deleteImportProcess_itemValue?: Maybe<DeleteImportProcess_itemValuePayload>;
  deleteImportProcess_match?: Maybe<DeleteImportProcess_matchPayload>;
  deleteImportProcess_sourceValue?: Maybe<DeleteImportProcess_sourceValuePayload>;
  deleteInbox?: Maybe<DeleteInboxPayload>;
  deleteInbox_item?: Maybe<DeleteInbox_itemPayload>;
  deleteIntegrations?: Maybe<DeleteIntegrationsPayload>;
  deleteIntegrations_Digilab_Provider?: Maybe<DeleteIntegrations_Digilab_ProviderPayload>;
  deleteIntegrations_Google_Analytics_Provider?: Maybe<DeleteIntegrations_Google_Analytics_ProviderPayload>;
  deleteIntegrations_Google_Provider?: Maybe<DeleteIntegrations_Google_ProviderPayload>;
  deleteIntegrations_Link_Mobility_Provider?: Maybe<DeleteIntegrations_Link_Mobility_ProviderPayload>;
  deleteIntegrations_LinkedIn_Provider?: Maybe<DeleteIntegrations_LinkedIn_ProviderPayload>;
  deleteIntegrations_MSFT_Meeting?: Maybe<DeleteIntegrations_MSFT_MeetingPayload>;
  deleteIntegrations_MSFT_Provider?: Maybe<DeleteIntegrations_MSFT_ProviderPayload>;
  deleteIntegrations_Meta_Provider?: Maybe<DeleteIntegrations_Meta_ProviderPayload>;
  deleteIntegrations_SendGrid_Provider?: Maybe<DeleteIntegrations_SendGrid_ProviderPayload>;
  deleteIntegrations_Sendgrid_emailEvent?: Maybe<DeleteIntegrations_Sendgrid_emailEventPayload>;
  deleteIntegrations_account?: Maybe<DeleteIntegrations_accountPayload>;
  deleteIntegrations_carrefour_operartionsLog?: Maybe<DeleteIntegrations_carrefour_operartionsLogPayload>;
  deleteJobPosition?: Maybe<DeleteJobPositionPayload>;
  deleteLMS_PACKAGE?: Maybe<DeleteLMS_PACKAGEPayload>;
  deleteLMS_account?: Maybe<DeleteLMS_accountPayload>;
  deleteLMS_accountLog?: Maybe<DeleteLMS_accountLogPayload>;
  deleteLMS_accountLogDetail?: Maybe<DeleteLMS_accountLogDetailPayload>;
  deleteLMS_block?: Maybe<DeleteLMS_blockPayload>;
  deleteLMS_blockStudentProgress?: Maybe<DeleteLMS_blockStudentProgressPayload>;
  deleteLMS_contact?: Maybe<DeleteLMS_contactPayload>;
  deleteLMS_course?: Maybe<DeleteLMS_coursePayload>;
  deleteLMS_courseCategory?: Maybe<DeleteLMS_courseCategoryPayload>;
  deleteLMS_courseStudentProgress?: Maybe<DeleteLMS_courseStudentProgressPayload>;
  deleteLMS_courseVersion?: Maybe<DeleteLMS_courseVersionPayload>;
  deleteLMS_form?: Maybe<DeleteLMS_formPayload>;
  deleteLMS_formStudentProgress?: Maybe<DeleteLMS_formStudentProgressPayload>;
  deleteLMS_group?: Maybe<DeleteLMS_groupPayload>;
  deleteLMS_groupAccount?: Maybe<DeleteLMS_groupAccountPayload>;
  deleteLMS_groupAccountFormAnswer?: Maybe<DeleteLMS_groupAccountFormAnswerPayload>;
  deleteLMS_groupAccountFormAttempt?: Maybe<DeleteLMS_groupAccountFormAttemptPayload>;
  deleteLMS_groupBlockConfig?: Maybe<DeleteLMS_groupBlockConfigPayload>;
  deleteLMS_groupCourseConfig?: Maybe<DeleteLMS_groupCourseConfigPayload>;
  deleteLMS_groupFormConfig?: Maybe<DeleteLMS_groupFormConfigPayload>;
  deleteLMS_groupFormConfigCalculation?: Maybe<DeleteLMS_groupFormConfigCalculationPayload>;
  deleteLMS_groupFormConfigCalculationRange?: Maybe<DeleteLMS_groupFormConfigCalculationRangePayload>;
  deleteLMS_groupLessonConfig?: Maybe<DeleteLMS_groupLessonConfigPayload>;
  deleteLMS_groupLessonMeetingConfig?: Maybe<DeleteLMS_groupLessonMeetingConfigPayload>;
  deleteLMS_groupLessonTeacherConfig?: Maybe<DeleteLMS_groupLessonTeacherConfigPayload>;
  deleteLMS_groupResourceConfig?: Maybe<DeleteLMS_groupResourceConfigPayload>;
  deleteLMS_lesson?: Maybe<DeleteLMS_lessonPayload>;
  deleteLMS_lessonStudentProgress?: Maybe<DeleteLMS_lessonStudentProgressPayload>;
  deleteLMS_meetingStudentProgress?: Maybe<DeleteLMS_meetingStudentProgressPayload>;
  deleteLMS_product?: Maybe<DeleteLMS_productPayload>;
  deleteLMS_resource?: Maybe<DeleteLMS_resourcePayload>;
  deleteLMS_resourceStudentProgress?: Maybe<DeleteLMS_resourceStudentProgressPayload>;
  deleteLMS_resourceStudentVideoReport?: Maybe<DeleteLMS_resourceStudentVideoReportPayload>;
  deleteLMS_resourceStudentVideoReport_interval?: Maybe<DeleteLMS_resourceStudentVideoReport_intervalPayload>;
  deleteLMS_section?: Maybe<DeleteLMS_sectionPayload>;
  deleteLMS_thumbnail?: Maybe<DeleteLMS_thumbnailPayload>;
  deleteLogger_log?: Maybe<DeleteLogger_logPayload>;
  deleteLoginProvider?: Maybe<DeleteLoginProviderPayload>;
  deleteMeeting?: Maybe<DeleteMeetingPayload>;
  deleteMeetingAccount?: Maybe<DeleteMeetingAccountPayload>;
  deleteMeetingDoctors_user?: Maybe<DeleteMeetingDoctors_userPayload>;
  deleteMeetingProvider?: Maybe<DeleteMeetingProviderPayload>;
  deleteNavigation?: Maybe<DeleteNavigationPayload>;
  deleteNavigation_route?: Maybe<DeleteNavigation_routePayload>;
  deleteORG_PACKAGE?: Maybe<DeleteORG_PACKAGEPayload>;
  deleteORG_account?: Maybe<DeleteORG_accountPayload>;
  deleteORG_role?: Maybe<DeleteORG_rolePayload>;
  deleteOrg?: Maybe<DeleteOrgPayload>;
  deleteOrg360?: Maybe<DeleteOrg360Payload>;
  deleteOrg360_theme?: Maybe<DeleteOrg360_themePayload>;
  deleteOrgDomain?: Maybe<DeleteOrgDomainPayload>;
  deleteOrganization_department?: Maybe<DeleteOrganization_departmentPayload>;
  deletePETPASS_APP?: Maybe<DeletePETPASS_APPPayload>;
  deletePETPASS_banner?: Maybe<DeletePETPASS_bannerPayload>;
  deletePETPASS_contract?: Maybe<DeletePETPASS_contractPayload>;
  deletePETPASS_file?: Maybe<DeletePETPASS_filePayload>;
  deletePETPASS_insurance?: Maybe<DeletePETPASS_insurancePayload>;
  deletePETPASS_insurance_company?: Maybe<DeletePETPASS_insurance_companyPayload>;
  deletePETPASS_location?: Maybe<DeletePETPASS_locationPayload>;
  deletePETPASS_locationPolicy?: Maybe<DeletePETPASS_locationPolicyPayload>;
  deletePETPASS_locator?: Maybe<DeletePETPASS_locatorPayload>;
  deletePETPASS_partner?: Maybe<DeletePETPASS_partnerPayload>;
  deletePETPASS_pet?: Maybe<DeletePETPASS_petPayload>;
  deletePETPASS_petToken?: Maybe<DeletePETPASS_petTokenPayload>;
  deletePETPASS_pet_external_insurance?: Maybe<DeletePETPASS_pet_external_insurancePayload>;
  deletePETPASS_pet_insurance?: Maybe<DeletePETPASS_pet_insurancePayload>;
  deletePETPASS_product?: Maybe<DeletePETPASS_productPayload>;
  deletePETPASS_purchase?: Maybe<DeletePETPASS_purchasePayload>;
  deletePETPASS_sos?: Maybe<DeletePETPASS_sosPayload>;
  deletePETPASS_sos_event?: Maybe<DeletePETPASS_sos_eventPayload>;
  deletePETPASS_user?: Maybe<DeletePETPASS_userPayload>;
  deletePerson?: Maybe<DeletePersonPayload>;
  deletePet?: Maybe<DeletePetPayload>;
  deletePetBreed?: Maybe<DeletePetBreedPayload>;
  deletePetType?: Maybe<DeletePetTypePayload>;
  deletePet_file?: Maybe<DeletePet_filePayload>;
  deletePet_vaccination?: Maybe<DeletePet_vaccinationPayload>;
  deletePet_vaccine?: Maybe<DeletePet_vaccinePayload>;
  deleteProduct?: Maybe<DeleteProductPayload>;
  deleteProduct_category?: Maybe<DeleteProduct_categoryPayload>;
  deleteProduct_item?: Maybe<DeleteProduct_itemPayload>;
  deleteProduct_paymentPlanItem?: Maybe<DeleteProduct_paymentPlanItemPayload>;
  deleteProposal?: Maybe<DeleteProposalPayload>;
  deleteProposal_resource?: Maybe<DeleteProposal_resourcePayload>;
  deleteProposal_stakeholder?: Maybe<DeleteProposal_stakeholderPayload>;
  deleteProposal_stakeholderResource?: Maybe<DeleteProposal_stakeholderResourcePayload>;
  deleteProposal_stakeholderToken?: Maybe<DeleteProposal_stakeholderTokenPayload>;
  deleteResource?: Maybe<DeleteResourcePayload>;
  deleteResourceToken?: Maybe<DeleteResourceTokenPayload>;
  deleteSMS?: Maybe<DeleteSMSPayload>;
  deleteScheduler?: Maybe<DeleteSchedulerPayload>;
  deleteScheduler_action?: Maybe<DeleteScheduler_actionPayload>;
  deleteScheduler_externalAction?: Maybe<DeleteScheduler_externalActionPayload>;
  deleteScheduler_managerAction?: Maybe<DeleteScheduler_managerActionPayload>;
  deleteScheduler_task?: Maybe<DeleteScheduler_taskPayload>;
  deleteSearchIndex_contact?: Maybe<DeleteSearchIndex_contactPayload>;
  deleteServiceAccount?: Maybe<DeleteServiceAccountPayload>;
  deleteShortUrl?: Maybe<DeleteShortUrlPayload>;
  deleteShortUrl_domain?: Maybe<DeleteShortUrl_domainPayload>;
  deleteStorage?: Maybe<DeleteStoragePayload>;
  deleteStorage_file?: Maybe<DeleteStorage_filePayload>;
  deleteStorage_fileByDemand?: Maybe<DeleteStorage_fileByDemandPayload>;
  deleteStorage_fileOperationToken?: Maybe<DeleteStorage_fileOperationTokenPayload>;
  deleteTwoFactorToken?: Maybe<DeleteTwoFactorTokenPayload>;
  deleteUnit?: Maybe<DeleteUnitPayload>;
  deleteUser?: Maybe<DeleteUserPayload>;
  deleteUser_token?: Maybe<DeleteUser_tokenPayload>;
  deleteVET_PACKAGE?: Maybe<DeleteVET_PACKAGEPayload>;
  deleteVET_account?: Maybe<DeleteVET_accountPayload>;
  deleteVET_contact?: Maybe<DeleteVET_contactPayload>;
  deleteVET_pet?: Maybe<DeleteVET_petPayload>;
  deleteWebhook?: Maybe<DeleteWebhookPayload>;
  deleteWebhook_provider?: Maybe<DeleteWebhook_providerPayload>;
  deleteWebhook_providerOrigin?: Maybe<DeleteWebhook_providerOriginPayload>;
  updateAUDITS_PACKAGE?: Maybe<UpdateAUDITS_PACKAGEPayload>;
  updateAUDITS_account?: Maybe<UpdateAUDITS_accountPayload>;
  updateAUDITS_document?: Maybe<UpdateAUDITS_documentPayload>;
  updateAUDITS_document_block?: Maybe<UpdateAUDITS_document_blockPayload>;
  updateAUDITS_document_blockImage?: Maybe<UpdateAUDITS_document_blockImagePayload>;
  updateAUDITS_document_blockQuote?: Maybe<UpdateAUDITS_document_blockQuotePayload>;
  updateAUDITS_document_blockTable?: Maybe<UpdateAUDITS_document_blockTablePayload>;
  updateAUDITS_document_blockTableCell?: Maybe<UpdateAUDITS_document_blockTableCellPayload>;
  updateAUDITS_document_blockTableColumn?: Maybe<UpdateAUDITS_document_blockTableColumnPayload>;
  updateAUDITS_document_blockTableRow?: Maybe<UpdateAUDITS_document_blockTableRowPayload>;
  updateAUDITS_document_blockText?: Maybe<UpdateAUDITS_document_blockTextPayload>;
  updateAUDITS_document_blockTitle?: Maybe<UpdateAUDITS_document_blockTitlePayload>;
  updateAUDITS_file?: Maybe<UpdateAUDITS_filePayload>;
  updateAUDITS_project?: Maybe<UpdateAUDITS_projectPayload>;
  updateAUDITS_project_version?: Maybe<UpdateAUDITS_project_versionPayload>;
  updateAUDITS_review?: Maybe<UpdateAUDITS_reviewPayload>;
  updateAUDITS_review_account?: Maybe<UpdateAUDITS_review_accountPayload>;
  updateAUDITS_review_comment?: Maybe<UpdateAUDITS_review_commentPayload>;
  updateAccount?: Maybe<UpdateAccountPayload>;
  updateAccount_event?: Maybe<UpdateAccount_eventPayload>;
  updateAccount_log?: Maybe<UpdateAccount_logPayload>;
  updateAccount_notification?: Maybe<UpdateAccount_notificationPayload>;
  updateAccount_session?: Maybe<UpdateAccount_sessionPayload>;
  updateAccount_sessionConnection?: Maybe<UpdateAccount_sessionConnectionPayload>;
  updateAccount_sessionConnectionTask?: Maybe<UpdateAccount_sessionConnectionTaskPayload>;
  updateAccount_sessionTask?: Maybe<UpdateAccount_sessionTaskPayload>;
  updateAddress?: Maybe<UpdateAddressPayload>;
  updateBank?: Maybe<UpdateBankPayload>;
  updateBankAccount?: Maybe<UpdateBankAccountPayload>;
  updateCMS_PACKAGE?: Maybe<UpdateCMS_PACKAGEPayload>;
  updateCMS_account?: Maybe<UpdateCMS_accountPayload>;
  updateCMS_app?: Maybe<UpdateCMS_appPayload>;
  updateCMS_appContact?: Maybe<UpdateCMS_appContactPayload>;
  updateCMS_authorAlias?: Maybe<UpdateCMS_authorAliasPayload>;
  updateCMS_contact?: Maybe<UpdateCMS_contactPayload>;
  updateCMS_file?: Maybe<UpdateCMS_filePayload>;
  updateCMS_website?: Maybe<UpdateCMS_websitePayload>;
  updateCMS_website_page?: Maybe<UpdateCMS_website_pagePayload>;
  updateCMS_website_page_block?: Maybe<UpdateCMS_website_page_blockPayload>;
  updateCMS_website_page_blockCombo?: Maybe<UpdateCMS_website_page_blockComboPayload>;
  updateCMS_website_page_blockImage?: Maybe<UpdateCMS_website_page_blockImagePayload>;
  updateCMS_website_page_blockLink?: Maybe<UpdateCMS_website_page_blockLinkPayload>;
  updateCMS_website_page_blockText?: Maybe<UpdateCMS_website_page_blockTextPayload>;
  updateCMS_website_page_blockTitle?: Maybe<UpdateCMS_website_page_blockTitlePayload>;
  updateCRM_PACKAGE?: Maybe<UpdateCRM_PACKAGEPayload>;
  updateCRM_account?: Maybe<UpdateCRM_accountPayload>;
  updateCRM_accountContactsTableColumn?: Maybe<UpdateCRM_accountContactsTableColumnPayload>;
  updateCRM_accountContactsTableFilter?: Maybe<UpdateCRM_accountContactsTableFilterPayload>;
  updateCRM_accountEvent?: Maybe<UpdateCRM_accountEventPayload>;
  updateCRM_action?: Maybe<UpdateCRM_actionPayload>;
  updateCRM_actionCall?: Maybe<UpdateCRM_actionCallPayload>;
  updateCRM_actionChat?: Maybe<UpdateCRM_actionChatPayload>;
  updateCRM_actionEmail?: Maybe<UpdateCRM_actionEmailPayload>;
  updateCRM_actionMeeting?: Maybe<UpdateCRM_actionMeetingPayload>;
  updateCRM_area?: Maybe<UpdateCRM_areaPayload>;
  updateCRM_campaign?: Maybe<UpdateCRM_campaignPayload>;
  updateCRM_campaignContact?: Maybe<UpdateCRM_campaignContactPayload>;
  updateCRM_campaignContactEvent?: Maybe<UpdateCRM_campaignContactEventPayload>;
  updateCRM_campaignDeliver?: Maybe<UpdateCRM_campaignDeliverPayload>;
  updateCRM_campaignEmailTemplate?: Maybe<UpdateCRM_campaignEmailTemplatePayload>;
  updateCRM_contact?: Maybe<UpdateCRM_contactPayload>;
  updateCRM_contactAction?: Maybe<UpdateCRM_contactActionPayload>;
  updateCRM_contactActionCall?: Maybe<UpdateCRM_contactActionCallPayload>;
  updateCRM_contactActionChat?: Maybe<UpdateCRM_contactActionChatPayload>;
  updateCRM_contactActionEmail?: Maybe<UpdateCRM_contactActionEmailPayload>;
  updateCRM_contactActionMeeting?: Maybe<UpdateCRM_contactActionMeetingPayload>;
  updateCRM_contactActionStatusChange?: Maybe<UpdateCRM_contactActionStatusChangePayload>;
  updateCRM_contactAnswer?: Maybe<UpdateCRM_contactAnswerPayload>;
  updateCRM_contactInput?: Maybe<UpdateCRM_contactInputPayload>;
  updateCRM_contactInputSubStatus?: Maybe<UpdateCRM_contactInputSubStatusPayload>;
  updateCRM_contactInputValue?: Maybe<UpdateCRM_contactInputValuePayload>;
  updateCRM_contactList?: Maybe<UpdateCRM_contactListPayload>;
  updateCRM_emailTemplate?: Maybe<UpdateCRM_emailTemplatePayload>;
  updateCRM_event?: Maybe<UpdateCRM_eventPayload>;
  updateCRM_funnel?: Maybe<UpdateCRM_funnelPayload>;
  updateCRM_funnelAction?: Maybe<UpdateCRM_funnelActionPayload>;
  updateCRM_funnelStatus?: Maybe<UpdateCRM_funnelStatusPayload>;
  updateCRM_opportunityLog?: Maybe<UpdateCRM_opportunityLogPayload>;
  updateCRM_opportunityPaymentPlanItem?: Maybe<UpdateCRM_opportunityPaymentPlanItemPayload>;
  updateCRM_overview?: Maybe<UpdateCRM_overviewPayload>;
  updateCRM_proposal?: Maybe<UpdateCRM_proposalPayload>;
  updateCRM_role?: Maybe<UpdateCRM_rolePayload>;
  updateCRM_socialMediaCampaign?: Maybe<UpdateCRM_socialMediaCampaignPayload>;
  updateCRM_socialMediaCampaign_media?: Maybe<UpdateCRM_socialMediaCampaign_mediaPayload>;
  updateCRM_socialMediaCampaign_post?: Maybe<UpdateCRM_socialMediaCampaign_postPayload>;
  updateCRM_source?: Maybe<UpdateCRM_sourcePayload>;
  updateCRM_sourceCategory?: Maybe<UpdateCRM_sourceCategoryPayload>;
  updateCRM_sourceForm?: Maybe<UpdateCRM_sourceFormPayload>;
  updateCRM_sourceFormField?: Maybe<UpdateCRM_sourceFormFieldPayload>;
  updateCRM_sourceFormReason?: Maybe<UpdateCRM_sourceFormReasonPayload>;
  updateCRM_sourceForm_emailTemplate?: Maybe<UpdateCRM_sourceForm_emailTemplatePayload>;
  updateCRM_team?: Maybe<UpdateCRM_teamPayload>;
  updateCRM_teamAccount?: Maybe<UpdateCRM_teamAccountPayload>;
  updateCRM_teamAction?: Maybe<UpdateCRM_teamActionPayload>;
  updateCRM_teamActionBoardEffect?: Maybe<UpdateCRM_teamActionBoardEffectPayload>;
  updateCRM_teamBoard?: Maybe<UpdateCRM_teamBoardPayload>;
  updateCRM_teamBoardItem?: Maybe<UpdateCRM_teamBoardItemPayload>;
  updateCRM_teamBoardStatus?: Maybe<UpdateCRM_teamBoardStatusPayload>;
  updateCRM_teamBoardSubStatus?: Maybe<UpdateCRM_teamBoardSubStatusPayload>;
  updateCRM_teamBoardTask?: Maybe<UpdateCRM_teamBoardTaskPayload>;
  updateChatbots_PACKAGE?: Maybe<UpdateChatbots_PACKAGEPayload>;
  updateChatbots_account?: Maybe<UpdateChatbots_accountPayload>;
  updateChatbots_area?: Maybe<UpdateChatbots_areaPayload>;
  updateChatbots_areaAccount?: Maybe<UpdateChatbots_areaAccountPayload>;
  updateChatbots_externalAPI?: Maybe<UpdateChatbots_externalAPIPayload>;
  updateChatbots_externalAPI_field?: Maybe<UpdateChatbots_externalAPI_fieldPayload>;
  updateChatbots_process?: Maybe<UpdateChatbots_processPayload>;
  updateChatbots_processAPI?: Maybe<UpdateChatbots_processAPIPayload>;
  updateChatbots_processAccount?: Maybe<UpdateChatbots_processAccountPayload>;
  updateChatbots_processAction?: Maybe<UpdateChatbots_processActionPayload>;
  updateChatbots_processButton?: Maybe<UpdateChatbots_processButtonPayload>;
  updateChatbots_processField?: Maybe<UpdateChatbots_processFieldPayload>;
  updateChatbots_processFilterParam?: Maybe<UpdateChatbots_processFilterParamPayload>;
  updateChatbots_processOperation?: Maybe<UpdateChatbots_processOperationPayload>;
  updateChatbots_processStatus?: Maybe<UpdateChatbots_processStatusPayload>;
  updateChatbots_processTableHead?: Maybe<UpdateChatbots_processTableHeadPayload>;
  updateChatbots_processTableHeadConfig?: Maybe<UpdateChatbots_processTableHeadConfigPayload>;
  updateChatbots_processTableMatchReplace?: Maybe<UpdateChatbots_processTableMatchReplacePayload>;
  updateChatbots_processValidation?: Maybe<UpdateChatbots_processValidationPayload>;
  updateChatbots_processValidationOperation?: Maybe<UpdateChatbots_processValidationOperationPayload>;
  updateChatbots_processValidationOperation_document?: Maybe<UpdateChatbots_processValidationOperation_documentPayload>;
  updateChatbots_processValidationOperation_document_file?: Maybe<UpdateChatbots_processValidationOperation_document_filePayload>;
  updateChatbots_processsValidationOperation_field?: Maybe<UpdateChatbots_processsValidationOperation_fieldPayload>;
  updateChatbots_validation?: Maybe<UpdateChatbots_validationPayload>;
  updateChatbots_validationDocument?: Maybe<UpdateChatbots_validationDocumentPayload>;
  updateChatbots_validationDocument_file?: Maybe<UpdateChatbots_validationDocument_filePayload>;
  updateChatbots_validationField?: Maybe<UpdateChatbots_validationFieldPayload>;
  updateCompanySector?: Maybe<UpdateCompanySectorPayload>;
  updateContact?: Maybe<UpdateContactPayload>;
  updateContact_billingInfo?: Maybe<UpdateContact_billingInfoPayload>;
  updateContact_businessInfo?: Maybe<UpdateContact_businessInfoPayload>;
  updateContact_email?: Maybe<UpdateContact_emailPayload>;
  updateContact_importLog?: Maybe<UpdateContact_importLogPayload>;
  updateContact_jobPosition?: Maybe<UpdateContact_jobPositionPayload>;
  updateContact_phone?: Maybe<UpdateContact_phonePayload>;
  updateCountry?: Maybe<UpdateCountryPayload>;
  updateCurrency?: Maybe<UpdateCurrencyPayload>;
  updateDynamicTable?: Maybe<UpdateDynamicTablePayload>;
  updateDynamicTable_account?: Maybe<UpdateDynamicTable_accountPayload>;
  updateDynamicTable_head?: Maybe<UpdateDynamicTable_headPayload>;
  updateDynamicTable_headValueBooleanOptions?: Maybe<UpdateDynamicTable_headValueBooleanOptionsPayload>;
  updateDynamicTable_headValueCurrencyOptions?: Maybe<UpdateDynamicTable_headValueCurrencyOptionsPayload>;
  updateDynamicTable_headValueDateOptions?: Maybe<UpdateDynamicTable_headValueDateOptionsPayload>;
  updateDynamicTable_headValueLinkOptions?: Maybe<UpdateDynamicTable_headValueLinkOptionsPayload>;
  updateDynamicTable_headValueNumberOptions?: Maybe<UpdateDynamicTable_headValueNumberOptionsPayload>;
  updateE360App?: Maybe<UpdateE360AppPayload>;
  updateE360App_domain?: Maybe<UpdateE360App_domainPayload>;
  updateE360App_location?: Maybe<UpdateE360App_locationPayload>;
  updateE360App_locationFile?: Maybe<UpdateE360App_locationFilePayload>;
  updateE360App_locationSchedule?: Maybe<UpdateE360App_locationSchedulePayload>;
  updateE360App_location_appoinment?: Maybe<UpdateE360App_location_appoinmentPayload>;
  updateE360App_location_appoinmentLots?: Maybe<UpdateE360App_location_appoinmentLotsPayload>;
  updateE360App_location_area?: Maybe<UpdateE360App_location_areaPayload>;
  updateE360App_location_area_resource?: Maybe<UpdateE360App_location_area_resourcePayload>;
  updateE360App_location_area_workShift?: Maybe<UpdateE360App_location_area_workShiftPayload>;
  updateE360App_location_menu?: Maybe<UpdateE360App_location_menuPayload>;
  updateE360App_location_menu_combo?: Maybe<UpdateE360App_location_menu_comboPayload>;
  updateE360App_location_menu_item?: Maybe<UpdateE360App_location_menu_itemPayload>;
  updateE360App_location_menu_section?: Maybe<UpdateE360App_location_menu_sectionPayload>;
  updateE360App_location_menu_section_item?: Maybe<UpdateE360App_location_menu_section_itemPayload>;
  updateE360App_location_menu_subSection?: Maybe<UpdateE360App_location_menu_subSectionPayload>;
  updateE360App_location_menu_tag?: Maybe<UpdateE360App_location_menu_tagPayload>;
  updateE360App_notification?: Maybe<UpdateE360App_notificationPayload>;
  updateE360App_organization?: Maybe<UpdateE360App_organizationPayload>;
  updateE360App_organization_user?: Maybe<UpdateE360App_organization_userPayload>;
  updateE360App_partner?: Maybe<UpdateE360App_partnerPayload>;
  updateE360App_partner_webhook?: Maybe<UpdateE360App_partner_webhookPayload>;
  updateE360App_shop?: Maybe<UpdateE360App_shopPayload>;
  updateE360App_shop_contract?: Maybe<UpdateE360App_shop_contractPayload>;
  updateE360App_shop_customer_contract?: Maybe<UpdateE360App_shop_customer_contractPayload>;
  updateE360App_shop_customer_contractService?: Maybe<UpdateE360App_shop_customer_contractServicePayload>;
  updateE360App_shop_customer_contract_renewal?: Maybe<UpdateE360App_shop_customer_contract_renewalPayload>;
  updateE360App_shop_operation?: Maybe<UpdateE360App_shop_operationPayload>;
  updateE360App_shop_partner_contract?: Maybe<UpdateE360App_shop_partner_contractPayload>;
  updateE360App_shop_product?: Maybe<UpdateE360App_shop_productPayload>;
  updateE360App_shop_productItem?: Maybe<UpdateE360App_shop_productItemPayload>;
  updateE360App_shop_productService?: Maybe<UpdateE360App_shop_productServicePayload>;
  updateE360App_shop_promoProduct?: Maybe<UpdateE360App_shop_promoProductPayload>;
  updateE360App_shop_promotion?: Maybe<UpdateE360App_shop_promotionPayload>;
  updateE360App_shop_promotionCode?: Maybe<UpdateE360App_shop_promotionCodePayload>;
  updateE360App_shop_purchase?: Maybe<UpdateE360App_shop_purchasePayload>;
  updateE360App_shop_purchaseProviderEvent?: Maybe<UpdateE360App_shop_purchaseProviderEventPayload>;
  updateE360App_stablishment?: Maybe<UpdateE360App_stablishmentPayload>;
  updateE360App_stablishment_user?: Maybe<UpdateE360App_stablishment_userPayload>;
  updateE360App_user?: Maybe<UpdateE360App_userPayload>;
  updateE360App_userLog?: Maybe<UpdateE360App_userLogPayload>;
  updateE360App_userSession?: Maybe<UpdateE360App_userSessionPayload>;
  updateE360App_userSessionConnection?: Maybe<UpdateE360App_userSessionConnectionPayload>;
  updateE360App_userSessionConnectionTask?: Maybe<UpdateE360App_userSessionConnectionTaskPayload>;
  updateE360App_userSessionTask?: Maybe<UpdateE360App_userSessionTaskPayload>;
  updateE360App_user_notification?: Maybe<UpdateE360App_user_notificationPayload>;
  updateE360App_user_partner?: Maybe<UpdateE360App_user_partnerPayload>;
  updateE360Storage_file?: Maybe<UpdateE360Storage_filePayload>;
  updateERP_PACKAGE?: Maybe<UpdateERP_PACKAGEPayload>;
  updateERP_account?: Maybe<UpdateERP_accountPayload>;
  updateERP_accountEvent?: Maybe<UpdateERP_accountEventPayload>;
  updateERP_accountingAccount?: Maybe<UpdateERP_accountingAccountPayload>;
  updateERP_contact?: Maybe<UpdateERP_contactPayload>;
  updateERP_contactAction?: Maybe<UpdateERP_contactActionPayload>;
  updateERP_contactSerie?: Maybe<UpdateERP_contactSeriePayload>;
  updateERP_event?: Maybe<UpdateERP_eventPayload>;
  updateERP_invoice?: Maybe<UpdateERP_invoicePayload>;
  updateERP_invoiceItem?: Maybe<UpdateERP_invoiceItemPayload>;
  updateERP_invoiceNote?: Maybe<UpdateERP_invoiceNotePayload>;
  updateERP_organizationBillingInfo?: Maybe<UpdateERP_organizationBillingInfoPayload>;
  updateERP_paymentPlan?: Maybe<UpdateERP_paymentPlanPayload>;
  updateERP_product?: Maybe<UpdateERP_productPayload>;
  updateERP_resource?: Maybe<UpdateERP_resourcePayload>;
  updateERP_role?: Maybe<UpdateERP_rolePayload>;
  updateERP_seat?: Maybe<UpdateERP_seatPayload>;
  updateERP_seatLine?: Maybe<UpdateERP_seatLinePayload>;
  updateERP_tax?: Maybe<UpdateERP_taxPayload>;
  updateERP_withholding?: Maybe<UpdateERP_withholdingPayload>;
  updateEmail?: Maybe<UpdateEmailPayload>;
  updateEmailEditor?: Maybe<UpdateEmailEditorPayload>;
  updateEmailEditor_template?: Maybe<UpdateEmailEditor_templatePayload>;
  updateEmail_attachment?: Maybe<UpdateEmail_attachmentPayload>;
  updateEmail_from?: Maybe<UpdateEmail_fromPayload>;
  updateEmail_to?: Maybe<UpdateEmail_toPayload>;
  updateEvent?: Maybe<UpdateEventPayload>;
  updateExternalAPI_key?: Maybe<UpdateExternalAPI_keyPayload>;
  updateFormBuilder?: Maybe<UpdateFormBuilderPayload>;
  updateFormBuilder_form?: Maybe<UpdateFormBuilder_formPayload>;
  updateFormBuilder_input?: Maybe<UpdateFormBuilder_inputPayload>;
  updateFormBuilder_inputBoolean?: Maybe<UpdateFormBuilder_inputBooleanPayload>;
  updateFormBuilder_inputMultipleChoice?: Maybe<UpdateFormBuilder_inputMultipleChoicePayload>;
  updateFormBuilder_inputMultipleChoiceOption?: Maybe<UpdateFormBuilder_inputMultipleChoiceOptionPayload>;
  updateFormBuilder_inputNumber?: Maybe<UpdateFormBuilder_inputNumberPayload>;
  updateFormBuilder_inputText?: Maybe<UpdateFormBuilder_inputTextPayload>;
  updateGeneralAccountingAccount?: Maybe<UpdateGeneralAccountingAccountPayload>;
  updateImportProcess?: Maybe<UpdateImportProcessPayload>;
  updateImportProcess_elementField?: Maybe<UpdateImportProcess_elementFieldPayload>;
  updateImportProcess_item?: Maybe<UpdateImportProcess_itemPayload>;
  updateImportProcess_itemError?: Maybe<UpdateImportProcess_itemErrorPayload>;
  updateImportProcess_itemValue?: Maybe<UpdateImportProcess_itemValuePayload>;
  updateImportProcess_match?: Maybe<UpdateImportProcess_matchPayload>;
  updateImportProcess_sourceValue?: Maybe<UpdateImportProcess_sourceValuePayload>;
  updateInbox?: Maybe<UpdateInboxPayload>;
  updateInbox_item?: Maybe<UpdateInbox_itemPayload>;
  updateIntegrations?: Maybe<UpdateIntegrationsPayload>;
  updateIntegrations_Digilab_Provider?: Maybe<UpdateIntegrations_Digilab_ProviderPayload>;
  updateIntegrations_Google_Analytics_Provider?: Maybe<UpdateIntegrations_Google_Analytics_ProviderPayload>;
  updateIntegrations_Google_Provider?: Maybe<UpdateIntegrations_Google_ProviderPayload>;
  updateIntegrations_Link_Mobility_Provider?: Maybe<UpdateIntegrations_Link_Mobility_ProviderPayload>;
  updateIntegrations_LinkedIn_Provider?: Maybe<UpdateIntegrations_LinkedIn_ProviderPayload>;
  updateIntegrations_MSFT_Meeting?: Maybe<UpdateIntegrations_MSFT_MeetingPayload>;
  updateIntegrations_MSFT_Provider?: Maybe<UpdateIntegrations_MSFT_ProviderPayload>;
  updateIntegrations_Meta_Provider?: Maybe<UpdateIntegrations_Meta_ProviderPayload>;
  updateIntegrations_SendGrid_Provider?: Maybe<UpdateIntegrations_SendGrid_ProviderPayload>;
  updateIntegrations_Sendgrid_emailEvent?: Maybe<UpdateIntegrations_Sendgrid_emailEventPayload>;
  updateIntegrations_account?: Maybe<UpdateIntegrations_accountPayload>;
  updateIntegrations_carrefour_operartionsLog?: Maybe<UpdateIntegrations_carrefour_operartionsLogPayload>;
  updateJobPosition?: Maybe<UpdateJobPositionPayload>;
  updateLMS_PACKAGE?: Maybe<UpdateLMS_PACKAGEPayload>;
  updateLMS_account?: Maybe<UpdateLMS_accountPayload>;
  updateLMS_accountLog?: Maybe<UpdateLMS_accountLogPayload>;
  updateLMS_accountLogDetail?: Maybe<UpdateLMS_accountLogDetailPayload>;
  updateLMS_block?: Maybe<UpdateLMS_blockPayload>;
  updateLMS_blockStudentProgress?: Maybe<UpdateLMS_blockStudentProgressPayload>;
  updateLMS_contact?: Maybe<UpdateLMS_contactPayload>;
  updateLMS_course?: Maybe<UpdateLMS_coursePayload>;
  updateLMS_courseCategory?: Maybe<UpdateLMS_courseCategoryPayload>;
  updateLMS_courseStudentProgress?: Maybe<UpdateLMS_courseStudentProgressPayload>;
  updateLMS_courseVersion?: Maybe<UpdateLMS_courseVersionPayload>;
  updateLMS_form?: Maybe<UpdateLMS_formPayload>;
  updateLMS_formStudentProgress?: Maybe<UpdateLMS_formStudentProgressPayload>;
  updateLMS_group?: Maybe<UpdateLMS_groupPayload>;
  updateLMS_groupAccount?: Maybe<UpdateLMS_groupAccountPayload>;
  updateLMS_groupAccountFormAnswer?: Maybe<UpdateLMS_groupAccountFormAnswerPayload>;
  updateLMS_groupAccountFormAttempt?: Maybe<UpdateLMS_groupAccountFormAttemptPayload>;
  updateLMS_groupBlockConfig?: Maybe<UpdateLMS_groupBlockConfigPayload>;
  updateLMS_groupCourseConfig?: Maybe<UpdateLMS_groupCourseConfigPayload>;
  updateLMS_groupFormConfig?: Maybe<UpdateLMS_groupFormConfigPayload>;
  updateLMS_groupFormConfigCalculation?: Maybe<UpdateLMS_groupFormConfigCalculationPayload>;
  updateLMS_groupFormConfigCalculationRange?: Maybe<UpdateLMS_groupFormConfigCalculationRangePayload>;
  updateLMS_groupLessonConfig?: Maybe<UpdateLMS_groupLessonConfigPayload>;
  updateLMS_groupLessonMeetingConfig?: Maybe<UpdateLMS_groupLessonMeetingConfigPayload>;
  updateLMS_groupLessonTeacherConfig?: Maybe<UpdateLMS_groupLessonTeacherConfigPayload>;
  updateLMS_groupResourceConfig?: Maybe<UpdateLMS_groupResourceConfigPayload>;
  updateLMS_lesson?: Maybe<UpdateLMS_lessonPayload>;
  updateLMS_lessonStudentProgress?: Maybe<UpdateLMS_lessonStudentProgressPayload>;
  updateLMS_meetingStudentProgress?: Maybe<UpdateLMS_meetingStudentProgressPayload>;
  updateLMS_product?: Maybe<UpdateLMS_productPayload>;
  updateLMS_resource?: Maybe<UpdateLMS_resourcePayload>;
  updateLMS_resourceStudentProgress?: Maybe<UpdateLMS_resourceStudentProgressPayload>;
  updateLMS_resourceStudentVideoReport?: Maybe<UpdateLMS_resourceStudentVideoReportPayload>;
  updateLMS_resourceStudentVideoReport_interval?: Maybe<UpdateLMS_resourceStudentVideoReport_intervalPayload>;
  updateLMS_section?: Maybe<UpdateLMS_sectionPayload>;
  updateLMS_thumbnail?: Maybe<UpdateLMS_thumbnailPayload>;
  updateLogger_log?: Maybe<UpdateLogger_logPayload>;
  updateLoginProvider?: Maybe<UpdateLoginProviderPayload>;
  updateMeeting?: Maybe<UpdateMeetingPayload>;
  updateMeetingAccount?: Maybe<UpdateMeetingAccountPayload>;
  updateMeetingDoctors_user?: Maybe<UpdateMeetingDoctors_userPayload>;
  updateMeetingProvider?: Maybe<UpdateMeetingProviderPayload>;
  updateNavigation?: Maybe<UpdateNavigationPayload>;
  updateNavigation_route?: Maybe<UpdateNavigation_routePayload>;
  updateORG_PACKAGE?: Maybe<UpdateORG_PACKAGEPayload>;
  updateORG_account?: Maybe<UpdateORG_accountPayload>;
  updateORG_role?: Maybe<UpdateORG_rolePayload>;
  updateOrg?: Maybe<UpdateOrgPayload>;
  updateOrg360?: Maybe<UpdateOrg360Payload>;
  updateOrg360_theme?: Maybe<UpdateOrg360_themePayload>;
  updateOrgDomain?: Maybe<UpdateOrgDomainPayload>;
  updateOrganization_department?: Maybe<UpdateOrganization_departmentPayload>;
  updatePETPASS_APP?: Maybe<UpdatePETPASS_APPPayload>;
  updatePETPASS_banner?: Maybe<UpdatePETPASS_bannerPayload>;
  updatePETPASS_contract?: Maybe<UpdatePETPASS_contractPayload>;
  updatePETPASS_file?: Maybe<UpdatePETPASS_filePayload>;
  updatePETPASS_insurance?: Maybe<UpdatePETPASS_insurancePayload>;
  updatePETPASS_insurance_company?: Maybe<UpdatePETPASS_insurance_companyPayload>;
  updatePETPASS_location?: Maybe<UpdatePETPASS_locationPayload>;
  updatePETPASS_locationPolicy?: Maybe<UpdatePETPASS_locationPolicyPayload>;
  updatePETPASS_locator?: Maybe<UpdatePETPASS_locatorPayload>;
  updatePETPASS_partner?: Maybe<UpdatePETPASS_partnerPayload>;
  updatePETPASS_pet?: Maybe<UpdatePETPASS_petPayload>;
  updatePETPASS_petToken?: Maybe<UpdatePETPASS_petTokenPayload>;
  updatePETPASS_pet_external_insurance?: Maybe<UpdatePETPASS_pet_external_insurancePayload>;
  updatePETPASS_pet_insurance?: Maybe<UpdatePETPASS_pet_insurancePayload>;
  updatePETPASS_product?: Maybe<UpdatePETPASS_productPayload>;
  updatePETPASS_purchase?: Maybe<UpdatePETPASS_purchasePayload>;
  updatePETPASS_sos?: Maybe<UpdatePETPASS_sosPayload>;
  updatePETPASS_sos_event?: Maybe<UpdatePETPASS_sos_eventPayload>;
  updatePETPASS_user?: Maybe<UpdatePETPASS_userPayload>;
  updatePerson?: Maybe<UpdatePersonPayload>;
  updatePet?: Maybe<UpdatePetPayload>;
  updatePetBreed?: Maybe<UpdatePetBreedPayload>;
  updatePetType?: Maybe<UpdatePetTypePayload>;
  updatePet_file?: Maybe<UpdatePet_filePayload>;
  updatePet_vaccination?: Maybe<UpdatePet_vaccinationPayload>;
  updatePet_vaccine?: Maybe<UpdatePet_vaccinePayload>;
  updateProduct?: Maybe<UpdateProductPayload>;
  updateProduct_category?: Maybe<UpdateProduct_categoryPayload>;
  updateProduct_item?: Maybe<UpdateProduct_itemPayload>;
  updateProduct_paymentPlanItem?: Maybe<UpdateProduct_paymentPlanItemPayload>;
  updateProposal?: Maybe<UpdateProposalPayload>;
  updateProposal_resource?: Maybe<UpdateProposal_resourcePayload>;
  updateProposal_stakeholder?: Maybe<UpdateProposal_stakeholderPayload>;
  updateProposal_stakeholderResource?: Maybe<UpdateProposal_stakeholderResourcePayload>;
  updateProposal_stakeholderToken?: Maybe<UpdateProposal_stakeholderTokenPayload>;
  updateResource?: Maybe<UpdateResourcePayload>;
  updateResourceToken?: Maybe<UpdateResourceTokenPayload>;
  updateSMS?: Maybe<UpdateSMSPayload>;
  updateScheduler?: Maybe<UpdateSchedulerPayload>;
  updateScheduler_action?: Maybe<UpdateScheduler_actionPayload>;
  updateScheduler_externalAction?: Maybe<UpdateScheduler_externalActionPayload>;
  updateScheduler_managerAction?: Maybe<UpdateScheduler_managerActionPayload>;
  updateScheduler_task?: Maybe<UpdateScheduler_taskPayload>;
  updateSearchIndex_contact?: Maybe<UpdateSearchIndex_contactPayload>;
  updateServiceAccount?: Maybe<UpdateServiceAccountPayload>;
  updateShortUrl?: Maybe<UpdateShortUrlPayload>;
  updateShortUrl_domain?: Maybe<UpdateShortUrl_domainPayload>;
  updateStorage?: Maybe<UpdateStoragePayload>;
  updateStorage_file?: Maybe<UpdateStorage_filePayload>;
  updateStorage_fileByDemand?: Maybe<UpdateStorage_fileByDemandPayload>;
  updateStorage_fileOperationToken?: Maybe<UpdateStorage_fileOperationTokenPayload>;
  updateTwoFactorToken?: Maybe<UpdateTwoFactorTokenPayload>;
  updateUnit?: Maybe<UpdateUnitPayload>;
  updateUser?: Maybe<UpdateUserPayload>;
  updateUser_token?: Maybe<UpdateUser_tokenPayload>;
  updateVET_PACKAGE?: Maybe<UpdateVET_PACKAGEPayload>;
  updateVET_account?: Maybe<UpdateVET_accountPayload>;
  updateVET_contact?: Maybe<UpdateVET_contactPayload>;
  updateVET_pet?: Maybe<UpdateVET_petPayload>;
  updateWebhook?: Maybe<UpdateWebhookPayload>;
  updateWebhook_provider?: Maybe<UpdateWebhook_providerPayload>;
  updateWebhook_providerOrigin?: Maybe<UpdateWebhook_providerOriginPayload>;
};


export type MutationaddAUDITS_PACKAGEArgs = {
  input: Array<AddAUDITS_PACKAGEInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_accountArgs = {
  input: Array<AddAUDITS_accountInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_documentArgs = {
  input: Array<AddAUDITS_documentInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_document_blockArgs = {
  input: Array<AddAUDITS_document_blockInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_document_blockImageArgs = {
  input: Array<AddAUDITS_document_blockImageInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_document_blockQuoteArgs = {
  input: Array<AddAUDITS_document_blockQuoteInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_document_blockTableArgs = {
  input: Array<AddAUDITS_document_blockTableInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_document_blockTableCellArgs = {
  input: Array<AddAUDITS_document_blockTableCellInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_document_blockTableColumnArgs = {
  input: Array<AddAUDITS_document_blockTableColumnInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_document_blockTableRowArgs = {
  input: Array<AddAUDITS_document_blockTableRowInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_document_blockTextArgs = {
  input: Array<AddAUDITS_document_blockTextInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_document_blockTitleArgs = {
  input: Array<AddAUDITS_document_blockTitleInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_fileArgs = {
  input: Array<AddAUDITS_fileInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_projectArgs = {
  input: Array<AddAUDITS_projectInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_project_versionArgs = {
  input: Array<AddAUDITS_project_versionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_reviewArgs = {
  input: Array<AddAUDITS_reviewInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_review_accountArgs = {
  input: Array<AddAUDITS_review_accountInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAUDITS_review_commentArgs = {
  input: Array<AddAUDITS_review_commentInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddAccountArgs = {
  input: Array<AddAccountInput>;
};


export type MutationaddAccount_eventArgs = {
  input: Array<AddAccount_eventInput>;
};


export type MutationaddAccount_logArgs = {
  input: Array<AddAccount_logInput>;
};


export type MutationaddAccount_notificationArgs = {
  input: Array<AddAccount_notificationInput>;
};


export type MutationaddAccount_sessionArgs = {
  input: Array<AddAccount_sessionInput>;
};


export type MutationaddAccount_sessionConnectionArgs = {
  input: Array<AddAccount_sessionConnectionInput>;
};


export type MutationaddAccount_sessionConnectionTaskArgs = {
  input: Array<AddAccount_sessionConnectionTaskInput>;
};


export type MutationaddAccount_sessionTaskArgs = {
  input: Array<AddAccount_sessionTaskInput>;
};


export type MutationaddAddressArgs = {
  input: Array<AddAddressInput>;
};


export type MutationaddBankArgs = {
  input: Array<AddBankInput>;
};


export type MutationaddBankAccountArgs = {
  input: Array<AddBankAccountInput>;
};


export type MutationaddCMS_PACKAGEArgs = {
  input: Array<AddCMS_PACKAGEInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_accountArgs = {
  input: Array<AddCMS_accountInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_appArgs = {
  input: Array<AddCMS_appInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_appContactArgs = {
  input: Array<AddCMS_appContactInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_authorAliasArgs = {
  input: Array<AddCMS_authorAliasInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_contactArgs = {
  input: Array<AddCMS_contactInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_fileArgs = {
  input: Array<AddCMS_fileInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_websiteArgs = {
  input: Array<AddCMS_websiteInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_website_pageArgs = {
  input: Array<AddCMS_website_pageInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_website_page_blockArgs = {
  input: Array<AddCMS_website_page_blockInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_website_page_blockComboArgs = {
  input: Array<AddCMS_website_page_blockComboInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_website_page_blockImageArgs = {
  input: Array<AddCMS_website_page_blockImageInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_website_page_blockLinkArgs = {
  input: Array<AddCMS_website_page_blockLinkInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_website_page_blockTextArgs = {
  input: Array<AddCMS_website_page_blockTextInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCMS_website_page_blockTitleArgs = {
  input: Array<AddCMS_website_page_blockTitleInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_PACKAGEArgs = {
  input: Array<AddCRM_PACKAGEInput>;
};


export type MutationaddCRM_accountArgs = {
  input: Array<AddCRM_accountInput>;
};


export type MutationaddCRM_accountContactsTableColumnArgs = {
  input: Array<AddCRM_accountContactsTableColumnInput>;
};


export type MutationaddCRM_accountContactsTableFilterArgs = {
  input: Array<AddCRM_accountContactsTableFilterInput>;
};


export type MutationaddCRM_accountEventArgs = {
  input: Array<AddCRM_accountEventInput>;
};


export type MutationaddCRM_actionArgs = {
  input: Array<AddCRM_actionInput>;
};


export type MutationaddCRM_actionCallArgs = {
  input: Array<AddCRM_actionCallInput>;
};


export type MutationaddCRM_actionChatArgs = {
  input: Array<AddCRM_actionChatInput>;
};


export type MutationaddCRM_actionEmailArgs = {
  input: Array<AddCRM_actionEmailInput>;
};


export type MutationaddCRM_actionMeetingArgs = {
  input: Array<AddCRM_actionMeetingInput>;
};


export type MutationaddCRM_areaArgs = {
  input: Array<AddCRM_areaInput>;
};


export type MutationaddCRM_campaignArgs = {
  input: Array<AddCRM_campaignInput>;
};


export type MutationaddCRM_campaignContactArgs = {
  input: Array<AddCRM_campaignContactInput>;
};


export type MutationaddCRM_campaignContactEventArgs = {
  input: Array<AddCRM_campaignContactEventInput>;
};


export type MutationaddCRM_campaignDeliverArgs = {
  input: Array<AddCRM_campaignDeliverInput>;
};


export type MutationaddCRM_campaignEmailTemplateArgs = {
  input: Array<AddCRM_campaignEmailTemplateInput>;
};


export type MutationaddCRM_contactArgs = {
  input: Array<AddCRM_contactInput>;
};


export type MutationaddCRM_contactActionArgs = {
  input: Array<AddCRM_contactActionInput>;
};


export type MutationaddCRM_contactActionCallArgs = {
  input: Array<AddCRM_contactActionCallInput>;
};


export type MutationaddCRM_contactActionChatArgs = {
  input: Array<AddCRM_contactActionChatInput>;
};


export type MutationaddCRM_contactActionEmailArgs = {
  input: Array<AddCRM_contactActionEmailInput>;
};


export type MutationaddCRM_contactActionMeetingArgs = {
  input: Array<AddCRM_contactActionMeetingInput>;
};


export type MutationaddCRM_contactActionStatusChangeArgs = {
  input: Array<AddCRM_contactActionStatusChangeInput>;
};


export type MutationaddCRM_contactAnswerArgs = {
  input: Array<AddCRM_contactAnswerInput>;
};


export type MutationaddCRM_contactInputArgs = {
  input: Array<AddCRM_contactInputInput>;
};


export type MutationaddCRM_contactInputSubStatusArgs = {
  input: Array<AddCRM_contactInputSubStatusInput>;
};


export type MutationaddCRM_contactInputValueArgs = {
  input: Array<AddCRM_contactInputValueInput>;
};


export type MutationaddCRM_contactListArgs = {
  input: Array<AddCRM_contactListInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_emailTemplateArgs = {
  input: Array<AddCRM_emailTemplateInput>;
};


export type MutationaddCRM_eventArgs = {
  input: Array<AddCRM_eventInput>;
};


export type MutationaddCRM_funnelArgs = {
  input: Array<AddCRM_funnelInput>;
};


export type MutationaddCRM_funnelActionArgs = {
  input: Array<AddCRM_funnelActionInput>;
};


export type MutationaddCRM_funnelStatusArgs = {
  input: Array<AddCRM_funnelStatusInput>;
};


export type MutationaddCRM_opportunityLogArgs = {
  input: Array<AddCRM_opportunityLogInput>;
};


export type MutationaddCRM_opportunityPaymentPlanItemArgs = {
  input: Array<AddCRM_opportunityPaymentPlanItemInput>;
};


export type MutationaddCRM_overviewArgs = {
  input: Array<AddCRM_overviewInput>;
};


export type MutationaddCRM_proposalArgs = {
  input: Array<AddCRM_proposalInput>;
};


export type MutationaddCRM_roleArgs = {
  input: Array<AddCRM_roleInput>;
};


export type MutationaddCRM_socialMediaCampaignArgs = {
  input: Array<AddCRM_socialMediaCampaignInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_socialMediaCampaign_mediaArgs = {
  input: Array<AddCRM_socialMediaCampaign_mediaInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_socialMediaCampaign_postArgs = {
  input: Array<AddCRM_socialMediaCampaign_postInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_sourceArgs = {
  input: Array<AddCRM_sourceInput>;
};


export type MutationaddCRM_sourceCategoryArgs = {
  input: Array<AddCRM_sourceCategoryInput>;
};


export type MutationaddCRM_sourceFormArgs = {
  input: Array<AddCRM_sourceFormInput>;
};


export type MutationaddCRM_sourceFormFieldArgs = {
  input: Array<AddCRM_sourceFormFieldInput>;
};


export type MutationaddCRM_sourceFormReasonArgs = {
  input: Array<AddCRM_sourceFormReasonInput>;
};


export type MutationaddCRM_sourceForm_emailTemplateArgs = {
  input: Array<AddCRM_sourceForm_emailTemplateInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_teamArgs = {
  input: Array<AddCRM_teamInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_teamAccountArgs = {
  input: Array<AddCRM_teamAccountInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_teamActionArgs = {
  input: Array<AddCRM_teamActionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_teamActionBoardEffectArgs = {
  input: Array<AddCRM_teamActionBoardEffectInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_teamBoardArgs = {
  input: Array<AddCRM_teamBoardInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_teamBoardItemArgs = {
  input: Array<AddCRM_teamBoardItemInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_teamBoardStatusArgs = {
  input: Array<AddCRM_teamBoardStatusInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_teamBoardSubStatusArgs = {
  input: Array<AddCRM_teamBoardSubStatusInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCRM_teamBoardTaskArgs = {
  input: Array<AddCRM_teamBoardTaskInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_PACKAGEArgs = {
  input: Array<AddChatbots_PACKAGEInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_accountArgs = {
  input: Array<AddChatbots_accountInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_areaArgs = {
  input: Array<AddChatbots_areaInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_areaAccountArgs = {
  input: Array<AddChatbots_areaAccountInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_externalAPIArgs = {
  input: Array<AddChatbots_externalAPIInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_externalAPI_fieldArgs = {
  input: Array<AddChatbots_externalAPI_fieldInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processArgs = {
  input: Array<AddChatbots_processInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processAPIArgs = {
  input: Array<AddChatbots_processAPIInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processAccountArgs = {
  input: Array<AddChatbots_processAccountInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processActionArgs = {
  input: Array<AddChatbots_processActionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processButtonArgs = {
  input: Array<AddChatbots_processButtonInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processFieldArgs = {
  input: Array<AddChatbots_processFieldInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processFilterParamArgs = {
  input: Array<AddChatbots_processFilterParamInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processOperationArgs = {
  input: Array<AddChatbots_processOperationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processStatusArgs = {
  input: Array<AddChatbots_processStatusInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processTableHeadArgs = {
  input: Array<AddChatbots_processTableHeadInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processTableHeadConfigArgs = {
  input: Array<AddChatbots_processTableHeadConfigInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processTableMatchReplaceArgs = {
  input: Array<AddChatbots_processTableMatchReplaceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processValidationArgs = {
  input: Array<AddChatbots_processValidationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processValidationOperationArgs = {
  input: Array<AddChatbots_processValidationOperationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processValidationOperation_documentArgs = {
  input: Array<AddChatbots_processValidationOperation_documentInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processValidationOperation_document_fileArgs = {
  input: Array<AddChatbots_processValidationOperation_document_fileInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_processsValidationOperation_fieldArgs = {
  input: Array<AddChatbots_processsValidationOperation_fieldInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_validationArgs = {
  input: Array<AddChatbots_validationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_validationDocumentArgs = {
  input: Array<AddChatbots_validationDocumentInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_validationDocument_fileArgs = {
  input: Array<AddChatbots_validationDocument_fileInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddChatbots_validationFieldArgs = {
  input: Array<AddChatbots_validationFieldInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCompanySectorArgs = {
  input: Array<AddCompanySectorInput>;
};


export type MutationaddContactArgs = {
  input: Array<AddContactInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddContact_billingInfoArgs = {
  input: Array<AddContact_billingInfoInput>;
};


export type MutationaddContact_businessInfoArgs = {
  input: Array<AddContact_businessInfoInput>;
};


export type MutationaddContact_emailArgs = {
  input: Array<AddContact_emailInput>;
};


export type MutationaddContact_importLogArgs = {
  input: Array<AddContact_importLogInput>;
};


export type MutationaddContact_jobPositionArgs = {
  input: Array<AddContact_jobPositionInput>;
};


export type MutationaddContact_phoneArgs = {
  input: Array<AddContact_phoneInput>;
};


export type MutationaddCountryArgs = {
  input: Array<AddCountryInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddCurrencyArgs = {
  input: Array<AddCurrencyInput>;
};


export type MutationaddDynamicTableArgs = {
  input: Array<AddDynamicTableInput>;
};


export type MutationaddDynamicTable_accountArgs = {
  input: Array<AddDynamicTable_accountInput>;
};


export type MutationaddDynamicTable_headArgs = {
  input: Array<AddDynamicTable_headInput>;
};


export type MutationaddDynamicTable_headValueBooleanOptionsArgs = {
  input: Array<AddDynamicTable_headValueBooleanOptionsInput>;
};


export type MutationaddDynamicTable_headValueCurrencyOptionsArgs = {
  input: Array<AddDynamicTable_headValueCurrencyOptionsInput>;
};


export type MutationaddDynamicTable_headValueDateOptionsArgs = {
  input: Array<AddDynamicTable_headValueDateOptionsInput>;
};


export type MutationaddDynamicTable_headValueLinkOptionsArgs = {
  input: Array<AddDynamicTable_headValueLinkOptionsInput>;
};


export type MutationaddDynamicTable_headValueNumberOptionsArgs = {
  input: Array<AddDynamicTable_headValueNumberOptionsInput>;
};


export type MutationaddE360AppArgs = {
  input: Array<AddE360AppInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_domainArgs = {
  input: Array<AddE360App_domainInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_locationArgs = {
  input: Array<AddE360App_locationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_locationFileArgs = {
  input: Array<AddE360App_locationFileInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_locationScheduleArgs = {
  input: Array<AddE360App_locationScheduleInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_appoinmentArgs = {
  input: Array<AddE360App_location_appoinmentInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_appoinmentLotsArgs = {
  input: Array<AddE360App_location_appoinmentLotsInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_areaArgs = {
  input: Array<AddE360App_location_areaInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_area_resourceArgs = {
  input: Array<AddE360App_location_area_resourceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_area_workShiftArgs = {
  input: Array<AddE360App_location_area_workShiftInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_menuArgs = {
  input: Array<AddE360App_location_menuInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_menu_comboArgs = {
  input: Array<AddE360App_location_menu_comboInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_menu_itemArgs = {
  input: Array<AddE360App_location_menu_itemInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_menu_sectionArgs = {
  input: Array<AddE360App_location_menu_sectionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_menu_section_itemArgs = {
  input: Array<AddE360App_location_menu_section_itemInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_menu_subSectionArgs = {
  input: Array<AddE360App_location_menu_subSectionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_location_menu_tagArgs = {
  input: Array<AddE360App_location_menu_tagInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_notificationArgs = {
  input: Array<AddE360App_notificationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_organizationArgs = {
  input: Array<AddE360App_organizationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_organization_userArgs = {
  input: Array<AddE360App_organization_userInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_partnerArgs = {
  input: Array<AddE360App_partnerInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_partner_webhookArgs = {
  input: Array<AddE360App_partner_webhookInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shopArgs = {
  input: Array<AddE360App_shopInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_contractArgs = {
  input: Array<AddE360App_shop_contractInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_customer_contractArgs = {
  input: Array<AddE360App_shop_customer_contractInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_customer_contractServiceArgs = {
  input: Array<AddE360App_shop_customer_contractServiceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_customer_contract_renewalArgs = {
  input: Array<AddE360App_shop_customer_contract_renewalInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_operationArgs = {
  input: Array<AddE360App_shop_operationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_partner_contractArgs = {
  input: Array<AddE360App_shop_partner_contractInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_productArgs = {
  input: Array<AddE360App_shop_productInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_productItemArgs = {
  input: Array<AddE360App_shop_productItemInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_productServiceArgs = {
  input: Array<AddE360App_shop_productServiceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_promoProductArgs = {
  input: Array<AddE360App_shop_promoProductInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_promotionArgs = {
  input: Array<AddE360App_shop_promotionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_promotionCodeArgs = {
  input: Array<AddE360App_shop_promotionCodeInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_purchaseArgs = {
  input: Array<AddE360App_shop_purchaseInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_shop_purchaseProviderEventArgs = {
  input: Array<AddE360App_shop_purchaseProviderEventInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_stablishmentArgs = {
  input: Array<AddE360App_stablishmentInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_stablishment_userArgs = {
  input: Array<AddE360App_stablishment_userInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_userArgs = {
  input: Array<AddE360App_userInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_userLogArgs = {
  input: Array<AddE360App_userLogInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_userSessionArgs = {
  input: Array<AddE360App_userSessionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_userSessionConnectionArgs = {
  input: Array<AddE360App_userSessionConnectionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_userSessionConnectionTaskArgs = {
  input: Array<AddE360App_userSessionConnectionTaskInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_userSessionTaskArgs = {
  input: Array<AddE360App_userSessionTaskInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_user_notificationArgs = {
  input: Array<AddE360App_user_notificationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360App_user_partnerArgs = {
  input: Array<AddE360App_user_partnerInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddE360Storage_fileArgs = {
  input: Array<AddE360Storage_fileInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddERP_PACKAGEArgs = {
  input: Array<AddERP_PACKAGEInput>;
};


export type MutationaddERP_accountArgs = {
  input: Array<AddERP_accountInput>;
};


export type MutationaddERP_accountEventArgs = {
  input: Array<AddERP_accountEventInput>;
};


export type MutationaddERP_accountingAccountArgs = {
  input: Array<AddERP_accountingAccountInput>;
};


export type MutationaddERP_contactArgs = {
  input: Array<AddERP_contactInput>;
};


export type MutationaddERP_contactActionArgs = {
  input: Array<AddERP_contactActionInput>;
};


export type MutationaddERP_contactSerieArgs = {
  input: Array<AddERP_contactSerieInput>;
};


export type MutationaddERP_eventArgs = {
  input: Array<AddERP_eventInput>;
};


export type MutationaddERP_invoiceArgs = {
  input: Array<AddERP_invoiceInput>;
};


export type MutationaddERP_invoiceItemArgs = {
  input: Array<AddERP_invoiceItemInput>;
};


export type MutationaddERP_invoiceNoteArgs = {
  input: Array<AddERP_invoiceNoteInput>;
};


export type MutationaddERP_organizationBillingInfoArgs = {
  input: Array<AddERP_organizationBillingInfoInput>;
};


export type MutationaddERP_paymentPlanArgs = {
  input: Array<AddERP_paymentPlanInput>;
};


export type MutationaddERP_productArgs = {
  input: Array<AddERP_productInput>;
};


export type MutationaddERP_resourceArgs = {
  input: Array<AddERP_resourceInput>;
};


export type MutationaddERP_roleArgs = {
  input: Array<AddERP_roleInput>;
};


export type MutationaddERP_seatArgs = {
  input: Array<AddERP_seatInput>;
};


export type MutationaddERP_seatLineArgs = {
  input: Array<AddERP_seatLineInput>;
};


export type MutationaddERP_taxArgs = {
  input: Array<AddERP_taxInput>;
};


export type MutationaddERP_withholdingArgs = {
  input: Array<AddERP_withholdingInput>;
};


export type MutationaddEmailArgs = {
  input: Array<AddEmailInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddEmailEditorArgs = {
  input: Array<AddEmailEditorInput>;
};


export type MutationaddEmailEditor_templateArgs = {
  input: Array<AddEmailEditor_templateInput>;
};


export type MutationaddEmail_attachmentArgs = {
  input: Array<AddEmail_attachmentInput>;
};


export type MutationaddEmail_fromArgs = {
  input: Array<AddEmail_fromInput>;
};


export type MutationaddEmail_toArgs = {
  input: Array<AddEmail_toInput>;
};


export type MutationaddEventArgs = {
  input: Array<AddEventInput>;
};


export type MutationaddExternalAPI_keyArgs = {
  input: Array<AddExternalAPI_keyInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddFormBuilderArgs = {
  input: Array<AddFormBuilderInput>;
};


export type MutationaddFormBuilder_formArgs = {
  input: Array<AddFormBuilder_formInput>;
};


export type MutationaddFormBuilder_inputArgs = {
  input: Array<AddFormBuilder_inputInput>;
};


export type MutationaddFormBuilder_inputBooleanArgs = {
  input: Array<AddFormBuilder_inputBooleanInput>;
};


export type MutationaddFormBuilder_inputMultipleChoiceArgs = {
  input: Array<AddFormBuilder_inputMultipleChoiceInput>;
};


export type MutationaddFormBuilder_inputMultipleChoiceOptionArgs = {
  input: Array<AddFormBuilder_inputMultipleChoiceOptionInput>;
};


export type MutationaddFormBuilder_inputNumberArgs = {
  input: Array<AddFormBuilder_inputNumberInput>;
};


export type MutationaddFormBuilder_inputTextArgs = {
  input: Array<AddFormBuilder_inputTextInput>;
};


export type MutationaddGeneralAccountingAccountArgs = {
  input: Array<AddGeneralAccountingAccountInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddImportProcessArgs = {
  input: Array<AddImportProcessInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddImportProcess_elementFieldArgs = {
  input: Array<AddImportProcess_elementFieldInput>;
};


export type MutationaddImportProcess_itemArgs = {
  input: Array<AddImportProcess_itemInput>;
};


export type MutationaddImportProcess_itemErrorArgs = {
  input: Array<AddImportProcess_itemErrorInput>;
};


export type MutationaddImportProcess_itemValueArgs = {
  input: Array<AddImportProcess_itemValueInput>;
};


export type MutationaddImportProcess_matchArgs = {
  input: Array<AddImportProcess_matchInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddImportProcess_sourceValueArgs = {
  input: Array<AddImportProcess_sourceValueInput>;
};


export type MutationaddInboxArgs = {
  input: Array<AddInboxInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddInbox_itemArgs = {
  input: Array<AddInbox_itemInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddIntegrationsArgs = {
  input: Array<AddIntegrationsInput>;
};


export type MutationaddIntegrations_Digilab_ProviderArgs = {
  input: Array<AddIntegrations_Digilab_ProviderInput>;
};


export type MutationaddIntegrations_Google_Analytics_ProviderArgs = {
  input: Array<AddIntegrations_Google_Analytics_ProviderInput>;
};


export type MutationaddIntegrations_Google_ProviderArgs = {
  input: Array<AddIntegrations_Google_ProviderInput>;
};


export type MutationaddIntegrations_Link_Mobility_ProviderArgs = {
  input: Array<AddIntegrations_Link_Mobility_ProviderInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddIntegrations_LinkedIn_ProviderArgs = {
  input: Array<AddIntegrations_LinkedIn_ProviderInput>;
};


export type MutationaddIntegrations_MSFT_MeetingArgs = {
  input: Array<AddIntegrations_MSFT_MeetingInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddIntegrations_MSFT_ProviderArgs = {
  input: Array<AddIntegrations_MSFT_ProviderInput>;
};


export type MutationaddIntegrations_Meta_ProviderArgs = {
  input: Array<AddIntegrations_Meta_ProviderInput>;
};


export type MutationaddIntegrations_SendGrid_ProviderArgs = {
  input: Array<AddIntegrations_SendGrid_ProviderInput>;
};


export type MutationaddIntegrations_Sendgrid_emailEventArgs = {
  input: Array<AddIntegrations_Sendgrid_emailEventInput>;
};


export type MutationaddIntegrations_accountArgs = {
  input: Array<AddIntegrations_accountInput>;
};


export type MutationaddIntegrations_carrefour_operartionsLogArgs = {
  input: Array<AddIntegrations_carrefour_operartionsLogInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddJobPositionArgs = {
  input: Array<AddJobPositionInput>;
};


export type MutationaddLMS_PACKAGEArgs = {
  input: Array<AddLMS_PACKAGEInput>;
};


export type MutationaddLMS_accountArgs = {
  input: Array<AddLMS_accountInput>;
};


export type MutationaddLMS_accountLogArgs = {
  input: Array<AddLMS_accountLogInput>;
};


export type MutationaddLMS_accountLogDetailArgs = {
  input: Array<AddLMS_accountLogDetailInput>;
};


export type MutationaddLMS_blockArgs = {
  input: Array<AddLMS_blockInput>;
};


export type MutationaddLMS_blockStudentProgressArgs = {
  input: Array<AddLMS_blockStudentProgressInput>;
};


export type MutationaddLMS_contactArgs = {
  input: Array<AddLMS_contactInput>;
};


export type MutationaddLMS_courseArgs = {
  input: Array<AddLMS_courseInput>;
};


export type MutationaddLMS_courseCategoryArgs = {
  input: Array<AddLMS_courseCategoryInput>;
};


export type MutationaddLMS_courseStudentProgressArgs = {
  input: Array<AddLMS_courseStudentProgressInput>;
};


export type MutationaddLMS_courseVersionArgs = {
  input: Array<AddLMS_courseVersionInput>;
};


export type MutationaddLMS_formArgs = {
  input: Array<AddLMS_formInput>;
};


export type MutationaddLMS_formStudentProgressArgs = {
  input: Array<AddLMS_formStudentProgressInput>;
};


export type MutationaddLMS_groupArgs = {
  input: Array<AddLMS_groupInput>;
};


export type MutationaddLMS_groupAccountArgs = {
  input: Array<AddLMS_groupAccountInput>;
};


export type MutationaddLMS_groupAccountFormAnswerArgs = {
  input: Array<AddLMS_groupAccountFormAnswerInput>;
};


export type MutationaddLMS_groupAccountFormAttemptArgs = {
  input: Array<AddLMS_groupAccountFormAttemptInput>;
};


export type MutationaddLMS_groupBlockConfigArgs = {
  input: Array<AddLMS_groupBlockConfigInput>;
};


export type MutationaddLMS_groupCourseConfigArgs = {
  input: Array<AddLMS_groupCourseConfigInput>;
};


export type MutationaddLMS_groupFormConfigArgs = {
  input: Array<AddLMS_groupFormConfigInput>;
};


export type MutationaddLMS_groupFormConfigCalculationArgs = {
  input: Array<AddLMS_groupFormConfigCalculationInput>;
};


export type MutationaddLMS_groupFormConfigCalculationRangeArgs = {
  input: Array<AddLMS_groupFormConfigCalculationRangeInput>;
};


export type MutationaddLMS_groupLessonConfigArgs = {
  input: Array<AddLMS_groupLessonConfigInput>;
};


export type MutationaddLMS_groupLessonMeetingConfigArgs = {
  input: Array<AddLMS_groupLessonMeetingConfigInput>;
};


export type MutationaddLMS_groupLessonTeacherConfigArgs = {
  input: Array<AddLMS_groupLessonTeacherConfigInput>;
};


export type MutationaddLMS_groupResourceConfigArgs = {
  input: Array<AddLMS_groupResourceConfigInput>;
};


export type MutationaddLMS_lessonArgs = {
  input: Array<AddLMS_lessonInput>;
};


export type MutationaddLMS_lessonStudentProgressArgs = {
  input: Array<AddLMS_lessonStudentProgressInput>;
};


export type MutationaddLMS_meetingStudentProgressArgs = {
  input: Array<AddLMS_meetingStudentProgressInput>;
};


export type MutationaddLMS_productArgs = {
  input: Array<AddLMS_productInput>;
};


export type MutationaddLMS_resourceArgs = {
  input: Array<AddLMS_resourceInput>;
};


export type MutationaddLMS_resourceStudentProgressArgs = {
  input: Array<AddLMS_resourceStudentProgressInput>;
};


export type MutationaddLMS_resourceStudentVideoReportArgs = {
  input: Array<AddLMS_resourceStudentVideoReportInput>;
};


export type MutationaddLMS_resourceStudentVideoReport_intervalArgs = {
  input: Array<AddLMS_resourceStudentVideoReport_intervalInput>;
};


export type MutationaddLMS_sectionArgs = {
  input: Array<AddLMS_sectionInput>;
};


export type MutationaddLMS_thumbnailArgs = {
  input: Array<AddLMS_thumbnailInput>;
};


export type MutationaddLogger_logArgs = {
  input: Array<AddLogger_logInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddLoginProviderArgs = {
  input: Array<AddLoginProviderInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddMeetingArgs = {
  input: Array<AddMeetingInput>;
};


export type MutationaddMeetingAccountArgs = {
  input: Array<AddMeetingAccountInput>;
};


export type MutationaddMeetingDoctors_userArgs = {
  input: Array<AddMeetingDoctors_userInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddMeetingProviderArgs = {
  input: Array<AddMeetingProviderInput>;
};


export type MutationaddNavigationArgs = {
  input: Array<AddNavigationInput>;
};


export type MutationaddNavigation_routeArgs = {
  input: Array<AddNavigation_routeInput>;
};


export type MutationaddORG_PACKAGEArgs = {
  input: Array<AddORG_PACKAGEInput>;
};


export type MutationaddORG_accountArgs = {
  input: Array<AddORG_accountInput>;
};


export type MutationaddORG_roleArgs = {
  input: Array<AddORG_roleInput>;
};


export type MutationaddOrgArgs = {
  input: Array<AddOrgInput>;
};


export type MutationaddOrg360Args = {
  input: Array<AddOrg360Input>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddOrg360_themeArgs = {
  input: Array<AddOrg360_themeInput>;
};


export type MutationaddOrgDomainArgs = {
  input: Array<AddOrgDomainInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddOrganization_departmentArgs = {
  input: Array<AddOrganization_departmentInput>;
};


export type MutationaddPETPASS_APPArgs = {
  input: Array<AddPETPASS_APPInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_bannerArgs = {
  input: Array<AddPETPASS_bannerInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_contractArgs = {
  input: Array<AddPETPASS_contractInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_fileArgs = {
  input: Array<AddPETPASS_fileInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_insuranceArgs = {
  input: Array<AddPETPASS_insuranceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_insurance_companyArgs = {
  input: Array<AddPETPASS_insurance_companyInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_locationArgs = {
  input: Array<AddPETPASS_locationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_locationPolicyArgs = {
  input: Array<AddPETPASS_locationPolicyInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_locatorArgs = {
  input: Array<AddPETPASS_locatorInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_partnerArgs = {
  input: Array<AddPETPASS_partnerInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_petArgs = {
  input: Array<AddPETPASS_petInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_petTokenArgs = {
  input: Array<AddPETPASS_petTokenInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_pet_external_insuranceArgs = {
  input: Array<AddPETPASS_pet_external_insuranceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_pet_insuranceArgs = {
  input: Array<AddPETPASS_pet_insuranceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_productArgs = {
  input: Array<AddPETPASS_productInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_purchaseArgs = {
  input: Array<AddPETPASS_purchaseInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_sosArgs = {
  input: Array<AddPETPASS_sosInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_sos_eventArgs = {
  input: Array<AddPETPASS_sos_eventInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPETPASS_userArgs = {
  input: Array<AddPETPASS_userInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPersonArgs = {
  input: Array<AddPersonInput>;
};


export type MutationaddPetArgs = {
  input: Array<AddPetInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPetBreedArgs = {
  input: Array<AddPetBreedInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPetTypeArgs = {
  input: Array<AddPetTypeInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPet_fileArgs = {
  input: Array<AddPet_fileInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPet_vaccinationArgs = {
  input: Array<AddPet_vaccinationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddPet_vaccineArgs = {
  input: Array<AddPet_vaccineInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddProductArgs = {
  input: Array<AddProductInput>;
};


export type MutationaddProduct_categoryArgs = {
  input: Array<AddProduct_categoryInput>;
};


export type MutationaddProduct_itemArgs = {
  input: Array<AddProduct_itemInput>;
};


export type MutationaddProduct_paymentPlanItemArgs = {
  input: Array<AddProduct_paymentPlanItemInput>;
};


export type MutationaddProposalArgs = {
  input: Array<AddProposalInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddProposal_resourceArgs = {
  input: Array<AddProposal_resourceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddProposal_stakeholderArgs = {
  input: Array<AddProposal_stakeholderInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddProposal_stakeholderResourceArgs = {
  input: Array<AddProposal_stakeholderResourceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddProposal_stakeholderTokenArgs = {
  input: Array<AddProposal_stakeholderTokenInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddResourceArgs = {
  input: Array<AddResourceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddResourceTokenArgs = {
  input: Array<AddResourceTokenInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddSMSArgs = {
  input: Array<AddSMSInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddSchedulerArgs = {
  input: Array<AddSchedulerInput>;
};


export type MutationaddScheduler_actionArgs = {
  input: Array<AddScheduler_actionInput>;
};


export type MutationaddScheduler_externalActionArgs = {
  input: Array<AddScheduler_externalActionInput>;
};


export type MutationaddScheduler_managerActionArgs = {
  input: Array<AddScheduler_managerActionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddScheduler_taskArgs = {
  input: Array<AddScheduler_taskInput>;
};


export type MutationaddSearchIndex_contactArgs = {
  input: Array<AddSearchIndex_contactInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddServiceAccountArgs = {
  input: Array<AddServiceAccountInput>;
};


export type MutationaddShortUrlArgs = {
  input: Array<AddShortUrlInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddShortUrl_domainArgs = {
  input: Array<AddShortUrl_domainInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddStorageArgs = {
  input: Array<AddStorageInput>;
};


export type MutationaddStorage_fileArgs = {
  input: Array<AddStorage_fileInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddStorage_fileByDemandArgs = {
  input: Array<AddStorage_fileByDemandInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddStorage_fileOperationTokenArgs = {
  input: Array<AddStorage_fileOperationTokenInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddTwoFactorTokenArgs = {
  input: Array<AddTwoFactorTokenInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddUnitArgs = {
  input: Array<AddUnitInput>;
};


export type MutationaddUserArgs = {
  input: Array<AddUserInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddUser_tokenArgs = {
  input: Array<AddUser_tokenInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddVET_PACKAGEArgs = {
  input: Array<AddVET_PACKAGEInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddVET_accountArgs = {
  input: Array<AddVET_accountInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddVET_contactArgs = {
  input: Array<AddVET_contactInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddVET_petArgs = {
  input: Array<AddVET_petInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationaddWebhookArgs = {
  input: Array<AddWebhookInput>;
};


export type MutationaddWebhook_providerArgs = {
  input: Array<AddWebhook_providerInput>;
};


export type MutationaddWebhook_providerOriginArgs = {
  input: Array<AddWebhook_providerOriginInput>;
};


export type MutationdeleteAUDITS_PACKAGEArgs = {
  filter: AUDITS_PACKAGEFilter;
};


export type MutationdeleteAUDITS_accountArgs = {
  filter: AUDITS_accountFilter;
};


export type MutationdeleteAUDITS_documentArgs = {
  filter: AUDITS_documentFilter;
};


export type MutationdeleteAUDITS_document_blockArgs = {
  filter: AUDITS_document_blockFilter;
};


export type MutationdeleteAUDITS_document_blockImageArgs = {
  filter: AUDITS_document_blockImageFilter;
};


export type MutationdeleteAUDITS_document_blockQuoteArgs = {
  filter: AUDITS_document_blockQuoteFilter;
};


export type MutationdeleteAUDITS_document_blockTableArgs = {
  filter: AUDITS_document_blockTableFilter;
};


export type MutationdeleteAUDITS_document_blockTableCellArgs = {
  filter: AUDITS_document_blockTableCellFilter;
};


export type MutationdeleteAUDITS_document_blockTableColumnArgs = {
  filter: AUDITS_document_blockTableColumnFilter;
};


export type MutationdeleteAUDITS_document_blockTableRowArgs = {
  filter: AUDITS_document_blockTableRowFilter;
};


export type MutationdeleteAUDITS_document_blockTextArgs = {
  filter: AUDITS_document_blockTextFilter;
};


export type MutationdeleteAUDITS_document_blockTitleArgs = {
  filter: AUDITS_document_blockTitleFilter;
};


export type MutationdeleteAUDITS_fileArgs = {
  filter: AUDITS_fileFilter;
};


export type MutationdeleteAUDITS_projectArgs = {
  filter: AUDITS_projectFilter;
};


export type MutationdeleteAUDITS_project_versionArgs = {
  filter: AUDITS_project_versionFilter;
};


export type MutationdeleteAUDITS_reviewArgs = {
  filter: AUDITS_reviewFilter;
};


export type MutationdeleteAUDITS_review_accountArgs = {
  filter: AUDITS_review_accountFilter;
};


export type MutationdeleteAUDITS_review_commentArgs = {
  filter: AUDITS_review_commentFilter;
};


export type MutationdeleteAccountArgs = {
  filter: AccountFilter;
};


export type MutationdeleteAccount_eventArgs = {
  filter: Account_eventFilter;
};


export type MutationdeleteAccount_logArgs = {
  filter: Account_logFilter;
};


export type MutationdeleteAccount_notificationArgs = {
  filter: Account_notificationFilter;
};


export type MutationdeleteAccount_sessionArgs = {
  filter: Account_sessionFilter;
};


export type MutationdeleteAccount_sessionConnectionArgs = {
  filter: Account_sessionConnectionFilter;
};


export type MutationdeleteAccount_sessionConnectionTaskArgs = {
  filter: Account_sessionConnectionTaskFilter;
};


export type MutationdeleteAccount_sessionTaskArgs = {
  filter: Account_sessionTaskFilter;
};


export type MutationdeleteAddressArgs = {
  filter: AddressFilter;
};


export type MutationdeleteBankArgs = {
  filter: BankFilter;
};


export type MutationdeleteBankAccountArgs = {
  filter: BankAccountFilter;
};


export type MutationdeleteCMS_PACKAGEArgs = {
  filter: CMS_PACKAGEFilter;
};


export type MutationdeleteCMS_accountArgs = {
  filter: CMS_accountFilter;
};


export type MutationdeleteCMS_appArgs = {
  filter: CMS_appFilter;
};


export type MutationdeleteCMS_appContactArgs = {
  filter: CMS_appContactFilter;
};


export type MutationdeleteCMS_authorAliasArgs = {
  filter: CMS_authorAliasFilter;
};


export type MutationdeleteCMS_contactArgs = {
  filter: CMS_contactFilter;
};


export type MutationdeleteCMS_fileArgs = {
  filter: CMS_fileFilter;
};


export type MutationdeleteCMS_websiteArgs = {
  filter: CMS_websiteFilter;
};


export type MutationdeleteCMS_website_pageArgs = {
  filter: CMS_website_pageFilter;
};


export type MutationdeleteCMS_website_page_blockArgs = {
  filter: CMS_website_page_blockFilter;
};


export type MutationdeleteCMS_website_page_blockComboArgs = {
  filter: CMS_website_page_blockComboFilter;
};


export type MutationdeleteCMS_website_page_blockImageArgs = {
  filter: CMS_website_page_blockImageFilter;
};


export type MutationdeleteCMS_website_page_blockLinkArgs = {
  filter: CMS_website_page_blockLinkFilter;
};


export type MutationdeleteCMS_website_page_blockTextArgs = {
  filter: CMS_website_page_blockTextFilter;
};


export type MutationdeleteCMS_website_page_blockTitleArgs = {
  filter: CMS_website_page_blockTitleFilter;
};


export type MutationdeleteCRM_PACKAGEArgs = {
  filter: CRM_PACKAGEFilter;
};


export type MutationdeleteCRM_accountArgs = {
  filter: CRM_accountFilter;
};


export type MutationdeleteCRM_accountContactsTableColumnArgs = {
  filter: CRM_accountContactsTableColumnFilter;
};


export type MutationdeleteCRM_accountContactsTableFilterArgs = {
  filter: CRM_accountContactsTableFilterFilter;
};


export type MutationdeleteCRM_accountEventArgs = {
  filter: CRM_accountEventFilter;
};


export type MutationdeleteCRM_actionArgs = {
  filter: CRM_actionFilter;
};


export type MutationdeleteCRM_actionCallArgs = {
  filter: CRM_actionCallFilter;
};


export type MutationdeleteCRM_actionChatArgs = {
  filter: CRM_actionChatFilter;
};


export type MutationdeleteCRM_actionEmailArgs = {
  filter: CRM_actionEmailFilter;
};


export type MutationdeleteCRM_actionMeetingArgs = {
  filter: CRM_actionMeetingFilter;
};


export type MutationdeleteCRM_areaArgs = {
  filter: CRM_areaFilter;
};


export type MutationdeleteCRM_campaignArgs = {
  filter: CRM_campaignFilter;
};


export type MutationdeleteCRM_campaignContactArgs = {
  filter: CRM_campaignContactFilter;
};


export type MutationdeleteCRM_campaignContactEventArgs = {
  filter: CRM_campaignContactEventFilter;
};


export type MutationdeleteCRM_campaignDeliverArgs = {
  filter: CRM_campaignDeliverFilter;
};


export type MutationdeleteCRM_campaignEmailTemplateArgs = {
  filter: CRM_campaignEmailTemplateFilter;
};


export type MutationdeleteCRM_contactArgs = {
  filter: CRM_contactFilter;
};


export type MutationdeleteCRM_contactActionArgs = {
  filter: CRM_contactActionFilter;
};


export type MutationdeleteCRM_contactActionCallArgs = {
  filter: CRM_contactActionCallFilter;
};


export type MutationdeleteCRM_contactActionChatArgs = {
  filter: CRM_contactActionChatFilter;
};


export type MutationdeleteCRM_contactActionEmailArgs = {
  filter: CRM_contactActionEmailFilter;
};


export type MutationdeleteCRM_contactActionMeetingArgs = {
  filter: CRM_contactActionMeetingFilter;
};


export type MutationdeleteCRM_contactActionStatusChangeArgs = {
  filter: CRM_contactActionStatusChangeFilter;
};


export type MutationdeleteCRM_contactAnswerArgs = {
  filter: CRM_contactAnswerFilter;
};


export type MutationdeleteCRM_contactInputArgs = {
  filter: CRM_contactInputFilter;
};


export type MutationdeleteCRM_contactInputSubStatusArgs = {
  filter: CRM_contactInputSubStatusFilter;
};


export type MutationdeleteCRM_contactInputValueArgs = {
  filter: CRM_contactInputValueFilter;
};


export type MutationdeleteCRM_contactListArgs = {
  filter: CRM_contactListFilter;
};


export type MutationdeleteCRM_emailTemplateArgs = {
  filter: CRM_emailTemplateFilter;
};


export type MutationdeleteCRM_eventArgs = {
  filter: CRM_eventFilter;
};


export type MutationdeleteCRM_funnelArgs = {
  filter: CRM_funnelFilter;
};


export type MutationdeleteCRM_funnelActionArgs = {
  filter: CRM_funnelActionFilter;
};


export type MutationdeleteCRM_funnelStatusArgs = {
  filter: CRM_funnelStatusFilter;
};


export type MutationdeleteCRM_opportunityLogArgs = {
  filter: CRM_opportunityLogFilter;
};


export type MutationdeleteCRM_opportunityPaymentPlanItemArgs = {
  filter: CRM_opportunityPaymentPlanItemFilter;
};


export type MutationdeleteCRM_overviewArgs = {
  filter: CRM_overviewFilter;
};


export type MutationdeleteCRM_proposalArgs = {
  filter: CRM_proposalFilter;
};


export type MutationdeleteCRM_roleArgs = {
  filter: CRM_roleFilter;
};


export type MutationdeleteCRM_socialMediaCampaignArgs = {
  filter: CRM_socialMediaCampaignFilter;
};


export type MutationdeleteCRM_socialMediaCampaign_mediaArgs = {
  filter: CRM_socialMediaCampaign_mediaFilter;
};


export type MutationdeleteCRM_socialMediaCampaign_postArgs = {
  filter: CRM_socialMediaCampaign_postFilter;
};


export type MutationdeleteCRM_sourceArgs = {
  filter: CRM_sourceFilter;
};


export type MutationdeleteCRM_sourceCategoryArgs = {
  filter: CRM_sourceCategoryFilter;
};


export type MutationdeleteCRM_sourceFormArgs = {
  filter: CRM_sourceFormFilter;
};


export type MutationdeleteCRM_sourceFormFieldArgs = {
  filter: CRM_sourceFormFieldFilter;
};


export type MutationdeleteCRM_sourceFormReasonArgs = {
  filter: CRM_sourceFormReasonFilter;
};


export type MutationdeleteCRM_sourceForm_emailTemplateArgs = {
  filter: CRM_sourceForm_emailTemplateFilter;
};


export type MutationdeleteCRM_teamArgs = {
  filter: CRM_teamFilter;
};


export type MutationdeleteCRM_teamAccountArgs = {
  filter: CRM_teamAccountFilter;
};


export type MutationdeleteCRM_teamActionArgs = {
  filter: CRM_teamActionFilter;
};


export type MutationdeleteCRM_teamActionBoardEffectArgs = {
  filter: CRM_teamActionBoardEffectFilter;
};


export type MutationdeleteCRM_teamBoardArgs = {
  filter: CRM_teamBoardFilter;
};


export type MutationdeleteCRM_teamBoardItemArgs = {
  filter: CRM_teamBoardItemFilter;
};


export type MutationdeleteCRM_teamBoardStatusArgs = {
  filter: CRM_teamBoardStatusFilter;
};


export type MutationdeleteCRM_teamBoardSubStatusArgs = {
  filter: CRM_teamBoardSubStatusFilter;
};


export type MutationdeleteCRM_teamBoardTaskArgs = {
  filter: CRM_teamBoardTaskFilter;
};


export type MutationdeleteChatbots_PACKAGEArgs = {
  filter: Chatbots_PACKAGEFilter;
};


export type MutationdeleteChatbots_accountArgs = {
  filter: Chatbots_accountFilter;
};


export type MutationdeleteChatbots_areaArgs = {
  filter: Chatbots_areaFilter;
};


export type MutationdeleteChatbots_areaAccountArgs = {
  filter: Chatbots_areaAccountFilter;
};


export type MutationdeleteChatbots_externalAPIArgs = {
  filter: Chatbots_externalAPIFilter;
};


export type MutationdeleteChatbots_externalAPI_fieldArgs = {
  filter: Chatbots_externalAPI_fieldFilter;
};


export type MutationdeleteChatbots_processArgs = {
  filter: Chatbots_processFilter;
};


export type MutationdeleteChatbots_processAPIArgs = {
  filter: Chatbots_processAPIFilter;
};


export type MutationdeleteChatbots_processAccountArgs = {
  filter: Chatbots_processAccountFilter;
};


export type MutationdeleteChatbots_processActionArgs = {
  filter: Chatbots_processActionFilter;
};


export type MutationdeleteChatbots_processButtonArgs = {
  filter: Chatbots_processButtonFilter;
};


export type MutationdeleteChatbots_processFieldArgs = {
  filter: Chatbots_processFieldFilter;
};


export type MutationdeleteChatbots_processFilterParamArgs = {
  filter: Chatbots_processFilterParamFilter;
};


export type MutationdeleteChatbots_processOperationArgs = {
  filter: Chatbots_processOperationFilter;
};


export type MutationdeleteChatbots_processStatusArgs = {
  filter: Chatbots_processStatusFilter;
};


export type MutationdeleteChatbots_processTableHeadArgs = {
  filter: Chatbots_processTableHeadFilter;
};


export type MutationdeleteChatbots_processTableHeadConfigArgs = {
  filter: Chatbots_processTableHeadConfigFilter;
};


export type MutationdeleteChatbots_processTableMatchReplaceArgs = {
  filter: Chatbots_processTableMatchReplaceFilter;
};


export type MutationdeleteChatbots_processValidationArgs = {
  filter: Chatbots_processValidationFilter;
};


export type MutationdeleteChatbots_processValidationOperationArgs = {
  filter: Chatbots_processValidationOperationFilter;
};


export type MutationdeleteChatbots_processValidationOperation_documentArgs = {
  filter: Chatbots_processValidationOperation_documentFilter;
};


export type MutationdeleteChatbots_processValidationOperation_document_fileArgs = {
  filter: Chatbots_processValidationOperation_document_fileFilter;
};


export type MutationdeleteChatbots_processsValidationOperation_fieldArgs = {
  filter: Chatbots_processsValidationOperation_fieldFilter;
};


export type MutationdeleteChatbots_validationArgs = {
  filter: Chatbots_validationFilter;
};


export type MutationdeleteChatbots_validationDocumentArgs = {
  filter: Chatbots_validationDocumentFilter;
};


export type MutationdeleteChatbots_validationDocument_fileArgs = {
  filter: Chatbots_validationDocument_fileFilter;
};


export type MutationdeleteChatbots_validationFieldArgs = {
  filter: Chatbots_validationFieldFilter;
};


export type MutationdeleteCompanySectorArgs = {
  filter: CompanySectorFilter;
};


export type MutationdeleteContactArgs = {
  filter: ContactFilter;
};


export type MutationdeleteContact_billingInfoArgs = {
  filter: Contact_billingInfoFilter;
};


export type MutationdeleteContact_businessInfoArgs = {
  filter: Contact_businessInfoFilter;
};


export type MutationdeleteContact_emailArgs = {
  filter: Contact_emailFilter;
};


export type MutationdeleteContact_importLogArgs = {
  filter: Contact_importLogFilter;
};


export type MutationdeleteContact_jobPositionArgs = {
  filter: Contact_jobPositionFilter;
};


export type MutationdeleteContact_phoneArgs = {
  filter: Contact_phoneFilter;
};


export type MutationdeleteCountryArgs = {
  filter: CountryFilter;
};


export type MutationdeleteCurrencyArgs = {
  filter: CurrencyFilter;
};


export type MutationdeleteDynamicTableArgs = {
  filter: DynamicTableFilter;
};


export type MutationdeleteDynamicTable_accountArgs = {
  filter: DynamicTable_accountFilter;
};


export type MutationdeleteDynamicTable_headArgs = {
  filter: DynamicTable_headFilter;
};


export type MutationdeleteDynamicTable_headValueBooleanOptionsArgs = {
  filter: DynamicTable_headValueBooleanOptionsFilter;
};


export type MutationdeleteDynamicTable_headValueCurrencyOptionsArgs = {
  filter: DynamicTable_headValueCurrencyOptionsFilter;
};


export type MutationdeleteDynamicTable_headValueDateOptionsArgs = {
  filter: DynamicTable_headValueDateOptionsFilter;
};


export type MutationdeleteDynamicTable_headValueLinkOptionsArgs = {
  filter: DynamicTable_headValueLinkOptionsFilter;
};


export type MutationdeleteDynamicTable_headValueNumberOptionsArgs = {
  filter: DynamicTable_headValueNumberOptionsFilter;
};


export type MutationdeleteE360AppArgs = {
  filter: E360AppFilter;
};


export type MutationdeleteE360App_domainArgs = {
  filter: E360App_domainFilter;
};


export type MutationdeleteE360App_locationArgs = {
  filter: E360App_locationFilter;
};


export type MutationdeleteE360App_locationFileArgs = {
  filter: E360App_locationFileFilter;
};


export type MutationdeleteE360App_locationScheduleArgs = {
  filter: E360App_locationScheduleFilter;
};


export type MutationdeleteE360App_location_appoinmentArgs = {
  filter: E360App_location_appoinmentFilter;
};


export type MutationdeleteE360App_location_appoinmentLotsArgs = {
  filter: E360App_location_appoinmentLotsFilter;
};


export type MutationdeleteE360App_location_areaArgs = {
  filter: E360App_location_areaFilter;
};


export type MutationdeleteE360App_location_area_resourceArgs = {
  filter: E360App_location_area_resourceFilter;
};


export type MutationdeleteE360App_location_area_workShiftArgs = {
  filter: E360App_location_area_workShiftFilter;
};


export type MutationdeleteE360App_location_menuArgs = {
  filter: E360App_location_menuFilter;
};


export type MutationdeleteE360App_location_menu_comboArgs = {
  filter: E360App_location_menu_comboFilter;
};


export type MutationdeleteE360App_location_menu_itemArgs = {
  filter: E360App_location_menu_itemFilter;
};


export type MutationdeleteE360App_location_menu_sectionArgs = {
  filter: E360App_location_menu_sectionFilter;
};


export type MutationdeleteE360App_location_menu_section_itemArgs = {
  filter: E360App_location_menu_section_itemFilter;
};


export type MutationdeleteE360App_location_menu_subSectionArgs = {
  filter: E360App_location_menu_subSectionFilter;
};


export type MutationdeleteE360App_location_menu_tagArgs = {
  filter: E360App_location_menu_tagFilter;
};


export type MutationdeleteE360App_notificationArgs = {
  filter: E360App_notificationFilter;
};


export type MutationdeleteE360App_organizationArgs = {
  filter: E360App_organizationFilter;
};


export type MutationdeleteE360App_organization_userArgs = {
  filter: E360App_organization_userFilter;
};


export type MutationdeleteE360App_partnerArgs = {
  filter: E360App_partnerFilter;
};


export type MutationdeleteE360App_partner_webhookArgs = {
  filter: E360App_partner_webhookFilter;
};


export type MutationdeleteE360App_shopArgs = {
  filter: E360App_shopFilter;
};


export type MutationdeleteE360App_shop_contractArgs = {
  filter: E360App_shop_contractFilter;
};


export type MutationdeleteE360App_shop_customer_contractArgs = {
  filter: E360App_shop_customer_contractFilter;
};


export type MutationdeleteE360App_shop_customer_contractServiceArgs = {
  filter: E360App_shop_customer_contractServiceFilter;
};


export type MutationdeleteE360App_shop_customer_contract_renewalArgs = {
  filter: E360App_shop_customer_contract_renewalFilter;
};


export type MutationdeleteE360App_shop_operationArgs = {
  filter: E360App_shop_operationFilter;
};


export type MutationdeleteE360App_shop_partner_contractArgs = {
  filter: E360App_shop_partner_contractFilter;
};


export type MutationdeleteE360App_shop_productArgs = {
  filter: E360App_shop_productFilter;
};


export type MutationdeleteE360App_shop_productItemArgs = {
  filter: E360App_shop_productItemFilter;
};


export type MutationdeleteE360App_shop_productServiceArgs = {
  filter: E360App_shop_productServiceFilter;
};


export type MutationdeleteE360App_shop_promoProductArgs = {
  filter: E360App_shop_promoProductFilter;
};


export type MutationdeleteE360App_shop_promotionArgs = {
  filter: E360App_shop_promotionFilter;
};


export type MutationdeleteE360App_shop_promotionCodeArgs = {
  filter: E360App_shop_promotionCodeFilter;
};


export type MutationdeleteE360App_shop_purchaseArgs = {
  filter: E360App_shop_purchaseFilter;
};


export type MutationdeleteE360App_shop_purchaseProviderEventArgs = {
  filter: E360App_shop_purchaseProviderEventFilter;
};


export type MutationdeleteE360App_stablishmentArgs = {
  filter: E360App_stablishmentFilter;
};


export type MutationdeleteE360App_stablishment_userArgs = {
  filter: E360App_stablishment_userFilter;
};


export type MutationdeleteE360App_userArgs = {
  filter: E360App_userFilter;
};


export type MutationdeleteE360App_userLogArgs = {
  filter: E360App_userLogFilter;
};


export type MutationdeleteE360App_userSessionArgs = {
  filter: E360App_userSessionFilter;
};


export type MutationdeleteE360App_userSessionConnectionArgs = {
  filter: E360App_userSessionConnectionFilter;
};


export type MutationdeleteE360App_userSessionConnectionTaskArgs = {
  filter: E360App_userSessionConnectionTaskFilter;
};


export type MutationdeleteE360App_userSessionTaskArgs = {
  filter: E360App_userSessionTaskFilter;
};


export type MutationdeleteE360App_user_notificationArgs = {
  filter: E360App_user_notificationFilter;
};


export type MutationdeleteE360App_user_partnerArgs = {
  filter: E360App_user_partnerFilter;
};


export type MutationdeleteE360Storage_fileArgs = {
  filter: E360Storage_fileFilter;
};


export type MutationdeleteERP_PACKAGEArgs = {
  filter: ERP_PACKAGEFilter;
};


export type MutationdeleteERP_accountArgs = {
  filter: ERP_accountFilter;
};


export type MutationdeleteERP_accountEventArgs = {
  filter: ERP_accountEventFilter;
};


export type MutationdeleteERP_accountingAccountArgs = {
  filter: ERP_accountingAccountFilter;
};


export type MutationdeleteERP_contactArgs = {
  filter: ERP_contactFilter;
};


export type MutationdeleteERP_contactActionArgs = {
  filter: ERP_contactActionFilter;
};


export type MutationdeleteERP_contactSerieArgs = {
  filter: ERP_contactSerieFilter;
};


export type MutationdeleteERP_eventArgs = {
  filter: ERP_eventFilter;
};


export type MutationdeleteERP_invoiceArgs = {
  filter: ERP_invoiceFilter;
};


export type MutationdeleteERP_invoiceItemArgs = {
  filter: ERP_invoiceItemFilter;
};


export type MutationdeleteERP_invoiceNoteArgs = {
  filter: ERP_invoiceNoteFilter;
};


export type MutationdeleteERP_organizationBillingInfoArgs = {
  filter: ERP_organizationBillingInfoFilter;
};


export type MutationdeleteERP_paymentPlanArgs = {
  filter: ERP_paymentPlanFilter;
};


export type MutationdeleteERP_productArgs = {
  filter: ERP_productFilter;
};


export type MutationdeleteERP_resourceArgs = {
  filter: ERP_resourceFilter;
};


export type MutationdeleteERP_roleArgs = {
  filter: ERP_roleFilter;
};


export type MutationdeleteERP_seatArgs = {
  filter: ERP_seatFilter;
};


export type MutationdeleteERP_seatLineArgs = {
  filter: ERP_seatLineFilter;
};


export type MutationdeleteERP_taxArgs = {
  filter: ERP_taxFilter;
};


export type MutationdeleteERP_withholdingArgs = {
  filter: ERP_withholdingFilter;
};


export type MutationdeleteEmailArgs = {
  filter: EmailFilter;
};


export type MutationdeleteEmailEditorArgs = {
  filter: EmailEditorFilter;
};


export type MutationdeleteEmailEditor_templateArgs = {
  filter: EmailEditor_templateFilter;
};


export type MutationdeleteEmail_attachmentArgs = {
  filter: Email_attachmentFilter;
};


export type MutationdeleteEmail_fromArgs = {
  filter: Email_fromFilter;
};


export type MutationdeleteEmail_toArgs = {
  filter: Email_toFilter;
};


export type MutationdeleteEventArgs = {
  filter: EventFilter;
};


export type MutationdeleteExternalAPI_keyArgs = {
  filter: ExternalAPI_keyFilter;
};


export type MutationdeleteFormBuilderArgs = {
  filter: FormBuilderFilter;
};


export type MutationdeleteFormBuilder_formArgs = {
  filter: FormBuilder_formFilter;
};


export type MutationdeleteFormBuilder_inputArgs = {
  filter: FormBuilder_inputFilter;
};


export type MutationdeleteFormBuilder_inputBooleanArgs = {
  filter: FormBuilder_inputBooleanFilter;
};


export type MutationdeleteFormBuilder_inputMultipleChoiceArgs = {
  filter: FormBuilder_inputMultipleChoiceFilter;
};


export type MutationdeleteFormBuilder_inputMultipleChoiceOptionArgs = {
  filter: FormBuilder_inputMultipleChoiceOptionFilter;
};


export type MutationdeleteFormBuilder_inputNumberArgs = {
  filter: FormBuilder_inputNumberFilter;
};


export type MutationdeleteFormBuilder_inputTextArgs = {
  filter: FormBuilder_inputTextFilter;
};


export type MutationdeleteGeneralAccountingAccountArgs = {
  filter: GeneralAccountingAccountFilter;
};


export type MutationdeleteImportProcessArgs = {
  filter: ImportProcessFilter;
};


export type MutationdeleteImportProcess_elementFieldArgs = {
  filter: ImportProcess_elementFieldFilter;
};


export type MutationdeleteImportProcess_itemArgs = {
  filter: ImportProcess_itemFilter;
};


export type MutationdeleteImportProcess_itemErrorArgs = {
  filter: ImportProcess_itemErrorFilter;
};


export type MutationdeleteImportProcess_itemValueArgs = {
  filter: ImportProcess_itemValueFilter;
};


export type MutationdeleteImportProcess_matchArgs = {
  filter: ImportProcess_matchFilter;
};


export type MutationdeleteImportProcess_sourceValueArgs = {
  filter: ImportProcess_sourceValueFilter;
};


export type MutationdeleteInboxArgs = {
  filter: InboxFilter;
};


export type MutationdeleteInbox_itemArgs = {
  filter: Inbox_itemFilter;
};


export type MutationdeleteIntegrationsArgs = {
  filter: IntegrationsFilter;
};


export type MutationdeleteIntegrations_Digilab_ProviderArgs = {
  filter: Integrations_Digilab_ProviderFilter;
};


export type MutationdeleteIntegrations_Google_Analytics_ProviderArgs = {
  filter: Integrations_Google_Analytics_ProviderFilter;
};


export type MutationdeleteIntegrations_Google_ProviderArgs = {
  filter: Integrations_Google_ProviderFilter;
};


export type MutationdeleteIntegrations_Link_Mobility_ProviderArgs = {
  filter: Integrations_Link_Mobility_ProviderFilter;
};


export type MutationdeleteIntegrations_LinkedIn_ProviderArgs = {
  filter: Integrations_LinkedIn_ProviderFilter;
};


export type MutationdeleteIntegrations_MSFT_MeetingArgs = {
  filter: Integrations_MSFT_MeetingFilter;
};


export type MutationdeleteIntegrations_MSFT_ProviderArgs = {
  filter: Integrations_MSFT_ProviderFilter;
};


export type MutationdeleteIntegrations_Meta_ProviderArgs = {
  filter: Integrations_Meta_ProviderFilter;
};


export type MutationdeleteIntegrations_SendGrid_ProviderArgs = {
  filter: Integrations_SendGrid_ProviderFilter;
};


export type MutationdeleteIntegrations_Sendgrid_emailEventArgs = {
  filter: Integrations_Sendgrid_emailEventFilter;
};


export type MutationdeleteIntegrations_accountArgs = {
  filter: Integrations_accountFilter;
};


export type MutationdeleteIntegrations_carrefour_operartionsLogArgs = {
  filter: Integrations_carrefour_operartionsLogFilter;
};


export type MutationdeleteJobPositionArgs = {
  filter: JobPositionFilter;
};


export type MutationdeleteLMS_PACKAGEArgs = {
  filter: LMS_PACKAGEFilter;
};


export type MutationdeleteLMS_accountArgs = {
  filter: LMS_accountFilter;
};


export type MutationdeleteLMS_accountLogArgs = {
  filter: LMS_accountLogFilter;
};


export type MutationdeleteLMS_accountLogDetailArgs = {
  filter: LMS_accountLogDetailFilter;
};


export type MutationdeleteLMS_blockArgs = {
  filter: LMS_blockFilter;
};


export type MutationdeleteLMS_blockStudentProgressArgs = {
  filter: LMS_blockStudentProgressFilter;
};


export type MutationdeleteLMS_contactArgs = {
  filter: LMS_contactFilter;
};


export type MutationdeleteLMS_courseArgs = {
  filter: LMS_courseFilter;
};


export type MutationdeleteLMS_courseCategoryArgs = {
  filter: LMS_courseCategoryFilter;
};


export type MutationdeleteLMS_courseStudentProgressArgs = {
  filter: LMS_courseStudentProgressFilter;
};


export type MutationdeleteLMS_courseVersionArgs = {
  filter: LMS_courseVersionFilter;
};


export type MutationdeleteLMS_formArgs = {
  filter: LMS_formFilter;
};


export type MutationdeleteLMS_formStudentProgressArgs = {
  filter: LMS_formStudentProgressFilter;
};


export type MutationdeleteLMS_groupArgs = {
  filter: LMS_groupFilter;
};


export type MutationdeleteLMS_groupAccountArgs = {
  filter: LMS_groupAccountFilter;
};


export type MutationdeleteLMS_groupAccountFormAnswerArgs = {
  filter: LMS_groupAccountFormAnswerFilter;
};


export type MutationdeleteLMS_groupAccountFormAttemptArgs = {
  filter: LMS_groupAccountFormAttemptFilter;
};


export type MutationdeleteLMS_groupBlockConfigArgs = {
  filter: LMS_groupBlockConfigFilter;
};


export type MutationdeleteLMS_groupCourseConfigArgs = {
  filter: LMS_groupCourseConfigFilter;
};


export type MutationdeleteLMS_groupFormConfigArgs = {
  filter: LMS_groupFormConfigFilter;
};


export type MutationdeleteLMS_groupFormConfigCalculationArgs = {
  filter: LMS_groupFormConfigCalculationFilter;
};


export type MutationdeleteLMS_groupFormConfigCalculationRangeArgs = {
  filter: LMS_groupFormConfigCalculationRangeFilter;
};


export type MutationdeleteLMS_groupLessonConfigArgs = {
  filter: LMS_groupLessonConfigFilter;
};


export type MutationdeleteLMS_groupLessonMeetingConfigArgs = {
  filter: LMS_groupLessonMeetingConfigFilter;
};


export type MutationdeleteLMS_groupLessonTeacherConfigArgs = {
  filter: LMS_groupLessonTeacherConfigFilter;
};


export type MutationdeleteLMS_groupResourceConfigArgs = {
  filter: LMS_groupResourceConfigFilter;
};


export type MutationdeleteLMS_lessonArgs = {
  filter: LMS_lessonFilter;
};


export type MutationdeleteLMS_lessonStudentProgressArgs = {
  filter: LMS_lessonStudentProgressFilter;
};


export type MutationdeleteLMS_meetingStudentProgressArgs = {
  filter: LMS_meetingStudentProgressFilter;
};


export type MutationdeleteLMS_productArgs = {
  filter: LMS_productFilter;
};


export type MutationdeleteLMS_resourceArgs = {
  filter: LMS_resourceFilter;
};


export type MutationdeleteLMS_resourceStudentProgressArgs = {
  filter: LMS_resourceStudentProgressFilter;
};


export type MutationdeleteLMS_resourceStudentVideoReportArgs = {
  filter: LMS_resourceStudentVideoReportFilter;
};


export type MutationdeleteLMS_resourceStudentVideoReport_intervalArgs = {
  filter: LMS_resourceStudentVideoReport_intervalFilter;
};


export type MutationdeleteLMS_sectionArgs = {
  filter: LMS_sectionFilter;
};


export type MutationdeleteLMS_thumbnailArgs = {
  filter: LMS_thumbnailFilter;
};


export type MutationdeleteLogger_logArgs = {
  filter: Logger_logFilter;
};


export type MutationdeleteLoginProviderArgs = {
  filter: LoginProviderFilter;
};


export type MutationdeleteMeetingArgs = {
  filter: MeetingFilter;
};


export type MutationdeleteMeetingAccountArgs = {
  filter: MeetingAccountFilter;
};


export type MutationdeleteMeetingDoctors_userArgs = {
  filter: MeetingDoctors_userFilter;
};


export type MutationdeleteMeetingProviderArgs = {
  filter: MeetingProviderFilter;
};


export type MutationdeleteNavigationArgs = {
  filter: NavigationFilter;
};


export type MutationdeleteNavigation_routeArgs = {
  filter: Navigation_routeFilter;
};


export type MutationdeleteORG_PACKAGEArgs = {
  filter: ORG_PACKAGEFilter;
};


export type MutationdeleteORG_accountArgs = {
  filter: ORG_accountFilter;
};


export type MutationdeleteORG_roleArgs = {
  filter: ORG_roleFilter;
};


export type MutationdeleteOrgArgs = {
  filter: OrgFilter;
};


export type MutationdeleteOrg360Args = {
  filter: Org360Filter;
};


export type MutationdeleteOrg360_themeArgs = {
  filter: Org360_themeFilter;
};


export type MutationdeleteOrgDomainArgs = {
  filter: OrgDomainFilter;
};


export type MutationdeleteOrganization_departmentArgs = {
  filter: Organization_departmentFilter;
};


export type MutationdeletePETPASS_APPArgs = {
  filter: PETPASS_APPFilter;
};


export type MutationdeletePETPASS_bannerArgs = {
  filter: PETPASS_bannerFilter;
};


export type MutationdeletePETPASS_contractArgs = {
  filter: PETPASS_contractFilter;
};


export type MutationdeletePETPASS_fileArgs = {
  filter: PETPASS_fileFilter;
};


export type MutationdeletePETPASS_insuranceArgs = {
  filter: PETPASS_insuranceFilter;
};


export type MutationdeletePETPASS_insurance_companyArgs = {
  filter: PETPASS_insurance_companyFilter;
};


export type MutationdeletePETPASS_locationArgs = {
  filter: PETPASS_locationFilter;
};


export type MutationdeletePETPASS_locationPolicyArgs = {
  filter: PETPASS_locationPolicyFilter;
};


export type MutationdeletePETPASS_locatorArgs = {
  filter: PETPASS_locatorFilter;
};


export type MutationdeletePETPASS_partnerArgs = {
  filter: PETPASS_partnerFilter;
};


export type MutationdeletePETPASS_petArgs = {
  filter: PETPASS_petFilter;
};


export type MutationdeletePETPASS_petTokenArgs = {
  filter: PETPASS_petTokenFilter;
};


export type MutationdeletePETPASS_pet_external_insuranceArgs = {
  filter: PETPASS_pet_external_insuranceFilter;
};


export type MutationdeletePETPASS_pet_insuranceArgs = {
  filter: PETPASS_pet_insuranceFilter;
};


export type MutationdeletePETPASS_productArgs = {
  filter: PETPASS_productFilter;
};


export type MutationdeletePETPASS_purchaseArgs = {
  filter: PETPASS_purchaseFilter;
};


export type MutationdeletePETPASS_sosArgs = {
  filter: PETPASS_sosFilter;
};


export type MutationdeletePETPASS_sos_eventArgs = {
  filter: PETPASS_sos_eventFilter;
};


export type MutationdeletePETPASS_userArgs = {
  filter: PETPASS_userFilter;
};


export type MutationdeletePersonArgs = {
  filter: PersonFilter;
};


export type MutationdeletePetArgs = {
  filter: PetFilter;
};


export type MutationdeletePetBreedArgs = {
  filter: PetBreedFilter;
};


export type MutationdeletePetTypeArgs = {
  filter: PetTypeFilter;
};


export type MutationdeletePet_fileArgs = {
  filter: Pet_fileFilter;
};


export type MutationdeletePet_vaccinationArgs = {
  filter: Pet_vaccinationFilter;
};


export type MutationdeletePet_vaccineArgs = {
  filter: Pet_vaccineFilter;
};


export type MutationdeleteProductArgs = {
  filter: ProductFilter;
};


export type MutationdeleteProduct_categoryArgs = {
  filter: Product_categoryFilter;
};


export type MutationdeleteProduct_itemArgs = {
  filter: Product_itemFilter;
};


export type MutationdeleteProduct_paymentPlanItemArgs = {
  filter: Product_paymentPlanItemFilter;
};


export type MutationdeleteProposalArgs = {
  filter: ProposalFilter;
};


export type MutationdeleteProposal_resourceArgs = {
  filter: Proposal_resourceFilter;
};


export type MutationdeleteProposal_stakeholderArgs = {
  filter: Proposal_stakeholderFilter;
};


export type MutationdeleteProposal_stakeholderResourceArgs = {
  filter: Proposal_stakeholderResourceFilter;
};


export type MutationdeleteProposal_stakeholderTokenArgs = {
  filter: Proposal_stakeholderTokenFilter;
};


export type MutationdeleteResourceArgs = {
  filter: ResourceFilter;
};


export type MutationdeleteResourceTokenArgs = {
  filter: ResourceTokenFilter;
};


export type MutationdeleteSMSArgs = {
  filter: SMSFilter;
};


export type MutationdeleteSchedulerArgs = {
  filter: SchedulerFilter;
};


export type MutationdeleteScheduler_actionArgs = {
  filter: Scheduler_actionFilter;
};


export type MutationdeleteScheduler_externalActionArgs = {
  filter: Scheduler_externalActionFilter;
};


export type MutationdeleteScheduler_managerActionArgs = {
  filter: Scheduler_managerActionFilter;
};


export type MutationdeleteScheduler_taskArgs = {
  filter: Scheduler_taskFilter;
};


export type MutationdeleteSearchIndex_contactArgs = {
  filter: SearchIndex_contactFilter;
};


export type MutationdeleteServiceAccountArgs = {
  filter: ServiceAccountFilter;
};


export type MutationdeleteShortUrlArgs = {
  filter: ShortUrlFilter;
};


export type MutationdeleteShortUrl_domainArgs = {
  filter: ShortUrl_domainFilter;
};


export type MutationdeleteStorageArgs = {
  filter: StorageFilter;
};


export type MutationdeleteStorage_fileArgs = {
  filter: Storage_fileFilter;
};


export type MutationdeleteStorage_fileByDemandArgs = {
  filter: Storage_fileByDemandFilter;
};


export type MutationdeleteStorage_fileOperationTokenArgs = {
  filter: Storage_fileOperationTokenFilter;
};


export type MutationdeleteTwoFactorTokenArgs = {
  filter: TwoFactorTokenFilter;
};


export type MutationdeleteUnitArgs = {
  filter: UnitFilter;
};


export type MutationdeleteUserArgs = {
  filter: UserFilter;
};


export type MutationdeleteUser_tokenArgs = {
  filter: User_tokenFilter;
};


export type MutationdeleteVET_PACKAGEArgs = {
  filter: VET_PACKAGEFilter;
};


export type MutationdeleteVET_accountArgs = {
  filter: VET_accountFilter;
};


export type MutationdeleteVET_contactArgs = {
  filter: VET_contactFilter;
};


export type MutationdeleteVET_petArgs = {
  filter: VET_petFilter;
};


export type MutationdeleteWebhookArgs = {
  filter: WebhookFilter;
};


export type MutationdeleteWebhook_providerArgs = {
  filter: Webhook_providerFilter;
};


export type MutationdeleteWebhook_providerOriginArgs = {
  filter: Webhook_providerOriginFilter;
};


export type MutationupdateAUDITS_PACKAGEArgs = {
  input: UpdateAUDITS_PACKAGEInput;
};


export type MutationupdateAUDITS_accountArgs = {
  input: UpdateAUDITS_accountInput;
};


export type MutationupdateAUDITS_documentArgs = {
  input: UpdateAUDITS_documentInput;
};


export type MutationupdateAUDITS_document_blockArgs = {
  input: UpdateAUDITS_document_blockInput;
};


export type MutationupdateAUDITS_document_blockImageArgs = {
  input: UpdateAUDITS_document_blockImageInput;
};


export type MutationupdateAUDITS_document_blockQuoteArgs = {
  input: UpdateAUDITS_document_blockQuoteInput;
};


export type MutationupdateAUDITS_document_blockTableArgs = {
  input: UpdateAUDITS_document_blockTableInput;
};


export type MutationupdateAUDITS_document_blockTableCellArgs = {
  input: UpdateAUDITS_document_blockTableCellInput;
};


export type MutationupdateAUDITS_document_blockTableColumnArgs = {
  input: UpdateAUDITS_document_blockTableColumnInput;
};


export type MutationupdateAUDITS_document_blockTableRowArgs = {
  input: UpdateAUDITS_document_blockTableRowInput;
};


export type MutationupdateAUDITS_document_blockTextArgs = {
  input: UpdateAUDITS_document_blockTextInput;
};


export type MutationupdateAUDITS_document_blockTitleArgs = {
  input: UpdateAUDITS_document_blockTitleInput;
};


export type MutationupdateAUDITS_fileArgs = {
  input: UpdateAUDITS_fileInput;
};


export type MutationupdateAUDITS_projectArgs = {
  input: UpdateAUDITS_projectInput;
};


export type MutationupdateAUDITS_project_versionArgs = {
  input: UpdateAUDITS_project_versionInput;
};


export type MutationupdateAUDITS_reviewArgs = {
  input: UpdateAUDITS_reviewInput;
};


export type MutationupdateAUDITS_review_accountArgs = {
  input: UpdateAUDITS_review_accountInput;
};


export type MutationupdateAUDITS_review_commentArgs = {
  input: UpdateAUDITS_review_commentInput;
};


export type MutationupdateAccountArgs = {
  input: UpdateAccountInput;
};


export type MutationupdateAccount_eventArgs = {
  input: UpdateAccount_eventInput;
};


export type MutationupdateAccount_logArgs = {
  input: UpdateAccount_logInput;
};


export type MutationupdateAccount_notificationArgs = {
  input: UpdateAccount_notificationInput;
};


export type MutationupdateAccount_sessionArgs = {
  input: UpdateAccount_sessionInput;
};


export type MutationupdateAccount_sessionConnectionArgs = {
  input: UpdateAccount_sessionConnectionInput;
};


export type MutationupdateAccount_sessionConnectionTaskArgs = {
  input: UpdateAccount_sessionConnectionTaskInput;
};


export type MutationupdateAccount_sessionTaskArgs = {
  input: UpdateAccount_sessionTaskInput;
};


export type MutationupdateAddressArgs = {
  input: UpdateAddressInput;
};


export type MutationupdateBankArgs = {
  input: UpdateBankInput;
};


export type MutationupdateBankAccountArgs = {
  input: UpdateBankAccountInput;
};


export type MutationupdateCMS_PACKAGEArgs = {
  input: UpdateCMS_PACKAGEInput;
};


export type MutationupdateCMS_accountArgs = {
  input: UpdateCMS_accountInput;
};


export type MutationupdateCMS_appArgs = {
  input: UpdateCMS_appInput;
};


export type MutationupdateCMS_appContactArgs = {
  input: UpdateCMS_appContactInput;
};


export type MutationupdateCMS_authorAliasArgs = {
  input: UpdateCMS_authorAliasInput;
};


export type MutationupdateCMS_contactArgs = {
  input: UpdateCMS_contactInput;
};


export type MutationupdateCMS_fileArgs = {
  input: UpdateCMS_fileInput;
};


export type MutationupdateCMS_websiteArgs = {
  input: UpdateCMS_websiteInput;
};


export type MutationupdateCMS_website_pageArgs = {
  input: UpdateCMS_website_pageInput;
};


export type MutationupdateCMS_website_page_blockArgs = {
  input: UpdateCMS_website_page_blockInput;
};


export type MutationupdateCMS_website_page_blockComboArgs = {
  input: UpdateCMS_website_page_blockComboInput;
};


export type MutationupdateCMS_website_page_blockImageArgs = {
  input: UpdateCMS_website_page_blockImageInput;
};


export type MutationupdateCMS_website_page_blockLinkArgs = {
  input: UpdateCMS_website_page_blockLinkInput;
};


export type MutationupdateCMS_website_page_blockTextArgs = {
  input: UpdateCMS_website_page_blockTextInput;
};


export type MutationupdateCMS_website_page_blockTitleArgs = {
  input: UpdateCMS_website_page_blockTitleInput;
};


export type MutationupdateCRM_PACKAGEArgs = {
  input: UpdateCRM_PACKAGEInput;
};


export type MutationupdateCRM_accountArgs = {
  input: UpdateCRM_accountInput;
};


export type MutationupdateCRM_accountContactsTableColumnArgs = {
  input: UpdateCRM_accountContactsTableColumnInput;
};


export type MutationupdateCRM_accountContactsTableFilterArgs = {
  input: UpdateCRM_accountContactsTableFilterInput;
};


export type MutationupdateCRM_accountEventArgs = {
  input: UpdateCRM_accountEventInput;
};


export type MutationupdateCRM_actionArgs = {
  input: UpdateCRM_actionInput;
};


export type MutationupdateCRM_actionCallArgs = {
  input: UpdateCRM_actionCallInput;
};


export type MutationupdateCRM_actionChatArgs = {
  input: UpdateCRM_actionChatInput;
};


export type MutationupdateCRM_actionEmailArgs = {
  input: UpdateCRM_actionEmailInput;
};


export type MutationupdateCRM_actionMeetingArgs = {
  input: UpdateCRM_actionMeetingInput;
};


export type MutationupdateCRM_areaArgs = {
  input: UpdateCRM_areaInput;
};


export type MutationupdateCRM_campaignArgs = {
  input: UpdateCRM_campaignInput;
};


export type MutationupdateCRM_campaignContactArgs = {
  input: UpdateCRM_campaignContactInput;
};


export type MutationupdateCRM_campaignContactEventArgs = {
  input: UpdateCRM_campaignContactEventInput;
};


export type MutationupdateCRM_campaignDeliverArgs = {
  input: UpdateCRM_campaignDeliverInput;
};


export type MutationupdateCRM_campaignEmailTemplateArgs = {
  input: UpdateCRM_campaignEmailTemplateInput;
};


export type MutationupdateCRM_contactArgs = {
  input: UpdateCRM_contactInput;
};


export type MutationupdateCRM_contactActionArgs = {
  input: UpdateCRM_contactActionInput;
};


export type MutationupdateCRM_contactActionCallArgs = {
  input: UpdateCRM_contactActionCallInput;
};


export type MutationupdateCRM_contactActionChatArgs = {
  input: UpdateCRM_contactActionChatInput;
};


export type MutationupdateCRM_contactActionEmailArgs = {
  input: UpdateCRM_contactActionEmailInput;
};


export type MutationupdateCRM_contactActionMeetingArgs = {
  input: UpdateCRM_contactActionMeetingInput;
};


export type MutationupdateCRM_contactActionStatusChangeArgs = {
  input: UpdateCRM_contactActionStatusChangeInput;
};


export type MutationupdateCRM_contactAnswerArgs = {
  input: UpdateCRM_contactAnswerInput;
};


export type MutationupdateCRM_contactInputArgs = {
  input: UpdateCRM_contactInputInput;
};


export type MutationupdateCRM_contactInputSubStatusArgs = {
  input: UpdateCRM_contactInputSubStatusInput;
};


export type MutationupdateCRM_contactInputValueArgs = {
  input: UpdateCRM_contactInputValueInput;
};


export type MutationupdateCRM_contactListArgs = {
  input: UpdateCRM_contactListInput;
};


export type MutationupdateCRM_emailTemplateArgs = {
  input: UpdateCRM_emailTemplateInput;
};


export type MutationupdateCRM_eventArgs = {
  input: UpdateCRM_eventInput;
};


export type MutationupdateCRM_funnelArgs = {
  input: UpdateCRM_funnelInput;
};


export type MutationupdateCRM_funnelActionArgs = {
  input: UpdateCRM_funnelActionInput;
};


export type MutationupdateCRM_funnelStatusArgs = {
  input: UpdateCRM_funnelStatusInput;
};


export type MutationupdateCRM_opportunityLogArgs = {
  input: UpdateCRM_opportunityLogInput;
};


export type MutationupdateCRM_opportunityPaymentPlanItemArgs = {
  input: UpdateCRM_opportunityPaymentPlanItemInput;
};


export type MutationupdateCRM_overviewArgs = {
  input: UpdateCRM_overviewInput;
};


export type MutationupdateCRM_proposalArgs = {
  input: UpdateCRM_proposalInput;
};


export type MutationupdateCRM_roleArgs = {
  input: UpdateCRM_roleInput;
};


export type MutationupdateCRM_socialMediaCampaignArgs = {
  input: UpdateCRM_socialMediaCampaignInput;
};


export type MutationupdateCRM_socialMediaCampaign_mediaArgs = {
  input: UpdateCRM_socialMediaCampaign_mediaInput;
};


export type MutationupdateCRM_socialMediaCampaign_postArgs = {
  input: UpdateCRM_socialMediaCampaign_postInput;
};


export type MutationupdateCRM_sourceArgs = {
  input: UpdateCRM_sourceInput;
};


export type MutationupdateCRM_sourceCategoryArgs = {
  input: UpdateCRM_sourceCategoryInput;
};


export type MutationupdateCRM_sourceFormArgs = {
  input: UpdateCRM_sourceFormInput;
};


export type MutationupdateCRM_sourceFormFieldArgs = {
  input: UpdateCRM_sourceFormFieldInput;
};


export type MutationupdateCRM_sourceFormReasonArgs = {
  input: UpdateCRM_sourceFormReasonInput;
};


export type MutationupdateCRM_sourceForm_emailTemplateArgs = {
  input: UpdateCRM_sourceForm_emailTemplateInput;
};


export type MutationupdateCRM_teamArgs = {
  input: UpdateCRM_teamInput;
};


export type MutationupdateCRM_teamAccountArgs = {
  input: UpdateCRM_teamAccountInput;
};


export type MutationupdateCRM_teamActionArgs = {
  input: UpdateCRM_teamActionInput;
};


export type MutationupdateCRM_teamActionBoardEffectArgs = {
  input: UpdateCRM_teamActionBoardEffectInput;
};


export type MutationupdateCRM_teamBoardArgs = {
  input: UpdateCRM_teamBoardInput;
};


export type MutationupdateCRM_teamBoardItemArgs = {
  input: UpdateCRM_teamBoardItemInput;
};


export type MutationupdateCRM_teamBoardStatusArgs = {
  input: UpdateCRM_teamBoardStatusInput;
};


export type MutationupdateCRM_teamBoardSubStatusArgs = {
  input: UpdateCRM_teamBoardSubStatusInput;
};


export type MutationupdateCRM_teamBoardTaskArgs = {
  input: UpdateCRM_teamBoardTaskInput;
};


export type MutationupdateChatbots_PACKAGEArgs = {
  input: UpdateChatbots_PACKAGEInput;
};


export type MutationupdateChatbots_accountArgs = {
  input: UpdateChatbots_accountInput;
};


export type MutationupdateChatbots_areaArgs = {
  input: UpdateChatbots_areaInput;
};


export type MutationupdateChatbots_areaAccountArgs = {
  input: UpdateChatbots_areaAccountInput;
};


export type MutationupdateChatbots_externalAPIArgs = {
  input: UpdateChatbots_externalAPIInput;
};


export type MutationupdateChatbots_externalAPI_fieldArgs = {
  input: UpdateChatbots_externalAPI_fieldInput;
};


export type MutationupdateChatbots_processArgs = {
  input: UpdateChatbots_processInput;
};


export type MutationupdateChatbots_processAPIArgs = {
  input: UpdateChatbots_processAPIInput;
};


export type MutationupdateChatbots_processAccountArgs = {
  input: UpdateChatbots_processAccountInput;
};


export type MutationupdateChatbots_processActionArgs = {
  input: UpdateChatbots_processActionInput;
};


export type MutationupdateChatbots_processButtonArgs = {
  input: UpdateChatbots_processButtonInput;
};


export type MutationupdateChatbots_processFieldArgs = {
  input: UpdateChatbots_processFieldInput;
};


export type MutationupdateChatbots_processFilterParamArgs = {
  input: UpdateChatbots_processFilterParamInput;
};


export type MutationupdateChatbots_processOperationArgs = {
  input: UpdateChatbots_processOperationInput;
};


export type MutationupdateChatbots_processStatusArgs = {
  input: UpdateChatbots_processStatusInput;
};


export type MutationupdateChatbots_processTableHeadArgs = {
  input: UpdateChatbots_processTableHeadInput;
};


export type MutationupdateChatbots_processTableHeadConfigArgs = {
  input: UpdateChatbots_processTableHeadConfigInput;
};


export type MutationupdateChatbots_processTableMatchReplaceArgs = {
  input: UpdateChatbots_processTableMatchReplaceInput;
};


export type MutationupdateChatbots_processValidationArgs = {
  input: UpdateChatbots_processValidationInput;
};


export type MutationupdateChatbots_processValidationOperationArgs = {
  input: UpdateChatbots_processValidationOperationInput;
};


export type MutationupdateChatbots_processValidationOperation_documentArgs = {
  input: UpdateChatbots_processValidationOperation_documentInput;
};


export type MutationupdateChatbots_processValidationOperation_document_fileArgs = {
  input: UpdateChatbots_processValidationOperation_document_fileInput;
};


export type MutationupdateChatbots_processsValidationOperation_fieldArgs = {
  input: UpdateChatbots_processsValidationOperation_fieldInput;
};


export type MutationupdateChatbots_validationArgs = {
  input: UpdateChatbots_validationInput;
};


export type MutationupdateChatbots_validationDocumentArgs = {
  input: UpdateChatbots_validationDocumentInput;
};


export type MutationupdateChatbots_validationDocument_fileArgs = {
  input: UpdateChatbots_validationDocument_fileInput;
};


export type MutationupdateChatbots_validationFieldArgs = {
  input: UpdateChatbots_validationFieldInput;
};


export type MutationupdateCompanySectorArgs = {
  input: UpdateCompanySectorInput;
};


export type MutationupdateContactArgs = {
  input: UpdateContactInput;
};


export type MutationupdateContact_billingInfoArgs = {
  input: UpdateContact_billingInfoInput;
};


export type MutationupdateContact_businessInfoArgs = {
  input: UpdateContact_businessInfoInput;
};


export type MutationupdateContact_emailArgs = {
  input: UpdateContact_emailInput;
};


export type MutationupdateContact_importLogArgs = {
  input: UpdateContact_importLogInput;
};


export type MutationupdateContact_jobPositionArgs = {
  input: UpdateContact_jobPositionInput;
};


export type MutationupdateContact_phoneArgs = {
  input: UpdateContact_phoneInput;
};


export type MutationupdateCountryArgs = {
  input: UpdateCountryInput;
};


export type MutationupdateCurrencyArgs = {
  input: UpdateCurrencyInput;
};


export type MutationupdateDynamicTableArgs = {
  input: UpdateDynamicTableInput;
};


export type MutationupdateDynamicTable_accountArgs = {
  input: UpdateDynamicTable_accountInput;
};


export type MutationupdateDynamicTable_headArgs = {
  input: UpdateDynamicTable_headInput;
};


export type MutationupdateDynamicTable_headValueBooleanOptionsArgs = {
  input: UpdateDynamicTable_headValueBooleanOptionsInput;
};


export type MutationupdateDynamicTable_headValueCurrencyOptionsArgs = {
  input: UpdateDynamicTable_headValueCurrencyOptionsInput;
};


export type MutationupdateDynamicTable_headValueDateOptionsArgs = {
  input: UpdateDynamicTable_headValueDateOptionsInput;
};


export type MutationupdateDynamicTable_headValueLinkOptionsArgs = {
  input: UpdateDynamicTable_headValueLinkOptionsInput;
};


export type MutationupdateDynamicTable_headValueNumberOptionsArgs = {
  input: UpdateDynamicTable_headValueNumberOptionsInput;
};


export type MutationupdateE360AppArgs = {
  input: UpdateE360AppInput;
};


export type MutationupdateE360App_domainArgs = {
  input: UpdateE360App_domainInput;
};


export type MutationupdateE360App_locationArgs = {
  input: UpdateE360App_locationInput;
};


export type MutationupdateE360App_locationFileArgs = {
  input: UpdateE360App_locationFileInput;
};


export type MutationupdateE360App_locationScheduleArgs = {
  input: UpdateE360App_locationScheduleInput;
};


export type MutationupdateE360App_location_appoinmentArgs = {
  input: UpdateE360App_location_appoinmentInput;
};


export type MutationupdateE360App_location_appoinmentLotsArgs = {
  input: UpdateE360App_location_appoinmentLotsInput;
};


export type MutationupdateE360App_location_areaArgs = {
  input: UpdateE360App_location_areaInput;
};


export type MutationupdateE360App_location_area_resourceArgs = {
  input: UpdateE360App_location_area_resourceInput;
};


export type MutationupdateE360App_location_area_workShiftArgs = {
  input: UpdateE360App_location_area_workShiftInput;
};


export type MutationupdateE360App_location_menuArgs = {
  input: UpdateE360App_location_menuInput;
};


export type MutationupdateE360App_location_menu_comboArgs = {
  input: UpdateE360App_location_menu_comboInput;
};


export type MutationupdateE360App_location_menu_itemArgs = {
  input: UpdateE360App_location_menu_itemInput;
};


export type MutationupdateE360App_location_menu_sectionArgs = {
  input: UpdateE360App_location_menu_sectionInput;
};


export type MutationupdateE360App_location_menu_section_itemArgs = {
  input: UpdateE360App_location_menu_section_itemInput;
};


export type MutationupdateE360App_location_menu_subSectionArgs = {
  input: UpdateE360App_location_menu_subSectionInput;
};


export type MutationupdateE360App_location_menu_tagArgs = {
  input: UpdateE360App_location_menu_tagInput;
};


export type MutationupdateE360App_notificationArgs = {
  input: UpdateE360App_notificationInput;
};


export type MutationupdateE360App_organizationArgs = {
  input: UpdateE360App_organizationInput;
};


export type MutationupdateE360App_organization_userArgs = {
  input: UpdateE360App_organization_userInput;
};


export type MutationupdateE360App_partnerArgs = {
  input: UpdateE360App_partnerInput;
};


export type MutationupdateE360App_partner_webhookArgs = {
  input: UpdateE360App_partner_webhookInput;
};


export type MutationupdateE360App_shopArgs = {
  input: UpdateE360App_shopInput;
};


export type MutationupdateE360App_shop_contractArgs = {
  input: UpdateE360App_shop_contractInput;
};


export type MutationupdateE360App_shop_customer_contractArgs = {
  input: UpdateE360App_shop_customer_contractInput;
};


export type MutationupdateE360App_shop_customer_contractServiceArgs = {
  input: UpdateE360App_shop_customer_contractServiceInput;
};


export type MutationupdateE360App_shop_customer_contract_renewalArgs = {
  input: UpdateE360App_shop_customer_contract_renewalInput;
};


export type MutationupdateE360App_shop_operationArgs = {
  input: UpdateE360App_shop_operationInput;
};


export type MutationupdateE360App_shop_partner_contractArgs = {
  input: UpdateE360App_shop_partner_contractInput;
};


export type MutationupdateE360App_shop_productArgs = {
  input: UpdateE360App_shop_productInput;
};


export type MutationupdateE360App_shop_productItemArgs = {
  input: UpdateE360App_shop_productItemInput;
};


export type MutationupdateE360App_shop_productServiceArgs = {
  input: UpdateE360App_shop_productServiceInput;
};


export type MutationupdateE360App_shop_promoProductArgs = {
  input: UpdateE360App_shop_promoProductInput;
};


export type MutationupdateE360App_shop_promotionArgs = {
  input: UpdateE360App_shop_promotionInput;
};


export type MutationupdateE360App_shop_promotionCodeArgs = {
  input: UpdateE360App_shop_promotionCodeInput;
};


export type MutationupdateE360App_shop_purchaseArgs = {
  input: UpdateE360App_shop_purchaseInput;
};


export type MutationupdateE360App_shop_purchaseProviderEventArgs = {
  input: UpdateE360App_shop_purchaseProviderEventInput;
};


export type MutationupdateE360App_stablishmentArgs = {
  input: UpdateE360App_stablishmentInput;
};


export type MutationupdateE360App_stablishment_userArgs = {
  input: UpdateE360App_stablishment_userInput;
};


export type MutationupdateE360App_userArgs = {
  input: UpdateE360App_userInput;
};


export type MutationupdateE360App_userLogArgs = {
  input: UpdateE360App_userLogInput;
};


export type MutationupdateE360App_userSessionArgs = {
  input: UpdateE360App_userSessionInput;
};


export type MutationupdateE360App_userSessionConnectionArgs = {
  input: UpdateE360App_userSessionConnectionInput;
};


export type MutationupdateE360App_userSessionConnectionTaskArgs = {
  input: UpdateE360App_userSessionConnectionTaskInput;
};


export type MutationupdateE360App_userSessionTaskArgs = {
  input: UpdateE360App_userSessionTaskInput;
};


export type MutationupdateE360App_user_notificationArgs = {
  input: UpdateE360App_user_notificationInput;
};


export type MutationupdateE360App_user_partnerArgs = {
  input: UpdateE360App_user_partnerInput;
};


export type MutationupdateE360Storage_fileArgs = {
  input: UpdateE360Storage_fileInput;
};


export type MutationupdateERP_PACKAGEArgs = {
  input: UpdateERP_PACKAGEInput;
};


export type MutationupdateERP_accountArgs = {
  input: UpdateERP_accountInput;
};


export type MutationupdateERP_accountEventArgs = {
  input: UpdateERP_accountEventInput;
};


export type MutationupdateERP_accountingAccountArgs = {
  input: UpdateERP_accountingAccountInput;
};


export type MutationupdateERP_contactArgs = {
  input: UpdateERP_contactInput;
};


export type MutationupdateERP_contactActionArgs = {
  input: UpdateERP_contactActionInput;
};


export type MutationupdateERP_contactSerieArgs = {
  input: UpdateERP_contactSerieInput;
};


export type MutationupdateERP_eventArgs = {
  input: UpdateERP_eventInput;
};


export type MutationupdateERP_invoiceArgs = {
  input: UpdateERP_invoiceInput;
};


export type MutationupdateERP_invoiceItemArgs = {
  input: UpdateERP_invoiceItemInput;
};


export type MutationupdateERP_invoiceNoteArgs = {
  input: UpdateERP_invoiceNoteInput;
};


export type MutationupdateERP_organizationBillingInfoArgs = {
  input: UpdateERP_organizationBillingInfoInput;
};


export type MutationupdateERP_paymentPlanArgs = {
  input: UpdateERP_paymentPlanInput;
};


export type MutationupdateERP_productArgs = {
  input: UpdateERP_productInput;
};


export type MutationupdateERP_resourceArgs = {
  input: UpdateERP_resourceInput;
};


export type MutationupdateERP_roleArgs = {
  input: UpdateERP_roleInput;
};


export type MutationupdateERP_seatArgs = {
  input: UpdateERP_seatInput;
};


export type MutationupdateERP_seatLineArgs = {
  input: UpdateERP_seatLineInput;
};


export type MutationupdateERP_taxArgs = {
  input: UpdateERP_taxInput;
};


export type MutationupdateERP_withholdingArgs = {
  input: UpdateERP_withholdingInput;
};


export type MutationupdateEmailArgs = {
  input: UpdateEmailInput;
};


export type MutationupdateEmailEditorArgs = {
  input: UpdateEmailEditorInput;
};


export type MutationupdateEmailEditor_templateArgs = {
  input: UpdateEmailEditor_templateInput;
};


export type MutationupdateEmail_attachmentArgs = {
  input: UpdateEmail_attachmentInput;
};


export type MutationupdateEmail_fromArgs = {
  input: UpdateEmail_fromInput;
};


export type MutationupdateEmail_toArgs = {
  input: UpdateEmail_toInput;
};


export type MutationupdateEventArgs = {
  input: UpdateEventInput;
};


export type MutationupdateExternalAPI_keyArgs = {
  input: UpdateExternalAPI_keyInput;
};


export type MutationupdateFormBuilderArgs = {
  input: UpdateFormBuilderInput;
};


export type MutationupdateFormBuilder_formArgs = {
  input: UpdateFormBuilder_formInput;
};


export type MutationupdateFormBuilder_inputArgs = {
  input: UpdateFormBuilder_inputInput;
};


export type MutationupdateFormBuilder_inputBooleanArgs = {
  input: UpdateFormBuilder_inputBooleanInput;
};


export type MutationupdateFormBuilder_inputMultipleChoiceArgs = {
  input: UpdateFormBuilder_inputMultipleChoiceInput;
};


export type MutationupdateFormBuilder_inputMultipleChoiceOptionArgs = {
  input: UpdateFormBuilder_inputMultipleChoiceOptionInput;
};


export type MutationupdateFormBuilder_inputNumberArgs = {
  input: UpdateFormBuilder_inputNumberInput;
};


export type MutationupdateFormBuilder_inputTextArgs = {
  input: UpdateFormBuilder_inputTextInput;
};


export type MutationupdateGeneralAccountingAccountArgs = {
  input: UpdateGeneralAccountingAccountInput;
};


export type MutationupdateImportProcessArgs = {
  input: UpdateImportProcessInput;
};


export type MutationupdateImportProcess_elementFieldArgs = {
  input: UpdateImportProcess_elementFieldInput;
};


export type MutationupdateImportProcess_itemArgs = {
  input: UpdateImportProcess_itemInput;
};


export type MutationupdateImportProcess_itemErrorArgs = {
  input: UpdateImportProcess_itemErrorInput;
};


export type MutationupdateImportProcess_itemValueArgs = {
  input: UpdateImportProcess_itemValueInput;
};


export type MutationupdateImportProcess_matchArgs = {
  input: UpdateImportProcess_matchInput;
};


export type MutationupdateImportProcess_sourceValueArgs = {
  input: UpdateImportProcess_sourceValueInput;
};


export type MutationupdateInboxArgs = {
  input: UpdateInboxInput;
};


export type MutationupdateInbox_itemArgs = {
  input: UpdateInbox_itemInput;
};


export type MutationupdateIntegrationsArgs = {
  input: UpdateIntegrationsInput;
};


export type MutationupdateIntegrations_Digilab_ProviderArgs = {
  input: UpdateIntegrations_Digilab_ProviderInput;
};


export type MutationupdateIntegrations_Google_Analytics_ProviderArgs = {
  input: UpdateIntegrations_Google_Analytics_ProviderInput;
};


export type MutationupdateIntegrations_Google_ProviderArgs = {
  input: UpdateIntegrations_Google_ProviderInput;
};


export type MutationupdateIntegrations_Link_Mobility_ProviderArgs = {
  input: UpdateIntegrations_Link_Mobility_ProviderInput;
};


export type MutationupdateIntegrations_LinkedIn_ProviderArgs = {
  input: UpdateIntegrations_LinkedIn_ProviderInput;
};


export type MutationupdateIntegrations_MSFT_MeetingArgs = {
  input: UpdateIntegrations_MSFT_MeetingInput;
};


export type MutationupdateIntegrations_MSFT_ProviderArgs = {
  input: UpdateIntegrations_MSFT_ProviderInput;
};


export type MutationupdateIntegrations_Meta_ProviderArgs = {
  input: UpdateIntegrations_Meta_ProviderInput;
};


export type MutationupdateIntegrations_SendGrid_ProviderArgs = {
  input: UpdateIntegrations_SendGrid_ProviderInput;
};


export type MutationupdateIntegrations_Sendgrid_emailEventArgs = {
  input: UpdateIntegrations_Sendgrid_emailEventInput;
};


export type MutationupdateIntegrations_accountArgs = {
  input: UpdateIntegrations_accountInput;
};


export type MutationupdateIntegrations_carrefour_operartionsLogArgs = {
  input: UpdateIntegrations_carrefour_operartionsLogInput;
};


export type MutationupdateJobPositionArgs = {
  input: UpdateJobPositionInput;
};


export type MutationupdateLMS_PACKAGEArgs = {
  input: UpdateLMS_PACKAGEInput;
};


export type MutationupdateLMS_accountArgs = {
  input: UpdateLMS_accountInput;
};


export type MutationupdateLMS_accountLogArgs = {
  input: UpdateLMS_accountLogInput;
};


export type MutationupdateLMS_accountLogDetailArgs = {
  input: UpdateLMS_accountLogDetailInput;
};


export type MutationupdateLMS_blockArgs = {
  input: UpdateLMS_blockInput;
};


export type MutationupdateLMS_blockStudentProgressArgs = {
  input: UpdateLMS_blockStudentProgressInput;
};


export type MutationupdateLMS_contactArgs = {
  input: UpdateLMS_contactInput;
};


export type MutationupdateLMS_courseArgs = {
  input: UpdateLMS_courseInput;
};


export type MutationupdateLMS_courseCategoryArgs = {
  input: UpdateLMS_courseCategoryInput;
};


export type MutationupdateLMS_courseStudentProgressArgs = {
  input: UpdateLMS_courseStudentProgressInput;
};


export type MutationupdateLMS_courseVersionArgs = {
  input: UpdateLMS_courseVersionInput;
};


export type MutationupdateLMS_formArgs = {
  input: UpdateLMS_formInput;
};


export type MutationupdateLMS_formStudentProgressArgs = {
  input: UpdateLMS_formStudentProgressInput;
};


export type MutationupdateLMS_groupArgs = {
  input: UpdateLMS_groupInput;
};


export type MutationupdateLMS_groupAccountArgs = {
  input: UpdateLMS_groupAccountInput;
};


export type MutationupdateLMS_groupAccountFormAnswerArgs = {
  input: UpdateLMS_groupAccountFormAnswerInput;
};


export type MutationupdateLMS_groupAccountFormAttemptArgs = {
  input: UpdateLMS_groupAccountFormAttemptInput;
};


export type MutationupdateLMS_groupBlockConfigArgs = {
  input: UpdateLMS_groupBlockConfigInput;
};


export type MutationupdateLMS_groupCourseConfigArgs = {
  input: UpdateLMS_groupCourseConfigInput;
};


export type MutationupdateLMS_groupFormConfigArgs = {
  input: UpdateLMS_groupFormConfigInput;
};


export type MutationupdateLMS_groupFormConfigCalculationArgs = {
  input: UpdateLMS_groupFormConfigCalculationInput;
};


export type MutationupdateLMS_groupFormConfigCalculationRangeArgs = {
  input: UpdateLMS_groupFormConfigCalculationRangeInput;
};


export type MutationupdateLMS_groupLessonConfigArgs = {
  input: UpdateLMS_groupLessonConfigInput;
};


export type MutationupdateLMS_groupLessonMeetingConfigArgs = {
  input: UpdateLMS_groupLessonMeetingConfigInput;
};


export type MutationupdateLMS_groupLessonTeacherConfigArgs = {
  input: UpdateLMS_groupLessonTeacherConfigInput;
};


export type MutationupdateLMS_groupResourceConfigArgs = {
  input: UpdateLMS_groupResourceConfigInput;
};


export type MutationupdateLMS_lessonArgs = {
  input: UpdateLMS_lessonInput;
};


export type MutationupdateLMS_lessonStudentProgressArgs = {
  input: UpdateLMS_lessonStudentProgressInput;
};


export type MutationupdateLMS_meetingStudentProgressArgs = {
  input: UpdateLMS_meetingStudentProgressInput;
};


export type MutationupdateLMS_productArgs = {
  input: UpdateLMS_productInput;
};


export type MutationupdateLMS_resourceArgs = {
  input: UpdateLMS_resourceInput;
};


export type MutationupdateLMS_resourceStudentProgressArgs = {
  input: UpdateLMS_resourceStudentProgressInput;
};


export type MutationupdateLMS_resourceStudentVideoReportArgs = {
  input: UpdateLMS_resourceStudentVideoReportInput;
};


export type MutationupdateLMS_resourceStudentVideoReport_intervalArgs = {
  input: UpdateLMS_resourceStudentVideoReport_intervalInput;
};


export type MutationupdateLMS_sectionArgs = {
  input: UpdateLMS_sectionInput;
};


export type MutationupdateLMS_thumbnailArgs = {
  input: UpdateLMS_thumbnailInput;
};


export type MutationupdateLogger_logArgs = {
  input: UpdateLogger_logInput;
};


export type MutationupdateLoginProviderArgs = {
  input: UpdateLoginProviderInput;
};


export type MutationupdateMeetingArgs = {
  input: UpdateMeetingInput;
};


export type MutationupdateMeetingAccountArgs = {
  input: UpdateMeetingAccountInput;
};


export type MutationupdateMeetingDoctors_userArgs = {
  input: UpdateMeetingDoctors_userInput;
};


export type MutationupdateMeetingProviderArgs = {
  input: UpdateMeetingProviderInput;
};


export type MutationupdateNavigationArgs = {
  input: UpdateNavigationInput;
};


export type MutationupdateNavigation_routeArgs = {
  input: UpdateNavigation_routeInput;
};


export type MutationupdateORG_PACKAGEArgs = {
  input: UpdateORG_PACKAGEInput;
};


export type MutationupdateORG_accountArgs = {
  input: UpdateORG_accountInput;
};


export type MutationupdateORG_roleArgs = {
  input: UpdateORG_roleInput;
};


export type MutationupdateOrgArgs = {
  input: UpdateOrgInput;
};


export type MutationupdateOrg360Args = {
  input: UpdateOrg360Input;
};


export type MutationupdateOrg360_themeArgs = {
  input: UpdateOrg360_themeInput;
};


export type MutationupdateOrgDomainArgs = {
  input: UpdateOrgDomainInput;
};


export type MutationupdateOrganization_departmentArgs = {
  input: UpdateOrganization_departmentInput;
};


export type MutationupdatePETPASS_APPArgs = {
  input: UpdatePETPASS_APPInput;
};


export type MutationupdatePETPASS_bannerArgs = {
  input: UpdatePETPASS_bannerInput;
};


export type MutationupdatePETPASS_contractArgs = {
  input: UpdatePETPASS_contractInput;
};


export type MutationupdatePETPASS_fileArgs = {
  input: UpdatePETPASS_fileInput;
};


export type MutationupdatePETPASS_insuranceArgs = {
  input: UpdatePETPASS_insuranceInput;
};


export type MutationupdatePETPASS_insurance_companyArgs = {
  input: UpdatePETPASS_insurance_companyInput;
};


export type MutationupdatePETPASS_locationArgs = {
  input: UpdatePETPASS_locationInput;
};


export type MutationupdatePETPASS_locationPolicyArgs = {
  input: UpdatePETPASS_locationPolicyInput;
};


export type MutationupdatePETPASS_locatorArgs = {
  input: UpdatePETPASS_locatorInput;
};


export type MutationupdatePETPASS_partnerArgs = {
  input: UpdatePETPASS_partnerInput;
};


export type MutationupdatePETPASS_petArgs = {
  input: UpdatePETPASS_petInput;
};


export type MutationupdatePETPASS_petTokenArgs = {
  input: UpdatePETPASS_petTokenInput;
};


export type MutationupdatePETPASS_pet_external_insuranceArgs = {
  input: UpdatePETPASS_pet_external_insuranceInput;
};


export type MutationupdatePETPASS_pet_insuranceArgs = {
  input: UpdatePETPASS_pet_insuranceInput;
};


export type MutationupdatePETPASS_productArgs = {
  input: UpdatePETPASS_productInput;
};


export type MutationupdatePETPASS_purchaseArgs = {
  input: UpdatePETPASS_purchaseInput;
};


export type MutationupdatePETPASS_sosArgs = {
  input: UpdatePETPASS_sosInput;
};


export type MutationupdatePETPASS_sos_eventArgs = {
  input: UpdatePETPASS_sos_eventInput;
};


export type MutationupdatePETPASS_userArgs = {
  input: UpdatePETPASS_userInput;
};


export type MutationupdatePersonArgs = {
  input: UpdatePersonInput;
};


export type MutationupdatePetArgs = {
  input: UpdatePetInput;
};


export type MutationupdatePetBreedArgs = {
  input: UpdatePetBreedInput;
};


export type MutationupdatePetTypeArgs = {
  input: UpdatePetTypeInput;
};


export type MutationupdatePet_fileArgs = {
  input: UpdatePet_fileInput;
};


export type MutationupdatePet_vaccinationArgs = {
  input: UpdatePet_vaccinationInput;
};


export type MutationupdatePet_vaccineArgs = {
  input: UpdatePet_vaccineInput;
};


export type MutationupdateProductArgs = {
  input: UpdateProductInput;
};


export type MutationupdateProduct_categoryArgs = {
  input: UpdateProduct_categoryInput;
};


export type MutationupdateProduct_itemArgs = {
  input: UpdateProduct_itemInput;
};


export type MutationupdateProduct_paymentPlanItemArgs = {
  input: UpdateProduct_paymentPlanItemInput;
};


export type MutationupdateProposalArgs = {
  input: UpdateProposalInput;
};


export type MutationupdateProposal_resourceArgs = {
  input: UpdateProposal_resourceInput;
};


export type MutationupdateProposal_stakeholderArgs = {
  input: UpdateProposal_stakeholderInput;
};


export type MutationupdateProposal_stakeholderResourceArgs = {
  input: UpdateProposal_stakeholderResourceInput;
};


export type MutationupdateProposal_stakeholderTokenArgs = {
  input: UpdateProposal_stakeholderTokenInput;
};


export type MutationupdateResourceArgs = {
  input: UpdateResourceInput;
};


export type MutationupdateResourceTokenArgs = {
  input: UpdateResourceTokenInput;
};


export type MutationupdateSMSArgs = {
  input: UpdateSMSInput;
};


export type MutationupdateSchedulerArgs = {
  input: UpdateSchedulerInput;
};


export type MutationupdateScheduler_actionArgs = {
  input: UpdateScheduler_actionInput;
};


export type MutationupdateScheduler_externalActionArgs = {
  input: UpdateScheduler_externalActionInput;
};


export type MutationupdateScheduler_managerActionArgs = {
  input: UpdateScheduler_managerActionInput;
};


export type MutationupdateScheduler_taskArgs = {
  input: UpdateScheduler_taskInput;
};


export type MutationupdateSearchIndex_contactArgs = {
  input: UpdateSearchIndex_contactInput;
};


export type MutationupdateServiceAccountArgs = {
  input: UpdateServiceAccountInput;
};


export type MutationupdateShortUrlArgs = {
  input: UpdateShortUrlInput;
};


export type MutationupdateShortUrl_domainArgs = {
  input: UpdateShortUrl_domainInput;
};


export type MutationupdateStorageArgs = {
  input: UpdateStorageInput;
};


export type MutationupdateStorage_fileArgs = {
  input: UpdateStorage_fileInput;
};


export type MutationupdateStorage_fileByDemandArgs = {
  input: UpdateStorage_fileByDemandInput;
};


export type MutationupdateStorage_fileOperationTokenArgs = {
  input: UpdateStorage_fileOperationTokenInput;
};


export type MutationupdateTwoFactorTokenArgs = {
  input: UpdateTwoFactorTokenInput;
};


export type MutationupdateUnitArgs = {
  input: UpdateUnitInput;
};


export type MutationupdateUserArgs = {
  input: UpdateUserInput;
};


export type MutationupdateUser_tokenArgs = {
  input: UpdateUser_tokenInput;
};


export type MutationupdateVET_PACKAGEArgs = {
  input: UpdateVET_PACKAGEInput;
};


export type MutationupdateVET_accountArgs = {
  input: UpdateVET_accountInput;
};


export type MutationupdateVET_contactArgs = {
  input: UpdateVET_contactInput;
};


export type MutationupdateVET_petArgs = {
  input: UpdateVET_petInput;
};


export type MutationupdateWebhookArgs = {
  input: UpdateWebhookInput;
};


export type MutationupdateWebhook_providerArgs = {
  input: UpdateWebhook_providerInput;
};


export type MutationupdateWebhook_providerOriginArgs = {
  input: UpdateWebhook_providerOriginInput;
};

export type Navigation = {
  __typename?: 'Navigation';
  id: Scalars['ID'];
  routes?: Maybe<Array<Navigation_route>>;
  routesAggregate?: Maybe<Navigation_routeAggregateResult>;
};


export type NavigationroutesArgs = {
  filter?: InputMaybe<Navigation_routeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Navigation_routeOrder>;
};


export type NavigationroutesAggregateArgs = {
  filter?: InputMaybe<Navigation_routeFilter>;
};

export type NavigationAggregateResult = {
  __typename?: 'NavigationAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type NavigationFilter = {
  and?: InputMaybe<Array<InputMaybe<NavigationFilter>>>;
  has?: InputMaybe<Array<InputMaybe<NavigationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<NavigationFilter>;
  or?: InputMaybe<Array<InputMaybe<NavigationFilter>>>;
};

export enum NavigationHasFilter {
  routes = 'routes'
}

export type NavigationPatch = {
  routes?: InputMaybe<Array<Navigation_routeRef>>;
};

export type NavigationRef = {
  id?: InputMaybe<Scalars['ID']>;
  routes?: InputMaybe<Array<Navigation_routeRef>>;
};

export type Navigation_route = {
  __typename?: 'Navigation_route';
  icon?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  path: Scalars['String'];
};

export type Navigation_routeAggregateResult = {
  __typename?: 'Navigation_routeAggregateResult';
  count?: Maybe<Scalars['Int']>;
  iconMax?: Maybe<Scalars['String']>;
  iconMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  pathMax?: Maybe<Scalars['String']>;
  pathMin?: Maybe<Scalars['String']>;
};

export type Navigation_routeFilter = {
  and?: InputMaybe<Array<InputMaybe<Navigation_routeFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Navigation_routeHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Navigation_routeFilter>;
  or?: InputMaybe<Array<InputMaybe<Navigation_routeFilter>>>;
};

export enum Navigation_routeHasFilter {
  icon = 'icon',
  name = 'name',
  path = 'path'
}

export type Navigation_routeOrder = {
  asc?: InputMaybe<Navigation_routeOrderable>;
  desc?: InputMaybe<Navigation_routeOrderable>;
  then?: InputMaybe<Navigation_routeOrder>;
};

export enum Navigation_routeOrderable {
  icon = 'icon',
  name = 'name',
  path = 'path'
}

export type Navigation_routePatch = {
  icon?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  path?: InputMaybe<Scalars['String']>;
};

export type Navigation_routeRef = {
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  path?: InputMaybe<Scalars['String']>;
};

export type NearFilter = {
  coordinate: PointRef;
  distance: Scalars['Float'];
};

export type ORG_PACKAGE = {
  __typename?: 'ORG_PACKAGE';
  accounts: Array<ORG_account>;
  accountsAggregate?: Maybe<ORG_accountAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  id: Scalars['ID'];
  name: Scalars['String'];
  org360: Org360;
  roles: Array<ORG_role>;
  rolesAggregate?: Maybe<ORG_roleAggregateResult>;
  updatedAt: Scalars['DateTime'];
};


export type ORG_PACKAGEaccountsArgs = {
  filter?: InputMaybe<ORG_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_accountOrder>;
};


export type ORG_PACKAGEaccountsAggregateArgs = {
  filter?: InputMaybe<ORG_accountFilter>;
};


export type ORG_PACKAGEcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ORG_PACKAGEorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type ORG_PACKAGErolesArgs = {
  filter?: InputMaybe<ORG_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_roleOrder>;
};


export type ORG_PACKAGErolesAggregateArgs = {
  filter?: InputMaybe<ORG_roleFilter>;
};

export type ORG_PACKAGEAggregateResult = {
  __typename?: 'ORG_PACKAGEAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type ORG_PACKAGEFilter = {
  and?: InputMaybe<Array<InputMaybe<ORG_PACKAGEFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ORG_PACKAGEHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ORG_PACKAGEFilter>;
  or?: InputMaybe<Array<InputMaybe<ORG_PACKAGEFilter>>>;
};

export enum ORG_PACKAGEHasFilter {
  accounts = 'accounts',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  name = 'name',
  org360 = 'org360',
  roles = 'roles',
  updatedAt = 'updatedAt'
}

export type ORG_PACKAGEOrder = {
  asc?: InputMaybe<ORG_PACKAGEOrderable>;
  desc?: InputMaybe<ORG_PACKAGEOrderable>;
  then?: InputMaybe<ORG_PACKAGEOrder>;
};

export enum ORG_PACKAGEOrderable {
  createdAt = 'createdAt',
  name = 'name',
  updatedAt = 'updatedAt'
}

export type ORG_PACKAGEPatch = {
  accounts?: InputMaybe<Array<ORG_accountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  roles?: InputMaybe<Array<ORG_roleRef>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ORG_PACKAGERef = {
  accounts?: InputMaybe<Array<ORG_accountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  roles?: InputMaybe<Array<ORG_roleRef>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ORG_account = {
  __typename?: 'ORG_account';
  account?: Maybe<Account>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  id: Scalars['ID'];
  mod_role: ORG_roleType;
  package: ORG_PACKAGE;
  role: ORG_role;
};


export type ORG_accountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ORG_accountcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ORG_accountpackageArgs = {
  filter?: InputMaybe<ORG_PACKAGEFilter>;
};


export type ORG_accountroleArgs = {
  filter?: InputMaybe<ORG_roleFilter>;
};

export type ORG_accountAggregateResult = {
  __typename?: 'ORG_accountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
};

export type ORG_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<ORG_accountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ORG_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ORG_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<ORG_accountFilter>>>;
};

export enum ORG_accountHasFilter {
  account = 'account',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  mod_role = 'mod_role',
  package = 'package',
  role = 'role'
}

export type ORG_accountOrder = {
  asc?: InputMaybe<ORG_accountOrderable>;
  desc?: InputMaybe<ORG_accountOrderable>;
  then?: InputMaybe<ORG_accountOrder>;
};

export enum ORG_accountOrderable {
  createdAt = 'createdAt'
}

export type ORG_accountPatch = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  mod_role?: InputMaybe<ORG_roleType>;
  package?: InputMaybe<ORG_PACKAGERef>;
  role?: InputMaybe<ORG_roleRef>;
};

export type ORG_accountRef = {
  account?: InputMaybe<AccountRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  id?: InputMaybe<Scalars['ID']>;
  mod_role?: InputMaybe<ORG_roleType>;
  package?: InputMaybe<ORG_PACKAGERef>;
  role?: InputMaybe<ORG_roleRef>;
};

export type ORG_role = {
  __typename?: 'ORG_role';
  accounts: Array<ORG_account>;
  accountsAggregate?: Maybe<ORG_accountAggregateResult>;
  id: Scalars['ID'];
  name: Scalars['String'];
  package: ORG_PACKAGE;
  type: ORG_roleType;
};


export type ORG_roleaccountsArgs = {
  filter?: InputMaybe<ORG_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_accountOrder>;
};


export type ORG_roleaccountsAggregateArgs = {
  filter?: InputMaybe<ORG_accountFilter>;
};


export type ORG_rolepackageArgs = {
  filter?: InputMaybe<ORG_PACKAGEFilter>;
};

export type ORG_roleAggregateResult = {
  __typename?: 'ORG_roleAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type ORG_roleFilter = {
  and?: InputMaybe<Array<InputMaybe<ORG_roleFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ORG_roleHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ORG_roleFilter>;
  or?: InputMaybe<Array<InputMaybe<ORG_roleFilter>>>;
};

export enum ORG_roleHasFilter {
  accounts = 'accounts',
  name = 'name',
  package = 'package',
  type = 'type'
}

export type ORG_roleOrder = {
  asc?: InputMaybe<ORG_roleOrderable>;
  desc?: InputMaybe<ORG_roleOrderable>;
  then?: InputMaybe<ORG_roleOrder>;
};

export enum ORG_roleOrderable {
  name = 'name'
}

export type ORG_rolePatch = {
  accounts?: InputMaybe<Array<ORG_accountRef>>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<ORG_PACKAGERef>;
  type?: InputMaybe<ORG_roleType>;
};

export type ORG_roleRef = {
  accounts?: InputMaybe<Array<ORG_accountRef>>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<ORG_PACKAGERef>;
  type?: InputMaybe<ORG_roleType>;
};

export enum ORG_roleType {
  ADMIN = 'ADMIN',
  DISABLED = 'DISABLED'
}

export type Org = {
  __typename?: 'Org';
  createdAt: Scalars['DateTime'];
  id: Scalars['ID'];
  name: Scalars['String'];
  updatedAt: Scalars['DateTime'];
};

export type Org360 = {
  __typename?: 'Org360';
  accountLogs: Array<Account_log>;
  accountLogsAggregate?: Maybe<Account_logAggregateResult>;
  accountSessionExpirationTime?: Maybe<Scalars['Int']>;
  accountSessions: Array<Account_session>;
  accountSessionsAggregate?: Maybe<Account_sessionAggregateResult>;
  accounts?: Maybe<Array<Maybe<Account>>>;
  accountsAggregate?: Maybe<AccountAggregateResult>;
  auditsPackage?: Maybe<AUDITS_PACKAGE>;
  chatbotsPackage?: Maybe<Chatbots_PACKAGE>;
  cmsPackage?: Maybe<CMS_PACKAGE>;
  contacts: Array<Contact>;
  contactsAggregate?: Maybe<ContactAggregateResult>;
  createdAt: Scalars['DateTime'];
  crmPackage?: Maybe<CRM_PACKAGE>;
  departments: Array<Organization_department>;
  departmentsAggregate?: Maybe<Organization_departmentAggregateResult>;
  domains?: Maybe<Array<Maybe<OrgDomain>>>;
  domainsAggregate?: Maybe<OrgDomainAggregateResult>;
  emailEditor?: Maybe<EmailEditor>;
  emailEditorTemplates: Array<EmailEditor_template>;
  emailEditorTemplatesAggregate?: Maybe<EmailEditor_templateAggregateResult>;
  emails: Array<Email>;
  emailsAggregate?: Maybe<EmailAggregateResult>;
  erpPackage?: Maybe<ERP_PACKAGE>;
  formBuilder?: Maybe<FormBuilder>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  importProcesses: Array<ImportProcess>;
  importProcessesAggregate?: Maybe<ImportProcessAggregateResult>;
  integrations?: Maybe<Integrations>;
  jobPositions: Array<JobPosition>;
  jobPositionsAggregate?: Maybe<JobPositionAggregateResult>;
  lmsPackage?: Maybe<LMS_PACKAGE>;
  loginProviders: Array<LoginProviderType>;
  org?: Maybe<Org>;
  orgPackage?: Maybe<ORG_PACKAGE>;
  productCategories: Array<Product_category>;
  productCategoriesAggregate?: Maybe<Product_categoryAggregateResult>;
  productPaymentPlanItems: Array<Product_paymentPlanItem>;
  productPaymentPlanItemsAggregate?: Maybe<Product_paymentPlanItemAggregateResult>;
  products: Array<Product>;
  productsAggregate?: Maybe<ProductAggregateResult>;
  proposals: Array<Proposal>;
  proposalsAggregate?: Maybe<ProposalAggregateResult>;
  resourceTokens?: Maybe<Array<Maybe<ResourceToken>>>;
  resourceTokensAggregate?: Maybe<ResourceTokenAggregateResult>;
  resources?: Maybe<Array<Maybe<Resource>>>;
  resourcesAggregate?: Maybe<ResourceAggregateResult>;
  scheduler?: Maybe<Scheduler>;
  serviceAccounts: Array<ServiceAccount>;
  serviceAccountsAggregate?: Maybe<ServiceAccountAggregateResult>;
  storage?: Maybe<Storage>;
  theme?: Maybe<Org360_theme>;
  vetPackage?: Maybe<VET_PACKAGE>;
  webhook?: Maybe<Webhook>;
};


export type Org360accountLogsArgs = {
  filter?: InputMaybe<Account_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_logOrder>;
};


export type Org360accountLogsAggregateArgs = {
  filter?: InputMaybe<Account_logFilter>;
};


export type Org360accountSessionsArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionOrder>;
};


export type Org360accountSessionsAggregateArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
};


export type Org360accountsArgs = {
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AccountOrder>;
};


export type Org360accountsAggregateArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Org360auditsPackageArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
};


export type Org360chatbotsPackageArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type Org360cmsPackageArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
};


export type Org360contactsArgs = {
  filter?: InputMaybe<ContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ContactOrder>;
};


export type Org360contactsAggregateArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type Org360crmPackageArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type Org360departmentsArgs = {
  filter?: InputMaybe<Organization_departmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Organization_departmentOrder>;
};


export type Org360departmentsAggregateArgs = {
  filter?: InputMaybe<Organization_departmentFilter>;
};


export type Org360domainsArgs = {
  filter?: InputMaybe<OrgDomainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<OrgDomainOrder>;
};


export type Org360domainsAggregateArgs = {
  filter?: InputMaybe<OrgDomainFilter>;
};


export type Org360emailEditorArgs = {
  filter?: InputMaybe<EmailEditorFilter>;
};


export type Org360emailEditorTemplatesArgs = {
  filter?: InputMaybe<EmailEditor_templateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailEditor_templateOrder>;
};


export type Org360emailEditorTemplatesAggregateArgs = {
  filter?: InputMaybe<EmailEditor_templateFilter>;
};


export type Org360emailsArgs = {
  filter?: InputMaybe<EmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailOrder>;
};


export type Org360emailsAggregateArgs = {
  filter?: InputMaybe<EmailFilter>;
};


export type Org360erpPackageArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};


export type Org360formBuilderArgs = {
  filter?: InputMaybe<FormBuilderFilter>;
};


export type Org360importProcessesArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcessOrder>;
};


export type Org360importProcessesAggregateArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
};


export type Org360integrationsArgs = {
  filter?: InputMaybe<IntegrationsFilter>;
};


export type Org360jobPositionsArgs = {
  filter?: InputMaybe<JobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<JobPositionOrder>;
};


export type Org360jobPositionsAggregateArgs = {
  filter?: InputMaybe<JobPositionFilter>;
};


export type Org360lmsPackageArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type Org360orgArgs = {
  filter?: InputMaybe<OrgFilter>;
};


export type Org360orgPackageArgs = {
  filter?: InputMaybe<ORG_PACKAGEFilter>;
};


export type Org360productCategoriesArgs = {
  filter?: InputMaybe<Product_categoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_categoryOrder>;
};


export type Org360productCategoriesAggregateArgs = {
  filter?: InputMaybe<Product_categoryFilter>;
};


export type Org360productPaymentPlanItemsArgs = {
  filter?: InputMaybe<Product_paymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_paymentPlanItemOrder>;
};


export type Org360productPaymentPlanItemsAggregateArgs = {
  filter?: InputMaybe<Product_paymentPlanItemFilter>;
};


export type Org360productsArgs = {
  filter?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProductOrder>;
};


export type Org360productsAggregateArgs = {
  filter?: InputMaybe<ProductFilter>;
};


export type Org360proposalsArgs = {
  filter?: InputMaybe<ProposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProposalOrder>;
};


export type Org360proposalsAggregateArgs = {
  filter?: InputMaybe<ProposalFilter>;
};


export type Org360resourceTokensArgs = {
  filter?: InputMaybe<ResourceTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceTokenOrder>;
};


export type Org360resourceTokensAggregateArgs = {
  filter?: InputMaybe<ResourceTokenFilter>;
};


export type Org360resourcesArgs = {
  filter?: InputMaybe<ResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceOrder>;
};


export type Org360resourcesAggregateArgs = {
  filter?: InputMaybe<ResourceFilter>;
};


export type Org360schedulerArgs = {
  filter?: InputMaybe<SchedulerFilter>;
};


export type Org360serviceAccountsArgs = {
  filter?: InputMaybe<ServiceAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ServiceAccountOrder>;
};


export type Org360serviceAccountsAggregateArgs = {
  filter?: InputMaybe<ServiceAccountFilter>;
};


export type Org360storageArgs = {
  filter?: InputMaybe<StorageFilter>;
};


export type Org360themeArgs = {
  filter?: InputMaybe<Org360_themeFilter>;
};


export type Org360vetPackageArgs = {
  filter?: InputMaybe<VET_PACKAGEFilter>;
};


export type Org360webhookArgs = {
  filter?: InputMaybe<WebhookFilter>;
};

export type Org360AggregateResult = {
  __typename?: 'Org360AggregateResult';
  accountSessionExpirationTimeAvg?: Maybe<Scalars['Float']>;
  accountSessionExpirationTimeMax?: Maybe<Scalars['Int']>;
  accountSessionExpirationTimeMin?: Maybe<Scalars['Int']>;
  accountSessionExpirationTimeSum?: Maybe<Scalars['Int']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Org360Filter = {
  and?: InputMaybe<Array<InputMaybe<Org360Filter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Org360HasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  loginProviders?: InputMaybe<LoginProviderType_exact>;
  not?: InputMaybe<Org360Filter>;
  or?: InputMaybe<Array<InputMaybe<Org360Filter>>>;
};

export enum Org360HasFilter {
  accountLogs = 'accountLogs',
  accountSessionExpirationTime = 'accountSessionExpirationTime',
  accountSessions = 'accountSessions',
  accounts = 'accounts',
  auditsPackage = 'auditsPackage',
  chatbotsPackage = 'chatbotsPackage',
  cmsPackage = 'cmsPackage',
  contacts = 'contacts',
  createdAt = 'createdAt',
  crmPackage = 'crmPackage',
  departments = 'departments',
  domains = 'domains',
  emailEditor = 'emailEditor',
  emailEditorTemplates = 'emailEditorTemplates',
  emails = 'emails',
  erpPackage = 'erpPackage',
  formBuilder = 'formBuilder',
  guid = 'guid',
  importProcesses = 'importProcesses',
  integrations = 'integrations',
  jobPositions = 'jobPositions',
  lmsPackage = 'lmsPackage',
  loginProviders = 'loginProviders',
  org = 'org',
  orgPackage = 'orgPackage',
  productCategories = 'productCategories',
  productPaymentPlanItems = 'productPaymentPlanItems',
  products = 'products',
  proposals = 'proposals',
  resourceTokens = 'resourceTokens',
  resources = 'resources',
  scheduler = 'scheduler',
  serviceAccounts = 'serviceAccounts',
  storage = 'storage',
  theme = 'theme',
  vetPackage = 'vetPackage',
  webhook = 'webhook'
}

export type Org360Order = {
  asc?: InputMaybe<Org360Orderable>;
  desc?: InputMaybe<Org360Orderable>;
  then?: InputMaybe<Org360Order>;
};

export enum Org360Orderable {
  accountSessionExpirationTime = 'accountSessionExpirationTime',
  createdAt = 'createdAt',
  guid = 'guid'
}

export type Org360Patch = {
  accountLogs?: InputMaybe<Array<Account_logRef>>;
  accountSessionExpirationTime?: InputMaybe<Scalars['Int']>;
  accountSessions?: InputMaybe<Array<Account_sessionRef>>;
  accounts?: InputMaybe<Array<InputMaybe<AccountRef>>>;
  auditsPackage?: InputMaybe<AUDITS_PACKAGERef>;
  chatbotsPackage?: InputMaybe<Chatbots_PACKAGERef>;
  cmsPackage?: InputMaybe<CMS_PACKAGERef>;
  contacts?: InputMaybe<Array<ContactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crmPackage?: InputMaybe<CRM_PACKAGERef>;
  departments?: InputMaybe<Array<Organization_departmentRef>>;
  domains?: InputMaybe<Array<InputMaybe<OrgDomainRef>>>;
  emailEditor?: InputMaybe<EmailEditorRef>;
  emailEditorTemplates?: InputMaybe<Array<EmailEditor_templateRef>>;
  emails?: InputMaybe<Array<EmailRef>>;
  erpPackage?: InputMaybe<ERP_PACKAGERef>;
  formBuilder?: InputMaybe<FormBuilderRef>;
  guid?: InputMaybe<Scalars['String']>;
  importProcesses?: InputMaybe<Array<ImportProcessRef>>;
  integrations?: InputMaybe<IntegrationsRef>;
  jobPositions?: InputMaybe<Array<JobPositionRef>>;
  lmsPackage?: InputMaybe<LMS_PACKAGERef>;
  loginProviders?: InputMaybe<Array<LoginProviderType>>;
  org?: InputMaybe<OrgRef>;
  orgPackage?: InputMaybe<ORG_PACKAGERef>;
  productCategories?: InputMaybe<Array<Product_categoryRef>>;
  productPaymentPlanItems?: InputMaybe<Array<Product_paymentPlanItemRef>>;
  products?: InputMaybe<Array<ProductRef>>;
  proposals?: InputMaybe<Array<ProposalRef>>;
  resourceTokens?: InputMaybe<Array<InputMaybe<ResourceTokenRef>>>;
  resources?: InputMaybe<Array<InputMaybe<ResourceRef>>>;
  scheduler?: InputMaybe<SchedulerRef>;
  serviceAccounts?: InputMaybe<Array<ServiceAccountRef>>;
  storage?: InputMaybe<StorageRef>;
  theme?: InputMaybe<Org360_themeRef>;
  vetPackage?: InputMaybe<VET_PACKAGERef>;
  webhook?: InputMaybe<WebhookRef>;
};

export type Org360Ref = {
  accountLogs?: InputMaybe<Array<Account_logRef>>;
  accountSessionExpirationTime?: InputMaybe<Scalars['Int']>;
  accountSessions?: InputMaybe<Array<Account_sessionRef>>;
  accounts?: InputMaybe<Array<InputMaybe<AccountRef>>>;
  auditsPackage?: InputMaybe<AUDITS_PACKAGERef>;
  chatbotsPackage?: InputMaybe<Chatbots_PACKAGERef>;
  cmsPackage?: InputMaybe<CMS_PACKAGERef>;
  contacts?: InputMaybe<Array<ContactRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crmPackage?: InputMaybe<CRM_PACKAGERef>;
  departments?: InputMaybe<Array<Organization_departmentRef>>;
  domains?: InputMaybe<Array<InputMaybe<OrgDomainRef>>>;
  emailEditor?: InputMaybe<EmailEditorRef>;
  emailEditorTemplates?: InputMaybe<Array<EmailEditor_templateRef>>;
  emails?: InputMaybe<Array<EmailRef>>;
  erpPackage?: InputMaybe<ERP_PACKAGERef>;
  formBuilder?: InputMaybe<FormBuilderRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  importProcesses?: InputMaybe<Array<ImportProcessRef>>;
  integrations?: InputMaybe<IntegrationsRef>;
  jobPositions?: InputMaybe<Array<JobPositionRef>>;
  lmsPackage?: InputMaybe<LMS_PACKAGERef>;
  loginProviders?: InputMaybe<Array<LoginProviderType>>;
  org?: InputMaybe<OrgRef>;
  orgPackage?: InputMaybe<ORG_PACKAGERef>;
  productCategories?: InputMaybe<Array<Product_categoryRef>>;
  productPaymentPlanItems?: InputMaybe<Array<Product_paymentPlanItemRef>>;
  products?: InputMaybe<Array<ProductRef>>;
  proposals?: InputMaybe<Array<ProposalRef>>;
  resourceTokens?: InputMaybe<Array<InputMaybe<ResourceTokenRef>>>;
  resources?: InputMaybe<Array<InputMaybe<ResourceRef>>>;
  scheduler?: InputMaybe<SchedulerRef>;
  serviceAccounts?: InputMaybe<Array<ServiceAccountRef>>;
  storage?: InputMaybe<StorageRef>;
  theme?: InputMaybe<Org360_themeRef>;
  vetPackage?: InputMaybe<VET_PACKAGERef>;
  webhook?: InputMaybe<WebhookRef>;
};

export enum Org360_packageType {
  AUDITS = 'AUDITS',
  CHATBOTS = 'CHATBOTS',
  CMS = 'CMS',
  CRM = 'CRM',
  ERP = 'ERP',
  LMS = 'LMS',
  ORG = 'ORG',
  USER = 'USER'
}

export type Org360_theme = {
  __typename?: 'Org360_theme';
  defaultBackground?: Maybe<Scalars['String']>;
  errorColorContrastText?: Maybe<Scalars['String']>;
  errorColorDark?: Maybe<Scalars['String']>;
  errorColorLight?: Maybe<Scalars['String']>;
  errorColorMain?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  infoColorContrastText?: Maybe<Scalars['String']>;
  infoColorDark?: Maybe<Scalars['String']>;
  infoColorLight?: Maybe<Scalars['String']>;
  infoColorMain?: Maybe<Scalars['String']>;
  org360?: Maybe<Org360>;
  paperBackground?: Maybe<Scalars['String']>;
  primaryColorContrastText?: Maybe<Scalars['String']>;
  primaryColorDark?: Maybe<Scalars['String']>;
  primaryColorLight?: Maybe<Scalars['String']>;
  primaryColorMain?: Maybe<Scalars['String']>;
  secondaryColorContrastText?: Maybe<Scalars['String']>;
  secondaryColorDark?: Maybe<Scalars['String']>;
  secondaryColorLight?: Maybe<Scalars['String']>;
  secondaryColorMain?: Maybe<Scalars['String']>;
  successColorContrastText?: Maybe<Scalars['String']>;
  successColorDark?: Maybe<Scalars['String']>;
  successColorLight?: Maybe<Scalars['String']>;
  successColorMain?: Maybe<Scalars['String']>;
  warningColorContrastText?: Maybe<Scalars['String']>;
  warningColorDark?: Maybe<Scalars['String']>;
  warningColorLight?: Maybe<Scalars['String']>;
  warningColorMain?: Maybe<Scalars['String']>;
};


export type Org360_themeorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type Org360_themeAggregateResult = {
  __typename?: 'Org360_themeAggregateResult';
  count?: Maybe<Scalars['Int']>;
  defaultBackgroundMax?: Maybe<Scalars['String']>;
  defaultBackgroundMin?: Maybe<Scalars['String']>;
  errorColorContrastTextMax?: Maybe<Scalars['String']>;
  errorColorContrastTextMin?: Maybe<Scalars['String']>;
  errorColorDarkMax?: Maybe<Scalars['String']>;
  errorColorDarkMin?: Maybe<Scalars['String']>;
  errorColorLightMax?: Maybe<Scalars['String']>;
  errorColorLightMin?: Maybe<Scalars['String']>;
  errorColorMainMax?: Maybe<Scalars['String']>;
  errorColorMainMin?: Maybe<Scalars['String']>;
  infoColorContrastTextMax?: Maybe<Scalars['String']>;
  infoColorContrastTextMin?: Maybe<Scalars['String']>;
  infoColorDarkMax?: Maybe<Scalars['String']>;
  infoColorDarkMin?: Maybe<Scalars['String']>;
  infoColorLightMax?: Maybe<Scalars['String']>;
  infoColorLightMin?: Maybe<Scalars['String']>;
  infoColorMainMax?: Maybe<Scalars['String']>;
  infoColorMainMin?: Maybe<Scalars['String']>;
  paperBackgroundMax?: Maybe<Scalars['String']>;
  paperBackgroundMin?: Maybe<Scalars['String']>;
  primaryColorContrastTextMax?: Maybe<Scalars['String']>;
  primaryColorContrastTextMin?: Maybe<Scalars['String']>;
  primaryColorDarkMax?: Maybe<Scalars['String']>;
  primaryColorDarkMin?: Maybe<Scalars['String']>;
  primaryColorLightMax?: Maybe<Scalars['String']>;
  primaryColorLightMin?: Maybe<Scalars['String']>;
  primaryColorMainMax?: Maybe<Scalars['String']>;
  primaryColorMainMin?: Maybe<Scalars['String']>;
  secondaryColorContrastTextMax?: Maybe<Scalars['String']>;
  secondaryColorContrastTextMin?: Maybe<Scalars['String']>;
  secondaryColorDarkMax?: Maybe<Scalars['String']>;
  secondaryColorDarkMin?: Maybe<Scalars['String']>;
  secondaryColorLightMax?: Maybe<Scalars['String']>;
  secondaryColorLightMin?: Maybe<Scalars['String']>;
  secondaryColorMainMax?: Maybe<Scalars['String']>;
  secondaryColorMainMin?: Maybe<Scalars['String']>;
  successColorContrastTextMax?: Maybe<Scalars['String']>;
  successColorContrastTextMin?: Maybe<Scalars['String']>;
  successColorDarkMax?: Maybe<Scalars['String']>;
  successColorDarkMin?: Maybe<Scalars['String']>;
  successColorLightMax?: Maybe<Scalars['String']>;
  successColorLightMin?: Maybe<Scalars['String']>;
  successColorMainMax?: Maybe<Scalars['String']>;
  successColorMainMin?: Maybe<Scalars['String']>;
  warningColorContrastTextMax?: Maybe<Scalars['String']>;
  warningColorContrastTextMin?: Maybe<Scalars['String']>;
  warningColorDarkMax?: Maybe<Scalars['String']>;
  warningColorDarkMin?: Maybe<Scalars['String']>;
  warningColorLightMax?: Maybe<Scalars['String']>;
  warningColorLightMin?: Maybe<Scalars['String']>;
  warningColorMainMax?: Maybe<Scalars['String']>;
  warningColorMainMin?: Maybe<Scalars['String']>;
};

export type Org360_themeFilter = {
  and?: InputMaybe<Array<InputMaybe<Org360_themeFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Org360_themeHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Org360_themeFilter>;
  or?: InputMaybe<Array<InputMaybe<Org360_themeFilter>>>;
};

export enum Org360_themeHasFilter {
  defaultBackground = 'defaultBackground',
  errorColorContrastText = 'errorColorContrastText',
  errorColorDark = 'errorColorDark',
  errorColorLight = 'errorColorLight',
  errorColorMain = 'errorColorMain',
  infoColorContrastText = 'infoColorContrastText',
  infoColorDark = 'infoColorDark',
  infoColorLight = 'infoColorLight',
  infoColorMain = 'infoColorMain',
  org360 = 'org360',
  paperBackground = 'paperBackground',
  primaryColorContrastText = 'primaryColorContrastText',
  primaryColorDark = 'primaryColorDark',
  primaryColorLight = 'primaryColorLight',
  primaryColorMain = 'primaryColorMain',
  secondaryColorContrastText = 'secondaryColorContrastText',
  secondaryColorDark = 'secondaryColorDark',
  secondaryColorLight = 'secondaryColorLight',
  secondaryColorMain = 'secondaryColorMain',
  successColorContrastText = 'successColorContrastText',
  successColorDark = 'successColorDark',
  successColorLight = 'successColorLight',
  successColorMain = 'successColorMain',
  warningColorContrastText = 'warningColorContrastText',
  warningColorDark = 'warningColorDark',
  warningColorLight = 'warningColorLight',
  warningColorMain = 'warningColorMain'
}

export type Org360_themeOrder = {
  asc?: InputMaybe<Org360_themeOrderable>;
  desc?: InputMaybe<Org360_themeOrderable>;
  then?: InputMaybe<Org360_themeOrder>;
};

export enum Org360_themeOrderable {
  defaultBackground = 'defaultBackground',
  errorColorContrastText = 'errorColorContrastText',
  errorColorDark = 'errorColorDark',
  errorColorLight = 'errorColorLight',
  errorColorMain = 'errorColorMain',
  infoColorContrastText = 'infoColorContrastText',
  infoColorDark = 'infoColorDark',
  infoColorLight = 'infoColorLight',
  infoColorMain = 'infoColorMain',
  paperBackground = 'paperBackground',
  primaryColorContrastText = 'primaryColorContrastText',
  primaryColorDark = 'primaryColorDark',
  primaryColorLight = 'primaryColorLight',
  primaryColorMain = 'primaryColorMain',
  secondaryColorContrastText = 'secondaryColorContrastText',
  secondaryColorDark = 'secondaryColorDark',
  secondaryColorLight = 'secondaryColorLight',
  secondaryColorMain = 'secondaryColorMain',
  successColorContrastText = 'successColorContrastText',
  successColorDark = 'successColorDark',
  successColorLight = 'successColorLight',
  successColorMain = 'successColorMain',
  warningColorContrastText = 'warningColorContrastText',
  warningColorDark = 'warningColorDark',
  warningColorLight = 'warningColorLight',
  warningColorMain = 'warningColorMain'
}

export type Org360_themePatch = {
  defaultBackground?: InputMaybe<Scalars['String']>;
  errorColorContrastText?: InputMaybe<Scalars['String']>;
  errorColorDark?: InputMaybe<Scalars['String']>;
  errorColorLight?: InputMaybe<Scalars['String']>;
  errorColorMain?: InputMaybe<Scalars['String']>;
  infoColorContrastText?: InputMaybe<Scalars['String']>;
  infoColorDark?: InputMaybe<Scalars['String']>;
  infoColorLight?: InputMaybe<Scalars['String']>;
  infoColorMain?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  paperBackground?: InputMaybe<Scalars['String']>;
  primaryColorContrastText?: InputMaybe<Scalars['String']>;
  primaryColorDark?: InputMaybe<Scalars['String']>;
  primaryColorLight?: InputMaybe<Scalars['String']>;
  primaryColorMain?: InputMaybe<Scalars['String']>;
  secondaryColorContrastText?: InputMaybe<Scalars['String']>;
  secondaryColorDark?: InputMaybe<Scalars['String']>;
  secondaryColorLight?: InputMaybe<Scalars['String']>;
  secondaryColorMain?: InputMaybe<Scalars['String']>;
  successColorContrastText?: InputMaybe<Scalars['String']>;
  successColorDark?: InputMaybe<Scalars['String']>;
  successColorLight?: InputMaybe<Scalars['String']>;
  successColorMain?: InputMaybe<Scalars['String']>;
  warningColorContrastText?: InputMaybe<Scalars['String']>;
  warningColorDark?: InputMaybe<Scalars['String']>;
  warningColorLight?: InputMaybe<Scalars['String']>;
  warningColorMain?: InputMaybe<Scalars['String']>;
};

export type Org360_themeRef = {
  defaultBackground?: InputMaybe<Scalars['String']>;
  errorColorContrastText?: InputMaybe<Scalars['String']>;
  errorColorDark?: InputMaybe<Scalars['String']>;
  errorColorLight?: InputMaybe<Scalars['String']>;
  errorColorMain?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  infoColorContrastText?: InputMaybe<Scalars['String']>;
  infoColorDark?: InputMaybe<Scalars['String']>;
  infoColorLight?: InputMaybe<Scalars['String']>;
  infoColorMain?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  paperBackground?: InputMaybe<Scalars['String']>;
  primaryColorContrastText?: InputMaybe<Scalars['String']>;
  primaryColorDark?: InputMaybe<Scalars['String']>;
  primaryColorLight?: InputMaybe<Scalars['String']>;
  primaryColorMain?: InputMaybe<Scalars['String']>;
  secondaryColorContrastText?: InputMaybe<Scalars['String']>;
  secondaryColorDark?: InputMaybe<Scalars['String']>;
  secondaryColorLight?: InputMaybe<Scalars['String']>;
  secondaryColorMain?: InputMaybe<Scalars['String']>;
  successColorContrastText?: InputMaybe<Scalars['String']>;
  successColorDark?: InputMaybe<Scalars['String']>;
  successColorLight?: InputMaybe<Scalars['String']>;
  successColorMain?: InputMaybe<Scalars['String']>;
  warningColorContrastText?: InputMaybe<Scalars['String']>;
  warningColorDark?: InputMaybe<Scalars['String']>;
  warningColorLight?: InputMaybe<Scalars['String']>;
  warningColorMain?: InputMaybe<Scalars['String']>;
};

export type OrgAggregateResult = {
  __typename?: 'OrgAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type OrgDomain = {
  __typename?: 'OrgDomain';
  createdAt: Scalars['DateTime'];
  disable?: Maybe<Scalars['Boolean']>;
  domain: Scalars['String'];
  id: Scalars['ID'];
  label?: Maybe<Scalars['String']>;
  org360?: Maybe<Array<Maybe<Org360>>>;
  org360Aggregate?: Maybe<Org360AggregateResult>;
  type: OrgDomainType;
};


export type OrgDomainorg360Args = {
  filter?: InputMaybe<Org360Filter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Org360Order>;
};


export type OrgDomainorg360AggregateArgs = {
  filter?: InputMaybe<Org360Filter>;
};

export type OrgDomainAggregateResult = {
  __typename?: 'OrgDomainAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  domainMax?: Maybe<Scalars['String']>;
  domainMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type OrgDomainFilter = {
  and?: InputMaybe<Array<InputMaybe<OrgDomainFilter>>>;
  domain?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<OrgDomainHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<OrgDomainFilter>;
  or?: InputMaybe<Array<InputMaybe<OrgDomainFilter>>>;
  type?: InputMaybe<OrgDomainType_exact>;
};

export enum OrgDomainHasFilter {
  createdAt = 'createdAt',
  disable = 'disable',
  domain = 'domain',
  label = 'label',
  org360 = 'org360',
  type = 'type'
}

export type OrgDomainOrder = {
  asc?: InputMaybe<OrgDomainOrderable>;
  desc?: InputMaybe<OrgDomainOrderable>;
  then?: InputMaybe<OrgDomainOrder>;
};

export enum OrgDomainOrderable {
  createdAt = 'createdAt',
  domain = 'domain',
  label = 'label'
}

export type OrgDomainPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  disable?: InputMaybe<Scalars['Boolean']>;
  domain?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Array<InputMaybe<Org360Ref>>>;
  type?: InputMaybe<OrgDomainType>;
};

export type OrgDomainRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  disable?: InputMaybe<Scalars['Boolean']>;
  domain?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Array<InputMaybe<Org360Ref>>>;
  type?: InputMaybe<OrgDomainType>;
};

export enum OrgDomainType {
  DEV = 'DEV',
  EXTERNAL = 'EXTERNAL',
  LOCAL = 'LOCAL',
  MAIN = 'MAIN',
  WEBHOOK = 'WEBHOOK'
}

export type OrgDomainType_exact = {
  between?: InputMaybe<OrgDomainType>;
  eq?: InputMaybe<OrgDomainType>;
  ge?: InputMaybe<OrgDomainType>;
  gt?: InputMaybe<OrgDomainType>;
  in?: InputMaybe<Array<InputMaybe<OrgDomainType>>>;
  le?: InputMaybe<OrgDomainType>;
  lt?: InputMaybe<OrgDomainType>;
};

export type OrgFilter = {
  and?: InputMaybe<Array<InputMaybe<OrgFilter>>>;
  has?: InputMaybe<Array<InputMaybe<OrgHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringHashFilter_StringTermFilter>;
  not?: InputMaybe<OrgFilter>;
  or?: InputMaybe<Array<InputMaybe<OrgFilter>>>;
};

export enum OrgHasFilter {
  createdAt = 'createdAt',
  name = 'name',
  updatedAt = 'updatedAt'
}

export type OrgOrder = {
  asc?: InputMaybe<OrgOrderable>;
  desc?: InputMaybe<OrgOrderable>;
  then?: InputMaybe<OrgOrder>;
};

export enum OrgOrderable {
  createdAt = 'createdAt',
  name = 'name',
  updatedAt = 'updatedAt'
}

export type OrgPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type OrgRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type Organization_department = {
  __typename?: 'Organization_department';
  contacts: Array<Contact_jobPosition>;
  contactsAggregate?: Maybe<Contact_jobPositionAggregateResult>;
  id: Scalars['ID'];
  isDefault?: Maybe<Scalars['Boolean']>;
  name: Scalars['String'];
  org360?: Maybe<Org360>;
};


export type Organization_departmentcontactsArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_jobPositionOrder>;
};


export type Organization_departmentcontactsAggregateArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
};


export type Organization_departmentorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type Organization_departmentAggregateResult = {
  __typename?: 'Organization_departmentAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Organization_departmentFilter = {
  and?: InputMaybe<Array<InputMaybe<Organization_departmentFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Organization_departmentHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Organization_departmentFilter>;
  or?: InputMaybe<Array<InputMaybe<Organization_departmentFilter>>>;
};

export enum Organization_departmentHasFilter {
  contacts = 'contacts',
  isDefault = 'isDefault',
  name = 'name',
  org360 = 'org360'
}

export type Organization_departmentOrder = {
  asc?: InputMaybe<Organization_departmentOrderable>;
  desc?: InputMaybe<Organization_departmentOrderable>;
  then?: InputMaybe<Organization_departmentOrder>;
};

export enum Organization_departmentOrderable {
  name = 'name'
}

export type Organization_departmentPatch = {
  contacts?: InputMaybe<Array<Contact_jobPositionRef>>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
};

export type Organization_departmentRef = {
  contacts?: InputMaybe<Array<Contact_jobPositionRef>>;
  id?: InputMaybe<Scalars['ID']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
};

export type PETPASS_APP = {
  __typename?: 'PETPASS_APP';
  banners: Array<PETPASS_banner>;
  bannersAggregate?: Maybe<PETPASS_bannerAggregateResult>;
  contracts: Array<PETPASS_contract>;
  contractsAggregate?: Maybe<PETPASS_contractAggregateResult>;
  e360App: E360App;
  files: Array<PETPASS_file>;
  filesAggregate?: Maybe<PETPASS_fileAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  insuranceCompanies: Array<PETPASS_insurance_company>;
  insuranceCompaniesAggregate?: Maybe<PETPASS_insurance_companyAggregateResult>;
  insurances: Array<PETPASS_insurance>;
  insurancesAggregate?: Maybe<PETPASS_insuranceAggregateResult>;
  locations: Array<PETPASS_location>;
  locationsAggregate?: Maybe<PETPASS_locationAggregateResult>;
  partners: Array<PETPASS_partner>;
  partnersAggregate?: Maybe<PETPASS_partnerAggregateResult>;
  petExternalInsurances: Array<PETPASS_pet_external_insurance>;
  petExternalInsurancesAggregate?: Maybe<PETPASS_pet_external_insuranceAggregateResult>;
  petInsurances: Array<PETPASS_pet_insurance>;
  petInsurancesAggregate?: Maybe<PETPASS_pet_insuranceAggregateResult>;
  pets: Array<PETPASS_pet>;
  petsAggregate?: Maybe<PETPASS_petAggregateResult>;
  policies: Array<PETPASS_locationPolicy>;
  policiesAggregate?: Maybe<PETPASS_locationPolicyAggregateResult>;
  products: Array<PETPASS_product>;
  productsAggregate?: Maybe<PETPASS_productAggregateResult>;
  purchases: Array<PETPASS_purchase>;
  purchasesAggregate?: Maybe<PETPASS_purchaseAggregateResult>;
  users: Array<PETPASS_user>;
  usersAggregate?: Maybe<PETPASS_userAggregateResult>;
};


export type PETPASS_APPbannersArgs = {
  filter?: InputMaybe<PETPASS_bannerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_bannerOrder>;
};


export type PETPASS_APPbannersAggregateArgs = {
  filter?: InputMaybe<PETPASS_bannerFilter>;
};


export type PETPASS_APPcontractsArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_contractOrder>;
};


export type PETPASS_APPcontractsAggregateArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
};


export type PETPASS_APPe360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
};


export type PETPASS_APPfilesArgs = {
  filter?: InputMaybe<PETPASS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_fileOrder>;
};


export type PETPASS_APPfilesAggregateArgs = {
  filter?: InputMaybe<PETPASS_fileFilter>;
};


export type PETPASS_APPinsuranceCompaniesArgs = {
  filter?: InputMaybe<PETPASS_insurance_companyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insurance_companyOrder>;
};


export type PETPASS_APPinsuranceCompaniesAggregateArgs = {
  filter?: InputMaybe<PETPASS_insurance_companyFilter>;
};


export type PETPASS_APPinsurancesArgs = {
  filter?: InputMaybe<PETPASS_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insuranceOrder>;
};


export type PETPASS_APPinsurancesAggregateArgs = {
  filter?: InputMaybe<PETPASS_insuranceFilter>;
};


export type PETPASS_APPlocationsArgs = {
  filter?: InputMaybe<PETPASS_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locationOrder>;
};


export type PETPASS_APPlocationsAggregateArgs = {
  filter?: InputMaybe<PETPASS_locationFilter>;
};


export type PETPASS_APPpartnersArgs = {
  filter?: InputMaybe<PETPASS_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_partnerOrder>;
};


export type PETPASS_APPpartnersAggregateArgs = {
  filter?: InputMaybe<PETPASS_partnerFilter>;
};


export type PETPASS_APPpetExternalInsurancesArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_external_insuranceOrder>;
};


export type PETPASS_APPpetExternalInsurancesAggregateArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
};


export type PETPASS_APPpetInsurancesArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_insuranceOrder>;
};


export type PETPASS_APPpetInsurancesAggregateArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
};


export type PETPASS_APPpetsArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petOrder>;
};


export type PETPASS_APPpetsAggregateArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};


export type PETPASS_APPpoliciesArgs = {
  filter?: InputMaybe<PETPASS_locationPolicyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locationPolicyOrder>;
};


export type PETPASS_APPpoliciesAggregateArgs = {
  filter?: InputMaybe<PETPASS_locationPolicyFilter>;
};


export type PETPASS_APPproductsArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_productOrder>;
};


export type PETPASS_APPproductsAggregateArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
};


export type PETPASS_APPpurchasesArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_purchaseOrder>;
};


export type PETPASS_APPpurchasesAggregateArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
};


export type PETPASS_APPusersArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_userOrder>;
};


export type PETPASS_APPusersAggregateArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};

export type PETPASS_APPAggregateResult = {
  __typename?: 'PETPASS_APPAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type PETPASS_APPFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_APPFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_APPHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_APPFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_APPFilter>>>;
};

export enum PETPASS_APPHasFilter {
  banners = 'banners',
  contracts = 'contracts',
  e360App = 'e360App',
  files = 'files',
  guid = 'guid',
  insuranceCompanies = 'insuranceCompanies',
  insurances = 'insurances',
  locations = 'locations',
  partners = 'partners',
  petExternalInsurances = 'petExternalInsurances',
  petInsurances = 'petInsurances',
  pets = 'pets',
  policies = 'policies',
  products = 'products',
  purchases = 'purchases',
  users = 'users'
}

export type PETPASS_APPOrder = {
  asc?: InputMaybe<PETPASS_APPOrderable>;
  desc?: InputMaybe<PETPASS_APPOrderable>;
  then?: InputMaybe<PETPASS_APPOrder>;
};

export enum PETPASS_APPOrderable {
  guid = 'guid'
}

export type PETPASS_APPPatch = {
  banners?: InputMaybe<Array<PETPASS_bannerRef>>;
  contracts?: InputMaybe<Array<PETPASS_contractRef>>;
  e360App?: InputMaybe<E360AppRef>;
  files?: InputMaybe<Array<PETPASS_fileRef>>;
  guid?: InputMaybe<Scalars['String']>;
  insuranceCompanies?: InputMaybe<Array<PETPASS_insurance_companyRef>>;
  insurances?: InputMaybe<Array<PETPASS_insuranceRef>>;
  locations?: InputMaybe<Array<PETPASS_locationRef>>;
  partners?: InputMaybe<Array<PETPASS_partnerRef>>;
  petExternalInsurances?: InputMaybe<Array<PETPASS_pet_external_insuranceRef>>;
  petInsurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
  pets?: InputMaybe<Array<PETPASS_petRef>>;
  policies?: InputMaybe<Array<PETPASS_locationPolicyRef>>;
  products?: InputMaybe<Array<PETPASS_productRef>>;
  purchases?: InputMaybe<Array<PETPASS_purchaseRef>>;
  users?: InputMaybe<Array<PETPASS_userRef>>;
};

export type PETPASS_APPRef = {
  banners?: InputMaybe<Array<PETPASS_bannerRef>>;
  contracts?: InputMaybe<Array<PETPASS_contractRef>>;
  e360App?: InputMaybe<E360AppRef>;
  files?: InputMaybe<Array<PETPASS_fileRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  insuranceCompanies?: InputMaybe<Array<PETPASS_insurance_companyRef>>;
  insurances?: InputMaybe<Array<PETPASS_insuranceRef>>;
  locations?: InputMaybe<Array<PETPASS_locationRef>>;
  partners?: InputMaybe<Array<PETPASS_partnerRef>>;
  petExternalInsurances?: InputMaybe<Array<PETPASS_pet_external_insuranceRef>>;
  petInsurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
  pets?: InputMaybe<Array<PETPASS_petRef>>;
  policies?: InputMaybe<Array<PETPASS_locationPolicyRef>>;
  products?: InputMaybe<Array<PETPASS_productRef>>;
  purchases?: InputMaybe<Array<PETPASS_purchaseRef>>;
  users?: InputMaybe<Array<PETPASS_userRef>>;
};

export type PETPASS_banner = {
  __typename?: 'PETPASS_banner';
  alt?: Maybe<Scalars['String']>;
  app: PETPASS_APP;
  appLink?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<PETPASS_user>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  srcDesktop?: Maybe<Scalars['String']>;
  srcMobile?: Maybe<Scalars['String']>;
  status: PETPASS_bannerStatus;
  webLink?: Maybe<Scalars['String']>;
};


export type PETPASS_bannerappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_bannercreatedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};

export type PETPASS_bannerAggregateResult = {
  __typename?: 'PETPASS_bannerAggregateResult';
  altMax?: Maybe<Scalars['String']>;
  altMin?: Maybe<Scalars['String']>;
  appLinkMax?: Maybe<Scalars['String']>;
  appLinkMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  srcDesktopMax?: Maybe<Scalars['String']>;
  srcDesktopMin?: Maybe<Scalars['String']>;
  srcMobileMax?: Maybe<Scalars['String']>;
  srcMobileMin?: Maybe<Scalars['String']>;
  webLinkMax?: Maybe<Scalars['String']>;
  webLinkMin?: Maybe<Scalars['String']>;
};

export type PETPASS_bannerFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_bannerFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_bannerHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_bannerFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_bannerFilter>>>;
  status?: InputMaybe<PETPASS_bannerStatus_exact>;
};

export enum PETPASS_bannerHasFilter {
  alt = 'alt',
  app = 'app',
  appLink = 'appLink',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  srcDesktop = 'srcDesktop',
  srcMobile = 'srcMobile',
  status = 'status',
  webLink = 'webLink'
}

export type PETPASS_bannerOrder = {
  asc?: InputMaybe<PETPASS_bannerOrderable>;
  desc?: InputMaybe<PETPASS_bannerOrderable>;
  then?: InputMaybe<PETPASS_bannerOrder>;
};

export enum PETPASS_bannerOrderable {
  alt = 'alt',
  appLink = 'appLink',
  createdAt = 'createdAt',
  guid = 'guid',
  srcDesktop = 'srcDesktop',
  srcMobile = 'srcMobile',
  webLink = 'webLink'
}

export type PETPASS_bannerPatch = {
  alt?: InputMaybe<Scalars['String']>;
  app?: InputMaybe<PETPASS_APPRef>;
  appLink?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  srcDesktop?: InputMaybe<Scalars['String']>;
  srcMobile?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<PETPASS_bannerStatus>;
  webLink?: InputMaybe<Scalars['String']>;
};

export type PETPASS_bannerRef = {
  alt?: InputMaybe<Scalars['String']>;
  app?: InputMaybe<PETPASS_APPRef>;
  appLink?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  srcDesktop?: InputMaybe<Scalars['String']>;
  srcMobile?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<PETPASS_bannerStatus>;
  webLink?: InputMaybe<Scalars['String']>;
};

export enum PETPASS_bannerStatus {
  ACTIVE = 'ACTIVE',
  INACTIVE = 'INACTIVE'
}

export type PETPASS_bannerStatus_exact = {
  between?: InputMaybe<PETPASS_bannerStatus>;
  eq?: InputMaybe<PETPASS_bannerStatus>;
  ge?: InputMaybe<PETPASS_bannerStatus>;
  gt?: InputMaybe<PETPASS_bannerStatus>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_bannerStatus>>>;
  le?: InputMaybe<PETPASS_bannerStatus>;
  lt?: InputMaybe<PETPASS_bannerStatus>;
};

export type PETPASS_contract = {
  __typename?: 'PETPASS_contract';
  app: PETPASS_APP;
  contract?: Maybe<E360App_shop_customer_contract>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  insurance?: Maybe<PETPASS_pet_insurance>;
  partner?: Maybe<PETPASS_partner>;
  pet: PETPASS_pet;
  user: PETPASS_user;
};


export type PETPASS_contractappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_contractcontractArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
};


export type PETPASS_contractinsuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
};


export type PETPASS_contractpartnerArgs = {
  filter?: InputMaybe<PETPASS_partnerFilter>;
};


export type PETPASS_contractpetArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};


export type PETPASS_contractuserArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};

export type PETPASS_contractAggregateResult = {
  __typename?: 'PETPASS_contractAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type PETPASS_contractFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_contractFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_contractHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_contractFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_contractFilter>>>;
};

export enum PETPASS_contractHasFilter {
  app = 'app',
  contract = 'contract',
  guid = 'guid',
  insurance = 'insurance',
  partner = 'partner',
  pet = 'pet',
  user = 'user'
}

export type PETPASS_contractOrder = {
  asc?: InputMaybe<PETPASS_contractOrderable>;
  desc?: InputMaybe<PETPASS_contractOrderable>;
  then?: InputMaybe<PETPASS_contractOrder>;
};

export enum PETPASS_contractOrderable {
  guid = 'guid'
}

export type PETPASS_contractPatch = {
  app?: InputMaybe<PETPASS_APPRef>;
  contract?: InputMaybe<E360App_shop_customer_contractRef>;
  guid?: InputMaybe<Scalars['String']>;
  insurance?: InputMaybe<PETPASS_pet_insuranceRef>;
  partner?: InputMaybe<PETPASS_partnerRef>;
  pet?: InputMaybe<PETPASS_petRef>;
  user?: InputMaybe<PETPASS_userRef>;
};

export type PETPASS_contractRef = {
  app?: InputMaybe<PETPASS_APPRef>;
  contract?: InputMaybe<E360App_shop_customer_contractRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  insurance?: InputMaybe<PETPASS_pet_insuranceRef>;
  partner?: InputMaybe<PETPASS_partnerRef>;
  pet?: InputMaybe<PETPASS_petRef>;
  user?: InputMaybe<PETPASS_userRef>;
};

export type PETPASS_file = {
  __typename?: 'PETPASS_file';
  app: PETPASS_APP;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<PETPASS_user>;
  file?: Maybe<E360Storage_file>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  label: Scalars['String'];
  petInsurance?: Maybe<PETPASS_pet_insurance>;
};


export type PETPASS_fileappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_filecreatedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_filefileArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
};


export type PETPASS_filepetInsuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
};

export type PETPASS_fileAggregateResult = {
  __typename?: 'PETPASS_fileAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type PETPASS_fileFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_fileFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_fileHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  label?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<PETPASS_fileFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_fileFilter>>>;
};

export enum PETPASS_fileHasFilter {
  app = 'app',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  file = 'file',
  guid = 'guid',
  label = 'label',
  petInsurance = 'petInsurance'
}

export type PETPASS_fileOrder = {
  asc?: InputMaybe<PETPASS_fileOrderable>;
  desc?: InputMaybe<PETPASS_fileOrderable>;
  then?: InputMaybe<PETPASS_fileOrder>;
};

export enum PETPASS_fileOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  label = 'label'
}

export type PETPASS_filePatch = {
  app?: InputMaybe<PETPASS_APPRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  petInsurance?: InputMaybe<PETPASS_pet_insuranceRef>;
};

export type PETPASS_fileRef = {
  app?: InputMaybe<PETPASS_APPRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  petInsurance?: InputMaybe<PETPASS_pet_insuranceRef>;
};

export type PETPASS_insurance = {
  __typename?: 'PETPASS_insurance';
  app: PETPASS_APP;
  company: PETPASS_insurance_company;
  coverage?: Maybe<Scalars['String']>;
  coverageValue?: Maybe<Scalars['Int']>;
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_user;
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  product: PETPASS_product;
  terms?: Maybe<Scalars['String']>;
  types: Array<PETPASS_insuranceType>;
};


export type PETPASS_insuranceappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_insurancecompanyArgs = {
  filter?: InputMaybe<PETPASS_insurance_companyFilter>;
};


export type PETPASS_insurancecreatedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_insuranceproductArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
};

export type PETPASS_insuranceAggregateResult = {
  __typename?: 'PETPASS_insuranceAggregateResult';
  count?: Maybe<Scalars['Int']>;
  coverageMax?: Maybe<Scalars['String']>;
  coverageMin?: Maybe<Scalars['String']>;
  coverageValueAvg?: Maybe<Scalars['Float']>;
  coverageValueMax?: Maybe<Scalars['Int']>;
  coverageValueMin?: Maybe<Scalars['Int']>;
  coverageValueSum?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  termsMax?: Maybe<Scalars['String']>;
  termsMin?: Maybe<Scalars['String']>;
};

export type PETPASS_insuranceFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_insuranceFilter>>>;
  coverageValue?: InputMaybe<IntFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_insuranceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<PETPASS_insuranceFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_insuranceFilter>>>;
  types?: InputMaybe<PETPASS_insuranceType_exact>;
};

export enum PETPASS_insuranceHasFilter {
  app = 'app',
  company = 'company',
  coverage = 'coverage',
  coverageValue = 'coverageValue',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  guid = 'guid',
  name = 'name',
  product = 'product',
  terms = 'terms',
  types = 'types'
}

export type PETPASS_insuranceOrder = {
  asc?: InputMaybe<PETPASS_insuranceOrderable>;
  desc?: InputMaybe<PETPASS_insuranceOrderable>;
  then?: InputMaybe<PETPASS_insuranceOrder>;
};

export enum PETPASS_insuranceOrderable {
  coverage = 'coverage',
  coverageValue = 'coverageValue',
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  name = 'name',
  terms = 'terms'
}

export type PETPASS_insurancePatch = {
  app?: InputMaybe<PETPASS_APPRef>;
  company?: InputMaybe<PETPASS_insurance_companyRef>;
  coverage?: InputMaybe<Scalars['String']>;
  coverageValue?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<PETPASS_productRef>;
  terms?: InputMaybe<Scalars['String']>;
  types?: InputMaybe<Array<PETPASS_insuranceType>>;
};

export type PETPASS_insuranceRef = {
  app?: InputMaybe<PETPASS_APPRef>;
  company?: InputMaybe<PETPASS_insurance_companyRef>;
  coverage?: InputMaybe<Scalars['String']>;
  coverageValue?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<PETPASS_productRef>;
  terms?: InputMaybe<Scalars['String']>;
  types?: InputMaybe<Array<PETPASS_insuranceType>>;
};

export enum PETPASS_insuranceType {
  ACCIDENT = 'ACCIDENT',
  CIVIL_LIABILITY = 'CIVIL_LIABILITY',
  DEATH = 'DEATH',
  HEALTH = 'HEALTH',
  LIFE = 'LIFE',
  TRAVEL = 'TRAVEL'
}

export type PETPASS_insuranceType_exact = {
  between?: InputMaybe<PETPASS_insuranceType>;
  eq?: InputMaybe<PETPASS_insuranceType>;
  ge?: InputMaybe<PETPASS_insuranceType>;
  gt?: InputMaybe<PETPASS_insuranceType>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_insuranceType>>>;
  le?: InputMaybe<PETPASS_insuranceType>;
  lt?: InputMaybe<PETPASS_insuranceType>;
};

export type PETPASS_insurance_company = {
  __typename?: 'PETPASS_insurance_company';
  app: PETPASS_APP;
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_user;
  guid: Scalars['String'];
  id: Scalars['ID'];
  insurances: Array<PETPASS_insurance>;
  insurancesAggregate?: Maybe<PETPASS_insuranceAggregateResult>;
  isDefault?: Maybe<Scalars['Boolean']>;
  name: Scalars['String'];
  petExternalInsurances: Array<PETPASS_pet_external_insurance>;
  petExternalInsurancesAggregate?: Maybe<PETPASS_pet_external_insuranceAggregateResult>;
  petInsurances: Array<PETPASS_pet_insurance>;
  petInsurancesAggregate?: Maybe<PETPASS_pet_insuranceAggregateResult>;
};


export type PETPASS_insurance_companyappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_insurance_companycreatedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_insurance_companyinsurancesArgs = {
  filter?: InputMaybe<PETPASS_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insuranceOrder>;
};


export type PETPASS_insurance_companyinsurancesAggregateArgs = {
  filter?: InputMaybe<PETPASS_insuranceFilter>;
};


export type PETPASS_insurance_companypetExternalInsurancesArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_external_insuranceOrder>;
};


export type PETPASS_insurance_companypetExternalInsurancesAggregateArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
};


export type PETPASS_insurance_companypetInsurancesArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_insuranceOrder>;
};


export type PETPASS_insurance_companypetInsurancesAggregateArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
};

export type PETPASS_insurance_companyAggregateResult = {
  __typename?: 'PETPASS_insurance_companyAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type PETPASS_insurance_companyFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_insurance_companyFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_insurance_companyHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<PETPASS_insurance_companyFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_insurance_companyFilter>>>;
};

export enum PETPASS_insurance_companyHasFilter {
  app = 'app',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  guid = 'guid',
  insurances = 'insurances',
  isDefault = 'isDefault',
  name = 'name',
  petExternalInsurances = 'petExternalInsurances',
  petInsurances = 'petInsurances'
}

export type PETPASS_insurance_companyOrder = {
  asc?: InputMaybe<PETPASS_insurance_companyOrderable>;
  desc?: InputMaybe<PETPASS_insurance_companyOrderable>;
  then?: InputMaybe<PETPASS_insurance_companyOrder>;
};

export enum PETPASS_insurance_companyOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  name = 'name'
}

export type PETPASS_insurance_companyPatch = {
  app?: InputMaybe<PETPASS_APPRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  insurances?: InputMaybe<Array<PETPASS_insuranceRef>>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  petExternalInsurances?: InputMaybe<Array<PETPASS_pet_external_insuranceRef>>;
  petInsurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
};

export type PETPASS_insurance_companyRef = {
  app?: InputMaybe<PETPASS_APPRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  insurances?: InputMaybe<Array<PETPASS_insuranceRef>>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  petExternalInsurances?: InputMaybe<Array<PETPASS_pet_external_insuranceRef>>;
  petInsurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
};

export type PETPASS_location = {
  __typename?: 'PETPASS_location';
  app: PETPASS_APP;
  guid: Scalars['String'];
  id: Scalars['ID'];
  location: E360App_location;
  policy: PETPASS_locationPolicy;
};


export type PETPASS_locationappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_locationlocationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type PETPASS_locationpolicyArgs = {
  filter?: InputMaybe<PETPASS_locationPolicyFilter>;
};

export type PETPASS_locationAggregateResult = {
  __typename?: 'PETPASS_locationAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type PETPASS_locationFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_locationFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_locationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_locationFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_locationFilter>>>;
};

export enum PETPASS_locationHasFilter {
  app = 'app',
  guid = 'guid',
  location = 'location',
  policy = 'policy'
}

export type PETPASS_locationOrder = {
  asc?: InputMaybe<PETPASS_locationOrderable>;
  desc?: InputMaybe<PETPASS_locationOrderable>;
  then?: InputMaybe<PETPASS_locationOrder>;
};

export enum PETPASS_locationOrderable {
  guid = 'guid'
}

export type PETPASS_locationPatch = {
  app?: InputMaybe<PETPASS_APPRef>;
  guid?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<E360App_locationRef>;
  policy?: InputMaybe<PETPASS_locationPolicyRef>;
};

export type PETPASS_locationPolicy = {
  __typename?: 'PETPASS_locationPolicy';
  allowedAreas: Array<PETPASS_locationPolicy_areas>;
  allowedAreasComment?: Maybe<Scalars['String']>;
  allowedDangerousBreeds: Scalars['Boolean'];
  allowedDangerousBreedsComment?: Maybe<Scalars['String']>;
  allowedOthersPetTypesComment?: Maybe<Scalars['String']>;
  allowedPetSizes: Array<PETPASS_locationPolicy_petSize>;
  allowedPetSizesComment?: Maybe<Scalars['String']>;
  allowedPetTypes: Array<PETPASS_locationPolicy_petType>;
  allowedPetTypesComment?: Maybe<Scalars['String']>;
  allowedTime: Array<PETPASS_locationPolicyAllowedTime>;
  allowedTimeComment?: Maybe<Scalars['String']>;
  app: PETPASS_APP;
  guid: Scalars['String'];
  id: Scalars['ID'];
  location: PETPASS_location;
  petOwnerMustAcceptClean: Scalars['Boolean'];
  petOwnerMustAcceptFollowRules: Scalars['Boolean'];
  petOwnerMustAcceptFullResponsibility: Scalars['Boolean'];
  petOwnerMustAcceptKeepPetInRestrictedAreas: Scalars['Boolean'];
  petOwnerMustAcceptKeepPetOnLeash: Scalars['Boolean'];
  petOwnerMustAcceptKeepPetUnderControl: Scalars['Boolean'];
};


export type PETPASS_locationPolicyappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_locationPolicylocationArgs = {
  filter?: InputMaybe<PETPASS_locationFilter>;
};

export type PETPASS_locationPolicyAggregateResult = {
  __typename?: 'PETPASS_locationPolicyAggregateResult';
  allowedAreasCommentMax?: Maybe<Scalars['String']>;
  allowedAreasCommentMin?: Maybe<Scalars['String']>;
  allowedDangerousBreedsCommentMax?: Maybe<Scalars['String']>;
  allowedDangerousBreedsCommentMin?: Maybe<Scalars['String']>;
  allowedOthersPetTypesCommentMax?: Maybe<Scalars['String']>;
  allowedOthersPetTypesCommentMin?: Maybe<Scalars['String']>;
  allowedPetSizesCommentMax?: Maybe<Scalars['String']>;
  allowedPetSizesCommentMin?: Maybe<Scalars['String']>;
  allowedPetTypesCommentMax?: Maybe<Scalars['String']>;
  allowedPetTypesCommentMin?: Maybe<Scalars['String']>;
  allowedTimeCommentMax?: Maybe<Scalars['String']>;
  allowedTimeCommentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export enum PETPASS_locationPolicyAllowedTime {
  AFTERNOON = 'AFTERNOON',
  ALL_DAY = 'ALL_DAY',
  LUNCH = 'LUNCH',
  MORNING = 'MORNING',
  NIGHT = 'NIGHT'
}

export type PETPASS_locationPolicyAllowedTime_hash = {
  eq?: InputMaybe<PETPASS_locationPolicyAllowedTime>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_locationPolicyAllowedTime>>>;
};

export type PETPASS_locationPolicyFilter = {
  allowedAreas?: InputMaybe<PETPASS_locationPolicy_areas_hash>;
  allowedDangerousBreeds?: InputMaybe<Scalars['Boolean']>;
  allowedPetSizes?: InputMaybe<PETPASS_locationPolicy_petSize_hash>;
  allowedPetTypes?: InputMaybe<PETPASS_locationPolicy_petType_hash>;
  allowedTime?: InputMaybe<PETPASS_locationPolicyAllowedTime_hash>;
  and?: InputMaybe<Array<InputMaybe<PETPASS_locationPolicyFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_locationPolicyHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_locationPolicyFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_locationPolicyFilter>>>;
  petOwnerMustAcceptClean?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptFollowRules?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptFullResponsibility?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptKeepPetInRestrictedAreas?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptKeepPetOnLeash?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptKeepPetUnderControl?: InputMaybe<Scalars['Boolean']>;
};

export enum PETPASS_locationPolicyHasFilter {
  allowedAreas = 'allowedAreas',
  allowedAreasComment = 'allowedAreasComment',
  allowedDangerousBreeds = 'allowedDangerousBreeds',
  allowedDangerousBreedsComment = 'allowedDangerousBreedsComment',
  allowedOthersPetTypesComment = 'allowedOthersPetTypesComment',
  allowedPetSizes = 'allowedPetSizes',
  allowedPetSizesComment = 'allowedPetSizesComment',
  allowedPetTypes = 'allowedPetTypes',
  allowedPetTypesComment = 'allowedPetTypesComment',
  allowedTime = 'allowedTime',
  allowedTimeComment = 'allowedTimeComment',
  app = 'app',
  guid = 'guid',
  location = 'location',
  petOwnerMustAcceptClean = 'petOwnerMustAcceptClean',
  petOwnerMustAcceptFollowRules = 'petOwnerMustAcceptFollowRules',
  petOwnerMustAcceptFullResponsibility = 'petOwnerMustAcceptFullResponsibility',
  petOwnerMustAcceptKeepPetInRestrictedAreas = 'petOwnerMustAcceptKeepPetInRestrictedAreas',
  petOwnerMustAcceptKeepPetOnLeash = 'petOwnerMustAcceptKeepPetOnLeash',
  petOwnerMustAcceptKeepPetUnderControl = 'petOwnerMustAcceptKeepPetUnderControl'
}

export type PETPASS_locationPolicyOrder = {
  asc?: InputMaybe<PETPASS_locationPolicyOrderable>;
  desc?: InputMaybe<PETPASS_locationPolicyOrderable>;
  then?: InputMaybe<PETPASS_locationPolicyOrder>;
};

export enum PETPASS_locationPolicyOrderable {
  allowedAreasComment = 'allowedAreasComment',
  allowedDangerousBreedsComment = 'allowedDangerousBreedsComment',
  allowedOthersPetTypesComment = 'allowedOthersPetTypesComment',
  allowedPetSizesComment = 'allowedPetSizesComment',
  allowedPetTypesComment = 'allowedPetTypesComment',
  allowedTimeComment = 'allowedTimeComment',
  guid = 'guid'
}

export type PETPASS_locationPolicyPatch = {
  allowedAreas?: InputMaybe<Array<PETPASS_locationPolicy_areas>>;
  allowedAreasComment?: InputMaybe<Scalars['String']>;
  allowedDangerousBreeds?: InputMaybe<Scalars['Boolean']>;
  allowedDangerousBreedsComment?: InputMaybe<Scalars['String']>;
  allowedOthersPetTypesComment?: InputMaybe<Scalars['String']>;
  allowedPetSizes?: InputMaybe<Array<PETPASS_locationPolicy_petSize>>;
  allowedPetSizesComment?: InputMaybe<Scalars['String']>;
  allowedPetTypes?: InputMaybe<Array<PETPASS_locationPolicy_petType>>;
  allowedPetTypesComment?: InputMaybe<Scalars['String']>;
  allowedTime?: InputMaybe<Array<PETPASS_locationPolicyAllowedTime>>;
  allowedTimeComment?: InputMaybe<Scalars['String']>;
  app?: InputMaybe<PETPASS_APPRef>;
  guid?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<PETPASS_locationRef>;
  petOwnerMustAcceptClean?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptFollowRules?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptFullResponsibility?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptKeepPetInRestrictedAreas?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptKeepPetOnLeash?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptKeepPetUnderControl?: InputMaybe<Scalars['Boolean']>;
};

export type PETPASS_locationPolicyRef = {
  allowedAreas?: InputMaybe<Array<PETPASS_locationPolicy_areas>>;
  allowedAreasComment?: InputMaybe<Scalars['String']>;
  allowedDangerousBreeds?: InputMaybe<Scalars['Boolean']>;
  allowedDangerousBreedsComment?: InputMaybe<Scalars['String']>;
  allowedOthersPetTypesComment?: InputMaybe<Scalars['String']>;
  allowedPetSizes?: InputMaybe<Array<PETPASS_locationPolicy_petSize>>;
  allowedPetSizesComment?: InputMaybe<Scalars['String']>;
  allowedPetTypes?: InputMaybe<Array<PETPASS_locationPolicy_petType>>;
  allowedPetTypesComment?: InputMaybe<Scalars['String']>;
  allowedTime?: InputMaybe<Array<PETPASS_locationPolicyAllowedTime>>;
  allowedTimeComment?: InputMaybe<Scalars['String']>;
  app?: InputMaybe<PETPASS_APPRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  location?: InputMaybe<PETPASS_locationRef>;
  petOwnerMustAcceptClean?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptFollowRules?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptFullResponsibility?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptKeepPetInRestrictedAreas?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptKeepPetOnLeash?: InputMaybe<Scalars['Boolean']>;
  petOwnerMustAcceptKeepPetUnderControl?: InputMaybe<Scalars['Boolean']>;
};

export enum PETPASS_locationPolicy_areas {
  FULL = 'FULL',
  INDOOR = 'INDOOR',
  OUTDOOR = 'OUTDOOR'
}

export type PETPASS_locationPolicy_areas_hash = {
  eq?: InputMaybe<PETPASS_locationPolicy_areas>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_locationPolicy_areas>>>;
};

export enum PETPASS_locationPolicy_petSize {
  EXTRA_LARGE = 'EXTRA_LARGE',
  LARGE = 'LARGE',
  MEDIUM = 'MEDIUM',
  MINI = 'MINI',
  SMALL = 'SMALL'
}

export type PETPASS_locationPolicy_petSize_hash = {
  eq?: InputMaybe<PETPASS_locationPolicy_petSize>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_locationPolicy_petSize>>>;
};

export enum PETPASS_locationPolicy_petType {
  CAT = 'CAT',
  DOG = 'DOG',
  OTHERS = 'OTHERS'
}

export type PETPASS_locationPolicy_petType_hash = {
  eq?: InputMaybe<PETPASS_locationPolicy_petType>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_locationPolicy_petType>>>;
};

export type PETPASS_locationRef = {
  app?: InputMaybe<PETPASS_APPRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  location?: InputMaybe<E360App_locationRef>;
  policy?: InputMaybe<PETPASS_locationPolicyRef>;
};

export type PETPASS_locator = {
  __typename?: 'PETPASS_locator';
  activationCode: Scalars['String'];
  adminCode: Scalars['String'];
  assignedAt?: Maybe<Scalars['DateTime']>;
  assignedBy?: Maybe<PETPASS_user>;
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_user;
  distributorType: PETPASS_locatorDistributorType;
  id: Scalars['ID'];
  isDisabled: Scalars['Boolean'];
  isTest: Scalars['Boolean'];
  lotRef: Scalars['String'];
  pet?: Maybe<PETPASS_pet>;
  ref: Scalars['String'];
  sentToProvider: Scalars['Boolean'];
  sentToProviderAt?: Maybe<Scalars['DateTime']>;
};


export type PETPASS_locatorassignedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_locatorcreatedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_locatorpetArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};

export type PETPASS_locatorAggregateResult = {
  __typename?: 'PETPASS_locatorAggregateResult';
  activationCodeMax?: Maybe<Scalars['String']>;
  activationCodeMin?: Maybe<Scalars['String']>;
  adminCodeMax?: Maybe<Scalars['String']>;
  adminCodeMin?: Maybe<Scalars['String']>;
  assignedAtMax?: Maybe<Scalars['DateTime']>;
  assignedAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  lotRefMax?: Maybe<Scalars['String']>;
  lotRefMin?: Maybe<Scalars['String']>;
  refMax?: Maybe<Scalars['String']>;
  refMin?: Maybe<Scalars['String']>;
  sentToProviderAtMax?: Maybe<Scalars['DateTime']>;
  sentToProviderAtMin?: Maybe<Scalars['DateTime']>;
};

export enum PETPASS_locatorDistributorType {
  PARTNER = 'PARTNER',
  PETPASS = 'PETPASS',
  SHELTER = 'SHELTER'
}

export type PETPASS_locatorDistributorType_exact = {
  between?: InputMaybe<PETPASS_locatorDistributorType>;
  eq?: InputMaybe<PETPASS_locatorDistributorType>;
  ge?: InputMaybe<PETPASS_locatorDistributorType>;
  gt?: InputMaybe<PETPASS_locatorDistributorType>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_locatorDistributorType>>>;
  le?: InputMaybe<PETPASS_locatorDistributorType>;
  lt?: InputMaybe<PETPASS_locatorDistributorType>;
};

export type PETPASS_locatorFilter = {
  activationCode?: InputMaybe<StringHashFilter>;
  adminCode?: InputMaybe<StringHashFilter>;
  and?: InputMaybe<Array<InputMaybe<PETPASS_locatorFilter>>>;
  assignedAt?: InputMaybe<DateTimeFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  distributorType?: InputMaybe<PETPASS_locatorDistributorType_exact>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_locatorHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isTest?: InputMaybe<Scalars['Boolean']>;
  lotRef?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<PETPASS_locatorFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_locatorFilter>>>;
  ref?: InputMaybe<StringHashFilter>;
  sentToProvider?: InputMaybe<Scalars['Boolean']>;
  sentToProviderAt?: InputMaybe<DateTimeFilter>;
};

export enum PETPASS_locatorHasFilter {
  activationCode = 'activationCode',
  adminCode = 'adminCode',
  assignedAt = 'assignedAt',
  assignedBy = 'assignedBy',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  distributorType = 'distributorType',
  isDisabled = 'isDisabled',
  isTest = 'isTest',
  lotRef = 'lotRef',
  pet = 'pet',
  ref = 'ref',
  sentToProvider = 'sentToProvider',
  sentToProviderAt = 'sentToProviderAt'
}

export type PETPASS_locatorOrder = {
  asc?: InputMaybe<PETPASS_locatorOrderable>;
  desc?: InputMaybe<PETPASS_locatorOrderable>;
  then?: InputMaybe<PETPASS_locatorOrder>;
};

export enum PETPASS_locatorOrderable {
  activationCode = 'activationCode',
  adminCode = 'adminCode',
  assignedAt = 'assignedAt',
  createdAt = 'createdAt',
  lotRef = 'lotRef',
  ref = 'ref',
  sentToProviderAt = 'sentToProviderAt'
}

export type PETPASS_locatorPatch = {
  activationCode?: InputMaybe<Scalars['String']>;
  adminCode?: InputMaybe<Scalars['String']>;
  assignedAt?: InputMaybe<Scalars['DateTime']>;
  assignedBy?: InputMaybe<PETPASS_userRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  distributorType?: InputMaybe<PETPASS_locatorDistributorType>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isTest?: InputMaybe<Scalars['Boolean']>;
  lotRef?: InputMaybe<Scalars['String']>;
  pet?: InputMaybe<PETPASS_petRef>;
  ref?: InputMaybe<Scalars['String']>;
  sentToProvider?: InputMaybe<Scalars['Boolean']>;
  sentToProviderAt?: InputMaybe<Scalars['DateTime']>;
};

export type PETPASS_locatorRef = {
  activationCode?: InputMaybe<Scalars['String']>;
  adminCode?: InputMaybe<Scalars['String']>;
  assignedAt?: InputMaybe<Scalars['DateTime']>;
  assignedBy?: InputMaybe<PETPASS_userRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  distributorType?: InputMaybe<PETPASS_locatorDistributorType>;
  id?: InputMaybe<Scalars['ID']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isTest?: InputMaybe<Scalars['Boolean']>;
  lotRef?: InputMaybe<Scalars['String']>;
  pet?: InputMaybe<PETPASS_petRef>;
  ref?: InputMaybe<Scalars['String']>;
  sentToProvider?: InputMaybe<Scalars['Boolean']>;
  sentToProviderAt?: InputMaybe<Scalars['DateTime']>;
};

export type PETPASS_partner = {
  __typename?: 'PETPASS_partner';
  allowedProducts: Array<PETPASS_product>;
  allowedProductsAggregate?: Maybe<PETPASS_productAggregateResult>;
  app: PETPASS_APP;
  contracts: Array<PETPASS_contract>;
  contractsAggregate?: Maybe<PETPASS_contractAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  partner: E360App_partner;
  purchases: Array<PETPASS_purchase>;
  purchasesAggregate?: Maybe<PETPASS_purchaseAggregateResult>;
};


export type PETPASS_partnerallowedProductsArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_productOrder>;
};


export type PETPASS_partnerallowedProductsAggregateArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
};


export type PETPASS_partnerappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_partnercontractsArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_contractOrder>;
};


export type PETPASS_partnercontractsAggregateArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
};


export type PETPASS_partnerpartnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};


export type PETPASS_partnerpurchasesArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_purchaseOrder>;
};


export type PETPASS_partnerpurchasesAggregateArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
};

export type PETPASS_partnerAggregateResult = {
  __typename?: 'PETPASS_partnerAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type PETPASS_partnerFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_partnerFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_partnerHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_partnerFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_partnerFilter>>>;
};

export enum PETPASS_partnerHasFilter {
  allowedProducts = 'allowedProducts',
  app = 'app',
  contracts = 'contracts',
  guid = 'guid',
  partner = 'partner',
  purchases = 'purchases'
}

export type PETPASS_partnerOrder = {
  asc?: InputMaybe<PETPASS_partnerOrderable>;
  desc?: InputMaybe<PETPASS_partnerOrderable>;
  then?: InputMaybe<PETPASS_partnerOrder>;
};

export enum PETPASS_partnerOrderable {
  guid = 'guid'
}

export type PETPASS_partnerPatch = {
  allowedProducts?: InputMaybe<Array<PETPASS_productRef>>;
  app?: InputMaybe<PETPASS_APPRef>;
  contracts?: InputMaybe<Array<PETPASS_contractRef>>;
  guid?: InputMaybe<Scalars['String']>;
  partner?: InputMaybe<E360App_partnerRef>;
  purchases?: InputMaybe<Array<PETPASS_purchaseRef>>;
};

export type PETPASS_partnerRef = {
  allowedProducts?: InputMaybe<Array<PETPASS_productRef>>;
  app?: InputMaybe<PETPASS_APPRef>;
  contracts?: InputMaybe<Array<PETPASS_contractRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  partner?: InputMaybe<E360App_partnerRef>;
  purchases?: InputMaybe<Array<PETPASS_purchaseRef>>;
};

export type PETPASS_pet = {
  __typename?: 'PETPASS_pet';
  activeAt?: Maybe<Scalars['DateTime']>;
  activeBy?: Maybe<PETPASS_user>;
  app: PETPASS_APP;
  contracts: Array<PETPASS_contract>;
  contractsAggregate?: Maybe<PETPASS_contractAggregateResult>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  deletedBy?: Maybe<PETPASS_user>;
  deletedReason?: Maybe<Scalars['String']>;
  externalInsurances?: Maybe<Array<PETPASS_pet_external_insurance>>;
  externalInsurancesAggregate?: Maybe<PETPASS_pet_external_insuranceAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  inactiveAt?: Maybe<Scalars['DateTime']>;
  inactiveBy?: Maybe<PETPASS_user>;
  inactiveReason?: Maybe<Scalars['String']>;
  insurances?: Maybe<Array<PETPASS_pet_insurance>>;
  insurancesAggregate?: Maybe<PETPASS_pet_insuranceAggregateResult>;
  locator?: Maybe<PETPASS_locator>;
  meetingDoctorsUser?: Maybe<MeetingDoctors_user>;
  owners: Array<PETPASS_user>;
  ownersAggregate?: Maybe<PETPASS_userAggregateResult>;
  pet: Pet;
  sosHistory: Array<PETPASS_sos>;
  sosHistoryAggregate?: Maybe<PETPASS_sosAggregateResult>;
  status?: Maybe<PETPASS_petStatus>;
  tmp_vet?: Maybe<E360App_location>;
  tmp_vetEmail?: Maybe<Scalars['String']>;
  tmp_vetName?: Maybe<Scalars['String']>;
  tmp_vetPhone?: Maybe<Scalars['String']>;
  tokens?: Maybe<Array<PETPASS_petToken>>;
  tokensAggregate?: Maybe<PETPASS_petTokenAggregateResult>;
};


export type PETPASS_petactiveByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_petappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_petcontractsArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_contractOrder>;
};


export type PETPASS_petcontractsAggregateArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
};


export type PETPASS_petdeletedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_petexternalInsurancesArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_external_insuranceOrder>;
};


export type PETPASS_petexternalInsurancesAggregateArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
};


export type PETPASS_petinactiveByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_petinsurancesArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_insuranceOrder>;
};


export type PETPASS_petinsurancesAggregateArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
};


export type PETPASS_petlocatorArgs = {
  filter?: InputMaybe<PETPASS_locatorFilter>;
};


export type PETPASS_petmeetingDoctorsUserArgs = {
  filter?: InputMaybe<MeetingDoctors_userFilter>;
};


export type PETPASS_petownersArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_userOrder>;
};


export type PETPASS_petownersAggregateArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_petpetArgs = {
  filter?: InputMaybe<PetFilter>;
};


export type PETPASS_petsosHistoryArgs = {
  filter?: InputMaybe<PETPASS_sosFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_sosOrder>;
};


export type PETPASS_petsosHistoryAggregateArgs = {
  filter?: InputMaybe<PETPASS_sosFilter>;
};


export type PETPASS_pettmp_vetArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type PETPASS_pettokensArgs = {
  filter?: InputMaybe<PETPASS_petTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petTokenOrder>;
};


export type PETPASS_pettokensAggregateArgs = {
  filter?: InputMaybe<PETPASS_petTokenFilter>;
};

export type PETPASS_petAggregateResult = {
  __typename?: 'PETPASS_petAggregateResult';
  activeAtMax?: Maybe<Scalars['DateTime']>;
  activeAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  deletedAtMax?: Maybe<Scalars['DateTime']>;
  deletedAtMin?: Maybe<Scalars['DateTime']>;
  deletedReasonMax?: Maybe<Scalars['String']>;
  deletedReasonMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  inactiveAtMax?: Maybe<Scalars['DateTime']>;
  inactiveAtMin?: Maybe<Scalars['DateTime']>;
  inactiveReasonMax?: Maybe<Scalars['String']>;
  inactiveReasonMin?: Maybe<Scalars['String']>;
  tmp_vetEmailMax?: Maybe<Scalars['String']>;
  tmp_vetEmailMin?: Maybe<Scalars['String']>;
  tmp_vetNameMax?: Maybe<Scalars['String']>;
  tmp_vetNameMin?: Maybe<Scalars['String']>;
  tmp_vetPhoneMax?: Maybe<Scalars['String']>;
  tmp_vetPhoneMin?: Maybe<Scalars['String']>;
};

export type PETPASS_petFilter = {
  activeAt?: InputMaybe<DateTimeFilter>;
  and?: InputMaybe<Array<InputMaybe<PETPASS_petFilter>>>;
  deletedAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_petHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  inactiveAt?: InputMaybe<DateTimeFilter>;
  not?: InputMaybe<PETPASS_petFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_petFilter>>>;
  status?: InputMaybe<PETPASS_petStatus_exact>;
  tmp_vetEmail?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  tmp_vetName?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  tmp_vetPhone?: InputMaybe<StringExactFilter_StringRegExpFilter>;
};

export enum PETPASS_petHasFilter {
  activeAt = 'activeAt',
  activeBy = 'activeBy',
  app = 'app',
  contracts = 'contracts',
  deletedAt = 'deletedAt',
  deletedBy = 'deletedBy',
  deletedReason = 'deletedReason',
  externalInsurances = 'externalInsurances',
  guid = 'guid',
  inactiveAt = 'inactiveAt',
  inactiveBy = 'inactiveBy',
  inactiveReason = 'inactiveReason',
  insurances = 'insurances',
  locator = 'locator',
  meetingDoctorsUser = 'meetingDoctorsUser',
  owners = 'owners',
  pet = 'pet',
  sosHistory = 'sosHistory',
  status = 'status',
  tmp_vet = 'tmp_vet',
  tmp_vetEmail = 'tmp_vetEmail',
  tmp_vetName = 'tmp_vetName',
  tmp_vetPhone = 'tmp_vetPhone',
  tokens = 'tokens'
}

export type PETPASS_petOrder = {
  asc?: InputMaybe<PETPASS_petOrderable>;
  desc?: InputMaybe<PETPASS_petOrderable>;
  then?: InputMaybe<PETPASS_petOrder>;
};

export enum PETPASS_petOrderable {
  activeAt = 'activeAt',
  deletedAt = 'deletedAt',
  deletedReason = 'deletedReason',
  guid = 'guid',
  inactiveAt = 'inactiveAt',
  inactiveReason = 'inactiveReason',
  tmp_vetEmail = 'tmp_vetEmail',
  tmp_vetName = 'tmp_vetName',
  tmp_vetPhone = 'tmp_vetPhone'
}

export type PETPASS_petPatch = {
  activeAt?: InputMaybe<Scalars['DateTime']>;
  activeBy?: InputMaybe<PETPASS_userRef>;
  app?: InputMaybe<PETPASS_APPRef>;
  contracts?: InputMaybe<Array<PETPASS_contractRef>>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  deletedBy?: InputMaybe<PETPASS_userRef>;
  deletedReason?: InputMaybe<Scalars['String']>;
  externalInsurances?: InputMaybe<Array<PETPASS_pet_external_insuranceRef>>;
  guid?: InputMaybe<Scalars['String']>;
  inactiveAt?: InputMaybe<Scalars['DateTime']>;
  inactiveBy?: InputMaybe<PETPASS_userRef>;
  inactiveReason?: InputMaybe<Scalars['String']>;
  insurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
  locator?: InputMaybe<PETPASS_locatorRef>;
  meetingDoctorsUser?: InputMaybe<MeetingDoctors_userRef>;
  owners?: InputMaybe<Array<PETPASS_userRef>>;
  pet?: InputMaybe<PetRef>;
  sosHistory?: InputMaybe<Array<PETPASS_sosRef>>;
  status?: InputMaybe<PETPASS_petStatus>;
  tmp_vet?: InputMaybe<E360App_locationRef>;
  tmp_vetEmail?: InputMaybe<Scalars['String']>;
  tmp_vetName?: InputMaybe<Scalars['String']>;
  tmp_vetPhone?: InputMaybe<Scalars['String']>;
  tokens?: InputMaybe<Array<PETPASS_petTokenRef>>;
};

export type PETPASS_petRef = {
  activeAt?: InputMaybe<Scalars['DateTime']>;
  activeBy?: InputMaybe<PETPASS_userRef>;
  app?: InputMaybe<PETPASS_APPRef>;
  contracts?: InputMaybe<Array<PETPASS_contractRef>>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  deletedBy?: InputMaybe<PETPASS_userRef>;
  deletedReason?: InputMaybe<Scalars['String']>;
  externalInsurances?: InputMaybe<Array<PETPASS_pet_external_insuranceRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  inactiveAt?: InputMaybe<Scalars['DateTime']>;
  inactiveBy?: InputMaybe<PETPASS_userRef>;
  inactiveReason?: InputMaybe<Scalars['String']>;
  insurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
  locator?: InputMaybe<PETPASS_locatorRef>;
  meetingDoctorsUser?: InputMaybe<MeetingDoctors_userRef>;
  owners?: InputMaybe<Array<PETPASS_userRef>>;
  pet?: InputMaybe<PetRef>;
  sosHistory?: InputMaybe<Array<PETPASS_sosRef>>;
  status?: InputMaybe<PETPASS_petStatus>;
  tmp_vet?: InputMaybe<E360App_locationRef>;
  tmp_vetEmail?: InputMaybe<Scalars['String']>;
  tmp_vetName?: InputMaybe<Scalars['String']>;
  tmp_vetPhone?: InputMaybe<Scalars['String']>;
  tokens?: InputMaybe<Array<PETPASS_petTokenRef>>;
};

export enum PETPASS_petStatus {
  ACTIVE = 'ACTIVE',
  DELETED = 'DELETED',
  INACTIVE = 'INACTIVE'
}

export type PETPASS_petStatus_exact = {
  between?: InputMaybe<PETPASS_petStatus>;
  eq?: InputMaybe<PETPASS_petStatus>;
  ge?: InputMaybe<PETPASS_petStatus>;
  gt?: InputMaybe<PETPASS_petStatus>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_petStatus>>>;
  le?: InputMaybe<PETPASS_petStatus>;
  lt?: InputMaybe<PETPASS_petStatus>;
};

export type PETPASS_petToken = {
  __typename?: 'PETPASS_petToken';
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_user;
  expiredAt?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  pet: PETPASS_pet;
  requiredData: Array<PETPASS_petTokenDataType>;
  status: PETPASS_petTokenStatus;
  type: PETPASS_petTokenType;
  usedAt?: Maybe<Scalars['DateTime']>;
  user: PETPASS_user;
};


export type PETPASS_petTokencreatedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_petTokenpetArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};


export type PETPASS_petTokenuserArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};

export type PETPASS_petTokenAggregateResult = {
  __typename?: 'PETPASS_petTokenAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  expiredAtMax?: Maybe<Scalars['DateTime']>;
  expiredAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  usedAtMax?: Maybe<Scalars['DateTime']>;
  usedAtMin?: Maybe<Scalars['DateTime']>;
};

export enum PETPASS_petTokenDataType {
  MICROCHIP = 'MICROCHIP'
}

export type PETPASS_petTokenDataType_exact = {
  between?: InputMaybe<PETPASS_petTokenDataType>;
  eq?: InputMaybe<PETPASS_petTokenDataType>;
  ge?: InputMaybe<PETPASS_petTokenDataType>;
  gt?: InputMaybe<PETPASS_petTokenDataType>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_petTokenDataType>>>;
  le?: InputMaybe<PETPASS_petTokenDataType>;
  lt?: InputMaybe<PETPASS_petTokenDataType>;
};

export type PETPASS_petTokenFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_petTokenFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  expiredAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_petTokenHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_petTokenFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_petTokenFilter>>>;
  requiredData?: InputMaybe<PETPASS_petTokenDataType_exact>;
  status?: InputMaybe<PETPASS_petTokenStatus_exact>;
  type?: InputMaybe<PETPASS_petTokenType_exact>;
  usedAt?: InputMaybe<DateTimeFilter>;
};

export enum PETPASS_petTokenHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  expiredAt = 'expiredAt',
  guid = 'guid',
  pet = 'pet',
  requiredData = 'requiredData',
  status = 'status',
  type = 'type',
  usedAt = 'usedAt',
  user = 'user'
}

export type PETPASS_petTokenOrder = {
  asc?: InputMaybe<PETPASS_petTokenOrderable>;
  desc?: InputMaybe<PETPASS_petTokenOrderable>;
  then?: InputMaybe<PETPASS_petTokenOrder>;
};

export enum PETPASS_petTokenOrderable {
  createdAt = 'createdAt',
  expiredAt = 'expiredAt',
  guid = 'guid',
  usedAt = 'usedAt'
}

export type PETPASS_petTokenPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  pet?: InputMaybe<PETPASS_petRef>;
  requiredData?: InputMaybe<Array<PETPASS_petTokenDataType>>;
  status?: InputMaybe<PETPASS_petTokenStatus>;
  type?: InputMaybe<PETPASS_petTokenType>;
  usedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<PETPASS_userRef>;
};

export type PETPASS_petTokenRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  pet?: InputMaybe<PETPASS_petRef>;
  requiredData?: InputMaybe<Array<PETPASS_petTokenDataType>>;
  status?: InputMaybe<PETPASS_petTokenStatus>;
  type?: InputMaybe<PETPASS_petTokenType>;
  usedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<PETPASS_userRef>;
};

export enum PETPASS_petTokenStatus {
  ACTIVE = 'ACTIVE',
  EXPIRED = 'EXPIRED',
  USED = 'USED'
}

export type PETPASS_petTokenStatus_exact = {
  between?: InputMaybe<PETPASS_petTokenStatus>;
  eq?: InputMaybe<PETPASS_petTokenStatus>;
  ge?: InputMaybe<PETPASS_petTokenStatus>;
  gt?: InputMaybe<PETPASS_petTokenStatus>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_petTokenStatus>>>;
  le?: InputMaybe<PETPASS_petTokenStatus>;
  lt?: InputMaybe<PETPASS_petTokenStatus>;
};

export enum PETPASS_petTokenType {
  UPDATE_DATA = 'UPDATE_DATA'
}

export type PETPASS_petTokenType_exact = {
  between?: InputMaybe<PETPASS_petTokenType>;
  eq?: InputMaybe<PETPASS_petTokenType>;
  ge?: InputMaybe<PETPASS_petTokenType>;
  gt?: InputMaybe<PETPASS_petTokenType>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_petTokenType>>>;
  le?: InputMaybe<PETPASS_petTokenType>;
  lt?: InputMaybe<PETPASS_petTokenType>;
};

export type PETPASS_pet_external_insurance = {
  __typename?: 'PETPASS_pet_external_insurance';
  app: PETPASS_APP;
  company: PETPASS_insurance_company;
  coverage?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_user;
  description?: Maybe<Scalars['String']>;
  expirationDate?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  pet: PETPASS_pet;
  policyNumber?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  status: PETPASS_pet_external_insurance_status;
  terms?: Maybe<Scalars['String']>;
  types: Array<PETPASS_insuranceType>;
};


export type PETPASS_pet_external_insuranceappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_pet_external_insurancecompanyArgs = {
  filter?: InputMaybe<PETPASS_insurance_companyFilter>;
};


export type PETPASS_pet_external_insurancecreatedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_pet_external_insurancepetArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};

export type PETPASS_pet_external_insuranceAggregateResult = {
  __typename?: 'PETPASS_pet_external_insuranceAggregateResult';
  count?: Maybe<Scalars['Int']>;
  coverageMax?: Maybe<Scalars['String']>;
  coverageMin?: Maybe<Scalars['String']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  expirationDateMax?: Maybe<Scalars['DateTime']>;
  expirationDateMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  policyNumberMax?: Maybe<Scalars['String']>;
  policyNumberMin?: Maybe<Scalars['String']>;
  priceAvg?: Maybe<Scalars['Float']>;
  priceMax?: Maybe<Scalars['Int']>;
  priceMin?: Maybe<Scalars['Int']>;
  priceSum?: Maybe<Scalars['Int']>;
  termsMax?: Maybe<Scalars['String']>;
  termsMin?: Maybe<Scalars['String']>;
};

export type PETPASS_pet_external_insuranceFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_pet_external_insuranceFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  expirationDate?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_pet_external_insuranceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_pet_external_insuranceFilter>>>;
  policyNumber?: InputMaybe<StringExactFilter>;
  status?: InputMaybe<PETPASS_pet_external_insurance_status_exact>;
  types?: InputMaybe<PETPASS_insuranceType_exact>;
};

export enum PETPASS_pet_external_insuranceHasFilter {
  app = 'app',
  company = 'company',
  coverage = 'coverage',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  expirationDate = 'expirationDate',
  guid = 'guid',
  name = 'name',
  pet = 'pet',
  policyNumber = 'policyNumber',
  price = 'price',
  status = 'status',
  terms = 'terms',
  types = 'types'
}

export type PETPASS_pet_external_insuranceOrder = {
  asc?: InputMaybe<PETPASS_pet_external_insuranceOrderable>;
  desc?: InputMaybe<PETPASS_pet_external_insuranceOrderable>;
  then?: InputMaybe<PETPASS_pet_external_insuranceOrder>;
};

export enum PETPASS_pet_external_insuranceOrderable {
  coverage = 'coverage',
  createdAt = 'createdAt',
  description = 'description',
  expirationDate = 'expirationDate',
  guid = 'guid',
  name = 'name',
  policyNumber = 'policyNumber',
  price = 'price',
  terms = 'terms'
}

export type PETPASS_pet_external_insurancePatch = {
  app?: InputMaybe<PETPASS_APPRef>;
  company?: InputMaybe<PETPASS_insurance_companyRef>;
  coverage?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  description?: InputMaybe<Scalars['String']>;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  pet?: InputMaybe<PETPASS_petRef>;
  policyNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<PETPASS_pet_external_insurance_status>;
  terms?: InputMaybe<Scalars['String']>;
  types?: InputMaybe<Array<PETPASS_insuranceType>>;
};

export type PETPASS_pet_external_insuranceRef = {
  app?: InputMaybe<PETPASS_APPRef>;
  company?: InputMaybe<PETPASS_insurance_companyRef>;
  coverage?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  description?: InputMaybe<Scalars['String']>;
  expirationDate?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  pet?: InputMaybe<PETPASS_petRef>;
  policyNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<PETPASS_pet_external_insurance_status>;
  terms?: InputMaybe<Scalars['String']>;
  types?: InputMaybe<Array<PETPASS_insuranceType>>;
};

export enum PETPASS_pet_external_insurance_status {
  ACTIVE = 'ACTIVE',
  CANCELED = 'CANCELED',
  EXPIRED = 'EXPIRED',
  INACTIVE = 'INACTIVE'
}

export type PETPASS_pet_external_insurance_status_exact = {
  between?: InputMaybe<PETPASS_pet_external_insurance_status>;
  eq?: InputMaybe<PETPASS_pet_external_insurance_status>;
  ge?: InputMaybe<PETPASS_pet_external_insurance_status>;
  gt?: InputMaybe<PETPASS_pet_external_insurance_status>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_pet_external_insurance_status>>>;
  le?: InputMaybe<PETPASS_pet_external_insurance_status>;
  lt?: InputMaybe<PETPASS_pet_external_insurance_status>;
};

export type PETPASS_pet_insurance = {
  __typename?: 'PETPASS_pet_insurance';
  app: PETPASS_APP;
  company: PETPASS_insurance_company;
  contract?: Maybe<PETPASS_contract>;
  coverageValue?: Maybe<Scalars['Int']>;
  createdAt: Scalars['DateTime'];
  createdBy: PETPASS_user;
  endAt?: Maybe<Scalars['DateTime']>;
  files: Array<PETPASS_file>;
  filesAggregate?: Maybe<PETPASS_fileAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  pet: PETPASS_pet;
  policyGroup?: Maybe<Scalars['String']>;
  policyNumber?: Maybe<Scalars['String']>;
  product: PETPASS_product;
  purchase?: Maybe<PETPASS_purchase>;
  startAt?: Maybe<Scalars['DateTime']>;
  status: PETPASS_pet_insurance_status;
  types: Array<PETPASS_insuranceType>;
};


export type PETPASS_pet_insuranceappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_pet_insurancecompanyArgs = {
  filter?: InputMaybe<PETPASS_insurance_companyFilter>;
};


export type PETPASS_pet_insurancecontractArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
};


export type PETPASS_pet_insurancecreatedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_pet_insurancefilesArgs = {
  filter?: InputMaybe<PETPASS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_fileOrder>;
};


export type PETPASS_pet_insurancefilesAggregateArgs = {
  filter?: InputMaybe<PETPASS_fileFilter>;
};


export type PETPASS_pet_insurancepetArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};


export type PETPASS_pet_insuranceproductArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
};


export type PETPASS_pet_insurancepurchaseArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
};

export type PETPASS_pet_insuranceAggregateResult = {
  __typename?: 'PETPASS_pet_insuranceAggregateResult';
  count?: Maybe<Scalars['Int']>;
  coverageValueAvg?: Maybe<Scalars['Float']>;
  coverageValueMax?: Maybe<Scalars['Int']>;
  coverageValueMin?: Maybe<Scalars['Int']>;
  coverageValueSum?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  policyGroupMax?: Maybe<Scalars['String']>;
  policyGroupMin?: Maybe<Scalars['String']>;
  policyNumberMax?: Maybe<Scalars['String']>;
  policyNumberMin?: Maybe<Scalars['String']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
};

export type PETPASS_pet_insuranceFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_pet_insuranceFilter>>>;
  coverageValue?: InputMaybe<IntFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  endAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_pet_insuranceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_pet_insuranceFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_pet_insuranceFilter>>>;
  policyGroup?: InputMaybe<StringExactFilter>;
  policyNumber?: InputMaybe<StringExactFilter>;
  startAt?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<PETPASS_pet_insurance_status_exact>;
  types?: InputMaybe<PETPASS_insuranceType_exact>;
};

export enum PETPASS_pet_insuranceHasFilter {
  app = 'app',
  company = 'company',
  contract = 'contract',
  coverageValue = 'coverageValue',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  endAt = 'endAt',
  files = 'files',
  guid = 'guid',
  pet = 'pet',
  policyGroup = 'policyGroup',
  policyNumber = 'policyNumber',
  product = 'product',
  purchase = 'purchase',
  startAt = 'startAt',
  status = 'status',
  types = 'types'
}

export type PETPASS_pet_insuranceOrder = {
  asc?: InputMaybe<PETPASS_pet_insuranceOrderable>;
  desc?: InputMaybe<PETPASS_pet_insuranceOrderable>;
  then?: InputMaybe<PETPASS_pet_insuranceOrder>;
};

export enum PETPASS_pet_insuranceOrderable {
  coverageValue = 'coverageValue',
  createdAt = 'createdAt',
  endAt = 'endAt',
  guid = 'guid',
  policyGroup = 'policyGroup',
  policyNumber = 'policyNumber',
  startAt = 'startAt'
}

export type PETPASS_pet_insurancePatch = {
  app?: InputMaybe<PETPASS_APPRef>;
  company?: InputMaybe<PETPASS_insurance_companyRef>;
  contract?: InputMaybe<PETPASS_contractRef>;
  coverageValue?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  files?: InputMaybe<Array<PETPASS_fileRef>>;
  guid?: InputMaybe<Scalars['String']>;
  pet?: InputMaybe<PETPASS_petRef>;
  policyGroup?: InputMaybe<Scalars['String']>;
  policyNumber?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<PETPASS_productRef>;
  purchase?: InputMaybe<PETPASS_purchaseRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<PETPASS_pet_insurance_status>;
  types?: InputMaybe<Array<PETPASS_insuranceType>>;
};

export type PETPASS_pet_insuranceRef = {
  app?: InputMaybe<PETPASS_APPRef>;
  company?: InputMaybe<PETPASS_insurance_companyRef>;
  contract?: InputMaybe<PETPASS_contractRef>;
  coverageValue?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<PETPASS_userRef>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  files?: InputMaybe<Array<PETPASS_fileRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  pet?: InputMaybe<PETPASS_petRef>;
  policyGroup?: InputMaybe<Scalars['String']>;
  policyNumber?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<PETPASS_productRef>;
  purchase?: InputMaybe<PETPASS_purchaseRef>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<PETPASS_pet_insurance_status>;
  types?: InputMaybe<Array<PETPASS_insuranceType>>;
};

export enum PETPASS_pet_insurance_status {
  ACTIVE = 'ACTIVE',
  CANCELED = 'CANCELED',
  EXPIRED = 'EXPIRED',
  INACTIVE = 'INACTIVE',
  PENDING_ACTIVATION = 'PENDING_ACTIVATION',
  PENDING_PAYMENT = 'PENDING_PAYMENT',
  REQUESTED = 'REQUESTED'
}

export type PETPASS_pet_insurance_status_exact = {
  between?: InputMaybe<PETPASS_pet_insurance_status>;
  eq?: InputMaybe<PETPASS_pet_insurance_status>;
  ge?: InputMaybe<PETPASS_pet_insurance_status>;
  gt?: InputMaybe<PETPASS_pet_insurance_status>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_pet_insurance_status>>>;
  le?: InputMaybe<PETPASS_pet_insurance_status>;
  lt?: InputMaybe<PETPASS_pet_insurance_status>;
};

export type PETPASS_product = {
  __typename?: 'PETPASS_product';
  app: PETPASS_APP;
  guid: Scalars['String'];
  id: Scalars['ID'];
  insurance?: Maybe<PETPASS_insurance>;
  petInsurances: Array<PETPASS_pet_insurance>;
  petInsurancesAggregate?: Maybe<PETPASS_pet_insuranceAggregateResult>;
  product?: Maybe<E360App_shop_product>;
  purchases: Array<PETPASS_purchase>;
  purchasesAggregate?: Maybe<PETPASS_purchaseAggregateResult>;
  type: PETPASS_productType;
};


export type PETPASS_productappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_productinsuranceArgs = {
  filter?: InputMaybe<PETPASS_insuranceFilter>;
};


export type PETPASS_productpetInsurancesArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_insuranceOrder>;
};


export type PETPASS_productpetInsurancesAggregateArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
};


export type PETPASS_productproductArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};


export type PETPASS_productpurchasesArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_purchaseOrder>;
};


export type PETPASS_productpurchasesAggregateArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
};

export type PETPASS_productAggregateResult = {
  __typename?: 'PETPASS_productAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type PETPASS_productFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_productFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_productHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_productFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_productFilter>>>;
  type?: InputMaybe<PETPASS_productType_exact>;
};

export enum PETPASS_productHasFilter {
  app = 'app',
  guid = 'guid',
  insurance = 'insurance',
  petInsurances = 'petInsurances',
  product = 'product',
  purchases = 'purchases',
  type = 'type'
}

export type PETPASS_productOrder = {
  asc?: InputMaybe<PETPASS_productOrderable>;
  desc?: InputMaybe<PETPASS_productOrderable>;
  then?: InputMaybe<PETPASS_productOrder>;
};

export enum PETPASS_productOrderable {
  guid = 'guid'
}

export type PETPASS_productPatch = {
  app?: InputMaybe<PETPASS_APPRef>;
  guid?: InputMaybe<Scalars['String']>;
  insurance?: InputMaybe<PETPASS_insuranceRef>;
  petInsurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
  product?: InputMaybe<E360App_shop_productRef>;
  purchases?: InputMaybe<Array<PETPASS_purchaseRef>>;
  type?: InputMaybe<PETPASS_productType>;
};

export type PETPASS_productRef = {
  app?: InputMaybe<PETPASS_APPRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  insurance?: InputMaybe<PETPASS_insuranceRef>;
  petInsurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
  product?: InputMaybe<E360App_shop_productRef>;
  purchases?: InputMaybe<Array<PETPASS_purchaseRef>>;
  type?: InputMaybe<PETPASS_productType>;
};

export enum PETPASS_productType {
  INSURANCE = 'INSURANCE',
  SOFTWARE = 'SOFTWARE'
}

export type PETPASS_productType_exact = {
  between?: InputMaybe<PETPASS_productType>;
  eq?: InputMaybe<PETPASS_productType>;
  ge?: InputMaybe<PETPASS_productType>;
  gt?: InputMaybe<PETPASS_productType>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_productType>>>;
  le?: InputMaybe<PETPASS_productType>;
  lt?: InputMaybe<PETPASS_productType>;
};

export type PETPASS_purchase = {
  __typename?: 'PETPASS_purchase';
  app: PETPASS_APP;
  guid: Scalars['String'];
  id: Scalars['ID'];
  partner?: Maybe<PETPASS_partner>;
  petInsurances: Array<PETPASS_pet_insurance>;
  petInsurancesAggregate?: Maybe<PETPASS_pet_insuranceAggregateResult>;
  petpassPet?: Maybe<PETPASS_pet>;
  products: Array<PETPASS_product>;
  productsAggregate?: Maybe<PETPASS_productAggregateResult>;
  purchase: E360App_shop_purchase;
};


export type PETPASS_purchaseappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_purchasepartnerArgs = {
  filter?: InputMaybe<PETPASS_partnerFilter>;
};


export type PETPASS_purchasepetInsurancesArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_insuranceOrder>;
};


export type PETPASS_purchasepetInsurancesAggregateArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
};


export type PETPASS_purchasepetpassPetArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};


export type PETPASS_purchaseproductsArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_productOrder>;
};


export type PETPASS_purchaseproductsAggregateArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
};


export type PETPASS_purchasepurchaseArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
};

export type PETPASS_purchaseAggregateResult = {
  __typename?: 'PETPASS_purchaseAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type PETPASS_purchaseFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_purchaseFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_purchaseHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_purchaseFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_purchaseFilter>>>;
};

export enum PETPASS_purchaseHasFilter {
  app = 'app',
  guid = 'guid',
  partner = 'partner',
  petInsurances = 'petInsurances',
  petpassPet = 'petpassPet',
  products = 'products',
  purchase = 'purchase'
}

export type PETPASS_purchaseOrder = {
  asc?: InputMaybe<PETPASS_purchaseOrderable>;
  desc?: InputMaybe<PETPASS_purchaseOrderable>;
  then?: InputMaybe<PETPASS_purchaseOrder>;
};

export enum PETPASS_purchaseOrderable {
  guid = 'guid'
}

export type PETPASS_purchasePatch = {
  app?: InputMaybe<PETPASS_APPRef>;
  guid?: InputMaybe<Scalars['String']>;
  partner?: InputMaybe<PETPASS_partnerRef>;
  petInsurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
  petpassPet?: InputMaybe<PETPASS_petRef>;
  products?: InputMaybe<Array<PETPASS_productRef>>;
  purchase?: InputMaybe<E360App_shop_purchaseRef>;
};

export type PETPASS_purchaseRef = {
  app?: InputMaybe<PETPASS_APPRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  partner?: InputMaybe<PETPASS_partnerRef>;
  petInsurances?: InputMaybe<Array<PETPASS_pet_insuranceRef>>;
  petpassPet?: InputMaybe<PETPASS_petRef>;
  products?: InputMaybe<Array<PETPASS_productRef>>;
  purchase?: InputMaybe<E360App_shop_purchaseRef>;
};

export type PETPASS_sos = {
  __typename?: 'PETPASS_sos';
  activatedAt: Scalars['DateTime'];
  activatedBy: PETPASS_user;
  address?: Maybe<Scalars['String']>;
  cancelledAt?: Maybe<Scalars['DateTime']>;
  cancelledBy?: Maybe<PETPASS_user>;
  description?: Maybe<Scalars['String']>;
  events: Array<PETPASS_sos_event>;
  eventsAggregate?: Maybe<PETPASS_sos_eventAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  latitude?: Maybe<Scalars['Float']>;
  longitude?: Maybe<Scalars['Float']>;
  pet: PETPASS_pet;
  resolvedAt?: Maybe<Scalars['DateTime']>;
  resolvedBy?: Maybe<PETPASS_user>;
  status: PETPASS_sosStatus;
};


export type PETPASS_sosactivatedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_soscancelledByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type PETPASS_soseventsArgs = {
  filter?: InputMaybe<PETPASS_sos_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_sos_eventOrder>;
};


export type PETPASS_soseventsAggregateArgs = {
  filter?: InputMaybe<PETPASS_sos_eventFilter>;
};


export type PETPASS_sospetArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};


export type PETPASS_sosresolvedByArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};

export type PETPASS_sosAggregateResult = {
  __typename?: 'PETPASS_sosAggregateResult';
  activatedAtMax?: Maybe<Scalars['DateTime']>;
  activatedAtMin?: Maybe<Scalars['DateTime']>;
  addressMax?: Maybe<Scalars['String']>;
  addressMin?: Maybe<Scalars['String']>;
  cancelledAtMax?: Maybe<Scalars['DateTime']>;
  cancelledAtMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  latitudeAvg?: Maybe<Scalars['Float']>;
  latitudeMax?: Maybe<Scalars['Float']>;
  latitudeMin?: Maybe<Scalars['Float']>;
  latitudeSum?: Maybe<Scalars['Float']>;
  longitudeAvg?: Maybe<Scalars['Float']>;
  longitudeMax?: Maybe<Scalars['Float']>;
  longitudeMin?: Maybe<Scalars['Float']>;
  longitudeSum?: Maybe<Scalars['Float']>;
  resolvedAtMax?: Maybe<Scalars['DateTime']>;
  resolvedAtMin?: Maybe<Scalars['DateTime']>;
};

export type PETPASS_sosFilter = {
  activatedAt?: InputMaybe<DateTimeFilter>;
  and?: InputMaybe<Array<InputMaybe<PETPASS_sosFilter>>>;
  cancelledAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_sosHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_sosFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_sosFilter>>>;
  resolvedAt?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<PETPASS_sosStatus_exact>;
};

export enum PETPASS_sosHasFilter {
  activatedAt = 'activatedAt',
  activatedBy = 'activatedBy',
  address = 'address',
  cancelledAt = 'cancelledAt',
  cancelledBy = 'cancelledBy',
  description = 'description',
  events = 'events',
  guid = 'guid',
  latitude = 'latitude',
  longitude = 'longitude',
  pet = 'pet',
  resolvedAt = 'resolvedAt',
  resolvedBy = 'resolvedBy',
  status = 'status'
}

export type PETPASS_sosOrder = {
  asc?: InputMaybe<PETPASS_sosOrderable>;
  desc?: InputMaybe<PETPASS_sosOrderable>;
  then?: InputMaybe<PETPASS_sosOrder>;
};

export enum PETPASS_sosOrderable {
  activatedAt = 'activatedAt',
  address = 'address',
  cancelledAt = 'cancelledAt',
  description = 'description',
  guid = 'guid',
  latitude = 'latitude',
  longitude = 'longitude',
  resolvedAt = 'resolvedAt'
}

export type PETPASS_sosPatch = {
  activatedAt?: InputMaybe<Scalars['DateTime']>;
  activatedBy?: InputMaybe<PETPASS_userRef>;
  address?: InputMaybe<Scalars['String']>;
  cancelledAt?: InputMaybe<Scalars['DateTime']>;
  cancelledBy?: InputMaybe<PETPASS_userRef>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<Array<PETPASS_sos_eventRef>>;
  guid?: InputMaybe<Scalars['String']>;
  latitude?: InputMaybe<Scalars['Float']>;
  longitude?: InputMaybe<Scalars['Float']>;
  pet?: InputMaybe<PETPASS_petRef>;
  resolvedAt?: InputMaybe<Scalars['DateTime']>;
  resolvedBy?: InputMaybe<PETPASS_userRef>;
  status?: InputMaybe<PETPASS_sosStatus>;
};

export type PETPASS_sosRef = {
  activatedAt?: InputMaybe<Scalars['DateTime']>;
  activatedBy?: InputMaybe<PETPASS_userRef>;
  address?: InputMaybe<Scalars['String']>;
  cancelledAt?: InputMaybe<Scalars['DateTime']>;
  cancelledBy?: InputMaybe<PETPASS_userRef>;
  description?: InputMaybe<Scalars['String']>;
  events?: InputMaybe<Array<PETPASS_sos_eventRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  latitude?: InputMaybe<Scalars['Float']>;
  longitude?: InputMaybe<Scalars['Float']>;
  pet?: InputMaybe<PETPASS_petRef>;
  resolvedAt?: InputMaybe<Scalars['DateTime']>;
  resolvedBy?: InputMaybe<PETPASS_userRef>;
  status?: InputMaybe<PETPASS_sosStatus>;
};

export enum PETPASS_sosStatus {
  ACTIVE = 'ACTIVE',
  CANCELLED = 'CANCELLED',
  RESOLVED = 'RESOLVED'
}

export type PETPASS_sosStatus_exact = {
  between?: InputMaybe<PETPASS_sosStatus>;
  eq?: InputMaybe<PETPASS_sosStatus>;
  ge?: InputMaybe<PETPASS_sosStatus>;
  gt?: InputMaybe<PETPASS_sosStatus>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_sosStatus>>>;
  le?: InputMaybe<PETPASS_sosStatus>;
  lt?: InputMaybe<PETPASS_sosStatus>;
};

export type PETPASS_sos_event = {
  __typename?: 'PETPASS_sos_event';
  address?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  lat?: Maybe<Scalars['Float']>;
  lon?: Maybe<Scalars['Float']>;
  metadata?: Maybe<Scalars['String']>;
  platform: PETPASS_sos_eventPlatform;
  sos: PETPASS_sos;
  type: PETPASS_sos_eventType;
  user?: Maybe<PETPASS_user>;
};


export type PETPASS_sos_eventsosArgs = {
  filter?: InputMaybe<PETPASS_sosFilter>;
};


export type PETPASS_sos_eventuserArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};

export type PETPASS_sos_eventAggregateResult = {
  __typename?: 'PETPASS_sos_eventAggregateResult';
  addressMax?: Maybe<Scalars['String']>;
  addressMin?: Maybe<Scalars['String']>;
  commentMax?: Maybe<Scalars['String']>;
  commentMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  latAvg?: Maybe<Scalars['Float']>;
  latMax?: Maybe<Scalars['Float']>;
  latMin?: Maybe<Scalars['Float']>;
  latSum?: Maybe<Scalars['Float']>;
  lonAvg?: Maybe<Scalars['Float']>;
  lonMax?: Maybe<Scalars['Float']>;
  lonMin?: Maybe<Scalars['Float']>;
  lonSum?: Maybe<Scalars['Float']>;
  metadataMax?: Maybe<Scalars['String']>;
  metadataMin?: Maybe<Scalars['String']>;
};

export type PETPASS_sos_eventFilter = {
  and?: InputMaybe<Array<InputMaybe<PETPASS_sos_eventFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_sos_eventHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PETPASS_sos_eventFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_sos_eventFilter>>>;
  platform?: InputMaybe<PETPASS_sos_eventPlatform_exact>;
  type?: InputMaybe<PETPASS_sos_eventType_exact>;
};

export enum PETPASS_sos_eventHasFilter {
  address = 'address',
  comment = 'comment',
  guid = 'guid',
  lat = 'lat',
  lon = 'lon',
  metadata = 'metadata',
  platform = 'platform',
  sos = 'sos',
  type = 'type',
  user = 'user'
}

export type PETPASS_sos_eventOrder = {
  asc?: InputMaybe<PETPASS_sos_eventOrderable>;
  desc?: InputMaybe<PETPASS_sos_eventOrderable>;
  then?: InputMaybe<PETPASS_sos_eventOrder>;
};

export enum PETPASS_sos_eventOrderable {
  address = 'address',
  comment = 'comment',
  guid = 'guid',
  lat = 'lat',
  lon = 'lon',
  metadata = 'metadata'
}

export type PETPASS_sos_eventPatch = {
  address?: InputMaybe<Scalars['String']>;
  comment?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  lat?: InputMaybe<Scalars['Float']>;
  lon?: InputMaybe<Scalars['Float']>;
  metadata?: InputMaybe<Scalars['String']>;
  platform?: InputMaybe<PETPASS_sos_eventPlatform>;
  sos?: InputMaybe<PETPASS_sosRef>;
  type?: InputMaybe<PETPASS_sos_eventType>;
  user?: InputMaybe<PETPASS_userRef>;
};

export enum PETPASS_sos_eventPlatform {
  APP = 'APP',
  WEBAPP = 'WEBAPP'
}

export type PETPASS_sos_eventPlatform_exact = {
  between?: InputMaybe<PETPASS_sos_eventPlatform>;
  eq?: InputMaybe<PETPASS_sos_eventPlatform>;
  ge?: InputMaybe<PETPASS_sos_eventPlatform>;
  gt?: InputMaybe<PETPASS_sos_eventPlatform>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_sos_eventPlatform>>>;
  le?: InputMaybe<PETPASS_sos_eventPlatform>;
  lt?: InputMaybe<PETPASS_sos_eventPlatform>;
};

export type PETPASS_sos_eventRef = {
  address?: InputMaybe<Scalars['String']>;
  comment?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  lat?: InputMaybe<Scalars['Float']>;
  lon?: InputMaybe<Scalars['Float']>;
  metadata?: InputMaybe<Scalars['String']>;
  platform?: InputMaybe<PETPASS_sos_eventPlatform>;
  sos?: InputMaybe<PETPASS_sosRef>;
  type?: InputMaybe<PETPASS_sos_eventType>;
  user?: InputMaybe<PETPASS_userRef>;
};

export enum PETPASS_sos_eventType {
  FOUND = 'FOUND',
  FOUND_AND_VERIFIED = 'FOUND_AND_VERIFIED',
  SEEN = 'SEEN',
  SOMEONE_SEND_LOCATION = 'SOMEONE_SEND_LOCATION'
}

export type PETPASS_sos_eventType_exact = {
  between?: InputMaybe<PETPASS_sos_eventType>;
  eq?: InputMaybe<PETPASS_sos_eventType>;
  ge?: InputMaybe<PETPASS_sos_eventType>;
  gt?: InputMaybe<PETPASS_sos_eventType>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_sos_eventType>>>;
  le?: InputMaybe<PETPASS_sos_eventType>;
  lt?: InputMaybe<PETPASS_sos_eventType>;
};

export type PETPASS_user = {
  __typename?: 'PETPASS_user';
  address?: Maybe<Scalars['String']>;
  addressInfo?: Maybe<Scalars['String']>;
  addressNumber?: Maybe<Scalars['String']>;
  app: PETPASS_APP;
  birthdate?: Maybe<Scalars['DateTime']>;
  company?: Maybe<Scalars['String']>;
  companyDocumentId?: Maybe<Scalars['String']>;
  contracts: Array<PETPASS_contract>;
  contractsAggregate?: Maybe<PETPASS_contractAggregateResult>;
  country?: Maybe<Country>;
  documentId?: Maybe<Scalars['String']>;
  documentType?: Maybe<PETPASS_userDocumentType>;
  email?: Maybe<Scalars['String']>;
  favVet?: Maybe<E360App_location>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  lastName?: Maybe<Scalars['String']>;
  lastUpdate?: Maybe<Scalars['DateTime']>;
  locality?: Maybe<Scalars['String']>;
  meetingDoctorsUser?: Maybe<MeetingDoctors_user>;
  meetingDoctorsUsers?: Maybe<Array<MeetingDoctors_user>>;
  meetingDoctorsUsersAggregate?: Maybe<MeetingDoctors_userAggregateResult>;
  name?: Maybe<Scalars['String']>;
  petTokens?: Maybe<Array<PETPASS_petToken>>;
  petTokensAggregate?: Maybe<PETPASS_petTokenAggregateResult>;
  pets: Array<PETPASS_pet>;
  petsAggregate?: Maybe<PETPASS_petAggregateResult>;
  phone?: Maybe<Scalars['String']>;
  province?: Maybe<Scalars['String']>;
  roadType?: Maybe<Scalars['String']>;
  role: PETPASS_userRole;
  secondLastName?: Maybe<Scalars['String']>;
  shareAddress?: Maybe<Scalars['Boolean']>;
  shareEmail?: Maybe<Scalars['Boolean']>;
  sharePhone?: Maybe<Scalars['Boolean']>;
  user: E360App_user;
  zipCode?: Maybe<Scalars['String']>;
};


export type PETPASS_userappArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type PETPASS_usercontractsArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_contractOrder>;
};


export type PETPASS_usercontractsAggregateArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
};


export type PETPASS_usercountryArgs = {
  filter?: InputMaybe<CountryFilter>;
};


export type PETPASS_userfavVetArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type PETPASS_usermeetingDoctorsUserArgs = {
  filter?: InputMaybe<MeetingDoctors_userFilter>;
};


export type PETPASS_usermeetingDoctorsUsersArgs = {
  filter?: InputMaybe<MeetingDoctors_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingDoctors_userOrder>;
};


export type PETPASS_usermeetingDoctorsUsersAggregateArgs = {
  filter?: InputMaybe<MeetingDoctors_userFilter>;
};


export type PETPASS_userpetTokensArgs = {
  filter?: InputMaybe<PETPASS_petTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petTokenOrder>;
};


export type PETPASS_userpetTokensAggregateArgs = {
  filter?: InputMaybe<PETPASS_petTokenFilter>;
};


export type PETPASS_userpetsArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petOrder>;
};


export type PETPASS_userpetsAggregateArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};


export type PETPASS_useruserArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};

export type PETPASS_userAggregateResult = {
  __typename?: 'PETPASS_userAggregateResult';
  addressInfoMax?: Maybe<Scalars['String']>;
  addressInfoMin?: Maybe<Scalars['String']>;
  addressMax?: Maybe<Scalars['String']>;
  addressMin?: Maybe<Scalars['String']>;
  addressNumberMax?: Maybe<Scalars['String']>;
  addressNumberMin?: Maybe<Scalars['String']>;
  birthdateMax?: Maybe<Scalars['DateTime']>;
  birthdateMin?: Maybe<Scalars['DateTime']>;
  companyDocumentIdMax?: Maybe<Scalars['String']>;
  companyDocumentIdMin?: Maybe<Scalars['String']>;
  companyMax?: Maybe<Scalars['String']>;
  companyMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  documentIdMax?: Maybe<Scalars['String']>;
  documentIdMin?: Maybe<Scalars['String']>;
  emailMax?: Maybe<Scalars['String']>;
  emailMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  lastNameMax?: Maybe<Scalars['String']>;
  lastNameMin?: Maybe<Scalars['String']>;
  lastUpdateMax?: Maybe<Scalars['DateTime']>;
  lastUpdateMin?: Maybe<Scalars['DateTime']>;
  localityMax?: Maybe<Scalars['String']>;
  localityMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  phoneMax?: Maybe<Scalars['String']>;
  phoneMin?: Maybe<Scalars['String']>;
  provinceMax?: Maybe<Scalars['String']>;
  provinceMin?: Maybe<Scalars['String']>;
  roadTypeMax?: Maybe<Scalars['String']>;
  roadTypeMin?: Maybe<Scalars['String']>;
  secondLastNameMax?: Maybe<Scalars['String']>;
  secondLastNameMin?: Maybe<Scalars['String']>;
  zipCodeMax?: Maybe<Scalars['String']>;
  zipCodeMin?: Maybe<Scalars['String']>;
};

export enum PETPASS_userDocumentType {
  PASSPORT = 'PASSPORT',
  SPANISH_DNI = 'SPANISH_DNI',
  SPANISH_NIE = 'SPANISH_NIE'
}

export type PETPASS_userDocumentType_exact = {
  between?: InputMaybe<PETPASS_userDocumentType>;
  eq?: InputMaybe<PETPASS_userDocumentType>;
  ge?: InputMaybe<PETPASS_userDocumentType>;
  gt?: InputMaybe<PETPASS_userDocumentType>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_userDocumentType>>>;
  le?: InputMaybe<PETPASS_userDocumentType>;
  lt?: InputMaybe<PETPASS_userDocumentType>;
};

export type PETPASS_userFilter = {
  address?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  addressInfo?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  addressNumber?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  and?: InputMaybe<Array<InputMaybe<PETPASS_userFilter>>>;
  birthdate?: InputMaybe<DateTimeFilter>;
  company?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  companyDocumentId?: InputMaybe<StringExactFilter>;
  documentId?: InputMaybe<StringExactFilter>;
  documentType?: InputMaybe<PETPASS_userDocumentType_exact>;
  email?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PETPASS_userHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  lastName?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  lastUpdate?: InputMaybe<DateTimeFilter>;
  locality?: InputMaybe<StringExactFilter>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<PETPASS_userFilter>;
  or?: InputMaybe<Array<InputMaybe<PETPASS_userFilter>>>;
  phone?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  province?: InputMaybe<StringExactFilter>;
  roadType?: InputMaybe<StringExactFilter>;
  role?: InputMaybe<PETPASS_userRole_exact>;
  secondLastName?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  shareAddress?: InputMaybe<Scalars['Boolean']>;
  shareEmail?: InputMaybe<Scalars['Boolean']>;
  sharePhone?: InputMaybe<Scalars['Boolean']>;
  zipCode?: InputMaybe<StringExactFilter>;
};

export enum PETPASS_userHasFilter {
  address = 'address',
  addressInfo = 'addressInfo',
  addressNumber = 'addressNumber',
  app = 'app',
  birthdate = 'birthdate',
  company = 'company',
  companyDocumentId = 'companyDocumentId',
  contracts = 'contracts',
  country = 'country',
  documentId = 'documentId',
  documentType = 'documentType',
  email = 'email',
  favVet = 'favVet',
  guid = 'guid',
  lastName = 'lastName',
  lastUpdate = 'lastUpdate',
  locality = 'locality',
  meetingDoctorsUser = 'meetingDoctorsUser',
  meetingDoctorsUsers = 'meetingDoctorsUsers',
  name = 'name',
  petTokens = 'petTokens',
  pets = 'pets',
  phone = 'phone',
  province = 'province',
  roadType = 'roadType',
  role = 'role',
  secondLastName = 'secondLastName',
  shareAddress = 'shareAddress',
  shareEmail = 'shareEmail',
  sharePhone = 'sharePhone',
  user = 'user',
  zipCode = 'zipCode'
}

export type PETPASS_userOrder = {
  asc?: InputMaybe<PETPASS_userOrderable>;
  desc?: InputMaybe<PETPASS_userOrderable>;
  then?: InputMaybe<PETPASS_userOrder>;
};

export enum PETPASS_userOrderable {
  address = 'address',
  addressInfo = 'addressInfo',
  addressNumber = 'addressNumber',
  birthdate = 'birthdate',
  company = 'company',
  companyDocumentId = 'companyDocumentId',
  documentId = 'documentId',
  email = 'email',
  guid = 'guid',
  lastName = 'lastName',
  lastUpdate = 'lastUpdate',
  locality = 'locality',
  name = 'name',
  phone = 'phone',
  province = 'province',
  roadType = 'roadType',
  secondLastName = 'secondLastName',
  zipCode = 'zipCode'
}

export type PETPASS_userPatch = {
  address?: InputMaybe<Scalars['String']>;
  addressInfo?: InputMaybe<Scalars['String']>;
  addressNumber?: InputMaybe<Scalars['String']>;
  app?: InputMaybe<PETPASS_APPRef>;
  birthdate?: InputMaybe<Scalars['DateTime']>;
  company?: InputMaybe<Scalars['String']>;
  companyDocumentId?: InputMaybe<Scalars['String']>;
  contracts?: InputMaybe<Array<PETPASS_contractRef>>;
  country?: InputMaybe<CountryRef>;
  documentId?: InputMaybe<Scalars['String']>;
  documentType?: InputMaybe<PETPASS_userDocumentType>;
  email?: InputMaybe<Scalars['String']>;
  favVet?: InputMaybe<E360App_locationRef>;
  guid?: InputMaybe<Scalars['String']>;
  lastName?: InputMaybe<Scalars['String']>;
  lastUpdate?: InputMaybe<Scalars['DateTime']>;
  locality?: InputMaybe<Scalars['String']>;
  meetingDoctorsUser?: InputMaybe<MeetingDoctors_userRef>;
  meetingDoctorsUsers?: InputMaybe<Array<MeetingDoctors_userRef>>;
  name?: InputMaybe<Scalars['String']>;
  petTokens?: InputMaybe<Array<PETPASS_petTokenRef>>;
  pets?: InputMaybe<Array<PETPASS_petRef>>;
  phone?: InputMaybe<Scalars['String']>;
  province?: InputMaybe<Scalars['String']>;
  roadType?: InputMaybe<Scalars['String']>;
  role?: InputMaybe<PETPASS_userRole>;
  secondLastName?: InputMaybe<Scalars['String']>;
  shareAddress?: InputMaybe<Scalars['Boolean']>;
  shareEmail?: InputMaybe<Scalars['Boolean']>;
  sharePhone?: InputMaybe<Scalars['Boolean']>;
  user?: InputMaybe<E360App_userRef>;
  zipCode?: InputMaybe<Scalars['String']>;
};

export type PETPASS_userRef = {
  address?: InputMaybe<Scalars['String']>;
  addressInfo?: InputMaybe<Scalars['String']>;
  addressNumber?: InputMaybe<Scalars['String']>;
  app?: InputMaybe<PETPASS_APPRef>;
  birthdate?: InputMaybe<Scalars['DateTime']>;
  company?: InputMaybe<Scalars['String']>;
  companyDocumentId?: InputMaybe<Scalars['String']>;
  contracts?: InputMaybe<Array<PETPASS_contractRef>>;
  country?: InputMaybe<CountryRef>;
  documentId?: InputMaybe<Scalars['String']>;
  documentType?: InputMaybe<PETPASS_userDocumentType>;
  email?: InputMaybe<Scalars['String']>;
  favVet?: InputMaybe<E360App_locationRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  lastName?: InputMaybe<Scalars['String']>;
  lastUpdate?: InputMaybe<Scalars['DateTime']>;
  locality?: InputMaybe<Scalars['String']>;
  meetingDoctorsUser?: InputMaybe<MeetingDoctors_userRef>;
  meetingDoctorsUsers?: InputMaybe<Array<MeetingDoctors_userRef>>;
  name?: InputMaybe<Scalars['String']>;
  petTokens?: InputMaybe<Array<PETPASS_petTokenRef>>;
  pets?: InputMaybe<Array<PETPASS_petRef>>;
  phone?: InputMaybe<Scalars['String']>;
  province?: InputMaybe<Scalars['String']>;
  roadType?: InputMaybe<Scalars['String']>;
  role?: InputMaybe<PETPASS_userRole>;
  secondLastName?: InputMaybe<Scalars['String']>;
  shareAddress?: InputMaybe<Scalars['Boolean']>;
  shareEmail?: InputMaybe<Scalars['Boolean']>;
  sharePhone?: InputMaybe<Scalars['Boolean']>;
  user?: InputMaybe<E360App_userRef>;
  zipCode?: InputMaybe<Scalars['String']>;
};

export enum PETPASS_userRole {
  PARTNER = 'PARTNER',
  PET_OWNER = 'PET_OWNER',
  SHELTER = 'SHELTER',
  VET = 'VET'
}

export type PETPASS_userRole_exact = {
  between?: InputMaybe<PETPASS_userRole>;
  eq?: InputMaybe<PETPASS_userRole>;
  ge?: InputMaybe<PETPASS_userRole>;
  gt?: InputMaybe<PETPASS_userRole>;
  in?: InputMaybe<Array<InputMaybe<PETPASS_userRole>>>;
  le?: InputMaybe<PETPASS_userRole>;
  lt?: InputMaybe<PETPASS_userRole>;
};

export type Person = {
  __typename?: 'Person';
  birth?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  name: Scalars['String'];
  secondSurname?: Maybe<Scalars['String']>;
  surname?: Maybe<Scalars['String']>;
};

export type PersonAggregateResult = {
  __typename?: 'PersonAggregateResult';
  birthMax?: Maybe<Scalars['DateTime']>;
  birthMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  secondSurnameMax?: Maybe<Scalars['String']>;
  secondSurnameMin?: Maybe<Scalars['String']>;
  surnameMax?: Maybe<Scalars['String']>;
  surnameMin?: Maybe<Scalars['String']>;
};

export type PersonFilter = {
  and?: InputMaybe<Array<InputMaybe<PersonFilter>>>;
  has?: InputMaybe<Array<InputMaybe<PersonHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<PersonFilter>;
  or?: InputMaybe<Array<InputMaybe<PersonFilter>>>;
};

export enum PersonHasFilter {
  birth = 'birth',
  name = 'name',
  secondSurname = 'secondSurname',
  surname = 'surname'
}

export type PersonOrder = {
  asc?: InputMaybe<PersonOrderable>;
  desc?: InputMaybe<PersonOrderable>;
  then?: InputMaybe<PersonOrder>;
};

export enum PersonOrderable {
  birth = 'birth',
  name = 'name',
  secondSurname = 'secondSurname',
  surname = 'surname'
}

export type PersonPatch = {
  birth?: InputMaybe<Scalars['DateTime']>;
  name?: InputMaybe<Scalars['String']>;
  secondSurname?: InputMaybe<Scalars['String']>;
  surname?: InputMaybe<Scalars['String']>;
};

export type PersonRef = {
  birth?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  secondSurname?: InputMaybe<Scalars['String']>;
  surname?: InputMaybe<Scalars['String']>;
};

export type Pet = {
  __typename?: 'Pet';
  ageByMonths?: Maybe<Scalars['Int']>;
  birthday?: Maybe<Scalars['DateTime']>;
  breed?: Maybe<PetBreed>;
  character?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  deceasedAt?: Maybe<Scalars['DateTime']>;
  documentExpirationDate?: Maybe<Scalars['DateTime']>;
  documentFile?: Maybe<Pet_file>;
  documentId?: Maybe<Scalars['String']>;
  documentStatus?: Maybe<Pet_validationStatus>;
  documentUpdatedAt?: Maybe<Scalars['DateTime']>;
  documentValidatedAt?: Maybe<Scalars['DateTime']>;
  fatherBreed?: Maybe<PetBreed>;
  gallery: Array<Pet_file>;
  galleryAggregate?: Maybe<Pet_fileAggregateResult>;
  gender?: Maybe<PetGender>;
  guid: Scalars['String'];
  hairColor?: Maybe<Scalars['String']>;
  hairLength?: Maybe<Scalars['String']>;
  hasInsurance?: Maybe<Scalars['Boolean']>;
  id: Scalars['ID'];
  isHealthy?: Maybe<Scalars['Boolean']>;
  isSterilised: Scalars['Boolean'];
  isVaccinated?: Maybe<Scalars['Boolean']>;
  legalGuardianDocumentId?: Maybe<Scalars['String']>;
  legalGuardianFullName?: Maybe<Scalars['String']>;
  microchip?: Maybe<Scalars['String']>;
  microchipFile?: Maybe<Pet_file>;
  microchipStatus?: Maybe<Pet_validationStatus>;
  microchipUpdatedAt?: Maybe<Scalars['DateTime']>;
  microchipValidatedAt?: Maybe<Scalars['DateTime']>;
  motherBreed?: Maybe<PetBreed>;
  name: Scalars['String'];
  origin?: Maybe<PetOrigin>;
  petPassPet?: Maybe<PETPASS_pet>;
  role?: Maybe<PetRole>;
  thumbnail?: Maybe<E360Storage_file>;
  type: PetType;
  vaccinations: Array<Pet_vaccination>;
  vaccinationsAggregate?: Maybe<Pet_vaccinationAggregateResult>;
  vetPets: Array<VET_pet>;
  vetPetsAggregate?: Maybe<VET_petAggregateResult>;
  weight?: Maybe<Scalars['Int']>;
};


export type PetbreedArgs = {
  filter?: InputMaybe<PetBreedFilter>;
};


export type PetdocumentFileArgs = {
  filter?: InputMaybe<Pet_fileFilter>;
};


export type PetfatherBreedArgs = {
  filter?: InputMaybe<PetBreedFilter>;
};


export type PetgalleryArgs = {
  filter?: InputMaybe<Pet_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_fileOrder>;
};


export type PetgalleryAggregateArgs = {
  filter?: InputMaybe<Pet_fileFilter>;
};


export type PetmicrochipFileArgs = {
  filter?: InputMaybe<Pet_fileFilter>;
};


export type PetmotherBreedArgs = {
  filter?: InputMaybe<PetBreedFilter>;
};


export type PetpetPassPetArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};


export type PetthumbnailArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
};


export type PettypeArgs = {
  filter?: InputMaybe<PetTypeFilter>;
};


export type PetvaccinationsArgs = {
  filter?: InputMaybe<Pet_vaccinationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_vaccinationOrder>;
};


export type PetvaccinationsAggregateArgs = {
  filter?: InputMaybe<Pet_vaccinationFilter>;
};


export type PetvetPetsArgs = {
  filter?: InputMaybe<VET_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_petOrder>;
};


export type PetvetPetsAggregateArgs = {
  filter?: InputMaybe<VET_petFilter>;
};

export type PetAggregateResult = {
  __typename?: 'PetAggregateResult';
  ageByMonthsAvg?: Maybe<Scalars['Float']>;
  ageByMonthsMax?: Maybe<Scalars['Int']>;
  ageByMonthsMin?: Maybe<Scalars['Int']>;
  ageByMonthsSum?: Maybe<Scalars['Int']>;
  birthdayMax?: Maybe<Scalars['DateTime']>;
  birthdayMin?: Maybe<Scalars['DateTime']>;
  characterMax?: Maybe<Scalars['String']>;
  characterMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  deceasedAtMax?: Maybe<Scalars['DateTime']>;
  deceasedAtMin?: Maybe<Scalars['DateTime']>;
  documentExpirationDateMax?: Maybe<Scalars['DateTime']>;
  documentExpirationDateMin?: Maybe<Scalars['DateTime']>;
  documentIdMax?: Maybe<Scalars['String']>;
  documentIdMin?: Maybe<Scalars['String']>;
  documentUpdatedAtMax?: Maybe<Scalars['DateTime']>;
  documentUpdatedAtMin?: Maybe<Scalars['DateTime']>;
  documentValidatedAtMax?: Maybe<Scalars['DateTime']>;
  documentValidatedAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  hairColorMax?: Maybe<Scalars['String']>;
  hairColorMin?: Maybe<Scalars['String']>;
  hairLengthMax?: Maybe<Scalars['String']>;
  hairLengthMin?: Maybe<Scalars['String']>;
  legalGuardianDocumentIdMax?: Maybe<Scalars['String']>;
  legalGuardianDocumentIdMin?: Maybe<Scalars['String']>;
  legalGuardianFullNameMax?: Maybe<Scalars['String']>;
  legalGuardianFullNameMin?: Maybe<Scalars['String']>;
  microchipMax?: Maybe<Scalars['String']>;
  microchipMin?: Maybe<Scalars['String']>;
  microchipUpdatedAtMax?: Maybe<Scalars['DateTime']>;
  microchipUpdatedAtMin?: Maybe<Scalars['DateTime']>;
  microchipValidatedAtMax?: Maybe<Scalars['DateTime']>;
  microchipValidatedAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  weightAvg?: Maybe<Scalars['Float']>;
  weightMax?: Maybe<Scalars['Int']>;
  weightMin?: Maybe<Scalars['Int']>;
  weightSum?: Maybe<Scalars['Int']>;
};

export type PetBreed = {
  __typename?: 'PetBreed';
  avatar?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  type: PetType;
};


export type PetBreedtypeArgs = {
  filter?: InputMaybe<PetTypeFilter>;
};

export type PetBreedAggregateResult = {
  __typename?: 'PetBreedAggregateResult';
  avatarMax?: Maybe<Scalars['String']>;
  avatarMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type PetBreedFilter = {
  and?: InputMaybe<Array<InputMaybe<PetBreedFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PetBreedHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<PetBreedFilter>;
  or?: InputMaybe<Array<InputMaybe<PetBreedFilter>>>;
};

export enum PetBreedHasFilter {
  avatar = 'avatar',
  guid = 'guid',
  name = 'name',
  type = 'type'
}

export type PetBreedOrder = {
  asc?: InputMaybe<PetBreedOrderable>;
  desc?: InputMaybe<PetBreedOrderable>;
  then?: InputMaybe<PetBreedOrder>;
};

export enum PetBreedOrderable {
  avatar = 'avatar',
  guid = 'guid',
  name = 'name'
}

export type PetBreedPatch = {
  avatar?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<PetTypeRef>;
};

export type PetBreedRef = {
  avatar?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<PetTypeRef>;
};

export type PetFilter = {
  ageByMonths?: InputMaybe<IntFilter>;
  and?: InputMaybe<Array<InputMaybe<PetFilter>>>;
  birthday?: InputMaybe<DateTimeFilter>;
  character?: InputMaybe<StringRegExpFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deceasedAt?: InputMaybe<DateTimeFilter>;
  documentExpirationDate?: InputMaybe<DateTimeFilter>;
  documentId?: InputMaybe<StringExactFilter>;
  documentStatus?: InputMaybe<Pet_validationStatus_exact>;
  documentUpdatedAt?: InputMaybe<DateTimeFilter>;
  documentValidatedAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  hairColor?: InputMaybe<StringRegExpFilter>;
  hairLength?: InputMaybe<StringRegExpFilter>;
  has?: InputMaybe<Array<InputMaybe<PetHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isHealthy?: InputMaybe<Scalars['Boolean']>;
  isSterilised?: InputMaybe<Scalars['Boolean']>;
  isVaccinated?: InputMaybe<Scalars['Boolean']>;
  legalGuardianDocumentId?: InputMaybe<StringExactFilter>;
  legalGuardianFullName?: InputMaybe<StringRegExpFilter>;
  microchip?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  microchipStatus?: InputMaybe<Pet_validationStatus_exact>;
  microchipUpdatedAt?: InputMaybe<DateTimeFilter>;
  microchipValidatedAt?: InputMaybe<DateTimeFilter>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<PetFilter>;
  or?: InputMaybe<Array<InputMaybe<PetFilter>>>;
  origin?: InputMaybe<PetOrigin_exact>;
  role?: InputMaybe<PetRole_exact>;
  weight?: InputMaybe<IntFilter>;
};

export enum PetGender {
  FEMALE = 'FEMALE',
  MALE = 'MALE'
}

export enum PetHasFilter {
  ageByMonths = 'ageByMonths',
  birthday = 'birthday',
  breed = 'breed',
  character = 'character',
  createdAt = 'createdAt',
  deceasedAt = 'deceasedAt',
  documentExpirationDate = 'documentExpirationDate',
  documentFile = 'documentFile',
  documentId = 'documentId',
  documentStatus = 'documentStatus',
  documentUpdatedAt = 'documentUpdatedAt',
  documentValidatedAt = 'documentValidatedAt',
  fatherBreed = 'fatherBreed',
  gallery = 'gallery',
  gender = 'gender',
  guid = 'guid',
  hairColor = 'hairColor',
  hairLength = 'hairLength',
  hasInsurance = 'hasInsurance',
  isHealthy = 'isHealthy',
  isSterilised = 'isSterilised',
  isVaccinated = 'isVaccinated',
  legalGuardianDocumentId = 'legalGuardianDocumentId',
  legalGuardianFullName = 'legalGuardianFullName',
  microchip = 'microchip',
  microchipFile = 'microchipFile',
  microchipStatus = 'microchipStatus',
  microchipUpdatedAt = 'microchipUpdatedAt',
  microchipValidatedAt = 'microchipValidatedAt',
  motherBreed = 'motherBreed',
  name = 'name',
  origin = 'origin',
  petPassPet = 'petPassPet',
  role = 'role',
  thumbnail = 'thumbnail',
  type = 'type',
  vaccinations = 'vaccinations',
  vetPets = 'vetPets',
  weight = 'weight'
}

export type PetOrder = {
  asc?: InputMaybe<PetOrderable>;
  desc?: InputMaybe<PetOrderable>;
  then?: InputMaybe<PetOrder>;
};

export enum PetOrderable {
  ageByMonths = 'ageByMonths',
  birthday = 'birthday',
  character = 'character',
  createdAt = 'createdAt',
  deceasedAt = 'deceasedAt',
  documentExpirationDate = 'documentExpirationDate',
  documentId = 'documentId',
  documentUpdatedAt = 'documentUpdatedAt',
  documentValidatedAt = 'documentValidatedAt',
  guid = 'guid',
  hairColor = 'hairColor',
  hairLength = 'hairLength',
  legalGuardianDocumentId = 'legalGuardianDocumentId',
  legalGuardianFullName = 'legalGuardianFullName',
  microchip = 'microchip',
  microchipUpdatedAt = 'microchipUpdatedAt',
  microchipValidatedAt = 'microchipValidatedAt',
  name = 'name',
  weight = 'weight'
}

export enum PetOrigin {
  ADOPTION = 'ADOPTION',
  BUY = 'BUY',
  GIFT = 'GIFT',
  OTHER = 'OTHER'
}

export type PetOrigin_exact = {
  between?: InputMaybe<PetOrigin>;
  eq?: InputMaybe<PetOrigin>;
  ge?: InputMaybe<PetOrigin>;
  gt?: InputMaybe<PetOrigin>;
  in?: InputMaybe<Array<InputMaybe<PetOrigin>>>;
  le?: InputMaybe<PetOrigin>;
  lt?: InputMaybe<PetOrigin>;
};

export type PetPatch = {
  ageByMonths?: InputMaybe<Scalars['Int']>;
  birthday?: InputMaybe<Scalars['DateTime']>;
  breed?: InputMaybe<PetBreedRef>;
  character?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deceasedAt?: InputMaybe<Scalars['DateTime']>;
  documentExpirationDate?: InputMaybe<Scalars['DateTime']>;
  documentFile?: InputMaybe<Pet_fileRef>;
  documentId?: InputMaybe<Scalars['String']>;
  documentStatus?: InputMaybe<Pet_validationStatus>;
  documentUpdatedAt?: InputMaybe<Scalars['DateTime']>;
  documentValidatedAt?: InputMaybe<Scalars['DateTime']>;
  fatherBreed?: InputMaybe<PetBreedRef>;
  gallery?: InputMaybe<Array<Pet_fileRef>>;
  gender?: InputMaybe<PetGender>;
  guid?: InputMaybe<Scalars['String']>;
  hairColor?: InputMaybe<Scalars['String']>;
  hairLength?: InputMaybe<Scalars['String']>;
  hasInsurance?: InputMaybe<Scalars['Boolean']>;
  isHealthy?: InputMaybe<Scalars['Boolean']>;
  isSterilised?: InputMaybe<Scalars['Boolean']>;
  isVaccinated?: InputMaybe<Scalars['Boolean']>;
  legalGuardianDocumentId?: InputMaybe<Scalars['String']>;
  legalGuardianFullName?: InputMaybe<Scalars['String']>;
  microchip?: InputMaybe<Scalars['String']>;
  microchipFile?: InputMaybe<Pet_fileRef>;
  microchipStatus?: InputMaybe<Pet_validationStatus>;
  microchipUpdatedAt?: InputMaybe<Scalars['DateTime']>;
  microchipValidatedAt?: InputMaybe<Scalars['DateTime']>;
  motherBreed?: InputMaybe<PetBreedRef>;
  name?: InputMaybe<Scalars['String']>;
  origin?: InputMaybe<PetOrigin>;
  petPassPet?: InputMaybe<PETPASS_petRef>;
  role?: InputMaybe<PetRole>;
  thumbnail?: InputMaybe<E360Storage_fileRef>;
  type?: InputMaybe<PetTypeRef>;
  vaccinations?: InputMaybe<Array<Pet_vaccinationRef>>;
  vetPets?: InputMaybe<Array<VET_petRef>>;
  weight?: InputMaybe<Scalars['Int']>;
};

export type PetRef = {
  ageByMonths?: InputMaybe<Scalars['Int']>;
  birthday?: InputMaybe<Scalars['DateTime']>;
  breed?: InputMaybe<PetBreedRef>;
  character?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deceasedAt?: InputMaybe<Scalars['DateTime']>;
  documentExpirationDate?: InputMaybe<Scalars['DateTime']>;
  documentFile?: InputMaybe<Pet_fileRef>;
  documentId?: InputMaybe<Scalars['String']>;
  documentStatus?: InputMaybe<Pet_validationStatus>;
  documentUpdatedAt?: InputMaybe<Scalars['DateTime']>;
  documentValidatedAt?: InputMaybe<Scalars['DateTime']>;
  fatherBreed?: InputMaybe<PetBreedRef>;
  gallery?: InputMaybe<Array<Pet_fileRef>>;
  gender?: InputMaybe<PetGender>;
  guid?: InputMaybe<Scalars['String']>;
  hairColor?: InputMaybe<Scalars['String']>;
  hairLength?: InputMaybe<Scalars['String']>;
  hasInsurance?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  isHealthy?: InputMaybe<Scalars['Boolean']>;
  isSterilised?: InputMaybe<Scalars['Boolean']>;
  isVaccinated?: InputMaybe<Scalars['Boolean']>;
  legalGuardianDocumentId?: InputMaybe<Scalars['String']>;
  legalGuardianFullName?: InputMaybe<Scalars['String']>;
  microchip?: InputMaybe<Scalars['String']>;
  microchipFile?: InputMaybe<Pet_fileRef>;
  microchipStatus?: InputMaybe<Pet_validationStatus>;
  microchipUpdatedAt?: InputMaybe<Scalars['DateTime']>;
  microchipValidatedAt?: InputMaybe<Scalars['DateTime']>;
  motherBreed?: InputMaybe<PetBreedRef>;
  name?: InputMaybe<Scalars['String']>;
  origin?: InputMaybe<PetOrigin>;
  petPassPet?: InputMaybe<PETPASS_petRef>;
  role?: InputMaybe<PetRole>;
  thumbnail?: InputMaybe<E360Storage_fileRef>;
  type?: InputMaybe<PetTypeRef>;
  vaccinations?: InputMaybe<Array<Pet_vaccinationRef>>;
  vetPets?: InputMaybe<Array<VET_petRef>>;
  weight?: InputMaybe<Scalars['Int']>;
};

export enum PetRole {
  ASSISTANCE = 'ASSISTANCE',
  BREEDING = 'BREEDING',
  COMPANION = 'COMPANION',
  FARMER = 'FARMER',
  HOME_WATCHDOG = 'HOME_WATCHDOG',
  HUNTER = 'HUNTER',
  OUTDOOR_WATCHDOG = 'OUTDOOR_WATCHDOG'
}

export type PetRole_exact = {
  between?: InputMaybe<PetRole>;
  eq?: InputMaybe<PetRole>;
  ge?: InputMaybe<PetRole>;
  gt?: InputMaybe<PetRole>;
  in?: InputMaybe<Array<InputMaybe<PetRole>>>;
  le?: InputMaybe<PetRole>;
  lt?: InputMaybe<PetRole>;
};

export type PetType = {
  __typename?: 'PetType';
  avatar?: Maybe<Scalars['String']>;
  breeds: Array<PetBreed>;
  breedsAggregate?: Maybe<PetBreedAggregateResult>;
  code?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
};


export type PetTypebreedsArgs = {
  filter?: InputMaybe<PetBreedFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetBreedOrder>;
};


export type PetTypebreedsAggregateArgs = {
  filter?: InputMaybe<PetBreedFilter>;
};

export type PetTypeAggregateResult = {
  __typename?: 'PetTypeAggregateResult';
  avatarMax?: Maybe<Scalars['String']>;
  avatarMin?: Maybe<Scalars['String']>;
  codeMax?: Maybe<Scalars['String']>;
  codeMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type PetTypeFilter = {
  and?: InputMaybe<Array<InputMaybe<PetTypeFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<PetTypeHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<PetTypeFilter>;
  or?: InputMaybe<Array<InputMaybe<PetTypeFilter>>>;
};

export enum PetTypeHasFilter {
  avatar = 'avatar',
  breeds = 'breeds',
  code = 'code',
  guid = 'guid',
  name = 'name'
}

export type PetTypeOrder = {
  asc?: InputMaybe<PetTypeOrderable>;
  desc?: InputMaybe<PetTypeOrderable>;
  then?: InputMaybe<PetTypeOrder>;
};

export enum PetTypeOrderable {
  avatar = 'avatar',
  code = 'code',
  guid = 'guid',
  name = 'name'
}

export type PetTypePatch = {
  avatar?: InputMaybe<Scalars['String']>;
  breeds?: InputMaybe<Array<PetBreedRef>>;
  code?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type PetTypeRef = {
  avatar?: InputMaybe<Scalars['String']>;
  breeds?: InputMaybe<Array<PetBreedRef>>;
  code?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Pet_file = {
  __typename?: 'Pet_file';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  document?: Maybe<Pet>;
  file?: Maybe<E360Storage_file>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  label: Scalars['String'];
  microchip?: Maybe<Pet>;
  pet?: Maybe<Pet>;
  vaccination?: Maybe<Pet_vaccination>;
};


export type Pet_filecreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type Pet_filedocumentArgs = {
  filter?: InputMaybe<PetFilter>;
};


export type Pet_filefileArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
};


export type Pet_filemicrochipArgs = {
  filter?: InputMaybe<PetFilter>;
};


export type Pet_filepetArgs = {
  filter?: InputMaybe<PetFilter>;
};


export type Pet_filevaccinationArgs = {
  filter?: InputMaybe<Pet_vaccinationFilter>;
};

export type Pet_fileAggregateResult = {
  __typename?: 'Pet_fileAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
};

export type Pet_fileFilter = {
  and?: InputMaybe<Array<InputMaybe<Pet_fileFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Pet_fileHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  label?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<Pet_fileFilter>;
  or?: InputMaybe<Array<InputMaybe<Pet_fileFilter>>>;
};

export enum Pet_fileHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  document = 'document',
  file = 'file',
  guid = 'guid',
  label = 'label',
  microchip = 'microchip',
  pet = 'pet',
  vaccination = 'vaccination'
}

export type Pet_fileOrder = {
  asc?: InputMaybe<Pet_fileOrderable>;
  desc?: InputMaybe<Pet_fileOrderable>;
  then?: InputMaybe<Pet_fileOrder>;
};

export enum Pet_fileOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  label = 'label'
}

export type Pet_filePatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  document?: InputMaybe<PetRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  microchip?: InputMaybe<PetRef>;
  pet?: InputMaybe<PetRef>;
  vaccination?: InputMaybe<Pet_vaccinationRef>;
};

export type Pet_fileRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  document?: InputMaybe<PetRef>;
  file?: InputMaybe<E360Storage_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  label?: InputMaybe<Scalars['String']>;
  microchip?: InputMaybe<PetRef>;
  pet?: InputMaybe<PetRef>;
  vaccination?: InputMaybe<Pet_vaccinationRef>;
};

export type Pet_vaccination = {
  __typename?: 'Pet_vaccination';
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<E360App_user>;
  file?: Maybe<Pet_file>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  pet: Pet;
  ref?: Maybe<Scalars['String']>;
  scheduledAt?: Maybe<Scalars['DateTime']>;
  status?: Maybe<Pet_vaccinationStatus>;
  vaccine: Pet_vaccine;
};


export type Pet_vaccinationcreatedByArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type Pet_vaccinationfileArgs = {
  filter?: InputMaybe<Pet_fileFilter>;
};


export type Pet_vaccinationpetArgs = {
  filter?: InputMaybe<PetFilter>;
};


export type Pet_vaccinationvaccineArgs = {
  filter?: InputMaybe<Pet_vaccineFilter>;
};

export type Pet_vaccinationAggregateResult = {
  __typename?: 'Pet_vaccinationAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  refMax?: Maybe<Scalars['String']>;
  refMin?: Maybe<Scalars['String']>;
  scheduledAtMax?: Maybe<Scalars['DateTime']>;
  scheduledAtMin?: Maybe<Scalars['DateTime']>;
};

export type Pet_vaccinationFilter = {
  and?: InputMaybe<Array<InputMaybe<Pet_vaccinationFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Pet_vaccinationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Pet_vaccinationFilter>;
  or?: InputMaybe<Array<InputMaybe<Pet_vaccinationFilter>>>;
  ref?: InputMaybe<StringExactFilter>;
  scheduledAt?: InputMaybe<DateTimeFilter>;
  status?: InputMaybe<Pet_vaccinationStatus_exact>;
};

export enum Pet_vaccinationHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  file = 'file',
  guid = 'guid',
  pet = 'pet',
  ref = 'ref',
  scheduledAt = 'scheduledAt',
  status = 'status',
  vaccine = 'vaccine'
}

export type Pet_vaccinationOrder = {
  asc?: InputMaybe<Pet_vaccinationOrderable>;
  desc?: InputMaybe<Pet_vaccinationOrderable>;
  then?: InputMaybe<Pet_vaccinationOrder>;
};

export enum Pet_vaccinationOrderable {
  createdAt = 'createdAt',
  guid = 'guid',
  ref = 'ref',
  scheduledAt = 'scheduledAt'
}

export type Pet_vaccinationPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  file?: InputMaybe<Pet_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  pet?: InputMaybe<PetRef>;
  ref?: InputMaybe<Scalars['String']>;
  scheduledAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Pet_vaccinationStatus>;
  vaccine?: InputMaybe<Pet_vaccineRef>;
};

export type Pet_vaccinationRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<E360App_userRef>;
  file?: InputMaybe<Pet_fileRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  pet?: InputMaybe<PetRef>;
  ref?: InputMaybe<Scalars['String']>;
  scheduledAt?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Pet_vaccinationStatus>;
  vaccine?: InputMaybe<Pet_vaccineRef>;
};

export enum Pet_vaccinationStatus {
  DONE = 'DONE',
  PENDING = 'PENDING'
}

export type Pet_vaccinationStatus_exact = {
  between?: InputMaybe<Pet_vaccinationStatus>;
  eq?: InputMaybe<Pet_vaccinationStatus>;
  ge?: InputMaybe<Pet_vaccinationStatus>;
  gt?: InputMaybe<Pet_vaccinationStatus>;
  in?: InputMaybe<Array<InputMaybe<Pet_vaccinationStatus>>>;
  le?: InputMaybe<Pet_vaccinationStatus>;
  lt?: InputMaybe<Pet_vaccinationStatus>;
};

export type Pet_vaccine = {
  __typename?: 'Pet_vaccine';
  afterHowManyMonths?: Maybe<Scalars['Int']>;
  description?: Maybe<Scalars['String']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  periodicity?: Maybe<Pet_vaccinePeriodicity>;
  type?: Maybe<Pet_vaccineType>;
  vaccinations: Array<Pet_vaccination>;
  vaccinationsAggregate?: Maybe<Pet_vaccinationAggregateResult>;
};


export type Pet_vaccinevaccinationsArgs = {
  filter?: InputMaybe<Pet_vaccinationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_vaccinationOrder>;
};


export type Pet_vaccinevaccinationsAggregateArgs = {
  filter?: InputMaybe<Pet_vaccinationFilter>;
};

export type Pet_vaccineAggregateResult = {
  __typename?: 'Pet_vaccineAggregateResult';
  afterHowManyMonthsAvg?: Maybe<Scalars['Float']>;
  afterHowManyMonthsMax?: Maybe<Scalars['Int']>;
  afterHowManyMonthsMin?: Maybe<Scalars['Int']>;
  afterHowManyMonthsSum?: Maybe<Scalars['Int']>;
  count?: Maybe<Scalars['Int']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Pet_vaccineFilter = {
  afterHowManyMonths?: InputMaybe<IntFilter>;
  and?: InputMaybe<Array<InputMaybe<Pet_vaccineFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Pet_vaccineHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  not?: InputMaybe<Pet_vaccineFilter>;
  or?: InputMaybe<Array<InputMaybe<Pet_vaccineFilter>>>;
  periodicity?: InputMaybe<Pet_vaccinePeriodicity_exact>;
  type?: InputMaybe<Pet_vaccineType_exact>;
};

export enum Pet_vaccineHasFilter {
  afterHowManyMonths = 'afterHowManyMonths',
  description = 'description',
  guid = 'guid',
  name = 'name',
  periodicity = 'periodicity',
  type = 'type',
  vaccinations = 'vaccinations'
}

export type Pet_vaccineOrder = {
  asc?: InputMaybe<Pet_vaccineOrderable>;
  desc?: InputMaybe<Pet_vaccineOrderable>;
  then?: InputMaybe<Pet_vaccineOrder>;
};

export enum Pet_vaccineOrderable {
  afterHowManyMonths = 'afterHowManyMonths',
  description = 'description',
  guid = 'guid',
  name = 'name'
}

export type Pet_vaccinePatch = {
  afterHowManyMonths?: InputMaybe<Scalars['Int']>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  periodicity?: InputMaybe<Pet_vaccinePeriodicity>;
  type?: InputMaybe<Pet_vaccineType>;
  vaccinations?: InputMaybe<Array<Pet_vaccinationRef>>;
};

export enum Pet_vaccinePeriodicity {
  ANNUAL = 'ANNUAL',
  ONCE = 'ONCE'
}

export type Pet_vaccinePeriodicity_exact = {
  between?: InputMaybe<Pet_vaccinePeriodicity>;
  eq?: InputMaybe<Pet_vaccinePeriodicity>;
  ge?: InputMaybe<Pet_vaccinePeriodicity>;
  gt?: InputMaybe<Pet_vaccinePeriodicity>;
  in?: InputMaybe<Array<InputMaybe<Pet_vaccinePeriodicity>>>;
  le?: InputMaybe<Pet_vaccinePeriodicity>;
  lt?: InputMaybe<Pet_vaccinePeriodicity>;
};

export type Pet_vaccineRef = {
  afterHowManyMonths?: InputMaybe<Scalars['Int']>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  periodicity?: InputMaybe<Pet_vaccinePeriodicity>;
  type?: InputMaybe<Pet_vaccineType>;
  vaccinations?: InputMaybe<Array<Pet_vaccinationRef>>;
};

export enum Pet_vaccineType {
  MANDATORY = 'MANDATORY',
  OPTIONAL = 'OPTIONAL'
}

export type Pet_vaccineType_exact = {
  between?: InputMaybe<Pet_vaccineType>;
  eq?: InputMaybe<Pet_vaccineType>;
  ge?: InputMaybe<Pet_vaccineType>;
  gt?: InputMaybe<Pet_vaccineType>;
  in?: InputMaybe<Array<InputMaybe<Pet_vaccineType>>>;
  le?: InputMaybe<Pet_vaccineType>;
  lt?: InputMaybe<Pet_vaccineType>;
};

export enum Pet_validationStatus {
  PENDING = 'PENDING',
  REJECTED = 'REJECTED',
  VALIDATED = 'VALIDATED',
  VALIDATING = 'VALIDATING'
}

export type Pet_validationStatus_exact = {
  between?: InputMaybe<Pet_validationStatus>;
  eq?: InputMaybe<Pet_validationStatus>;
  ge?: InputMaybe<Pet_validationStatus>;
  gt?: InputMaybe<Pet_validationStatus>;
  in?: InputMaybe<Array<InputMaybe<Pet_validationStatus>>>;
  le?: InputMaybe<Pet_validationStatus>;
  lt?: InputMaybe<Pet_validationStatus>;
};

export type Point = {
  __typename?: 'Point';
  latitude: Scalars['Float'];
  longitude: Scalars['Float'];
};

export type PointGeoFilter = {
  near?: InputMaybe<NearFilter>;
  within?: InputMaybe<WithinFilter>;
};

export type PointList = {
  __typename?: 'PointList';
  points: Array<Point>;
};

export type PointListRef = {
  points: Array<PointRef>;
};

export type PointRef = {
  latitude: Scalars['Float'];
  longitude: Scalars['Float'];
};

export type Polygon = {
  __typename?: 'Polygon';
  coordinates: Array<PointList>;
};

export type PolygonGeoFilter = {
  contains?: InputMaybe<ContainsFilter>;
  intersects?: InputMaybe<IntersectsFilter>;
  near?: InputMaybe<NearFilter>;
  within?: InputMaybe<WithinFilter>;
};

export type PolygonRef = {
  coordinates: Array<PointListRef>;
};

export type Product = {
  __typename?: 'Product';
  buyPrice: Scalars['Float'];
  category?: Maybe<Product_category>;
  crmTeamBoards?: Maybe<Array<CRM_teamBoard>>;
  crmTeamBoardsAggregate?: Maybe<CRM_teamBoardAggregateResult>;
  currency: Currency;
  erpInvoiceItems: Array<ERP_invoiceItem>;
  erpInvoiceItemsAggregate?: Maybe<ERP_invoiceItemAggregateResult>;
  erpProduct: ERP_product;
  fixedPaymentPlan: Scalars['Boolean'];
  id: Scalars['ID'];
  inputs: Array<CRM_contactInput>;
  inputsAggregate?: Maybe<CRM_contactInputAggregateResult>;
  isAvailable: Scalars['Boolean'];
  isInfiniteStock: Scalars['Boolean'];
  items?: Maybe<Array<Maybe<Product_item>>>;
  itemsAggregate?: Maybe<Product_itemAggregateResult>;
  lmsProduct?: Maybe<LMS_product>;
  name: Scalars['String'];
  org360: Org360;
  paymentPlanGap: Scalars['Int'];
  paymentPlanItems: Array<Product_paymentPlanItem>;
  paymentPlanItemsAggregate?: Maybe<Product_paymentPlanItemAggregateResult>;
  proposals?: Maybe<Array<Proposal>>;
  proposalsAggregate?: Maybe<ProposalAggregateResult>;
  salePrice: Scalars['Float'];
  status: Product_status;
  unit: Unit;
};


export type ProductcategoryArgs = {
  filter?: InputMaybe<Product_categoryFilter>;
};


export type ProductcrmTeamBoardsArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardOrder>;
};


export type ProductcrmTeamBoardsAggregateArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
};


export type ProductcurrencyArgs = {
  filter?: InputMaybe<CurrencyFilter>;
};


export type ProducterpInvoiceItemsArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceItemOrder>;
};


export type ProducterpInvoiceItemsAggregateArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
};


export type ProducterpProductArgs = {
  filter?: InputMaybe<ERP_productFilter>;
};


export type ProductinputsArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};


export type ProductinputsAggregateArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type ProductitemsArgs = {
  filter?: InputMaybe<Product_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ProductitemsAggregateArgs = {
  filter?: InputMaybe<Product_itemFilter>;
};


export type ProductlmsProductArgs = {
  filter?: InputMaybe<LMS_productFilter>;
};


export type Productorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type ProductpaymentPlanItemsArgs = {
  filter?: InputMaybe<Product_paymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_paymentPlanItemOrder>;
};


export type ProductpaymentPlanItemsAggregateArgs = {
  filter?: InputMaybe<Product_paymentPlanItemFilter>;
};


export type ProductproposalsArgs = {
  filter?: InputMaybe<ProposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProposalOrder>;
};


export type ProductproposalsAggregateArgs = {
  filter?: InputMaybe<ProposalFilter>;
};


export type ProductunitArgs = {
  filter?: InputMaybe<UnitFilter>;
};

export type ProductAggregateResult = {
  __typename?: 'ProductAggregateResult';
  buyPriceAvg?: Maybe<Scalars['Float']>;
  buyPriceMax?: Maybe<Scalars['Float']>;
  buyPriceMin?: Maybe<Scalars['Float']>;
  buyPriceSum?: Maybe<Scalars['Float']>;
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  paymentPlanGapAvg?: Maybe<Scalars['Float']>;
  paymentPlanGapMax?: Maybe<Scalars['Int']>;
  paymentPlanGapMin?: Maybe<Scalars['Int']>;
  paymentPlanGapSum?: Maybe<Scalars['Int']>;
  salePriceAvg?: Maybe<Scalars['Float']>;
  salePriceMax?: Maybe<Scalars['Float']>;
  salePriceMin?: Maybe<Scalars['Float']>;
  salePriceSum?: Maybe<Scalars['Float']>;
};

export type ProductFilter = {
  and?: InputMaybe<Array<InputMaybe<ProductFilter>>>;
  buyPrice?: InputMaybe<FloatFilter>;
  has?: InputMaybe<Array<InputMaybe<ProductHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isAvailable?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<ProductFilter>;
  or?: InputMaybe<Array<InputMaybe<ProductFilter>>>;
  salePrice?: InputMaybe<FloatFilter>;
  status?: InputMaybe<Product_status_hash>;
};

export enum ProductHasFilter {
  buyPrice = 'buyPrice',
  category = 'category',
  crmTeamBoards = 'crmTeamBoards',
  currency = 'currency',
  erpInvoiceItems = 'erpInvoiceItems',
  erpProduct = 'erpProduct',
  fixedPaymentPlan = 'fixedPaymentPlan',
  inputs = 'inputs',
  isAvailable = 'isAvailable',
  isInfiniteStock = 'isInfiniteStock',
  items = 'items',
  lmsProduct = 'lmsProduct',
  name = 'name',
  org360 = 'org360',
  paymentPlanGap = 'paymentPlanGap',
  paymentPlanItems = 'paymentPlanItems',
  proposals = 'proposals',
  salePrice = 'salePrice',
  status = 'status',
  unit = 'unit'
}

export type ProductOrder = {
  asc?: InputMaybe<ProductOrderable>;
  desc?: InputMaybe<ProductOrderable>;
  then?: InputMaybe<ProductOrder>;
};

export enum ProductOrderable {
  buyPrice = 'buyPrice',
  name = 'name',
  paymentPlanGap = 'paymentPlanGap',
  salePrice = 'salePrice'
}

export type ProductPatch = {
  buyPrice?: InputMaybe<Scalars['Float']>;
  category?: InputMaybe<Product_categoryRef>;
  crmTeamBoards?: InputMaybe<Array<CRM_teamBoardRef>>;
  currency?: InputMaybe<CurrencyRef>;
  erpInvoiceItems?: InputMaybe<Array<ERP_invoiceItemRef>>;
  erpProduct?: InputMaybe<ERP_productRef>;
  fixedPaymentPlan?: InputMaybe<Scalars['Boolean']>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  isAvailable?: InputMaybe<Scalars['Boolean']>;
  isInfiniteStock?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<InputMaybe<Product_itemRef>>>;
  lmsProduct?: InputMaybe<LMS_productRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  paymentPlanGap?: InputMaybe<Scalars['Int']>;
  paymentPlanItems?: InputMaybe<Array<Product_paymentPlanItemRef>>;
  proposals?: InputMaybe<Array<ProposalRef>>;
  salePrice?: InputMaybe<Scalars['Float']>;
  status?: InputMaybe<Product_status>;
  unit?: InputMaybe<UnitRef>;
};

export type ProductRef = {
  buyPrice?: InputMaybe<Scalars['Float']>;
  category?: InputMaybe<Product_categoryRef>;
  crmTeamBoards?: InputMaybe<Array<CRM_teamBoardRef>>;
  currency?: InputMaybe<CurrencyRef>;
  erpInvoiceItems?: InputMaybe<Array<ERP_invoiceItemRef>>;
  erpProduct?: InputMaybe<ERP_productRef>;
  fixedPaymentPlan?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  inputs?: InputMaybe<Array<CRM_contactInputRef>>;
  isAvailable?: InputMaybe<Scalars['Boolean']>;
  isInfiniteStock?: InputMaybe<Scalars['Boolean']>;
  items?: InputMaybe<Array<InputMaybe<Product_itemRef>>>;
  lmsProduct?: InputMaybe<LMS_productRef>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  paymentPlanGap?: InputMaybe<Scalars['Int']>;
  paymentPlanItems?: InputMaybe<Array<Product_paymentPlanItemRef>>;
  proposals?: InputMaybe<Array<ProposalRef>>;
  salePrice?: InputMaybe<Scalars['Float']>;
  status?: InputMaybe<Product_status>;
  unit?: InputMaybe<UnitRef>;
};

export type Product_category = {
  __typename?: 'Product_category';
  color: Scalars['String'];
  icon: Scalars['String'];
  id: Scalars['ID'];
  invoices: Array<ERP_invoice>;
  invoicesAggregate?: Maybe<ERP_invoiceAggregateResult>;
  name: Scalars['String'];
  org360: Org360;
  products: Array<Product>;
  productsAggregate?: Maybe<ProductAggregateResult>;
  type?: Maybe<Product_categoryType>;
};


export type Product_categoryinvoicesArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceOrder>;
};


export type Product_categoryinvoicesAggregateArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type Product_categoryorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type Product_categoryproductsArgs = {
  filter?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProductOrder>;
};


export type Product_categoryproductsAggregateArgs = {
  filter?: InputMaybe<ProductFilter>;
};

export type Product_categoryAggregateResult = {
  __typename?: 'Product_categoryAggregateResult';
  colorMax?: Maybe<Scalars['String']>;
  colorMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  iconMax?: Maybe<Scalars['String']>;
  iconMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Product_categoryFilter = {
  and?: InputMaybe<Array<InputMaybe<Product_categoryFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Product_categoryHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<Product_categoryFilter>;
  or?: InputMaybe<Array<InputMaybe<Product_categoryFilter>>>;
  type?: InputMaybe<Product_categoryType_exact>;
};

export enum Product_categoryHasFilter {
  color = 'color',
  icon = 'icon',
  invoices = 'invoices',
  name = 'name',
  org360 = 'org360',
  products = 'products',
  type = 'type'
}

export type Product_categoryOrder = {
  asc?: InputMaybe<Product_categoryOrderable>;
  desc?: InputMaybe<Product_categoryOrderable>;
  then?: InputMaybe<Product_categoryOrder>;
};

export enum Product_categoryOrderable {
  color = 'color',
  icon = 'icon',
  name = 'name'
}

export type Product_categoryPatch = {
  color?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  invoices?: InputMaybe<Array<ERP_invoiceRef>>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  products?: InputMaybe<Array<ProductRef>>;
  type?: InputMaybe<Product_categoryType>;
};

export type Product_categoryRef = {
  color?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  invoices?: InputMaybe<Array<ERP_invoiceRef>>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  products?: InputMaybe<Array<ProductRef>>;
  type?: InputMaybe<Product_categoryType>;
};

export enum Product_categoryType {
  EARNING = 'EARNING',
  EXPENSE = 'EXPENSE'
}

export type Product_categoryType_exact = {
  between?: InputMaybe<Product_categoryType>;
  eq?: InputMaybe<Product_categoryType>;
  ge?: InputMaybe<Product_categoryType>;
  gt?: InputMaybe<Product_categoryType>;
  in?: InputMaybe<Array<InputMaybe<Product_categoryType>>>;
  le?: InputMaybe<Product_categoryType>;
  lt?: InputMaybe<Product_categoryType>;
};

export type Product_item = {
  __typename?: 'Product_item';
  id: Scalars['ID'];
  product: Product;
};


export type Product_itemproductArgs = {
  filter?: InputMaybe<ProductFilter>;
};

export type Product_itemAggregateResult = {
  __typename?: 'Product_itemAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type Product_itemFilter = {
  and?: InputMaybe<Array<InputMaybe<Product_itemFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Product_itemHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Product_itemFilter>;
  or?: InputMaybe<Array<InputMaybe<Product_itemFilter>>>;
};

export enum Product_itemHasFilter {
  product = 'product'
}

export type Product_itemPatch = {
  product?: InputMaybe<ProductRef>;
};

export type Product_itemRef = {
  id?: InputMaybe<Scalars['ID']>;
  product?: InputMaybe<ProductRef>;
};

export type Product_paymentPlanItem = {
  __typename?: 'Product_paymentPlanItem';
  date?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  index: Scalars['Int'];
  label?: Maybe<Scalars['String']>;
  org360: Org360;
  product: Product;
  value: Scalars['Int'];
};


export type Product_paymentPlanItemorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type Product_paymentPlanItemproductArgs = {
  filter?: InputMaybe<ProductFilter>;
};

export type Product_paymentPlanItemAggregateResult = {
  __typename?: 'Product_paymentPlanItemAggregateResult';
  count?: Maybe<Scalars['Int']>;
  dateMax?: Maybe<Scalars['DateTime']>;
  dateMin?: Maybe<Scalars['DateTime']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
  valueAvg?: Maybe<Scalars['Float']>;
  valueMax?: Maybe<Scalars['Int']>;
  valueMin?: Maybe<Scalars['Int']>;
  valueSum?: Maybe<Scalars['Int']>;
};

export type Product_paymentPlanItemFilter = {
  and?: InputMaybe<Array<InputMaybe<Product_paymentPlanItemFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Product_paymentPlanItemHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Product_paymentPlanItemFilter>;
  or?: InputMaybe<Array<InputMaybe<Product_paymentPlanItemFilter>>>;
};

export enum Product_paymentPlanItemHasFilter {
  date = 'date',
  index = 'index',
  label = 'label',
  org360 = 'org360',
  product = 'product',
  value = 'value'
}

export type Product_paymentPlanItemOrder = {
  asc?: InputMaybe<Product_paymentPlanItemOrderable>;
  desc?: InputMaybe<Product_paymentPlanItemOrderable>;
  then?: InputMaybe<Product_paymentPlanItemOrder>;
};

export enum Product_paymentPlanItemOrderable {
  date = 'date',
  index = 'index',
  label = 'label',
  value = 'value'
}

export type Product_paymentPlanItemPatch = {
  date?: InputMaybe<Scalars['DateTime']>;
  index?: InputMaybe<Scalars['Int']>;
  label?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  product?: InputMaybe<ProductRef>;
  value?: InputMaybe<Scalars['Int']>;
};

export type Product_paymentPlanItemRef = {
  date?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  label?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  product?: InputMaybe<ProductRef>;
  value?: InputMaybe<Scalars['Int']>;
};

export enum Product_status {
  ACTIVE = 'ACTIVE',
  ARCHIVED = 'ARCHIVED',
  DELETED = 'DELETED',
  INACTIVE = 'INACTIVE',
  draft = 'draft',
  published = 'published'
}

export type Product_status_hash = {
  eq?: InputMaybe<Product_status>;
  in?: InputMaybe<Array<InputMaybe<Product_status>>>;
};

export type Proposal = {
  __typename?: 'Proposal';
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  crmProposal?: Maybe<CRM_proposal>;
  description: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  org360: Org360;
  products: Array<Product>;
  productsAggregate?: Maybe<ProductAggregateResult>;
  resources: Array<Proposal_resource>;
  resourcesAggregate?: Maybe<Proposal_resourceAggregateResult>;
  stakeholderResources: Array<Proposal_stakeholderResource>;
  stakeholderResourcesAggregate?: Maybe<Proposal_stakeholderResourceAggregateResult>;
  stakeholders: Array<Proposal_stakeholder>;
  stakeholdersAggregate?: Maybe<Proposal_stakeholderAggregateResult>;
  status: Proposal_status;
  title: Scalars['String'];
};


export type ProposalcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ProposalcrmProposalArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
};


export type Proposalorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type ProposalproductsArgs = {
  filter?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProductOrder>;
};


export type ProposalproductsAggregateArgs = {
  filter?: InputMaybe<ProductFilter>;
};


export type ProposalresourcesArgs = {
  filter?: InputMaybe<Proposal_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_resourceOrder>;
};


export type ProposalresourcesAggregateArgs = {
  filter?: InputMaybe<Proposal_resourceFilter>;
};


export type ProposalstakeholderResourcesArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderResourceOrder>;
};


export type ProposalstakeholderResourcesAggregateArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
};


export type ProposalstakeholdersArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderOrder>;
};


export type ProposalstakeholdersAggregateArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
};

export type ProposalAggregateResult = {
  __typename?: 'ProposalAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  titleMax?: Maybe<Scalars['String']>;
  titleMin?: Maybe<Scalars['String']>;
};

export type ProposalFilter = {
  and?: InputMaybe<Array<InputMaybe<ProposalFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<ProposalHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ProposalFilter>;
  or?: InputMaybe<Array<InputMaybe<ProposalFilter>>>;
};

export enum ProposalHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  crmProposal = 'crmProposal',
  description = 'description',
  guid = 'guid',
  org360 = 'org360',
  products = 'products',
  resources = 'resources',
  stakeholderResources = 'stakeholderResources',
  stakeholders = 'stakeholders',
  status = 'status',
  title = 'title'
}

export type ProposalOrder = {
  asc?: InputMaybe<ProposalOrderable>;
  desc?: InputMaybe<ProposalOrderable>;
  then?: InputMaybe<ProposalOrder>;
};

export enum ProposalOrderable {
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  title = 'title'
}

export type ProposalPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  crmProposal?: InputMaybe<CRM_proposalRef>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  products?: InputMaybe<Array<ProductRef>>;
  resources?: InputMaybe<Array<Proposal_resourceRef>>;
  stakeholderResources?: InputMaybe<Array<Proposal_stakeholderResourceRef>>;
  stakeholders?: InputMaybe<Array<Proposal_stakeholderRef>>;
  status?: InputMaybe<Proposal_status>;
  title?: InputMaybe<Scalars['String']>;
};

export type ProposalRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  crmProposal?: InputMaybe<CRM_proposalRef>;
  description?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  products?: InputMaybe<Array<ProductRef>>;
  resources?: InputMaybe<Array<Proposal_resourceRef>>;
  stakeholderResources?: InputMaybe<Array<Proposal_stakeholderResourceRef>>;
  stakeholders?: InputMaybe<Array<Proposal_stakeholderRef>>;
  status?: InputMaybe<Proposal_status>;
  title?: InputMaybe<Scalars['String']>;
};

export type Proposal_resource = {
  __typename?: 'Proposal_resource';
  guid: Scalars['String'];
  id: Scalars['ID'];
  proposal: Proposal;
  resource: Resource;
  stakeholders: Array<Proposal_stakeholderResource>;
  stakeholdersAggregate?: Maybe<Proposal_stakeholderResourceAggregateResult>;
};


export type Proposal_resourceproposalArgs = {
  filter?: InputMaybe<ProposalFilter>;
};


export type Proposal_resourceresourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
};


export type Proposal_resourcestakeholdersArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderResourceOrder>;
};


export type Proposal_resourcestakeholdersAggregateArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
};

export type Proposal_resourceAggregateResult = {
  __typename?: 'Proposal_resourceAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Proposal_resourceFilter = {
  and?: InputMaybe<Array<InputMaybe<Proposal_resourceFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Proposal_resourceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Proposal_resourceFilter>;
  or?: InputMaybe<Array<InputMaybe<Proposal_resourceFilter>>>;
};

export enum Proposal_resourceHasFilter {
  guid = 'guid',
  proposal = 'proposal',
  resource = 'resource',
  stakeholders = 'stakeholders'
}

export type Proposal_resourceOrder = {
  asc?: InputMaybe<Proposal_resourceOrderable>;
  desc?: InputMaybe<Proposal_resourceOrderable>;
  then?: InputMaybe<Proposal_resourceOrder>;
};

export enum Proposal_resourceOrderable {
  guid = 'guid'
}

export type Proposal_resourcePatch = {
  guid?: InputMaybe<Scalars['String']>;
  proposal?: InputMaybe<ProposalRef>;
  resource?: InputMaybe<ResourceRef>;
  stakeholders?: InputMaybe<Array<Proposal_stakeholderResourceRef>>;
};

export type Proposal_resourceRef = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  proposal?: InputMaybe<ProposalRef>;
  resource?: InputMaybe<ResourceRef>;
  stakeholders?: InputMaybe<Array<Proposal_stakeholderResourceRef>>;
};

export enum Proposal_signType {
  DIGITAL = 'DIGITAL',
  EXTERNAL = 'EXTERNAL'
}

export enum Proposal_stackeholder_status {
  APPROVED = 'APPROVED',
  PENDING = 'PENDING',
  REJECTED = 'REJECTED'
}

export type Proposal_stakeholder = {
  __typename?: 'Proposal_stakeholder';
  account?: Maybe<Account>;
  contact?: Maybe<Contact>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  proposal: Proposal;
  resources: Array<Proposal_stakeholderResource>;
  resourcesAggregate?: Maybe<Proposal_stakeholderResourceAggregateResult>;
  status: Proposal_stackeholder_status;
  tokens: Array<Proposal_stakeholderToken>;
  tokensAggregate?: Maybe<Proposal_stakeholderTokenAggregateResult>;
};


export type Proposal_stakeholderaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Proposal_stakeholdercontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type Proposal_stakeholderproposalArgs = {
  filter?: InputMaybe<ProposalFilter>;
};


export type Proposal_stakeholderresourcesArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderResourceOrder>;
};


export type Proposal_stakeholderresourcesAggregateArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
};


export type Proposal_stakeholdertokensArgs = {
  filter?: InputMaybe<Proposal_stakeholderTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderTokenOrder>;
};


export type Proposal_stakeholdertokensAggregateArgs = {
  filter?: InputMaybe<Proposal_stakeholderTokenFilter>;
};

export type Proposal_stakeholderAggregateResult = {
  __typename?: 'Proposal_stakeholderAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Proposal_stakeholderFilter = {
  and?: InputMaybe<Array<InputMaybe<Proposal_stakeholderFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Proposal_stakeholderHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Proposal_stakeholderFilter>;
  or?: InputMaybe<Array<InputMaybe<Proposal_stakeholderFilter>>>;
};

export enum Proposal_stakeholderHasFilter {
  account = 'account',
  contact = 'contact',
  guid = 'guid',
  proposal = 'proposal',
  resources = 'resources',
  status = 'status',
  tokens = 'tokens'
}

export type Proposal_stakeholderOrder = {
  asc?: InputMaybe<Proposal_stakeholderOrderable>;
  desc?: InputMaybe<Proposal_stakeholderOrderable>;
  then?: InputMaybe<Proposal_stakeholderOrder>;
};

export enum Proposal_stakeholderOrderable {
  guid = 'guid'
}

export type Proposal_stakeholderPatch = {
  account?: InputMaybe<AccountRef>;
  contact?: InputMaybe<ContactRef>;
  guid?: InputMaybe<Scalars['String']>;
  proposal?: InputMaybe<ProposalRef>;
  resources?: InputMaybe<Array<Proposal_stakeholderResourceRef>>;
  status?: InputMaybe<Proposal_stackeholder_status>;
  tokens?: InputMaybe<Array<Proposal_stakeholderTokenRef>>;
};

export type Proposal_stakeholderRef = {
  account?: InputMaybe<AccountRef>;
  contact?: InputMaybe<ContactRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  proposal?: InputMaybe<ProposalRef>;
  resources?: InputMaybe<Array<Proposal_stakeholderResourceRef>>;
  status?: InputMaybe<Proposal_stackeholder_status>;
  tokens?: InputMaybe<Array<Proposal_stakeholderTokenRef>>;
};

export type Proposal_stakeholderResource = {
  __typename?: 'Proposal_stakeholderResource';
  checkDate?: Maybe<Scalars['DateTime']>;
  deliverDate?: Maybe<Scalars['DateTime']>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  isCheck: Scalars['Boolean'];
  isRequiredCheck: Scalars['Boolean'];
  isRequiredSign: Scalars['Boolean'];
  isSign: Scalars['Boolean'];
  openDate?: Maybe<Scalars['DateTime']>;
  proposal: Proposal;
  resource: Proposal_resource;
  signDate?: Maybe<Scalars['DateTime']>;
  stakeholder: Proposal_stakeholder;
};


export type Proposal_stakeholderResourceproposalArgs = {
  filter?: InputMaybe<ProposalFilter>;
};


export type Proposal_stakeholderResourceresourceArgs = {
  filter?: InputMaybe<Proposal_resourceFilter>;
};


export type Proposal_stakeholderResourcestakeholderArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
};

export type Proposal_stakeholderResourceAggregateResult = {
  __typename?: 'Proposal_stakeholderResourceAggregateResult';
  checkDateMax?: Maybe<Scalars['DateTime']>;
  checkDateMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  deliverDateMax?: Maybe<Scalars['DateTime']>;
  deliverDateMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  openDateMax?: Maybe<Scalars['DateTime']>;
  openDateMin?: Maybe<Scalars['DateTime']>;
  signDateMax?: Maybe<Scalars['DateTime']>;
  signDateMin?: Maybe<Scalars['DateTime']>;
};

export type Proposal_stakeholderResourceFilter = {
  and?: InputMaybe<Array<InputMaybe<Proposal_stakeholderResourceFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Proposal_stakeholderResourceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Proposal_stakeholderResourceFilter>;
  or?: InputMaybe<Array<InputMaybe<Proposal_stakeholderResourceFilter>>>;
};

export enum Proposal_stakeholderResourceHasFilter {
  checkDate = 'checkDate',
  deliverDate = 'deliverDate',
  guid = 'guid',
  isCheck = 'isCheck',
  isRequiredCheck = 'isRequiredCheck',
  isRequiredSign = 'isRequiredSign',
  isSign = 'isSign',
  openDate = 'openDate',
  proposal = 'proposal',
  resource = 'resource',
  signDate = 'signDate',
  stakeholder = 'stakeholder'
}

export type Proposal_stakeholderResourceOrder = {
  asc?: InputMaybe<Proposal_stakeholderResourceOrderable>;
  desc?: InputMaybe<Proposal_stakeholderResourceOrderable>;
  then?: InputMaybe<Proposal_stakeholderResourceOrder>;
};

export enum Proposal_stakeholderResourceOrderable {
  checkDate = 'checkDate',
  deliverDate = 'deliverDate',
  guid = 'guid',
  openDate = 'openDate',
  signDate = 'signDate'
}

export type Proposal_stakeholderResourcePatch = {
  checkDate?: InputMaybe<Scalars['DateTime']>;
  deliverDate?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  isCheck?: InputMaybe<Scalars['Boolean']>;
  isRequiredCheck?: InputMaybe<Scalars['Boolean']>;
  isRequiredSign?: InputMaybe<Scalars['Boolean']>;
  isSign?: InputMaybe<Scalars['Boolean']>;
  openDate?: InputMaybe<Scalars['DateTime']>;
  proposal?: InputMaybe<ProposalRef>;
  resource?: InputMaybe<Proposal_resourceRef>;
  signDate?: InputMaybe<Scalars['DateTime']>;
  stakeholder?: InputMaybe<Proposal_stakeholderRef>;
};

export type Proposal_stakeholderResourceRef = {
  checkDate?: InputMaybe<Scalars['DateTime']>;
  deliverDate?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isCheck?: InputMaybe<Scalars['Boolean']>;
  isRequiredCheck?: InputMaybe<Scalars['Boolean']>;
  isRequiredSign?: InputMaybe<Scalars['Boolean']>;
  isSign?: InputMaybe<Scalars['Boolean']>;
  openDate?: InputMaybe<Scalars['DateTime']>;
  proposal?: InputMaybe<ProposalRef>;
  resource?: InputMaybe<Proposal_resourceRef>;
  signDate?: InputMaybe<Scalars['DateTime']>;
  stakeholder?: InputMaybe<Proposal_stakeholderRef>;
};

export type Proposal_stakeholderToken = {
  __typename?: 'Proposal_stakeholderToken';
  createdAt: Scalars['DateTime'];
  expiresAt: Scalars['DateTime'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  isUsed: Scalars['Boolean'];
  stakeholder: Proposal_stakeholder;
};


export type Proposal_stakeholderTokenstakeholderArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
};

export type Proposal_stakeholderTokenAggregateResult = {
  __typename?: 'Proposal_stakeholderTokenAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  expiresAtMax?: Maybe<Scalars['DateTime']>;
  expiresAtMin?: Maybe<Scalars['DateTime']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type Proposal_stakeholderTokenFilter = {
  and?: InputMaybe<Array<InputMaybe<Proposal_stakeholderTokenFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Proposal_stakeholderTokenHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Proposal_stakeholderTokenFilter>;
  or?: InputMaybe<Array<InputMaybe<Proposal_stakeholderTokenFilter>>>;
};

export enum Proposal_stakeholderTokenHasFilter {
  createdAt = 'createdAt',
  expiresAt = 'expiresAt',
  guid = 'guid',
  isUsed = 'isUsed',
  stakeholder = 'stakeholder'
}

export type Proposal_stakeholderTokenOrder = {
  asc?: InputMaybe<Proposal_stakeholderTokenOrderable>;
  desc?: InputMaybe<Proposal_stakeholderTokenOrderable>;
  then?: InputMaybe<Proposal_stakeholderTokenOrder>;
};

export enum Proposal_stakeholderTokenOrderable {
  createdAt = 'createdAt',
  expiresAt = 'expiresAt',
  guid = 'guid'
}

export type Proposal_stakeholderTokenPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expiresAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  isUsed?: InputMaybe<Scalars['Boolean']>;
  stakeholder?: InputMaybe<Proposal_stakeholderRef>;
};

export type Proposal_stakeholderTokenRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expiresAt?: InputMaybe<Scalars['DateTime']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isUsed?: InputMaybe<Scalars['Boolean']>;
  stakeholder?: InputMaybe<Proposal_stakeholderRef>;
};

export enum Proposal_status {
  APPROVED = 'APPROVED',
  CANCELED = 'CANCELED',
  DRAFT = 'DRAFT',
  PENDING = 'PENDING',
  REJECTED = 'REJECTED'
}

export type Query = {
  __typename?: 'Query';
  aggregateAUDITS_PACKAGE?: Maybe<AUDITS_PACKAGEAggregateResult>;
  aggregateAUDITS_account?: Maybe<AUDITS_accountAggregateResult>;
  aggregateAUDITS_document?: Maybe<AUDITS_documentAggregateResult>;
  aggregateAUDITS_document_block?: Maybe<AUDITS_document_blockAggregateResult>;
  aggregateAUDITS_document_blockImage?: Maybe<AUDITS_document_blockImageAggregateResult>;
  aggregateAUDITS_document_blockQuote?: Maybe<AUDITS_document_blockQuoteAggregateResult>;
  aggregateAUDITS_document_blockTable?: Maybe<AUDITS_document_blockTableAggregateResult>;
  aggregateAUDITS_document_blockTableCell?: Maybe<AUDITS_document_blockTableCellAggregateResult>;
  aggregateAUDITS_document_blockTableColumn?: Maybe<AUDITS_document_blockTableColumnAggregateResult>;
  aggregateAUDITS_document_blockTableRow?: Maybe<AUDITS_document_blockTableRowAggregateResult>;
  aggregateAUDITS_document_blockText?: Maybe<AUDITS_document_blockTextAggregateResult>;
  aggregateAUDITS_document_blockTitle?: Maybe<AUDITS_document_blockTitleAggregateResult>;
  aggregateAUDITS_file?: Maybe<AUDITS_fileAggregateResult>;
  aggregateAUDITS_project?: Maybe<AUDITS_projectAggregateResult>;
  aggregateAUDITS_project_version?: Maybe<AUDITS_project_versionAggregateResult>;
  aggregateAUDITS_review?: Maybe<AUDITS_reviewAggregateResult>;
  aggregateAUDITS_review_account?: Maybe<AUDITS_review_accountAggregateResult>;
  aggregateAUDITS_review_comment?: Maybe<AUDITS_review_commentAggregateResult>;
  aggregateAccount?: Maybe<AccountAggregateResult>;
  aggregateAccount_event?: Maybe<Account_eventAggregateResult>;
  aggregateAccount_log?: Maybe<Account_logAggregateResult>;
  aggregateAccount_notification?: Maybe<Account_notificationAggregateResult>;
  aggregateAccount_session?: Maybe<Account_sessionAggregateResult>;
  aggregateAccount_sessionConnection?: Maybe<Account_sessionConnectionAggregateResult>;
  aggregateAccount_sessionConnectionTask?: Maybe<Account_sessionConnectionTaskAggregateResult>;
  aggregateAccount_sessionTask?: Maybe<Account_sessionTaskAggregateResult>;
  aggregateAddress?: Maybe<AddressAggregateResult>;
  aggregateBank?: Maybe<BankAggregateResult>;
  aggregateBankAccount?: Maybe<BankAccountAggregateResult>;
  aggregateCMS_PACKAGE?: Maybe<CMS_PACKAGEAggregateResult>;
  aggregateCMS_account?: Maybe<CMS_accountAggregateResult>;
  aggregateCMS_app?: Maybe<CMS_appAggregateResult>;
  aggregateCMS_appContact?: Maybe<CMS_appContactAggregateResult>;
  aggregateCMS_authorAlias?: Maybe<CMS_authorAliasAggregateResult>;
  aggregateCMS_contact?: Maybe<CMS_contactAggregateResult>;
  aggregateCMS_file?: Maybe<CMS_fileAggregateResult>;
  aggregateCMS_website?: Maybe<CMS_websiteAggregateResult>;
  aggregateCMS_website_page?: Maybe<CMS_website_pageAggregateResult>;
  aggregateCMS_website_page_block?: Maybe<CMS_website_page_blockAggregateResult>;
  aggregateCMS_website_page_blockCombo?: Maybe<CMS_website_page_blockComboAggregateResult>;
  aggregateCMS_website_page_blockImage?: Maybe<CMS_website_page_blockImageAggregateResult>;
  aggregateCMS_website_page_blockLink?: Maybe<CMS_website_page_blockLinkAggregateResult>;
  aggregateCMS_website_page_blockText?: Maybe<CMS_website_page_blockTextAggregateResult>;
  aggregateCMS_website_page_blockTitle?: Maybe<CMS_website_page_blockTitleAggregateResult>;
  aggregateCRM_PACKAGE?: Maybe<CRM_PACKAGEAggregateResult>;
  aggregateCRM_account?: Maybe<CRM_accountAggregateResult>;
  aggregateCRM_accountContactsTableColumn?: Maybe<CRM_accountContactsTableColumnAggregateResult>;
  aggregateCRM_accountContactsTableFilter?: Maybe<CRM_accountContactsTableFilterAggregateResult>;
  aggregateCRM_accountEvent?: Maybe<CRM_accountEventAggregateResult>;
  aggregateCRM_action?: Maybe<CRM_actionAggregateResult>;
  aggregateCRM_actionCall?: Maybe<CRM_actionCallAggregateResult>;
  aggregateCRM_actionChat?: Maybe<CRM_actionChatAggregateResult>;
  aggregateCRM_actionEmail?: Maybe<CRM_actionEmailAggregateResult>;
  aggregateCRM_actionMeeting?: Maybe<CRM_actionMeetingAggregateResult>;
  aggregateCRM_area?: Maybe<CRM_areaAggregateResult>;
  aggregateCRM_campaign?: Maybe<CRM_campaignAggregateResult>;
  aggregateCRM_campaignContact?: Maybe<CRM_campaignContactAggregateResult>;
  aggregateCRM_campaignContactEvent?: Maybe<CRM_campaignContactEventAggregateResult>;
  aggregateCRM_campaignDeliver?: Maybe<CRM_campaignDeliverAggregateResult>;
  aggregateCRM_campaignEmailTemplate?: Maybe<CRM_campaignEmailTemplateAggregateResult>;
  aggregateCRM_contact?: Maybe<CRM_contactAggregateResult>;
  aggregateCRM_contactAction?: Maybe<CRM_contactActionAggregateResult>;
  aggregateCRM_contactActionCall?: Maybe<CRM_contactActionCallAggregateResult>;
  aggregateCRM_contactActionChat?: Maybe<CRM_contactActionChatAggregateResult>;
  aggregateCRM_contactActionEmail?: Maybe<CRM_contactActionEmailAggregateResult>;
  aggregateCRM_contactActionMeeting?: Maybe<CRM_contactActionMeetingAggregateResult>;
  aggregateCRM_contactActionStatusChange?: Maybe<CRM_contactActionStatusChangeAggregateResult>;
  aggregateCRM_contactAnswer?: Maybe<CRM_contactAnswerAggregateResult>;
  aggregateCRM_contactInput?: Maybe<CRM_contactInputAggregateResult>;
  aggregateCRM_contactInputSubStatus?: Maybe<CRM_contactInputSubStatusAggregateResult>;
  aggregateCRM_contactInputValue?: Maybe<CRM_contactInputValueAggregateResult>;
  aggregateCRM_contactList?: Maybe<CRM_contactListAggregateResult>;
  aggregateCRM_emailTemplate?: Maybe<CRM_emailTemplateAggregateResult>;
  aggregateCRM_event?: Maybe<CRM_eventAggregateResult>;
  aggregateCRM_funnel?: Maybe<CRM_funnelAggregateResult>;
  aggregateCRM_funnelAction?: Maybe<CRM_funnelActionAggregateResult>;
  aggregateCRM_funnelStatus?: Maybe<CRM_funnelStatusAggregateResult>;
  aggregateCRM_opportunityLog?: Maybe<CRM_opportunityLogAggregateResult>;
  aggregateCRM_opportunityPaymentPlanItem?: Maybe<CRM_opportunityPaymentPlanItemAggregateResult>;
  aggregateCRM_overview?: Maybe<CRM_overviewAggregateResult>;
  aggregateCRM_proposal?: Maybe<CRM_proposalAggregateResult>;
  aggregateCRM_role?: Maybe<CRM_roleAggregateResult>;
  aggregateCRM_socialMediaCampaign?: Maybe<CRM_socialMediaCampaignAggregateResult>;
  aggregateCRM_socialMediaCampaign_media?: Maybe<CRM_socialMediaCampaign_mediaAggregateResult>;
  aggregateCRM_socialMediaCampaign_post?: Maybe<CRM_socialMediaCampaign_postAggregateResult>;
  aggregateCRM_source?: Maybe<CRM_sourceAggregateResult>;
  aggregateCRM_sourceCategory?: Maybe<CRM_sourceCategoryAggregateResult>;
  aggregateCRM_sourceForm?: Maybe<CRM_sourceFormAggregateResult>;
  aggregateCRM_sourceFormField?: Maybe<CRM_sourceFormFieldAggregateResult>;
  aggregateCRM_sourceFormReason?: Maybe<CRM_sourceFormReasonAggregateResult>;
  aggregateCRM_sourceForm_emailTemplate?: Maybe<CRM_sourceForm_emailTemplateAggregateResult>;
  aggregateCRM_team?: Maybe<CRM_teamAggregateResult>;
  aggregateCRM_teamAccount?: Maybe<CRM_teamAccountAggregateResult>;
  aggregateCRM_teamAction?: Maybe<CRM_teamActionAggregateResult>;
  aggregateCRM_teamActionBoardEffect?: Maybe<CRM_teamActionBoardEffectAggregateResult>;
  aggregateCRM_teamBoard?: Maybe<CRM_teamBoardAggregateResult>;
  aggregateCRM_teamBoardItem?: Maybe<CRM_teamBoardItemAggregateResult>;
  aggregateCRM_teamBoardStatus?: Maybe<CRM_teamBoardStatusAggregateResult>;
  aggregateCRM_teamBoardSubStatus?: Maybe<CRM_teamBoardSubStatusAggregateResult>;
  aggregateCRM_teamBoardTask?: Maybe<CRM_teamBoardTaskAggregateResult>;
  aggregateChatbots_PACKAGE?: Maybe<Chatbots_PACKAGEAggregateResult>;
  aggregateChatbots_account?: Maybe<Chatbots_accountAggregateResult>;
  aggregateChatbots_area?: Maybe<Chatbots_areaAggregateResult>;
  aggregateChatbots_areaAccount?: Maybe<Chatbots_areaAccountAggregateResult>;
  aggregateChatbots_externalAPI?: Maybe<Chatbots_externalAPIAggregateResult>;
  aggregateChatbots_externalAPI_field?: Maybe<Chatbots_externalAPI_fieldAggregateResult>;
  aggregateChatbots_process?: Maybe<Chatbots_processAggregateResult>;
  aggregateChatbots_processAPI?: Maybe<Chatbots_processAPIAggregateResult>;
  aggregateChatbots_processAccount?: Maybe<Chatbots_processAccountAggregateResult>;
  aggregateChatbots_processAction?: Maybe<Chatbots_processActionAggregateResult>;
  aggregateChatbots_processButton?: Maybe<Chatbots_processButtonAggregateResult>;
  aggregateChatbots_processField?: Maybe<Chatbots_processFieldAggregateResult>;
  aggregateChatbots_processFilterParam?: Maybe<Chatbots_processFilterParamAggregateResult>;
  aggregateChatbots_processOperation?: Maybe<Chatbots_processOperationAggregateResult>;
  aggregateChatbots_processStatus?: Maybe<Chatbots_processStatusAggregateResult>;
  aggregateChatbots_processTableHead?: Maybe<Chatbots_processTableHeadAggregateResult>;
  aggregateChatbots_processTableHeadConfig?: Maybe<Chatbots_processTableHeadConfigAggregateResult>;
  aggregateChatbots_processTableMatchReplace?: Maybe<Chatbots_processTableMatchReplaceAggregateResult>;
  aggregateChatbots_processValidation?: Maybe<Chatbots_processValidationAggregateResult>;
  aggregateChatbots_processValidationOperation?: Maybe<Chatbots_processValidationOperationAggregateResult>;
  aggregateChatbots_processValidationOperation_document?: Maybe<Chatbots_processValidationOperation_documentAggregateResult>;
  aggregateChatbots_processValidationOperation_document_file?: Maybe<Chatbots_processValidationOperation_document_fileAggregateResult>;
  aggregateChatbots_processsValidationOperation_field?: Maybe<Chatbots_processsValidationOperation_fieldAggregateResult>;
  aggregateChatbots_validation?: Maybe<Chatbots_validationAggregateResult>;
  aggregateChatbots_validationDocument?: Maybe<Chatbots_validationDocumentAggregateResult>;
  aggregateChatbots_validationDocument_file?: Maybe<Chatbots_validationDocument_fileAggregateResult>;
  aggregateChatbots_validationField?: Maybe<Chatbots_validationFieldAggregateResult>;
  aggregateCompanySector?: Maybe<CompanySectorAggregateResult>;
  aggregateContact?: Maybe<ContactAggregateResult>;
  aggregateContact_billingInfo?: Maybe<Contact_billingInfoAggregateResult>;
  aggregateContact_businessInfo?: Maybe<Contact_businessInfoAggregateResult>;
  aggregateContact_email?: Maybe<Contact_emailAggregateResult>;
  aggregateContact_importLog?: Maybe<Contact_importLogAggregateResult>;
  aggregateContact_jobPosition?: Maybe<Contact_jobPositionAggregateResult>;
  aggregateContact_phone?: Maybe<Contact_phoneAggregateResult>;
  aggregateCountry?: Maybe<CountryAggregateResult>;
  aggregateCurrency?: Maybe<CurrencyAggregateResult>;
  aggregateDynamicTable?: Maybe<DynamicTableAggregateResult>;
  aggregateDynamicTable_account?: Maybe<DynamicTable_accountAggregateResult>;
  aggregateDynamicTable_head?: Maybe<DynamicTable_headAggregateResult>;
  aggregateDynamicTable_headValueBooleanOptions?: Maybe<DynamicTable_headValueBooleanOptionsAggregateResult>;
  aggregateDynamicTable_headValueCurrencyOptions?: Maybe<DynamicTable_headValueCurrencyOptionsAggregateResult>;
  aggregateDynamicTable_headValueDateOptions?: Maybe<DynamicTable_headValueDateOptionsAggregateResult>;
  aggregateDynamicTable_headValueLinkOptions?: Maybe<DynamicTable_headValueLinkOptionsAggregateResult>;
  aggregateDynamicTable_headValueNumberOptions?: Maybe<DynamicTable_headValueNumberOptionsAggregateResult>;
  aggregateE360App?: Maybe<E360AppAggregateResult>;
  aggregateE360App_domain?: Maybe<E360App_domainAggregateResult>;
  aggregateE360App_location?: Maybe<E360App_locationAggregateResult>;
  aggregateE360App_locationFile?: Maybe<E360App_locationFileAggregateResult>;
  aggregateE360App_locationSchedule?: Maybe<E360App_locationScheduleAggregateResult>;
  aggregateE360App_location_appoinment?: Maybe<E360App_location_appoinmentAggregateResult>;
  aggregateE360App_location_appoinmentLots?: Maybe<E360App_location_appoinmentLotsAggregateResult>;
  aggregateE360App_location_area?: Maybe<E360App_location_areaAggregateResult>;
  aggregateE360App_location_area_resource?: Maybe<E360App_location_area_resourceAggregateResult>;
  aggregateE360App_location_area_workShift?: Maybe<E360App_location_area_workShiftAggregateResult>;
  aggregateE360App_location_menu?: Maybe<E360App_location_menuAggregateResult>;
  aggregateE360App_location_menu_combo?: Maybe<E360App_location_menu_comboAggregateResult>;
  aggregateE360App_location_menu_item?: Maybe<E360App_location_menu_itemAggregateResult>;
  aggregateE360App_location_menu_section?: Maybe<E360App_location_menu_sectionAggregateResult>;
  aggregateE360App_location_menu_section_item?: Maybe<E360App_location_menu_section_itemAggregateResult>;
  aggregateE360App_location_menu_subSection?: Maybe<E360App_location_menu_subSectionAggregateResult>;
  aggregateE360App_location_menu_tag?: Maybe<E360App_location_menu_tagAggregateResult>;
  aggregateE360App_notification?: Maybe<E360App_notificationAggregateResult>;
  aggregateE360App_organization?: Maybe<E360App_organizationAggregateResult>;
  aggregateE360App_organization_user?: Maybe<E360App_organization_userAggregateResult>;
  aggregateE360App_partner?: Maybe<E360App_partnerAggregateResult>;
  aggregateE360App_partner_webhook?: Maybe<E360App_partner_webhookAggregateResult>;
  aggregateE360App_shop?: Maybe<E360App_shopAggregateResult>;
  aggregateE360App_shop_contract?: Maybe<E360App_shop_contractAggregateResult>;
  aggregateE360App_shop_customer_contract?: Maybe<E360App_shop_customer_contractAggregateResult>;
  aggregateE360App_shop_customer_contractService?: Maybe<E360App_shop_customer_contractServiceAggregateResult>;
  aggregateE360App_shop_customer_contract_renewal?: Maybe<E360App_shop_customer_contract_renewalAggregateResult>;
  aggregateE360App_shop_operation?: Maybe<E360App_shop_operationAggregateResult>;
  aggregateE360App_shop_partner_contract?: Maybe<E360App_shop_partner_contractAggregateResult>;
  aggregateE360App_shop_product?: Maybe<E360App_shop_productAggregateResult>;
  aggregateE360App_shop_productItem?: Maybe<E360App_shop_productItemAggregateResult>;
  aggregateE360App_shop_productService?: Maybe<E360App_shop_productServiceAggregateResult>;
  aggregateE360App_shop_promoProduct?: Maybe<E360App_shop_promoProductAggregateResult>;
  aggregateE360App_shop_promotion?: Maybe<E360App_shop_promotionAggregateResult>;
  aggregateE360App_shop_promotionCode?: Maybe<E360App_shop_promotionCodeAggregateResult>;
  aggregateE360App_shop_purchase?: Maybe<E360App_shop_purchaseAggregateResult>;
  aggregateE360App_shop_purchaseProviderEvent?: Maybe<E360App_shop_purchaseProviderEventAggregateResult>;
  aggregateE360App_stablishment?: Maybe<E360App_stablishmentAggregateResult>;
  aggregateE360App_stablishment_user?: Maybe<E360App_stablishment_userAggregateResult>;
  aggregateE360App_user?: Maybe<E360App_userAggregateResult>;
  aggregateE360App_userLog?: Maybe<E360App_userLogAggregateResult>;
  aggregateE360App_userSession?: Maybe<E360App_userSessionAggregateResult>;
  aggregateE360App_userSessionConnection?: Maybe<E360App_userSessionConnectionAggregateResult>;
  aggregateE360App_userSessionConnectionTask?: Maybe<E360App_userSessionConnectionTaskAggregateResult>;
  aggregateE360App_userSessionTask?: Maybe<E360App_userSessionTaskAggregateResult>;
  aggregateE360App_user_notification?: Maybe<E360App_user_notificationAggregateResult>;
  aggregateE360App_user_partner?: Maybe<E360App_user_partnerAggregateResult>;
  aggregateE360Storage_file?: Maybe<E360Storage_fileAggregateResult>;
  aggregateERP_PACKAGE?: Maybe<ERP_PACKAGEAggregateResult>;
  aggregateERP_account?: Maybe<ERP_accountAggregateResult>;
  aggregateERP_accountEvent?: Maybe<ERP_accountEventAggregateResult>;
  aggregateERP_accountingAccount?: Maybe<ERP_accountingAccountAggregateResult>;
  aggregateERP_contact?: Maybe<ERP_contactAggregateResult>;
  aggregateERP_contactAction?: Maybe<ERP_contactActionAggregateResult>;
  aggregateERP_contactSerie?: Maybe<ERP_contactSerieAggregateResult>;
  aggregateERP_event?: Maybe<ERP_eventAggregateResult>;
  aggregateERP_invoice?: Maybe<ERP_invoiceAggregateResult>;
  aggregateERP_invoiceItem?: Maybe<ERP_invoiceItemAggregateResult>;
  aggregateERP_invoiceNote?: Maybe<ERP_invoiceNoteAggregateResult>;
  aggregateERP_organizationBillingInfo?: Maybe<ERP_organizationBillingInfoAggregateResult>;
  aggregateERP_paymentPlan?: Maybe<ERP_paymentPlanAggregateResult>;
  aggregateERP_product?: Maybe<ERP_productAggregateResult>;
  aggregateERP_resource?: Maybe<ERP_resourceAggregateResult>;
  aggregateERP_role?: Maybe<ERP_roleAggregateResult>;
  aggregateERP_seat?: Maybe<ERP_seatAggregateResult>;
  aggregateERP_seatLine?: Maybe<ERP_seatLineAggregateResult>;
  aggregateERP_tax?: Maybe<ERP_taxAggregateResult>;
  aggregateERP_withholding?: Maybe<ERP_withholdingAggregateResult>;
  aggregateEmail?: Maybe<EmailAggregateResult>;
  aggregateEmailEditor?: Maybe<EmailEditorAggregateResult>;
  aggregateEmailEditor_template?: Maybe<EmailEditor_templateAggregateResult>;
  aggregateEmail_attachment?: Maybe<Email_attachmentAggregateResult>;
  aggregateEmail_from?: Maybe<Email_fromAggregateResult>;
  aggregateEmail_to?: Maybe<Email_toAggregateResult>;
  aggregateEvent?: Maybe<EventAggregateResult>;
  aggregateExternalAPI_key?: Maybe<ExternalAPI_keyAggregateResult>;
  aggregateFormBuilder?: Maybe<FormBuilderAggregateResult>;
  aggregateFormBuilder_form?: Maybe<FormBuilder_formAggregateResult>;
  aggregateFormBuilder_input?: Maybe<FormBuilder_inputAggregateResult>;
  aggregateFormBuilder_inputBoolean?: Maybe<FormBuilder_inputBooleanAggregateResult>;
  aggregateFormBuilder_inputMultipleChoice?: Maybe<FormBuilder_inputMultipleChoiceAggregateResult>;
  aggregateFormBuilder_inputMultipleChoiceOption?: Maybe<FormBuilder_inputMultipleChoiceOptionAggregateResult>;
  aggregateFormBuilder_inputNumber?: Maybe<FormBuilder_inputNumberAggregateResult>;
  aggregateFormBuilder_inputText?: Maybe<FormBuilder_inputTextAggregateResult>;
  aggregateGeneralAccountingAccount?: Maybe<GeneralAccountingAccountAggregateResult>;
  aggregateImportProcess?: Maybe<ImportProcessAggregateResult>;
  aggregateImportProcess_elementField?: Maybe<ImportProcess_elementFieldAggregateResult>;
  aggregateImportProcess_item?: Maybe<ImportProcess_itemAggregateResult>;
  aggregateImportProcess_itemError?: Maybe<ImportProcess_itemErrorAggregateResult>;
  aggregateImportProcess_itemValue?: Maybe<ImportProcess_itemValueAggregateResult>;
  aggregateImportProcess_match?: Maybe<ImportProcess_matchAggregateResult>;
  aggregateImportProcess_sourceValue?: Maybe<ImportProcess_sourceValueAggregateResult>;
  aggregateInbox?: Maybe<InboxAggregateResult>;
  aggregateInbox_item?: Maybe<Inbox_itemAggregateResult>;
  aggregateIntegrations?: Maybe<IntegrationsAggregateResult>;
  aggregateIntegrations_Digilab_Provider?: Maybe<Integrations_Digilab_ProviderAggregateResult>;
  aggregateIntegrations_Google_Analytics_Provider?: Maybe<Integrations_Google_Analytics_ProviderAggregateResult>;
  aggregateIntegrations_Google_Provider?: Maybe<Integrations_Google_ProviderAggregateResult>;
  aggregateIntegrations_Link_Mobility_Provider?: Maybe<Integrations_Link_Mobility_ProviderAggregateResult>;
  aggregateIntegrations_LinkedIn_Provider?: Maybe<Integrations_LinkedIn_ProviderAggregateResult>;
  aggregateIntegrations_MSFT_Meeting?: Maybe<Integrations_MSFT_MeetingAggregateResult>;
  aggregateIntegrations_MSFT_Provider?: Maybe<Integrations_MSFT_ProviderAggregateResult>;
  aggregateIntegrations_Meta_Provider?: Maybe<Integrations_Meta_ProviderAggregateResult>;
  aggregateIntegrations_SendGrid_Provider?: Maybe<Integrations_SendGrid_ProviderAggregateResult>;
  aggregateIntegrations_Sendgrid_emailEvent?: Maybe<Integrations_Sendgrid_emailEventAggregateResult>;
  aggregateIntegrations_account?: Maybe<Integrations_accountAggregateResult>;
  aggregateIntegrations_carrefour_operartionsLog?: Maybe<Integrations_carrefour_operartionsLogAggregateResult>;
  aggregateJobPosition?: Maybe<JobPositionAggregateResult>;
  aggregateLMS_PACKAGE?: Maybe<LMS_PACKAGEAggregateResult>;
  aggregateLMS_account?: Maybe<LMS_accountAggregateResult>;
  aggregateLMS_accountLog?: Maybe<LMS_accountLogAggregateResult>;
  aggregateLMS_accountLogDetail?: Maybe<LMS_accountLogDetailAggregateResult>;
  aggregateLMS_block?: Maybe<LMS_blockAggregateResult>;
  aggregateLMS_blockStudentProgress?: Maybe<LMS_blockStudentProgressAggregateResult>;
  aggregateLMS_contact?: Maybe<LMS_contactAggregateResult>;
  aggregateLMS_course?: Maybe<LMS_courseAggregateResult>;
  aggregateLMS_courseCategory?: Maybe<LMS_courseCategoryAggregateResult>;
  aggregateLMS_courseStudentProgress?: Maybe<LMS_courseStudentProgressAggregateResult>;
  aggregateLMS_courseVersion?: Maybe<LMS_courseVersionAggregateResult>;
  aggregateLMS_form?: Maybe<LMS_formAggregateResult>;
  aggregateLMS_formStudentProgress?: Maybe<LMS_formStudentProgressAggregateResult>;
  aggregateLMS_group?: Maybe<LMS_groupAggregateResult>;
  aggregateLMS_groupAccount?: Maybe<LMS_groupAccountAggregateResult>;
  aggregateLMS_groupAccountFormAnswer?: Maybe<LMS_groupAccountFormAnswerAggregateResult>;
  aggregateLMS_groupAccountFormAttempt?: Maybe<LMS_groupAccountFormAttemptAggregateResult>;
  aggregateLMS_groupBlockConfig?: Maybe<LMS_groupBlockConfigAggregateResult>;
  aggregateLMS_groupCourseConfig?: Maybe<LMS_groupCourseConfigAggregateResult>;
  aggregateLMS_groupFormConfig?: Maybe<LMS_groupFormConfigAggregateResult>;
  aggregateLMS_groupFormConfigCalculation?: Maybe<LMS_groupFormConfigCalculationAggregateResult>;
  aggregateLMS_groupFormConfigCalculationRange?: Maybe<LMS_groupFormConfigCalculationRangeAggregateResult>;
  aggregateLMS_groupLessonConfig?: Maybe<LMS_groupLessonConfigAggregateResult>;
  aggregateLMS_groupLessonMeetingConfig?: Maybe<LMS_groupLessonMeetingConfigAggregateResult>;
  aggregateLMS_groupLessonTeacherConfig?: Maybe<LMS_groupLessonTeacherConfigAggregateResult>;
  aggregateLMS_groupResourceConfig?: Maybe<LMS_groupResourceConfigAggregateResult>;
  aggregateLMS_lesson?: Maybe<LMS_lessonAggregateResult>;
  aggregateLMS_lessonStudentProgress?: Maybe<LMS_lessonStudentProgressAggregateResult>;
  aggregateLMS_meetingStudentProgress?: Maybe<LMS_meetingStudentProgressAggregateResult>;
  aggregateLMS_product?: Maybe<LMS_productAggregateResult>;
  aggregateLMS_resource?: Maybe<LMS_resourceAggregateResult>;
  aggregateLMS_resourceStudentProgress?: Maybe<LMS_resourceStudentProgressAggregateResult>;
  aggregateLMS_resourceStudentVideoReport?: Maybe<LMS_resourceStudentVideoReportAggregateResult>;
  aggregateLMS_resourceStudentVideoReport_interval?: Maybe<LMS_resourceStudentVideoReport_intervalAggregateResult>;
  aggregateLMS_section?: Maybe<LMS_sectionAggregateResult>;
  aggregateLMS_thumbnail?: Maybe<LMS_thumbnailAggregateResult>;
  aggregateLogger_log?: Maybe<Logger_logAggregateResult>;
  aggregateLoginProvider?: Maybe<LoginProviderAggregateResult>;
  aggregateMeeting?: Maybe<MeetingAggregateResult>;
  aggregateMeetingAccount?: Maybe<MeetingAccountAggregateResult>;
  aggregateMeetingDoctors_user?: Maybe<MeetingDoctors_userAggregateResult>;
  aggregateMeetingProvider?: Maybe<MeetingProviderAggregateResult>;
  aggregateNavigation?: Maybe<NavigationAggregateResult>;
  aggregateNavigation_route?: Maybe<Navigation_routeAggregateResult>;
  aggregateORG_PACKAGE?: Maybe<ORG_PACKAGEAggregateResult>;
  aggregateORG_account?: Maybe<ORG_accountAggregateResult>;
  aggregateORG_role?: Maybe<ORG_roleAggregateResult>;
  aggregateOrg?: Maybe<OrgAggregateResult>;
  aggregateOrg360?: Maybe<Org360AggregateResult>;
  aggregateOrg360_theme?: Maybe<Org360_themeAggregateResult>;
  aggregateOrgDomain?: Maybe<OrgDomainAggregateResult>;
  aggregateOrganization_department?: Maybe<Organization_departmentAggregateResult>;
  aggregatePETPASS_APP?: Maybe<PETPASS_APPAggregateResult>;
  aggregatePETPASS_banner?: Maybe<PETPASS_bannerAggregateResult>;
  aggregatePETPASS_contract?: Maybe<PETPASS_contractAggregateResult>;
  aggregatePETPASS_file?: Maybe<PETPASS_fileAggregateResult>;
  aggregatePETPASS_insurance?: Maybe<PETPASS_insuranceAggregateResult>;
  aggregatePETPASS_insurance_company?: Maybe<PETPASS_insurance_companyAggregateResult>;
  aggregatePETPASS_location?: Maybe<PETPASS_locationAggregateResult>;
  aggregatePETPASS_locationPolicy?: Maybe<PETPASS_locationPolicyAggregateResult>;
  aggregatePETPASS_locator?: Maybe<PETPASS_locatorAggregateResult>;
  aggregatePETPASS_partner?: Maybe<PETPASS_partnerAggregateResult>;
  aggregatePETPASS_pet?: Maybe<PETPASS_petAggregateResult>;
  aggregatePETPASS_petToken?: Maybe<PETPASS_petTokenAggregateResult>;
  aggregatePETPASS_pet_external_insurance?: Maybe<PETPASS_pet_external_insuranceAggregateResult>;
  aggregatePETPASS_pet_insurance?: Maybe<PETPASS_pet_insuranceAggregateResult>;
  aggregatePETPASS_product?: Maybe<PETPASS_productAggregateResult>;
  aggregatePETPASS_purchase?: Maybe<PETPASS_purchaseAggregateResult>;
  aggregatePETPASS_sos?: Maybe<PETPASS_sosAggregateResult>;
  aggregatePETPASS_sos_event?: Maybe<PETPASS_sos_eventAggregateResult>;
  aggregatePETPASS_user?: Maybe<PETPASS_userAggregateResult>;
  aggregatePerson?: Maybe<PersonAggregateResult>;
  aggregatePet?: Maybe<PetAggregateResult>;
  aggregatePetBreed?: Maybe<PetBreedAggregateResult>;
  aggregatePetType?: Maybe<PetTypeAggregateResult>;
  aggregatePet_file?: Maybe<Pet_fileAggregateResult>;
  aggregatePet_vaccination?: Maybe<Pet_vaccinationAggregateResult>;
  aggregatePet_vaccine?: Maybe<Pet_vaccineAggregateResult>;
  aggregateProduct?: Maybe<ProductAggregateResult>;
  aggregateProduct_category?: Maybe<Product_categoryAggregateResult>;
  aggregateProduct_item?: Maybe<Product_itemAggregateResult>;
  aggregateProduct_paymentPlanItem?: Maybe<Product_paymentPlanItemAggregateResult>;
  aggregateProposal?: Maybe<ProposalAggregateResult>;
  aggregateProposal_resource?: Maybe<Proposal_resourceAggregateResult>;
  aggregateProposal_stakeholder?: Maybe<Proposal_stakeholderAggregateResult>;
  aggregateProposal_stakeholderResource?: Maybe<Proposal_stakeholderResourceAggregateResult>;
  aggregateProposal_stakeholderToken?: Maybe<Proposal_stakeholderTokenAggregateResult>;
  aggregateResource?: Maybe<ResourceAggregateResult>;
  aggregateResourceToken?: Maybe<ResourceTokenAggregateResult>;
  aggregateSMS?: Maybe<SMSAggregateResult>;
  aggregateScheduler?: Maybe<SchedulerAggregateResult>;
  aggregateScheduler_action?: Maybe<Scheduler_actionAggregateResult>;
  aggregateScheduler_externalAction?: Maybe<Scheduler_externalActionAggregateResult>;
  aggregateScheduler_managerAction?: Maybe<Scheduler_managerActionAggregateResult>;
  aggregateScheduler_task?: Maybe<Scheduler_taskAggregateResult>;
  aggregateSearchIndex_contact?: Maybe<SearchIndex_contactAggregateResult>;
  aggregateServiceAccount?: Maybe<ServiceAccountAggregateResult>;
  aggregateShortUrl?: Maybe<ShortUrlAggregateResult>;
  aggregateShortUrl_domain?: Maybe<ShortUrl_domainAggregateResult>;
  aggregateStorage?: Maybe<StorageAggregateResult>;
  aggregateStorage_file?: Maybe<Storage_fileAggregateResult>;
  aggregateStorage_fileByDemand?: Maybe<Storage_fileByDemandAggregateResult>;
  aggregateStorage_fileOperationToken?: Maybe<Storage_fileOperationTokenAggregateResult>;
  aggregateTwoFactorToken?: Maybe<TwoFactorTokenAggregateResult>;
  aggregateUnit?: Maybe<UnitAggregateResult>;
  aggregateUser?: Maybe<UserAggregateResult>;
  aggregateUser_token?: Maybe<User_tokenAggregateResult>;
  aggregateVET_PACKAGE?: Maybe<VET_PACKAGEAggregateResult>;
  aggregateVET_account?: Maybe<VET_accountAggregateResult>;
  aggregateVET_contact?: Maybe<VET_contactAggregateResult>;
  aggregateVET_pet?: Maybe<VET_petAggregateResult>;
  aggregateWebhook?: Maybe<WebhookAggregateResult>;
  aggregateWebhook_provider?: Maybe<Webhook_providerAggregateResult>;
  aggregateWebhook_providerOrigin?: Maybe<Webhook_providerOriginAggregateResult>;
  checkUserPassword?: Maybe<User>;
  getAUDITS_PACKAGE?: Maybe<AUDITS_PACKAGE>;
  getAUDITS_account?: Maybe<AUDITS_account>;
  getAUDITS_document?: Maybe<AUDITS_document>;
  getAUDITS_document_block?: Maybe<AUDITS_document_block>;
  getAUDITS_document_blockImage?: Maybe<AUDITS_document_blockImage>;
  getAUDITS_document_blockQuote?: Maybe<AUDITS_document_blockQuote>;
  getAUDITS_document_blockTable?: Maybe<AUDITS_document_blockTable>;
  getAUDITS_document_blockTableCell?: Maybe<AUDITS_document_blockTableCell>;
  getAUDITS_document_blockTableColumn?: Maybe<AUDITS_document_blockTableColumn>;
  getAUDITS_document_blockTableRow?: Maybe<AUDITS_document_blockTableRow>;
  getAUDITS_document_blockText?: Maybe<AUDITS_document_blockText>;
  getAUDITS_document_blockTitle?: Maybe<AUDITS_document_blockTitle>;
  getAUDITS_file?: Maybe<AUDITS_file>;
  getAUDITS_project?: Maybe<AUDITS_project>;
  getAUDITS_project_version?: Maybe<AUDITS_project_version>;
  getAUDITS_review?: Maybe<AUDITS_review>;
  getAUDITS_review_account?: Maybe<AUDITS_review_account>;
  getAUDITS_review_comment?: Maybe<AUDITS_review_comment>;
  getAccount?: Maybe<Account>;
  getAccount_event?: Maybe<Account_event>;
  getAccount_log?: Maybe<Account_log>;
  getAccount_notification?: Maybe<Account_notification>;
  getAccount_session?: Maybe<Account_session>;
  getAccount_sessionConnection?: Maybe<Account_sessionConnection>;
  getAccount_sessionConnectionTask?: Maybe<Account_sessionConnectionTask>;
  getAccount_sessionTask?: Maybe<Account_sessionTask>;
  getAddress?: Maybe<Address>;
  getBank?: Maybe<Bank>;
  getBankAccount?: Maybe<BankAccount>;
  getCMS_PACKAGE?: Maybe<CMS_PACKAGE>;
  getCMS_account?: Maybe<CMS_account>;
  getCMS_app?: Maybe<CMS_app>;
  getCMS_appContact?: Maybe<CMS_appContact>;
  getCMS_authorAlias?: Maybe<CMS_authorAlias>;
  getCMS_contact?: Maybe<CMS_contact>;
  getCMS_file?: Maybe<CMS_file>;
  getCMS_website?: Maybe<CMS_website>;
  getCMS_website_page?: Maybe<CMS_website_page>;
  getCMS_website_page_block?: Maybe<CMS_website_page_block>;
  getCMS_website_page_blockCombo?: Maybe<CMS_website_page_blockCombo>;
  getCMS_website_page_blockImage?: Maybe<CMS_website_page_blockImage>;
  getCMS_website_page_blockLink?: Maybe<CMS_website_page_blockLink>;
  getCMS_website_page_blockText?: Maybe<CMS_website_page_blockText>;
  getCMS_website_page_blockTitle?: Maybe<CMS_website_page_blockTitle>;
  getCRM_PACKAGE?: Maybe<CRM_PACKAGE>;
  getCRM_account?: Maybe<CRM_account>;
  getCRM_accountContactsTableColumn?: Maybe<CRM_accountContactsTableColumn>;
  getCRM_accountContactsTableFilter?: Maybe<CRM_accountContactsTableFilter>;
  getCRM_accountEvent?: Maybe<CRM_accountEvent>;
  getCRM_action?: Maybe<CRM_action>;
  getCRM_actionCall?: Maybe<CRM_actionCall>;
  getCRM_actionChat?: Maybe<CRM_actionChat>;
  getCRM_actionEmail?: Maybe<CRM_actionEmail>;
  getCRM_actionMeeting?: Maybe<CRM_actionMeeting>;
  getCRM_area?: Maybe<CRM_area>;
  getCRM_campaign?: Maybe<CRM_campaign>;
  getCRM_campaignContact?: Maybe<CRM_campaignContact>;
  getCRM_campaignContactEvent?: Maybe<CRM_campaignContactEvent>;
  getCRM_campaignDeliver?: Maybe<CRM_campaignDeliver>;
  getCRM_campaignEmailTemplate?: Maybe<CRM_campaignEmailTemplate>;
  getCRM_contact?: Maybe<CRM_contact>;
  getCRM_contactAction?: Maybe<CRM_contactAction>;
  getCRM_contactActionCall?: Maybe<CRM_contactActionCall>;
  getCRM_contactActionChat?: Maybe<CRM_contactActionChat>;
  getCRM_contactActionEmail?: Maybe<CRM_contactActionEmail>;
  getCRM_contactActionMeeting?: Maybe<CRM_contactActionMeeting>;
  getCRM_contactActionStatusChange?: Maybe<CRM_contactActionStatusChange>;
  getCRM_contactAnswer?: Maybe<CRM_contactAnswer>;
  getCRM_contactInput?: Maybe<CRM_contactInput>;
  getCRM_contactInputSubStatus?: Maybe<CRM_contactInputSubStatus>;
  getCRM_contactInputValue?: Maybe<CRM_contactInputValue>;
  getCRM_contactList?: Maybe<CRM_contactList>;
  getCRM_emailTemplate?: Maybe<CRM_emailTemplate>;
  getCRM_event?: Maybe<CRM_event>;
  getCRM_funnel?: Maybe<CRM_funnel>;
  getCRM_funnelAction?: Maybe<CRM_funnelAction>;
  getCRM_funnelStatus?: Maybe<CRM_funnelStatus>;
  getCRM_opportunityLog?: Maybe<CRM_opportunityLog>;
  getCRM_opportunityPaymentPlanItem?: Maybe<CRM_opportunityPaymentPlanItem>;
  getCRM_overview?: Maybe<CRM_overview>;
  getCRM_proposal?: Maybe<CRM_proposal>;
  getCRM_role?: Maybe<CRM_role>;
  getCRM_socialMediaCampaign?: Maybe<CRM_socialMediaCampaign>;
  getCRM_socialMediaCampaign_media?: Maybe<CRM_socialMediaCampaign_media>;
  getCRM_socialMediaCampaign_post?: Maybe<CRM_socialMediaCampaign_post>;
  getCRM_source?: Maybe<CRM_source>;
  getCRM_sourceCategory?: Maybe<CRM_sourceCategory>;
  getCRM_sourceForm?: Maybe<CRM_sourceForm>;
  getCRM_sourceFormField?: Maybe<CRM_sourceFormField>;
  getCRM_sourceFormReason?: Maybe<CRM_sourceFormReason>;
  getCRM_sourceForm_emailTemplate?: Maybe<CRM_sourceForm_emailTemplate>;
  getCRM_team?: Maybe<CRM_team>;
  getCRM_teamAccount?: Maybe<CRM_teamAccount>;
  getCRM_teamAction?: Maybe<CRM_teamAction>;
  getCRM_teamActionBoardEffect?: Maybe<CRM_teamActionBoardEffect>;
  getCRM_teamBoard?: Maybe<CRM_teamBoard>;
  getCRM_teamBoardItem?: Maybe<CRM_teamBoardItem>;
  getCRM_teamBoardStatus?: Maybe<CRM_teamBoardStatus>;
  getCRM_teamBoardSubStatus?: Maybe<CRM_teamBoardSubStatus>;
  getCRM_teamBoardTask?: Maybe<CRM_teamBoardTask>;
  getChatbots_PACKAGE?: Maybe<Chatbots_PACKAGE>;
  getChatbots_account?: Maybe<Chatbots_account>;
  getChatbots_area?: Maybe<Chatbots_area>;
  getChatbots_areaAccount?: Maybe<Chatbots_areaAccount>;
  getChatbots_externalAPI?: Maybe<Chatbots_externalAPI>;
  getChatbots_externalAPI_field?: Maybe<Chatbots_externalAPI_field>;
  getChatbots_process?: Maybe<Chatbots_process>;
  getChatbots_processAPI?: Maybe<Chatbots_processAPI>;
  getChatbots_processAccount?: Maybe<Chatbots_processAccount>;
  getChatbots_processAction?: Maybe<Chatbots_processAction>;
  getChatbots_processButton?: Maybe<Chatbots_processButton>;
  getChatbots_processField?: Maybe<Chatbots_processField>;
  getChatbots_processFilterParam?: Maybe<Chatbots_processFilterParam>;
  getChatbots_processOperation?: Maybe<Chatbots_processOperation>;
  getChatbots_processStatus?: Maybe<Chatbots_processStatus>;
  getChatbots_processTableHead?: Maybe<Chatbots_processTableHead>;
  getChatbots_processTableHeadConfig?: Maybe<Chatbots_processTableHeadConfig>;
  getChatbots_processTableMatchReplace?: Maybe<Chatbots_processTableMatchReplace>;
  getChatbots_processValidation?: Maybe<Chatbots_processValidation>;
  getChatbots_processValidationOperation?: Maybe<Chatbots_processValidationOperation>;
  getChatbots_processValidationOperation_document?: Maybe<Chatbots_processValidationOperation_document>;
  getChatbots_processValidationOperation_document_file?: Maybe<Chatbots_processValidationOperation_document_file>;
  getChatbots_processsValidationOperation_field?: Maybe<Chatbots_processsValidationOperation_field>;
  getChatbots_validation?: Maybe<Chatbots_validation>;
  getChatbots_validationDocument?: Maybe<Chatbots_validationDocument>;
  getChatbots_validationDocument_file?: Maybe<Chatbots_validationDocument_file>;
  getChatbots_validationField?: Maybe<Chatbots_validationField>;
  getCompanySector?: Maybe<CompanySector>;
  getContact?: Maybe<Contact>;
  getContact_billingInfo?: Maybe<Contact_billingInfo>;
  getContact_businessInfo?: Maybe<Contact_businessInfo>;
  getContact_email?: Maybe<Contact_email>;
  getContact_importLog?: Maybe<Contact_importLog>;
  getContact_jobPosition?: Maybe<Contact_jobPosition>;
  getContact_phone?: Maybe<Contact_phone>;
  getCountry?: Maybe<Country>;
  getCurrency?: Maybe<Currency>;
  getDynamicTable?: Maybe<DynamicTable>;
  getDynamicTable_account?: Maybe<DynamicTable_account>;
  getDynamicTable_head?: Maybe<DynamicTable_head>;
  getDynamicTable_headValueBooleanOptions?: Maybe<DynamicTable_headValueBooleanOptions>;
  getDynamicTable_headValueCurrencyOptions?: Maybe<DynamicTable_headValueCurrencyOptions>;
  getDynamicTable_headValueDateOptions?: Maybe<DynamicTable_headValueDateOptions>;
  getDynamicTable_headValueLinkOptions?: Maybe<DynamicTable_headValueLinkOptions>;
  getDynamicTable_headValueNumberOptions?: Maybe<DynamicTable_headValueNumberOptions>;
  getE360App?: Maybe<E360App>;
  getE360App_domain?: Maybe<E360App_domain>;
  getE360App_location?: Maybe<E360App_location>;
  getE360App_locationFile?: Maybe<E360App_locationFile>;
  getE360App_locationSchedule?: Maybe<E360App_locationSchedule>;
  getE360App_location_appoinment?: Maybe<E360App_location_appoinment>;
  getE360App_location_appoinmentLots?: Maybe<E360App_location_appoinmentLots>;
  getE360App_location_area?: Maybe<E360App_location_area>;
  getE360App_location_area_resource?: Maybe<E360App_location_area_resource>;
  getE360App_location_area_workShift?: Maybe<E360App_location_area_workShift>;
  getE360App_location_menu?: Maybe<E360App_location_menu>;
  getE360App_location_menu_combo?: Maybe<E360App_location_menu_combo>;
  getE360App_location_menu_item?: Maybe<E360App_location_menu_item>;
  getE360App_location_menu_section?: Maybe<E360App_location_menu_section>;
  getE360App_location_menu_section_item?: Maybe<E360App_location_menu_section_item>;
  getE360App_location_menu_subSection?: Maybe<E360App_location_menu_subSection>;
  getE360App_location_menu_tag?: Maybe<E360App_location_menu_tag>;
  getE360App_notification?: Maybe<E360App_notification>;
  getE360App_organization?: Maybe<E360App_organization>;
  getE360App_organization_user?: Maybe<E360App_organization_user>;
  getE360App_partner?: Maybe<E360App_partner>;
  getE360App_partner_webhook?: Maybe<E360App_partner_webhook>;
  getE360App_shop?: Maybe<E360App_shop>;
  getE360App_shop_contract?: Maybe<E360App_shop_contract>;
  getE360App_shop_customer_contract?: Maybe<E360App_shop_customer_contract>;
  getE360App_shop_customer_contractService?: Maybe<E360App_shop_customer_contractService>;
  getE360App_shop_customer_contract_renewal?: Maybe<E360App_shop_customer_contract_renewal>;
  getE360App_shop_operation?: Maybe<E360App_shop_operation>;
  getE360App_shop_partner_contract?: Maybe<E360App_shop_partner_contract>;
  getE360App_shop_product?: Maybe<E360App_shop_product>;
  getE360App_shop_productItem?: Maybe<E360App_shop_productItem>;
  getE360App_shop_productService?: Maybe<E360App_shop_productService>;
  getE360App_shop_promoProduct?: Maybe<E360App_shop_promoProduct>;
  getE360App_shop_promotion?: Maybe<E360App_shop_promotion>;
  getE360App_shop_promotionCode?: Maybe<E360App_shop_promotionCode>;
  getE360App_shop_purchase?: Maybe<E360App_shop_purchase>;
  getE360App_shop_purchaseProviderEvent?: Maybe<E360App_shop_purchaseProviderEvent>;
  getE360App_stablishment?: Maybe<E360App_stablishment>;
  getE360App_stablishment_user?: Maybe<E360App_stablishment_user>;
  getE360App_user?: Maybe<E360App_user>;
  getE360App_userLog?: Maybe<E360App_userLog>;
  getE360App_userSession?: Maybe<E360App_userSession>;
  getE360App_userSessionConnection?: Maybe<E360App_userSessionConnection>;
  getE360App_userSessionConnectionTask?: Maybe<E360App_userSessionConnectionTask>;
  getE360App_userSessionTask?: Maybe<E360App_userSessionTask>;
  getE360App_user_notification?: Maybe<E360App_user_notification>;
  getE360App_user_partner?: Maybe<E360App_user_partner>;
  getE360Storage_file?: Maybe<E360Storage_file>;
  getERP_PACKAGE?: Maybe<ERP_PACKAGE>;
  getERP_account?: Maybe<ERP_account>;
  getERP_accountEvent?: Maybe<ERP_accountEvent>;
  getERP_accountingAccount?: Maybe<ERP_accountingAccount>;
  getERP_contact?: Maybe<ERP_contact>;
  getERP_contactAction?: Maybe<ERP_contactAction>;
  getERP_contactSerie?: Maybe<ERP_contactSerie>;
  getERP_event?: Maybe<ERP_event>;
  getERP_invoice?: Maybe<ERP_invoice>;
  getERP_invoiceItem?: Maybe<ERP_invoiceItem>;
  getERP_invoiceNote?: Maybe<ERP_invoiceNote>;
  getERP_organizationBillingInfo?: Maybe<ERP_organizationBillingInfo>;
  getERP_paymentPlan?: Maybe<ERP_paymentPlan>;
  getERP_product?: Maybe<ERP_product>;
  getERP_resource?: Maybe<ERP_resource>;
  getERP_role?: Maybe<ERP_role>;
  getERP_seat?: Maybe<ERP_seat>;
  getERP_seatLine?: Maybe<ERP_seatLine>;
  getERP_tax?: Maybe<ERP_tax>;
  getERP_withholding?: Maybe<ERP_withholding>;
  getEmail?: Maybe<Email>;
  getEmailEditor?: Maybe<EmailEditor>;
  getEmailEditor_template?: Maybe<EmailEditor_template>;
  getEmail_attachment?: Maybe<Email_attachment>;
  getEvent?: Maybe<Event>;
  getExternalAPI_key?: Maybe<ExternalAPI_key>;
  getFormBuilder?: Maybe<FormBuilder>;
  getFormBuilder_form?: Maybe<FormBuilder_form>;
  getFormBuilder_input?: Maybe<FormBuilder_input>;
  getFormBuilder_inputBoolean?: Maybe<FormBuilder_inputBoolean>;
  getFormBuilder_inputMultipleChoice?: Maybe<FormBuilder_inputMultipleChoice>;
  getFormBuilder_inputMultipleChoiceOption?: Maybe<FormBuilder_inputMultipleChoiceOption>;
  getFormBuilder_inputNumber?: Maybe<FormBuilder_inputNumber>;
  getFormBuilder_inputText?: Maybe<FormBuilder_inputText>;
  getGeneralAccountingAccount?: Maybe<GeneralAccountingAccount>;
  getImportProcess?: Maybe<ImportProcess>;
  getImportProcess_elementField?: Maybe<ImportProcess_elementField>;
  getImportProcess_item?: Maybe<ImportProcess_item>;
  getImportProcess_itemError?: Maybe<ImportProcess_itemError>;
  getImportProcess_itemValue?: Maybe<ImportProcess_itemValue>;
  getImportProcess_match?: Maybe<ImportProcess_match>;
  getImportProcess_sourceValue?: Maybe<ImportProcess_sourceValue>;
  getInbox?: Maybe<Inbox>;
  getInbox_item?: Maybe<Inbox_item>;
  getIntegrations?: Maybe<Integrations>;
  getIntegrations_Digilab_Provider?: Maybe<Integrations_Digilab_Provider>;
  getIntegrations_Google_Analytics_Provider?: Maybe<Integrations_Google_Analytics_Provider>;
  getIntegrations_Google_Provider?: Maybe<Integrations_Google_Provider>;
  getIntegrations_Link_Mobility_Provider?: Maybe<Integrations_Link_Mobility_Provider>;
  getIntegrations_LinkedIn_Provider?: Maybe<Integrations_LinkedIn_Provider>;
  getIntegrations_MSFT_Meeting?: Maybe<Integrations_MSFT_Meeting>;
  getIntegrations_MSFT_Provider?: Maybe<Integrations_MSFT_Provider>;
  getIntegrations_Meta_Provider?: Maybe<Integrations_Meta_Provider>;
  getIntegrations_SendGrid_Provider?: Maybe<Integrations_SendGrid_Provider>;
  getIntegrations_Sendgrid_emailEvent?: Maybe<Integrations_Sendgrid_emailEvent>;
  getIntegrations_account?: Maybe<Integrations_account>;
  getIntegrations_carrefour_operartionsLog?: Maybe<Integrations_carrefour_operartionsLog>;
  getJobPosition?: Maybe<JobPosition>;
  getLMS_PACKAGE?: Maybe<LMS_PACKAGE>;
  getLMS_account?: Maybe<LMS_account>;
  getLMS_accountLog?: Maybe<LMS_accountLog>;
  getLMS_accountLogDetail?: Maybe<LMS_accountLogDetail>;
  getLMS_block?: Maybe<LMS_block>;
  getLMS_blockStudentProgress?: Maybe<LMS_blockStudentProgress>;
  getLMS_contact?: Maybe<LMS_contact>;
  getLMS_course?: Maybe<LMS_course>;
  getLMS_courseCategory?: Maybe<LMS_courseCategory>;
  getLMS_courseStudentProgress?: Maybe<LMS_courseStudentProgress>;
  getLMS_courseVersion?: Maybe<LMS_courseVersion>;
  getLMS_form?: Maybe<LMS_form>;
  getLMS_formStudentProgress?: Maybe<LMS_formStudentProgress>;
  getLMS_group?: Maybe<LMS_group>;
  getLMS_groupAccount?: Maybe<LMS_groupAccount>;
  getLMS_groupAccountFormAnswer?: Maybe<LMS_groupAccountFormAnswer>;
  getLMS_groupAccountFormAttempt?: Maybe<LMS_groupAccountFormAttempt>;
  getLMS_groupBlockConfig?: Maybe<LMS_groupBlockConfig>;
  getLMS_groupCourseConfig?: Maybe<LMS_groupCourseConfig>;
  getLMS_groupFormConfig?: Maybe<LMS_groupFormConfig>;
  getLMS_groupFormConfigCalculation?: Maybe<LMS_groupFormConfigCalculation>;
  getLMS_groupFormConfigCalculationRange?: Maybe<LMS_groupFormConfigCalculationRange>;
  getLMS_groupLessonConfig?: Maybe<LMS_groupLessonConfig>;
  getLMS_groupLessonMeetingConfig?: Maybe<LMS_groupLessonMeetingConfig>;
  getLMS_groupLessonTeacherConfig?: Maybe<LMS_groupLessonTeacherConfig>;
  getLMS_groupResourceConfig?: Maybe<LMS_groupResourceConfig>;
  getLMS_lesson?: Maybe<LMS_lesson>;
  getLMS_lessonStudentProgress?: Maybe<LMS_lessonStudentProgress>;
  getLMS_meetingStudentProgress?: Maybe<LMS_meetingStudentProgress>;
  getLMS_product?: Maybe<LMS_product>;
  getLMS_resource?: Maybe<LMS_resource>;
  getLMS_resourceStudentProgress?: Maybe<LMS_resourceStudentProgress>;
  getLMS_resourceStudentVideoReport?: Maybe<LMS_resourceStudentVideoReport>;
  getLMS_resourceStudentVideoReport_interval?: Maybe<LMS_resourceStudentVideoReport_interval>;
  getLMS_section?: Maybe<LMS_section>;
  getLMS_thumbnail?: Maybe<LMS_thumbnail>;
  getLogger_log?: Maybe<Logger_log>;
  getLoginProvider?: Maybe<LoginProvider>;
  getMeeting?: Maybe<Meeting>;
  getMeetingAccount?: Maybe<MeetingAccount>;
  getMeetingDoctors_user?: Maybe<MeetingDoctors_user>;
  getMeetingProvider?: Maybe<MeetingProvider>;
  getNavigation?: Maybe<Navigation>;
  getNavigation_route?: Maybe<Navigation_route>;
  getORG_PACKAGE?: Maybe<ORG_PACKAGE>;
  getORG_account?: Maybe<ORG_account>;
  getORG_role?: Maybe<ORG_role>;
  getOrg?: Maybe<Org>;
  getOrg360?: Maybe<Org360>;
  getOrg360_theme?: Maybe<Org360_theme>;
  getOrgDomain?: Maybe<OrgDomain>;
  getOrganization_department?: Maybe<Organization_department>;
  getPETPASS_APP?: Maybe<PETPASS_APP>;
  getPETPASS_banner?: Maybe<PETPASS_banner>;
  getPETPASS_contract?: Maybe<PETPASS_contract>;
  getPETPASS_file?: Maybe<PETPASS_file>;
  getPETPASS_insurance?: Maybe<PETPASS_insurance>;
  getPETPASS_insurance_company?: Maybe<PETPASS_insurance_company>;
  getPETPASS_location?: Maybe<PETPASS_location>;
  getPETPASS_locationPolicy?: Maybe<PETPASS_locationPolicy>;
  getPETPASS_locator?: Maybe<PETPASS_locator>;
  getPETPASS_partner?: Maybe<PETPASS_partner>;
  getPETPASS_pet?: Maybe<PETPASS_pet>;
  getPETPASS_petToken?: Maybe<PETPASS_petToken>;
  getPETPASS_pet_external_insurance?: Maybe<PETPASS_pet_external_insurance>;
  getPETPASS_pet_insurance?: Maybe<PETPASS_pet_insurance>;
  getPETPASS_product?: Maybe<PETPASS_product>;
  getPETPASS_purchase?: Maybe<PETPASS_purchase>;
  getPETPASS_sos?: Maybe<PETPASS_sos>;
  getPETPASS_sos_event?: Maybe<PETPASS_sos_event>;
  getPETPASS_user?: Maybe<PETPASS_user>;
  getPerson?: Maybe<Person>;
  getPet?: Maybe<Pet>;
  getPetBreed?: Maybe<PetBreed>;
  getPetType?: Maybe<PetType>;
  getPet_file?: Maybe<Pet_file>;
  getPet_vaccination?: Maybe<Pet_vaccination>;
  getPet_vaccine?: Maybe<Pet_vaccine>;
  getProduct?: Maybe<Product>;
  getProduct_category?: Maybe<Product_category>;
  getProduct_item?: Maybe<Product_item>;
  getProduct_paymentPlanItem?: Maybe<Product_paymentPlanItem>;
  getProposal?: Maybe<Proposal>;
  getProposal_resource?: Maybe<Proposal_resource>;
  getProposal_stakeholder?: Maybe<Proposal_stakeholder>;
  getProposal_stakeholderResource?: Maybe<Proposal_stakeholderResource>;
  getProposal_stakeholderToken?: Maybe<Proposal_stakeholderToken>;
  getResource?: Maybe<Resource>;
  getResourceToken?: Maybe<ResourceToken>;
  getSMS?: Maybe<SMS>;
  getScheduler?: Maybe<Scheduler>;
  getScheduler_action?: Maybe<Scheduler_action>;
  getScheduler_managerAction?: Maybe<Scheduler_managerAction>;
  getScheduler_task?: Maybe<Scheduler_task>;
  getSearchIndex_contact?: Maybe<SearchIndex_contact>;
  getServiceAccount?: Maybe<ServiceAccount>;
  getShortUrl?: Maybe<ShortUrl>;
  getShortUrl_domain?: Maybe<ShortUrl_domain>;
  getStorage?: Maybe<Storage>;
  getStorage_file?: Maybe<Storage_file>;
  getStorage_fileByDemand?: Maybe<Storage_fileByDemand>;
  getStorage_fileOperationToken?: Maybe<Storage_fileOperationToken>;
  getTwoFactorToken?: Maybe<TwoFactorToken>;
  getUnit?: Maybe<Unit>;
  getUser?: Maybe<User>;
  getUser_token?: Maybe<User_token>;
  getVET_PACKAGE?: Maybe<VET_PACKAGE>;
  getVET_account?: Maybe<VET_account>;
  getVET_contact?: Maybe<VET_contact>;
  getVET_pet?: Maybe<VET_pet>;
  getWebhook?: Maybe<Webhook>;
  getWebhook_provider?: Maybe<Webhook_provider>;
  getWebhook_providerOrigin?: Maybe<Webhook_providerOrigin>;
  queryAUDITS_PACKAGE?: Maybe<Array<Maybe<AUDITS_PACKAGE>>>;
  queryAUDITS_account?: Maybe<Array<Maybe<AUDITS_account>>>;
  queryAUDITS_document?: Maybe<Array<Maybe<AUDITS_document>>>;
  queryAUDITS_document_block?: Maybe<Array<Maybe<AUDITS_document_block>>>;
  queryAUDITS_document_blockImage?: Maybe<Array<Maybe<AUDITS_document_blockImage>>>;
  queryAUDITS_document_blockQuote?: Maybe<Array<Maybe<AUDITS_document_blockQuote>>>;
  queryAUDITS_document_blockTable?: Maybe<Array<Maybe<AUDITS_document_blockTable>>>;
  queryAUDITS_document_blockTableCell?: Maybe<Array<Maybe<AUDITS_document_blockTableCell>>>;
  queryAUDITS_document_blockTableColumn?: Maybe<Array<Maybe<AUDITS_document_blockTableColumn>>>;
  queryAUDITS_document_blockTableRow?: Maybe<Array<Maybe<AUDITS_document_blockTableRow>>>;
  queryAUDITS_document_blockText?: Maybe<Array<Maybe<AUDITS_document_blockText>>>;
  queryAUDITS_document_blockTitle?: Maybe<Array<Maybe<AUDITS_document_blockTitle>>>;
  queryAUDITS_file?: Maybe<Array<Maybe<AUDITS_file>>>;
  queryAUDITS_project?: Maybe<Array<Maybe<AUDITS_project>>>;
  queryAUDITS_project_version?: Maybe<Array<Maybe<AUDITS_project_version>>>;
  queryAUDITS_review?: Maybe<Array<Maybe<AUDITS_review>>>;
  queryAUDITS_review_account?: Maybe<Array<Maybe<AUDITS_review_account>>>;
  queryAUDITS_review_comment?: Maybe<Array<Maybe<AUDITS_review_comment>>>;
  queryAccount?: Maybe<Array<Maybe<Account>>>;
  queryAccount_event?: Maybe<Array<Maybe<Account_event>>>;
  queryAccount_log?: Maybe<Array<Maybe<Account_log>>>;
  queryAccount_notification?: Maybe<Array<Maybe<Account_notification>>>;
  queryAccount_session?: Maybe<Array<Maybe<Account_session>>>;
  queryAccount_sessionConnection?: Maybe<Array<Maybe<Account_sessionConnection>>>;
  queryAccount_sessionConnectionTask?: Maybe<Array<Maybe<Account_sessionConnectionTask>>>;
  queryAccount_sessionTask?: Maybe<Array<Maybe<Account_sessionTask>>>;
  queryAddress?: Maybe<Array<Maybe<Address>>>;
  queryBank?: Maybe<Array<Maybe<Bank>>>;
  queryBankAccount?: Maybe<Array<Maybe<BankAccount>>>;
  queryCMS_PACKAGE?: Maybe<Array<Maybe<CMS_PACKAGE>>>;
  queryCMS_account?: Maybe<Array<Maybe<CMS_account>>>;
  queryCMS_app?: Maybe<Array<Maybe<CMS_app>>>;
  queryCMS_appContact?: Maybe<Array<Maybe<CMS_appContact>>>;
  queryCMS_authorAlias?: Maybe<Array<Maybe<CMS_authorAlias>>>;
  queryCMS_contact?: Maybe<Array<Maybe<CMS_contact>>>;
  queryCMS_file?: Maybe<Array<Maybe<CMS_file>>>;
  queryCMS_website?: Maybe<Array<Maybe<CMS_website>>>;
  queryCMS_website_page?: Maybe<Array<Maybe<CMS_website_page>>>;
  queryCMS_website_page_block?: Maybe<Array<Maybe<CMS_website_page_block>>>;
  queryCMS_website_page_blockCombo?: Maybe<Array<Maybe<CMS_website_page_blockCombo>>>;
  queryCMS_website_page_blockImage?: Maybe<Array<Maybe<CMS_website_page_blockImage>>>;
  queryCMS_website_page_blockLink?: Maybe<Array<Maybe<CMS_website_page_blockLink>>>;
  queryCMS_website_page_blockText?: Maybe<Array<Maybe<CMS_website_page_blockText>>>;
  queryCMS_website_page_blockTitle?: Maybe<Array<Maybe<CMS_website_page_blockTitle>>>;
  queryCRM_PACKAGE?: Maybe<Array<Maybe<CRM_PACKAGE>>>;
  queryCRM_account?: Maybe<Array<Maybe<CRM_account>>>;
  queryCRM_accountContactsTableColumn?: Maybe<Array<Maybe<CRM_accountContactsTableColumn>>>;
  queryCRM_accountContactsTableFilter?: Maybe<Array<Maybe<CRM_accountContactsTableFilter>>>;
  queryCRM_accountEvent?: Maybe<Array<Maybe<CRM_accountEvent>>>;
  queryCRM_action?: Maybe<Array<Maybe<CRM_action>>>;
  queryCRM_actionCall?: Maybe<Array<Maybe<CRM_actionCall>>>;
  queryCRM_actionChat?: Maybe<Array<Maybe<CRM_actionChat>>>;
  queryCRM_actionEmail?: Maybe<Array<Maybe<CRM_actionEmail>>>;
  queryCRM_actionMeeting?: Maybe<Array<Maybe<CRM_actionMeeting>>>;
  queryCRM_area?: Maybe<Array<Maybe<CRM_area>>>;
  queryCRM_campaign?: Maybe<Array<Maybe<CRM_campaign>>>;
  queryCRM_campaignContact?: Maybe<Array<Maybe<CRM_campaignContact>>>;
  queryCRM_campaignContactEvent?: Maybe<Array<Maybe<CRM_campaignContactEvent>>>;
  queryCRM_campaignDeliver?: Maybe<Array<Maybe<CRM_campaignDeliver>>>;
  queryCRM_campaignEmailTemplate?: Maybe<Array<Maybe<CRM_campaignEmailTemplate>>>;
  queryCRM_contact?: Maybe<Array<Maybe<CRM_contact>>>;
  queryCRM_contactAction?: Maybe<Array<Maybe<CRM_contactAction>>>;
  queryCRM_contactActionCall?: Maybe<Array<Maybe<CRM_contactActionCall>>>;
  queryCRM_contactActionChat?: Maybe<Array<Maybe<CRM_contactActionChat>>>;
  queryCRM_contactActionEmail?: Maybe<Array<Maybe<CRM_contactActionEmail>>>;
  queryCRM_contactActionMeeting?: Maybe<Array<Maybe<CRM_contactActionMeeting>>>;
  queryCRM_contactActionStatusChange?: Maybe<Array<Maybe<CRM_contactActionStatusChange>>>;
  queryCRM_contactAnswer?: Maybe<Array<Maybe<CRM_contactAnswer>>>;
  queryCRM_contactInput?: Maybe<Array<Maybe<CRM_contactInput>>>;
  queryCRM_contactInputSubStatus?: Maybe<Array<Maybe<CRM_contactInputSubStatus>>>;
  queryCRM_contactInputValue?: Maybe<Array<Maybe<CRM_contactInputValue>>>;
  queryCRM_contactList?: Maybe<Array<Maybe<CRM_contactList>>>;
  queryCRM_emailTemplate?: Maybe<Array<Maybe<CRM_emailTemplate>>>;
  queryCRM_event?: Maybe<Array<Maybe<CRM_event>>>;
  queryCRM_funnel?: Maybe<Array<Maybe<CRM_funnel>>>;
  queryCRM_funnelAction?: Maybe<Array<Maybe<CRM_funnelAction>>>;
  queryCRM_funnelStatus?: Maybe<Array<Maybe<CRM_funnelStatus>>>;
  queryCRM_opportunityLog?: Maybe<Array<Maybe<CRM_opportunityLog>>>;
  queryCRM_opportunityPaymentPlanItem?: Maybe<Array<Maybe<CRM_opportunityPaymentPlanItem>>>;
  queryCRM_overview?: Maybe<Array<Maybe<CRM_overview>>>;
  queryCRM_proposal?: Maybe<Array<Maybe<CRM_proposal>>>;
  queryCRM_role?: Maybe<Array<Maybe<CRM_role>>>;
  queryCRM_socialMediaCampaign?: Maybe<Array<Maybe<CRM_socialMediaCampaign>>>;
  queryCRM_socialMediaCampaign_media?: Maybe<Array<Maybe<CRM_socialMediaCampaign_media>>>;
  queryCRM_socialMediaCampaign_post?: Maybe<Array<Maybe<CRM_socialMediaCampaign_post>>>;
  queryCRM_source?: Maybe<Array<Maybe<CRM_source>>>;
  queryCRM_sourceCategory?: Maybe<Array<Maybe<CRM_sourceCategory>>>;
  queryCRM_sourceForm?: Maybe<Array<Maybe<CRM_sourceForm>>>;
  queryCRM_sourceFormField?: Maybe<Array<Maybe<CRM_sourceFormField>>>;
  queryCRM_sourceFormReason?: Maybe<Array<Maybe<CRM_sourceFormReason>>>;
  queryCRM_sourceForm_emailTemplate?: Maybe<Array<Maybe<CRM_sourceForm_emailTemplate>>>;
  queryCRM_team?: Maybe<Array<Maybe<CRM_team>>>;
  queryCRM_teamAccount?: Maybe<Array<Maybe<CRM_teamAccount>>>;
  queryCRM_teamAction?: Maybe<Array<Maybe<CRM_teamAction>>>;
  queryCRM_teamActionBoardEffect?: Maybe<Array<Maybe<CRM_teamActionBoardEffect>>>;
  queryCRM_teamBoard?: Maybe<Array<Maybe<CRM_teamBoard>>>;
  queryCRM_teamBoardItem?: Maybe<Array<Maybe<CRM_teamBoardItem>>>;
  queryCRM_teamBoardStatus?: Maybe<Array<Maybe<CRM_teamBoardStatus>>>;
  queryCRM_teamBoardSubStatus?: Maybe<Array<Maybe<CRM_teamBoardSubStatus>>>;
  queryCRM_teamBoardTask?: Maybe<Array<Maybe<CRM_teamBoardTask>>>;
  queryChatbots_PACKAGE?: Maybe<Array<Maybe<Chatbots_PACKAGE>>>;
  queryChatbots_account?: Maybe<Array<Maybe<Chatbots_account>>>;
  queryChatbots_area?: Maybe<Array<Maybe<Chatbots_area>>>;
  queryChatbots_areaAccount?: Maybe<Array<Maybe<Chatbots_areaAccount>>>;
  queryChatbots_externalAPI?: Maybe<Array<Maybe<Chatbots_externalAPI>>>;
  queryChatbots_externalAPI_field?: Maybe<Array<Maybe<Chatbots_externalAPI_field>>>;
  queryChatbots_process?: Maybe<Array<Maybe<Chatbots_process>>>;
  queryChatbots_processAPI?: Maybe<Array<Maybe<Chatbots_processAPI>>>;
  queryChatbots_processAccount?: Maybe<Array<Maybe<Chatbots_processAccount>>>;
  queryChatbots_processAction?: Maybe<Array<Maybe<Chatbots_processAction>>>;
  queryChatbots_processButton?: Maybe<Array<Maybe<Chatbots_processButton>>>;
  queryChatbots_processField?: Maybe<Array<Maybe<Chatbots_processField>>>;
  queryChatbots_processFilterParam?: Maybe<Array<Maybe<Chatbots_processFilterParam>>>;
  queryChatbots_processOperation?: Maybe<Array<Maybe<Chatbots_processOperation>>>;
  queryChatbots_processStatus?: Maybe<Array<Maybe<Chatbots_processStatus>>>;
  queryChatbots_processTableHead?: Maybe<Array<Maybe<Chatbots_processTableHead>>>;
  queryChatbots_processTableHeadConfig?: Maybe<Array<Maybe<Chatbots_processTableHeadConfig>>>;
  queryChatbots_processTableMatchReplace?: Maybe<Array<Maybe<Chatbots_processTableMatchReplace>>>;
  queryChatbots_processValidation?: Maybe<Array<Maybe<Chatbots_processValidation>>>;
  queryChatbots_processValidationOperation?: Maybe<Array<Maybe<Chatbots_processValidationOperation>>>;
  queryChatbots_processValidationOperation_document?: Maybe<Array<Maybe<Chatbots_processValidationOperation_document>>>;
  queryChatbots_processValidationOperation_document_file?: Maybe<Array<Maybe<Chatbots_processValidationOperation_document_file>>>;
  queryChatbots_processsValidationOperation_field?: Maybe<Array<Maybe<Chatbots_processsValidationOperation_field>>>;
  queryChatbots_validation?: Maybe<Array<Maybe<Chatbots_validation>>>;
  queryChatbots_validationDocument?: Maybe<Array<Maybe<Chatbots_validationDocument>>>;
  queryChatbots_validationDocument_file?: Maybe<Array<Maybe<Chatbots_validationDocument_file>>>;
  queryChatbots_validationField?: Maybe<Array<Maybe<Chatbots_validationField>>>;
  queryCompanySector?: Maybe<Array<Maybe<CompanySector>>>;
  queryContact?: Maybe<Array<Maybe<Contact>>>;
  queryContact_billingInfo?: Maybe<Array<Maybe<Contact_billingInfo>>>;
  queryContact_businessInfo?: Maybe<Array<Maybe<Contact_businessInfo>>>;
  queryContact_email?: Maybe<Array<Maybe<Contact_email>>>;
  queryContact_importLog?: Maybe<Array<Maybe<Contact_importLog>>>;
  queryContact_jobPosition?: Maybe<Array<Maybe<Contact_jobPosition>>>;
  queryContact_phone?: Maybe<Array<Maybe<Contact_phone>>>;
  queryCountry?: Maybe<Array<Maybe<Country>>>;
  queryCurrency?: Maybe<Array<Maybe<Currency>>>;
  queryDynamicTable?: Maybe<Array<Maybe<DynamicTable>>>;
  queryDynamicTable_account?: Maybe<Array<Maybe<DynamicTable_account>>>;
  queryDynamicTable_head?: Maybe<Array<Maybe<DynamicTable_head>>>;
  queryDynamicTable_headValueBooleanOptions?: Maybe<Array<Maybe<DynamicTable_headValueBooleanOptions>>>;
  queryDynamicTable_headValueCurrencyOptions?: Maybe<Array<Maybe<DynamicTable_headValueCurrencyOptions>>>;
  queryDynamicTable_headValueDateOptions?: Maybe<Array<Maybe<DynamicTable_headValueDateOptions>>>;
  queryDynamicTable_headValueLinkOptions?: Maybe<Array<Maybe<DynamicTable_headValueLinkOptions>>>;
  queryDynamicTable_headValueNumberOptions?: Maybe<Array<Maybe<DynamicTable_headValueNumberOptions>>>;
  queryE360App?: Maybe<Array<Maybe<E360App>>>;
  queryE360App_domain?: Maybe<Array<Maybe<E360App_domain>>>;
  queryE360App_location?: Maybe<Array<Maybe<E360App_location>>>;
  queryE360App_locationFile?: Maybe<Array<Maybe<E360App_locationFile>>>;
  queryE360App_locationSchedule?: Maybe<Array<Maybe<E360App_locationSchedule>>>;
  queryE360App_location_appoinment?: Maybe<Array<Maybe<E360App_location_appoinment>>>;
  queryE360App_location_appoinmentLots?: Maybe<Array<Maybe<E360App_location_appoinmentLots>>>;
  queryE360App_location_area?: Maybe<Array<Maybe<E360App_location_area>>>;
  queryE360App_location_area_resource?: Maybe<Array<Maybe<E360App_location_area_resource>>>;
  queryE360App_location_area_workShift?: Maybe<Array<Maybe<E360App_location_area_workShift>>>;
  queryE360App_location_menu?: Maybe<Array<Maybe<E360App_location_menu>>>;
  queryE360App_location_menu_combo?: Maybe<Array<Maybe<E360App_location_menu_combo>>>;
  queryE360App_location_menu_item?: Maybe<Array<Maybe<E360App_location_menu_item>>>;
  queryE360App_location_menu_section?: Maybe<Array<Maybe<E360App_location_menu_section>>>;
  queryE360App_location_menu_section_item?: Maybe<Array<Maybe<E360App_location_menu_section_item>>>;
  queryE360App_location_menu_subSection?: Maybe<Array<Maybe<E360App_location_menu_subSection>>>;
  queryE360App_location_menu_tag?: Maybe<Array<Maybe<E360App_location_menu_tag>>>;
  queryE360App_notification?: Maybe<Array<Maybe<E360App_notification>>>;
  queryE360App_organization?: Maybe<Array<Maybe<E360App_organization>>>;
  queryE360App_organization_user?: Maybe<Array<Maybe<E360App_organization_user>>>;
  queryE360App_partner?: Maybe<Array<Maybe<E360App_partner>>>;
  queryE360App_partner_webhook?: Maybe<Array<Maybe<E360App_partner_webhook>>>;
  queryE360App_shop?: Maybe<Array<Maybe<E360App_shop>>>;
  queryE360App_shop_contract?: Maybe<Array<Maybe<E360App_shop_contract>>>;
  queryE360App_shop_customer_contract?: Maybe<Array<Maybe<E360App_shop_customer_contract>>>;
  queryE360App_shop_customer_contractService?: Maybe<Array<Maybe<E360App_shop_customer_contractService>>>;
  queryE360App_shop_customer_contract_renewal?: Maybe<Array<Maybe<E360App_shop_customer_contract_renewal>>>;
  queryE360App_shop_operation?: Maybe<Array<Maybe<E360App_shop_operation>>>;
  queryE360App_shop_partner_contract?: Maybe<Array<Maybe<E360App_shop_partner_contract>>>;
  queryE360App_shop_product?: Maybe<Array<Maybe<E360App_shop_product>>>;
  queryE360App_shop_productItem?: Maybe<Array<Maybe<E360App_shop_productItem>>>;
  queryE360App_shop_productService?: Maybe<Array<Maybe<E360App_shop_productService>>>;
  queryE360App_shop_promoProduct?: Maybe<Array<Maybe<E360App_shop_promoProduct>>>;
  queryE360App_shop_promotion?: Maybe<Array<Maybe<E360App_shop_promotion>>>;
  queryE360App_shop_promotionCode?: Maybe<Array<Maybe<E360App_shop_promotionCode>>>;
  queryE360App_shop_purchase?: Maybe<Array<Maybe<E360App_shop_purchase>>>;
  queryE360App_shop_purchaseProviderEvent?: Maybe<Array<Maybe<E360App_shop_purchaseProviderEvent>>>;
  queryE360App_stablishment?: Maybe<Array<Maybe<E360App_stablishment>>>;
  queryE360App_stablishment_user?: Maybe<Array<Maybe<E360App_stablishment_user>>>;
  queryE360App_user?: Maybe<Array<Maybe<E360App_user>>>;
  queryE360App_userLog?: Maybe<Array<Maybe<E360App_userLog>>>;
  queryE360App_userSession?: Maybe<Array<Maybe<E360App_userSession>>>;
  queryE360App_userSessionConnection?: Maybe<Array<Maybe<E360App_userSessionConnection>>>;
  queryE360App_userSessionConnectionTask?: Maybe<Array<Maybe<E360App_userSessionConnectionTask>>>;
  queryE360App_userSessionTask?: Maybe<Array<Maybe<E360App_userSessionTask>>>;
  queryE360App_user_notification?: Maybe<Array<Maybe<E360App_user_notification>>>;
  queryE360App_user_partner?: Maybe<Array<Maybe<E360App_user_partner>>>;
  queryE360Storage_file?: Maybe<Array<Maybe<E360Storage_file>>>;
  queryERP_PACKAGE?: Maybe<Array<Maybe<ERP_PACKAGE>>>;
  queryERP_account?: Maybe<Array<Maybe<ERP_account>>>;
  queryERP_accountEvent?: Maybe<Array<Maybe<ERP_accountEvent>>>;
  queryERP_accountingAccount?: Maybe<Array<Maybe<ERP_accountingAccount>>>;
  queryERP_contact?: Maybe<Array<Maybe<ERP_contact>>>;
  queryERP_contactAction?: Maybe<Array<Maybe<ERP_contactAction>>>;
  queryERP_contactSerie?: Maybe<Array<Maybe<ERP_contactSerie>>>;
  queryERP_event?: Maybe<Array<Maybe<ERP_event>>>;
  queryERP_invoice?: Maybe<Array<Maybe<ERP_invoice>>>;
  queryERP_invoiceItem?: Maybe<Array<Maybe<ERP_invoiceItem>>>;
  queryERP_invoiceNote?: Maybe<Array<Maybe<ERP_invoiceNote>>>;
  queryERP_organizationBillingInfo?: Maybe<Array<Maybe<ERP_organizationBillingInfo>>>;
  queryERP_paymentPlan?: Maybe<Array<Maybe<ERP_paymentPlan>>>;
  queryERP_product?: Maybe<Array<Maybe<ERP_product>>>;
  queryERP_resource?: Maybe<Array<Maybe<ERP_resource>>>;
  queryERP_role?: Maybe<Array<Maybe<ERP_role>>>;
  queryERP_seat?: Maybe<Array<Maybe<ERP_seat>>>;
  queryERP_seatLine?: Maybe<Array<Maybe<ERP_seatLine>>>;
  queryERP_tax?: Maybe<Array<Maybe<ERP_tax>>>;
  queryERP_withholding?: Maybe<Array<Maybe<ERP_withholding>>>;
  queryEmail?: Maybe<Array<Maybe<Email>>>;
  queryEmailEditor?: Maybe<Array<Maybe<EmailEditor>>>;
  queryEmailEditor_template?: Maybe<Array<Maybe<EmailEditor_template>>>;
  queryEmail_attachment?: Maybe<Array<Maybe<Email_attachment>>>;
  queryEmail_from?: Maybe<Array<Maybe<Email_from>>>;
  queryEmail_to?: Maybe<Array<Maybe<Email_to>>>;
  queryEvent?: Maybe<Array<Maybe<Event>>>;
  queryExternalAPI_key?: Maybe<Array<Maybe<ExternalAPI_key>>>;
  queryFormBuilder?: Maybe<Array<Maybe<FormBuilder>>>;
  queryFormBuilder_form?: Maybe<Array<Maybe<FormBuilder_form>>>;
  queryFormBuilder_input?: Maybe<Array<Maybe<FormBuilder_input>>>;
  queryFormBuilder_inputBoolean?: Maybe<Array<Maybe<FormBuilder_inputBoolean>>>;
  queryFormBuilder_inputMultipleChoice?: Maybe<Array<Maybe<FormBuilder_inputMultipleChoice>>>;
  queryFormBuilder_inputMultipleChoiceOption?: Maybe<Array<Maybe<FormBuilder_inputMultipleChoiceOption>>>;
  queryFormBuilder_inputNumber?: Maybe<Array<Maybe<FormBuilder_inputNumber>>>;
  queryFormBuilder_inputText?: Maybe<Array<Maybe<FormBuilder_inputText>>>;
  queryGeneralAccountingAccount?: Maybe<Array<Maybe<GeneralAccountingAccount>>>;
  queryImportProcess?: Maybe<Array<Maybe<ImportProcess>>>;
  queryImportProcess_elementField?: Maybe<Array<Maybe<ImportProcess_elementField>>>;
  queryImportProcess_item?: Maybe<Array<Maybe<ImportProcess_item>>>;
  queryImportProcess_itemError?: Maybe<Array<Maybe<ImportProcess_itemError>>>;
  queryImportProcess_itemValue?: Maybe<Array<Maybe<ImportProcess_itemValue>>>;
  queryImportProcess_match?: Maybe<Array<Maybe<ImportProcess_match>>>;
  queryImportProcess_sourceValue?: Maybe<Array<Maybe<ImportProcess_sourceValue>>>;
  queryInbox?: Maybe<Array<Maybe<Inbox>>>;
  queryInbox_item?: Maybe<Array<Maybe<Inbox_item>>>;
  queryIntegrations?: Maybe<Array<Maybe<Integrations>>>;
  queryIntegrations_Digilab_Provider?: Maybe<Array<Maybe<Integrations_Digilab_Provider>>>;
  queryIntegrations_Google_Analytics_Provider?: Maybe<Array<Maybe<Integrations_Google_Analytics_Provider>>>;
  queryIntegrations_Google_Provider?: Maybe<Array<Maybe<Integrations_Google_Provider>>>;
  queryIntegrations_Link_Mobility_Provider?: Maybe<Array<Maybe<Integrations_Link_Mobility_Provider>>>;
  queryIntegrations_LinkedIn_Provider?: Maybe<Array<Maybe<Integrations_LinkedIn_Provider>>>;
  queryIntegrations_MSFT_Meeting?: Maybe<Array<Maybe<Integrations_MSFT_Meeting>>>;
  queryIntegrations_MSFT_Provider?: Maybe<Array<Maybe<Integrations_MSFT_Provider>>>;
  queryIntegrations_Meta_Provider?: Maybe<Array<Maybe<Integrations_Meta_Provider>>>;
  queryIntegrations_SendGrid_Provider?: Maybe<Array<Maybe<Integrations_SendGrid_Provider>>>;
  queryIntegrations_Sendgrid_emailEvent?: Maybe<Array<Maybe<Integrations_Sendgrid_emailEvent>>>;
  queryIntegrations_account?: Maybe<Array<Maybe<Integrations_account>>>;
  queryIntegrations_carrefour_operartionsLog?: Maybe<Array<Maybe<Integrations_carrefour_operartionsLog>>>;
  queryJobPosition?: Maybe<Array<Maybe<JobPosition>>>;
  queryLMS_PACKAGE?: Maybe<Array<Maybe<LMS_PACKAGE>>>;
  queryLMS_account?: Maybe<Array<Maybe<LMS_account>>>;
  queryLMS_accountLog?: Maybe<Array<Maybe<LMS_accountLog>>>;
  queryLMS_accountLogDetail?: Maybe<Array<Maybe<LMS_accountLogDetail>>>;
  queryLMS_block?: Maybe<Array<Maybe<LMS_block>>>;
  queryLMS_blockStudentProgress?: Maybe<Array<Maybe<LMS_blockStudentProgress>>>;
  queryLMS_contact?: Maybe<Array<Maybe<LMS_contact>>>;
  queryLMS_course?: Maybe<Array<Maybe<LMS_course>>>;
  queryLMS_courseCategory?: Maybe<Array<Maybe<LMS_courseCategory>>>;
  queryLMS_courseStudentProgress?: Maybe<Array<Maybe<LMS_courseStudentProgress>>>;
  queryLMS_courseVersion?: Maybe<Array<Maybe<LMS_courseVersion>>>;
  queryLMS_form?: Maybe<Array<Maybe<LMS_form>>>;
  queryLMS_formStudentProgress?: Maybe<Array<Maybe<LMS_formStudentProgress>>>;
  queryLMS_group?: Maybe<Array<Maybe<LMS_group>>>;
  queryLMS_groupAccount?: Maybe<Array<Maybe<LMS_groupAccount>>>;
  queryLMS_groupAccountFormAnswer?: Maybe<Array<Maybe<LMS_groupAccountFormAnswer>>>;
  queryLMS_groupAccountFormAttempt?: Maybe<Array<Maybe<LMS_groupAccountFormAttempt>>>;
  queryLMS_groupBlockConfig?: Maybe<Array<Maybe<LMS_groupBlockConfig>>>;
  queryLMS_groupCourseConfig?: Maybe<Array<Maybe<LMS_groupCourseConfig>>>;
  queryLMS_groupFormConfig?: Maybe<Array<Maybe<LMS_groupFormConfig>>>;
  queryLMS_groupFormConfigCalculation?: Maybe<Array<Maybe<LMS_groupFormConfigCalculation>>>;
  queryLMS_groupFormConfigCalculationRange?: Maybe<Array<Maybe<LMS_groupFormConfigCalculationRange>>>;
  queryLMS_groupLessonConfig?: Maybe<Array<Maybe<LMS_groupLessonConfig>>>;
  queryLMS_groupLessonMeetingConfig?: Maybe<Array<Maybe<LMS_groupLessonMeetingConfig>>>;
  queryLMS_groupLessonTeacherConfig?: Maybe<Array<Maybe<LMS_groupLessonTeacherConfig>>>;
  queryLMS_groupResourceConfig?: Maybe<Array<Maybe<LMS_groupResourceConfig>>>;
  queryLMS_lesson?: Maybe<Array<Maybe<LMS_lesson>>>;
  queryLMS_lessonStudentProgress?: Maybe<Array<Maybe<LMS_lessonStudentProgress>>>;
  queryLMS_meetingStudentProgress?: Maybe<Array<Maybe<LMS_meetingStudentProgress>>>;
  queryLMS_product?: Maybe<Array<Maybe<LMS_product>>>;
  queryLMS_resource?: Maybe<Array<Maybe<LMS_resource>>>;
  queryLMS_resourceStudentProgress?: Maybe<Array<Maybe<LMS_resourceStudentProgress>>>;
  queryLMS_resourceStudentVideoReport?: Maybe<Array<Maybe<LMS_resourceStudentVideoReport>>>;
  queryLMS_resourceStudentVideoReport_interval?: Maybe<Array<Maybe<LMS_resourceStudentVideoReport_interval>>>;
  queryLMS_section?: Maybe<Array<Maybe<LMS_section>>>;
  queryLMS_thumbnail?: Maybe<Array<Maybe<LMS_thumbnail>>>;
  queryLogger_log?: Maybe<Array<Maybe<Logger_log>>>;
  queryLoginProvider?: Maybe<Array<Maybe<LoginProvider>>>;
  queryMeeting?: Maybe<Array<Maybe<Meeting>>>;
  queryMeetingAccount?: Maybe<Array<Maybe<MeetingAccount>>>;
  queryMeetingDoctors_user?: Maybe<Array<Maybe<MeetingDoctors_user>>>;
  queryMeetingProvider?: Maybe<Array<Maybe<MeetingProvider>>>;
  queryNavigation?: Maybe<Array<Maybe<Navigation>>>;
  queryNavigation_route?: Maybe<Array<Maybe<Navigation_route>>>;
  queryORG_PACKAGE?: Maybe<Array<Maybe<ORG_PACKAGE>>>;
  queryORG_account?: Maybe<Array<Maybe<ORG_account>>>;
  queryORG_role?: Maybe<Array<Maybe<ORG_role>>>;
  queryOrg?: Maybe<Array<Maybe<Org>>>;
  queryOrg360?: Maybe<Array<Maybe<Org360>>>;
  queryOrg360_theme?: Maybe<Array<Maybe<Org360_theme>>>;
  queryOrgDomain?: Maybe<Array<Maybe<OrgDomain>>>;
  queryOrganization_department?: Maybe<Array<Maybe<Organization_department>>>;
  queryPETPASS_APP?: Maybe<Array<Maybe<PETPASS_APP>>>;
  queryPETPASS_banner?: Maybe<Array<Maybe<PETPASS_banner>>>;
  queryPETPASS_contract?: Maybe<Array<Maybe<PETPASS_contract>>>;
  queryPETPASS_file?: Maybe<Array<Maybe<PETPASS_file>>>;
  queryPETPASS_insurance?: Maybe<Array<Maybe<PETPASS_insurance>>>;
  queryPETPASS_insurance_company?: Maybe<Array<Maybe<PETPASS_insurance_company>>>;
  queryPETPASS_location?: Maybe<Array<Maybe<PETPASS_location>>>;
  queryPETPASS_locationPolicy?: Maybe<Array<Maybe<PETPASS_locationPolicy>>>;
  queryPETPASS_locator?: Maybe<Array<Maybe<PETPASS_locator>>>;
  queryPETPASS_partner?: Maybe<Array<Maybe<PETPASS_partner>>>;
  queryPETPASS_pet?: Maybe<Array<Maybe<PETPASS_pet>>>;
  queryPETPASS_petToken?: Maybe<Array<Maybe<PETPASS_petToken>>>;
  queryPETPASS_pet_external_insurance?: Maybe<Array<Maybe<PETPASS_pet_external_insurance>>>;
  queryPETPASS_pet_insurance?: Maybe<Array<Maybe<PETPASS_pet_insurance>>>;
  queryPETPASS_product?: Maybe<Array<Maybe<PETPASS_product>>>;
  queryPETPASS_purchase?: Maybe<Array<Maybe<PETPASS_purchase>>>;
  queryPETPASS_sos?: Maybe<Array<Maybe<PETPASS_sos>>>;
  queryPETPASS_sos_event?: Maybe<Array<Maybe<PETPASS_sos_event>>>;
  queryPETPASS_user?: Maybe<Array<Maybe<PETPASS_user>>>;
  queryPerson?: Maybe<Array<Maybe<Person>>>;
  queryPet?: Maybe<Array<Maybe<Pet>>>;
  queryPetBreed?: Maybe<Array<Maybe<PetBreed>>>;
  queryPetType?: Maybe<Array<Maybe<PetType>>>;
  queryPet_file?: Maybe<Array<Maybe<Pet_file>>>;
  queryPet_vaccination?: Maybe<Array<Maybe<Pet_vaccination>>>;
  queryPet_vaccine?: Maybe<Array<Maybe<Pet_vaccine>>>;
  queryProduct?: Maybe<Array<Maybe<Product>>>;
  queryProduct_category?: Maybe<Array<Maybe<Product_category>>>;
  queryProduct_item?: Maybe<Array<Maybe<Product_item>>>;
  queryProduct_paymentPlanItem?: Maybe<Array<Maybe<Product_paymentPlanItem>>>;
  queryProposal?: Maybe<Array<Maybe<Proposal>>>;
  queryProposal_resource?: Maybe<Array<Maybe<Proposal_resource>>>;
  queryProposal_stakeholder?: Maybe<Array<Maybe<Proposal_stakeholder>>>;
  queryProposal_stakeholderResource?: Maybe<Array<Maybe<Proposal_stakeholderResource>>>;
  queryProposal_stakeholderToken?: Maybe<Array<Maybe<Proposal_stakeholderToken>>>;
  queryResource?: Maybe<Array<Maybe<Resource>>>;
  queryResourceToken?: Maybe<Array<Maybe<ResourceToken>>>;
  querySMS?: Maybe<Array<Maybe<SMS>>>;
  queryScheduler?: Maybe<Array<Maybe<Scheduler>>>;
  queryScheduler_action?: Maybe<Array<Maybe<Scheduler_action>>>;
  queryScheduler_externalAction?: Maybe<Array<Maybe<Scheduler_externalAction>>>;
  queryScheduler_managerAction?: Maybe<Array<Maybe<Scheduler_managerAction>>>;
  queryScheduler_task?: Maybe<Array<Maybe<Scheduler_task>>>;
  querySearchIndex_contact?: Maybe<Array<Maybe<SearchIndex_contact>>>;
  queryServiceAccount?: Maybe<Array<Maybe<ServiceAccount>>>;
  queryShortUrl?: Maybe<Array<Maybe<ShortUrl>>>;
  queryShortUrl_domain?: Maybe<Array<Maybe<ShortUrl_domain>>>;
  queryStorage?: Maybe<Array<Maybe<Storage>>>;
  queryStorage_file?: Maybe<Array<Maybe<Storage_file>>>;
  queryStorage_fileByDemand?: Maybe<Array<Maybe<Storage_fileByDemand>>>;
  queryStorage_fileOperationToken?: Maybe<Array<Maybe<Storage_fileOperationToken>>>;
  queryTwoFactorToken?: Maybe<Array<Maybe<TwoFactorToken>>>;
  queryUnit?: Maybe<Array<Maybe<Unit>>>;
  queryUser?: Maybe<Array<Maybe<User>>>;
  queryUser_token?: Maybe<Array<Maybe<User_token>>>;
  queryVET_PACKAGE?: Maybe<Array<Maybe<VET_PACKAGE>>>;
  queryVET_account?: Maybe<Array<Maybe<VET_account>>>;
  queryVET_contact?: Maybe<Array<Maybe<VET_contact>>>;
  queryVET_pet?: Maybe<Array<Maybe<VET_pet>>>;
  queryWebhook?: Maybe<Array<Maybe<Webhook>>>;
  queryWebhook_provider?: Maybe<Array<Maybe<Webhook_provider>>>;
  queryWebhook_providerOrigin?: Maybe<Array<Maybe<Webhook_providerOrigin>>>;
};


export type QueryaggregateAUDITS_PACKAGEArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
};


export type QueryaggregateAUDITS_accountArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
};


export type QueryaggregateAUDITS_documentArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
};


export type QueryaggregateAUDITS_document_blockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
};


export type QueryaggregateAUDITS_document_blockImageArgs = {
  filter?: InputMaybe<AUDITS_document_blockImageFilter>;
};


export type QueryaggregateAUDITS_document_blockQuoteArgs = {
  filter?: InputMaybe<AUDITS_document_blockQuoteFilter>;
};


export type QueryaggregateAUDITS_document_blockTableArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableFilter>;
};


export type QueryaggregateAUDITS_document_blockTableCellArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableCellFilter>;
};


export type QueryaggregateAUDITS_document_blockTableColumnArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableColumnFilter>;
};


export type QueryaggregateAUDITS_document_blockTableRowArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableRowFilter>;
};


export type QueryaggregateAUDITS_document_blockTextArgs = {
  filter?: InputMaybe<AUDITS_document_blockTextFilter>;
};


export type QueryaggregateAUDITS_document_blockTitleArgs = {
  filter?: InputMaybe<AUDITS_document_blockTitleFilter>;
};


export type QueryaggregateAUDITS_fileArgs = {
  filter?: InputMaybe<AUDITS_fileFilter>;
};


export type QueryaggregateAUDITS_projectArgs = {
  filter?: InputMaybe<AUDITS_projectFilter>;
};


export type QueryaggregateAUDITS_project_versionArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
};


export type QueryaggregateAUDITS_reviewArgs = {
  filter?: InputMaybe<AUDITS_reviewFilter>;
};


export type QueryaggregateAUDITS_review_accountArgs = {
  filter?: InputMaybe<AUDITS_review_accountFilter>;
};


export type QueryaggregateAUDITS_review_commentArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
};


export type QueryaggregateAccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type QueryaggregateAccount_eventArgs = {
  filter?: InputMaybe<Account_eventFilter>;
};


export type QueryaggregateAccount_logArgs = {
  filter?: InputMaybe<Account_logFilter>;
};


export type QueryaggregateAccount_notificationArgs = {
  filter?: InputMaybe<Account_notificationFilter>;
};


export type QueryaggregateAccount_sessionArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
};


export type QueryaggregateAccount_sessionConnectionArgs = {
  filter?: InputMaybe<Account_sessionConnectionFilter>;
};


export type QueryaggregateAccount_sessionConnectionTaskArgs = {
  filter?: InputMaybe<Account_sessionConnectionTaskFilter>;
};


export type QueryaggregateAccount_sessionTaskArgs = {
  filter?: InputMaybe<Account_sessionTaskFilter>;
};


export type QueryaggregateAddressArgs = {
  filter?: InputMaybe<AddressFilter>;
};


export type QueryaggregateBankArgs = {
  filter?: InputMaybe<BankFilter>;
};


export type QueryaggregateBankAccountArgs = {
  filter?: InputMaybe<BankAccountFilter>;
};


export type QueryaggregateCMS_PACKAGEArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
};


export type QueryaggregateCMS_accountArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
};


export type QueryaggregateCMS_appArgs = {
  filter?: InputMaybe<CMS_appFilter>;
};


export type QueryaggregateCMS_appContactArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
};


export type QueryaggregateCMS_authorAliasArgs = {
  filter?: InputMaybe<CMS_authorAliasFilter>;
};


export type QueryaggregateCMS_contactArgs = {
  filter?: InputMaybe<CMS_contactFilter>;
};


export type QueryaggregateCMS_fileArgs = {
  filter?: InputMaybe<CMS_fileFilter>;
};


export type QueryaggregateCMS_websiteArgs = {
  filter?: InputMaybe<CMS_websiteFilter>;
};


export type QueryaggregateCMS_website_pageArgs = {
  filter?: InputMaybe<CMS_website_pageFilter>;
};


export type QueryaggregateCMS_website_page_blockArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
};


export type QueryaggregateCMS_website_page_blockComboArgs = {
  filter?: InputMaybe<CMS_website_page_blockComboFilter>;
};


export type QueryaggregateCMS_website_page_blockImageArgs = {
  filter?: InputMaybe<CMS_website_page_blockImageFilter>;
};


export type QueryaggregateCMS_website_page_blockLinkArgs = {
  filter?: InputMaybe<CMS_website_page_blockLinkFilter>;
};


export type QueryaggregateCMS_website_page_blockTextArgs = {
  filter?: InputMaybe<CMS_website_page_blockTextFilter>;
};


export type QueryaggregateCMS_website_page_blockTitleArgs = {
  filter?: InputMaybe<CMS_website_page_blockTitleFilter>;
};


export type QueryaggregateCRM_PACKAGEArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
};


export type QueryaggregateCRM_accountArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
};


export type QueryaggregateCRM_accountContactsTableColumnArgs = {
  filter?: InputMaybe<CRM_accountContactsTableColumnFilter>;
};


export type QueryaggregateCRM_accountContactsTableFilterArgs = {
  filter?: InputMaybe<CRM_accountContactsTableFilterFilter>;
};


export type QueryaggregateCRM_accountEventArgs = {
  filter?: InputMaybe<CRM_accountEventFilter>;
};


export type QueryaggregateCRM_actionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
};


export type QueryaggregateCRM_actionCallArgs = {
  filter?: InputMaybe<CRM_actionCallFilter>;
};


export type QueryaggregateCRM_actionChatArgs = {
  filter?: InputMaybe<CRM_actionChatFilter>;
};


export type QueryaggregateCRM_actionEmailArgs = {
  filter?: InputMaybe<CRM_actionEmailFilter>;
};


export type QueryaggregateCRM_actionMeetingArgs = {
  filter?: InputMaybe<CRM_actionMeetingFilter>;
};


export type QueryaggregateCRM_areaArgs = {
  filter?: InputMaybe<CRM_areaFilter>;
};


export type QueryaggregateCRM_campaignArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
};


export type QueryaggregateCRM_campaignContactArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
};


export type QueryaggregateCRM_campaignContactEventArgs = {
  filter?: InputMaybe<CRM_campaignContactEventFilter>;
};


export type QueryaggregateCRM_campaignDeliverArgs = {
  filter?: InputMaybe<CRM_campaignDeliverFilter>;
};


export type QueryaggregateCRM_campaignEmailTemplateArgs = {
  filter?: InputMaybe<CRM_campaignEmailTemplateFilter>;
};


export type QueryaggregateCRM_contactArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
};


export type QueryaggregateCRM_contactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
};


export type QueryaggregateCRM_contactActionCallArgs = {
  filter?: InputMaybe<CRM_contactActionCallFilter>;
};


export type QueryaggregateCRM_contactActionChatArgs = {
  filter?: InputMaybe<CRM_contactActionChatFilter>;
};


export type QueryaggregateCRM_contactActionEmailArgs = {
  filter?: InputMaybe<CRM_contactActionEmailFilter>;
};


export type QueryaggregateCRM_contactActionMeetingArgs = {
  filter?: InputMaybe<CRM_contactActionMeetingFilter>;
};


export type QueryaggregateCRM_contactActionStatusChangeArgs = {
  filter?: InputMaybe<CRM_contactActionStatusChangeFilter>;
};


export type QueryaggregateCRM_contactAnswerArgs = {
  filter?: InputMaybe<CRM_contactAnswerFilter>;
};


export type QueryaggregateCRM_contactInputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
};


export type QueryaggregateCRM_contactInputSubStatusArgs = {
  filter?: InputMaybe<CRM_contactInputSubStatusFilter>;
};


export type QueryaggregateCRM_contactInputValueArgs = {
  filter?: InputMaybe<CRM_contactInputValueFilter>;
};


export type QueryaggregateCRM_contactListArgs = {
  filter?: InputMaybe<CRM_contactListFilter>;
};


export type QueryaggregateCRM_emailTemplateArgs = {
  filter?: InputMaybe<CRM_emailTemplateFilter>;
};


export type QueryaggregateCRM_eventArgs = {
  filter?: InputMaybe<CRM_eventFilter>;
};


export type QueryaggregateCRM_funnelArgs = {
  filter?: InputMaybe<CRM_funnelFilter>;
};


export type QueryaggregateCRM_funnelActionArgs = {
  filter?: InputMaybe<CRM_funnelActionFilter>;
};


export type QueryaggregateCRM_funnelStatusArgs = {
  filter?: InputMaybe<CRM_funnelStatusFilter>;
};


export type QueryaggregateCRM_opportunityLogArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
};


export type QueryaggregateCRM_opportunityPaymentPlanItemArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
};


export type QueryaggregateCRM_overviewArgs = {
  filter?: InputMaybe<CRM_overviewFilter>;
};


export type QueryaggregateCRM_proposalArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
};


export type QueryaggregateCRM_roleArgs = {
  filter?: InputMaybe<CRM_roleFilter>;
};


export type QueryaggregateCRM_socialMediaCampaignArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaignFilter>;
};


export type QueryaggregateCRM_socialMediaCampaign_mediaArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_mediaFilter>;
};


export type QueryaggregateCRM_socialMediaCampaign_postArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_postFilter>;
};


export type QueryaggregateCRM_sourceArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
};


export type QueryaggregateCRM_sourceCategoryArgs = {
  filter?: InputMaybe<CRM_sourceCategoryFilter>;
};


export type QueryaggregateCRM_sourceFormArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
};


export type QueryaggregateCRM_sourceFormFieldArgs = {
  filter?: InputMaybe<CRM_sourceFormFieldFilter>;
};


export type QueryaggregateCRM_sourceFormReasonArgs = {
  filter?: InputMaybe<CRM_sourceFormReasonFilter>;
};


export type QueryaggregateCRM_sourceForm_emailTemplateArgs = {
  filter?: InputMaybe<CRM_sourceForm_emailTemplateFilter>;
};


export type QueryaggregateCRM_teamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
};


export type QueryaggregateCRM_teamAccountArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
};


export type QueryaggregateCRM_teamActionArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
};


export type QueryaggregateCRM_teamActionBoardEffectArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
};


export type QueryaggregateCRM_teamBoardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
};


export type QueryaggregateCRM_teamBoardItemArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
};


export type QueryaggregateCRM_teamBoardStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
};


export type QueryaggregateCRM_teamBoardSubStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
};


export type QueryaggregateCRM_teamBoardTaskArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
};


export type QueryaggregateChatbots_PACKAGEArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
};


export type QueryaggregateChatbots_accountArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
};


export type QueryaggregateChatbots_areaArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
};


export type QueryaggregateChatbots_areaAccountArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
};


export type QueryaggregateChatbots_externalAPIArgs = {
  filter?: InputMaybe<Chatbots_externalAPIFilter>;
};


export type QueryaggregateChatbots_externalAPI_fieldArgs = {
  filter?: InputMaybe<Chatbots_externalAPI_fieldFilter>;
};


export type QueryaggregateChatbots_processArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
};


export type QueryaggregateChatbots_processAPIArgs = {
  filter?: InputMaybe<Chatbots_processAPIFilter>;
};


export type QueryaggregateChatbots_processAccountArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
};


export type QueryaggregateChatbots_processActionArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
};


export type QueryaggregateChatbots_processButtonArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
};


export type QueryaggregateChatbots_processFieldArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
};


export type QueryaggregateChatbots_processFilterParamArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
};


export type QueryaggregateChatbots_processOperationArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
};


export type QueryaggregateChatbots_processStatusArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
};


export type QueryaggregateChatbots_processTableHeadArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
};


export type QueryaggregateChatbots_processTableHeadConfigArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
};


export type QueryaggregateChatbots_processTableMatchReplaceArgs = {
  filter?: InputMaybe<Chatbots_processTableMatchReplaceFilter>;
};


export type QueryaggregateChatbots_processValidationArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
};


export type QueryaggregateChatbots_processValidationOperationArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
};


export type QueryaggregateChatbots_processValidationOperation_documentArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
};


export type QueryaggregateChatbots_processValidationOperation_document_fileArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
};


export type QueryaggregateChatbots_processsValidationOperation_fieldArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
};


export type QueryaggregateChatbots_validationArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
};


export type QueryaggregateChatbots_validationDocumentArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
};


export type QueryaggregateChatbots_validationDocument_fileArgs = {
  filter?: InputMaybe<Chatbots_validationDocument_fileFilter>;
};


export type QueryaggregateChatbots_validationFieldArgs = {
  filter?: InputMaybe<Chatbots_validationFieldFilter>;
};


export type QueryaggregateCompanySectorArgs = {
  filter?: InputMaybe<CompanySectorFilter>;
};


export type QueryaggregateContactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type QueryaggregateContact_billingInfoArgs = {
  filter?: InputMaybe<Contact_billingInfoFilter>;
};


export type QueryaggregateContact_businessInfoArgs = {
  filter?: InputMaybe<Contact_businessInfoFilter>;
};


export type QueryaggregateContact_emailArgs = {
  filter?: InputMaybe<Contact_emailFilter>;
};


export type QueryaggregateContact_importLogArgs = {
  filter?: InputMaybe<Contact_importLogFilter>;
};


export type QueryaggregateContact_jobPositionArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
};


export type QueryaggregateContact_phoneArgs = {
  filter?: InputMaybe<Contact_phoneFilter>;
};


export type QueryaggregateCountryArgs = {
  filter?: InputMaybe<CountryFilter>;
};


export type QueryaggregateCurrencyArgs = {
  filter?: InputMaybe<CurrencyFilter>;
};


export type QueryaggregateDynamicTableArgs = {
  filter?: InputMaybe<DynamicTableFilter>;
};


export type QueryaggregateDynamicTable_accountArgs = {
  filter?: InputMaybe<DynamicTable_accountFilter>;
};


export type QueryaggregateDynamicTable_headArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
};


export type QueryaggregateDynamicTable_headValueBooleanOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueBooleanOptionsFilter>;
};


export type QueryaggregateDynamicTable_headValueCurrencyOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueCurrencyOptionsFilter>;
};


export type QueryaggregateDynamicTable_headValueDateOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueDateOptionsFilter>;
};


export type QueryaggregateDynamicTable_headValueLinkOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueLinkOptionsFilter>;
};


export type QueryaggregateDynamicTable_headValueNumberOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueNumberOptionsFilter>;
};


export type QueryaggregateE360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
};


export type QueryaggregateE360App_domainArgs = {
  filter?: InputMaybe<E360App_domainFilter>;
};


export type QueryaggregateE360App_locationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
};


export type QueryaggregateE360App_locationFileArgs = {
  filter?: InputMaybe<E360App_locationFileFilter>;
};


export type QueryaggregateE360App_locationScheduleArgs = {
  filter?: InputMaybe<E360App_locationScheduleFilter>;
};


export type QueryaggregateE360App_location_appoinmentArgs = {
  filter?: InputMaybe<E360App_location_appoinmentFilter>;
};


export type QueryaggregateE360App_location_appoinmentLotsArgs = {
  filter?: InputMaybe<E360App_location_appoinmentLotsFilter>;
};


export type QueryaggregateE360App_location_areaArgs = {
  filter?: InputMaybe<E360App_location_areaFilter>;
};


export type QueryaggregateE360App_location_area_resourceArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
};


export type QueryaggregateE360App_location_area_workShiftArgs = {
  filter?: InputMaybe<E360App_location_area_workShiftFilter>;
};


export type QueryaggregateE360App_location_menuArgs = {
  filter?: InputMaybe<E360App_location_menuFilter>;
};


export type QueryaggregateE360App_location_menu_comboArgs = {
  filter?: InputMaybe<E360App_location_menu_comboFilter>;
};


export type QueryaggregateE360App_location_menu_itemArgs = {
  filter?: InputMaybe<E360App_location_menu_itemFilter>;
};


export type QueryaggregateE360App_location_menu_sectionArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
};


export type QueryaggregateE360App_location_menu_section_itemArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
};


export type QueryaggregateE360App_location_menu_subSectionArgs = {
  filter?: InputMaybe<E360App_location_menu_subSectionFilter>;
};


export type QueryaggregateE360App_location_menu_tagArgs = {
  filter?: InputMaybe<E360App_location_menu_tagFilter>;
};


export type QueryaggregateE360App_notificationArgs = {
  filter?: InputMaybe<E360App_notificationFilter>;
};


export type QueryaggregateE360App_organizationArgs = {
  filter?: InputMaybe<E360App_organizationFilter>;
};


export type QueryaggregateE360App_organization_userArgs = {
  filter?: InputMaybe<E360App_organization_userFilter>;
};


export type QueryaggregateE360App_partnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
};


export type QueryaggregateE360App_partner_webhookArgs = {
  filter?: InputMaybe<E360App_partner_webhookFilter>;
};


export type QueryaggregateE360App_shopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
};


export type QueryaggregateE360App_shop_contractArgs = {
  filter?: InputMaybe<E360App_shop_contractFilter>;
};


export type QueryaggregateE360App_shop_customer_contractArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
};


export type QueryaggregateE360App_shop_customer_contractServiceArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractServiceFilter>;
};


export type QueryaggregateE360App_shop_customer_contract_renewalArgs = {
  filter?: InputMaybe<E360App_shop_customer_contract_renewalFilter>;
};


export type QueryaggregateE360App_shop_operationArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
};


export type QueryaggregateE360App_shop_partner_contractArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
};


export type QueryaggregateE360App_shop_productArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
};


export type QueryaggregateE360App_shop_productItemArgs = {
  filter?: InputMaybe<E360App_shop_productItemFilter>;
};


export type QueryaggregateE360App_shop_productServiceArgs = {
  filter?: InputMaybe<E360App_shop_productServiceFilter>;
};


export type QueryaggregateE360App_shop_promoProductArgs = {
  filter?: InputMaybe<E360App_shop_promoProductFilter>;
};


export type QueryaggregateE360App_shop_promotionArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
};


export type QueryaggregateE360App_shop_promotionCodeArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
};


export type QueryaggregateE360App_shop_purchaseArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
};


export type QueryaggregateE360App_shop_purchaseProviderEventArgs = {
  filter?: InputMaybe<E360App_shop_purchaseProviderEventFilter>;
};


export type QueryaggregateE360App_stablishmentArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
};


export type QueryaggregateE360App_stablishment_userArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
};


export type QueryaggregateE360App_userArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type QueryaggregateE360App_userLogArgs = {
  filter?: InputMaybe<E360App_userLogFilter>;
};


export type QueryaggregateE360App_userSessionArgs = {
  filter?: InputMaybe<E360App_userSessionFilter>;
};


export type QueryaggregateE360App_userSessionConnectionArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionFilter>;
};


export type QueryaggregateE360App_userSessionConnectionTaskArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionTaskFilter>;
};


export type QueryaggregateE360App_userSessionTaskArgs = {
  filter?: InputMaybe<E360App_userSessionTaskFilter>;
};


export type QueryaggregateE360App_user_notificationArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
};


export type QueryaggregateE360App_user_partnerArgs = {
  filter?: InputMaybe<E360App_user_partnerFilter>;
};


export type QueryaggregateE360Storage_fileArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
};


export type QueryaggregateERP_PACKAGEArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
};


export type QueryaggregateERP_accountArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
};


export type QueryaggregateERP_accountEventArgs = {
  filter?: InputMaybe<ERP_accountEventFilter>;
};


export type QueryaggregateERP_accountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
};


export type QueryaggregateERP_contactArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
};


export type QueryaggregateERP_contactActionArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
};


export type QueryaggregateERP_contactSerieArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
};


export type QueryaggregateERP_eventArgs = {
  filter?: InputMaybe<ERP_eventFilter>;
};


export type QueryaggregateERP_invoiceArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
};


export type QueryaggregateERP_invoiceItemArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
};


export type QueryaggregateERP_invoiceNoteArgs = {
  filter?: InputMaybe<ERP_invoiceNoteFilter>;
};


export type QueryaggregateERP_organizationBillingInfoArgs = {
  filter?: InputMaybe<ERP_organizationBillingInfoFilter>;
};


export type QueryaggregateERP_paymentPlanArgs = {
  filter?: InputMaybe<ERP_paymentPlanFilter>;
};


export type QueryaggregateERP_productArgs = {
  filter?: InputMaybe<ERP_productFilter>;
};


export type QueryaggregateERP_resourceArgs = {
  filter?: InputMaybe<ERP_resourceFilter>;
};


export type QueryaggregateERP_roleArgs = {
  filter?: InputMaybe<ERP_roleFilter>;
};


export type QueryaggregateERP_seatArgs = {
  filter?: InputMaybe<ERP_seatFilter>;
};


export type QueryaggregateERP_seatLineArgs = {
  filter?: InputMaybe<ERP_seatLineFilter>;
};


export type QueryaggregateERP_taxArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
};


export type QueryaggregateERP_withholdingArgs = {
  filter?: InputMaybe<ERP_withholdingFilter>;
};


export type QueryaggregateEmailArgs = {
  filter?: InputMaybe<EmailFilter>;
};


export type QueryaggregateEmailEditorArgs = {
  filter?: InputMaybe<EmailEditorFilter>;
};


export type QueryaggregateEmailEditor_templateArgs = {
  filter?: InputMaybe<EmailEditor_templateFilter>;
};


export type QueryaggregateEmail_attachmentArgs = {
  filter?: InputMaybe<Email_attachmentFilter>;
};


export type QueryaggregateEmail_fromArgs = {
  filter?: InputMaybe<Email_fromFilter>;
};


export type QueryaggregateEmail_toArgs = {
  filter?: InputMaybe<Email_toFilter>;
};


export type QueryaggregateEventArgs = {
  filter?: InputMaybe<EventFilter>;
};


export type QueryaggregateExternalAPI_keyArgs = {
  filter?: InputMaybe<ExternalAPI_keyFilter>;
};


export type QueryaggregateFormBuilderArgs = {
  filter?: InputMaybe<FormBuilderFilter>;
};


export type QueryaggregateFormBuilder_formArgs = {
  filter?: InputMaybe<FormBuilder_formFilter>;
};


export type QueryaggregateFormBuilder_inputArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
};


export type QueryaggregateFormBuilder_inputBooleanArgs = {
  filter?: InputMaybe<FormBuilder_inputBooleanFilter>;
};


export type QueryaggregateFormBuilder_inputMultipleChoiceArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceFilter>;
};


export type QueryaggregateFormBuilder_inputMultipleChoiceOptionArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
};


export type QueryaggregateFormBuilder_inputNumberArgs = {
  filter?: InputMaybe<FormBuilder_inputNumberFilter>;
};


export type QueryaggregateFormBuilder_inputTextArgs = {
  filter?: InputMaybe<FormBuilder_inputTextFilter>;
};


export type QueryaggregateGeneralAccountingAccountArgs = {
  filter?: InputMaybe<GeneralAccountingAccountFilter>;
};


export type QueryaggregateImportProcessArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
};


export type QueryaggregateImportProcess_elementFieldArgs = {
  filter?: InputMaybe<ImportProcess_elementFieldFilter>;
};


export type QueryaggregateImportProcess_itemArgs = {
  filter?: InputMaybe<ImportProcess_itemFilter>;
};


export type QueryaggregateImportProcess_itemErrorArgs = {
  filter?: InputMaybe<ImportProcess_itemErrorFilter>;
};


export type QueryaggregateImportProcess_itemValueArgs = {
  filter?: InputMaybe<ImportProcess_itemValueFilter>;
};


export type QueryaggregateImportProcess_matchArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
};


export type QueryaggregateImportProcess_sourceValueArgs = {
  filter?: InputMaybe<ImportProcess_sourceValueFilter>;
};


export type QueryaggregateInboxArgs = {
  filter?: InputMaybe<InboxFilter>;
};


export type QueryaggregateInbox_itemArgs = {
  filter?: InputMaybe<Inbox_itemFilter>;
};


export type QueryaggregateIntegrationsArgs = {
  filter?: InputMaybe<IntegrationsFilter>;
};


export type QueryaggregateIntegrations_Digilab_ProviderArgs = {
  filter?: InputMaybe<Integrations_Digilab_ProviderFilter>;
};


export type QueryaggregateIntegrations_Google_Analytics_ProviderArgs = {
  filter?: InputMaybe<Integrations_Google_Analytics_ProviderFilter>;
};


export type QueryaggregateIntegrations_Google_ProviderArgs = {
  filter?: InputMaybe<Integrations_Google_ProviderFilter>;
};


export type QueryaggregateIntegrations_Link_Mobility_ProviderArgs = {
  filter?: InputMaybe<Integrations_Link_Mobility_ProviderFilter>;
};


export type QueryaggregateIntegrations_LinkedIn_ProviderArgs = {
  filter?: InputMaybe<Integrations_LinkedIn_ProviderFilter>;
};


export type QueryaggregateIntegrations_MSFT_MeetingArgs = {
  filter?: InputMaybe<Integrations_MSFT_MeetingFilter>;
};


export type QueryaggregateIntegrations_MSFT_ProviderArgs = {
  filter?: InputMaybe<Integrations_MSFT_ProviderFilter>;
};


export type QueryaggregateIntegrations_Meta_ProviderArgs = {
  filter?: InputMaybe<Integrations_Meta_ProviderFilter>;
};


export type QueryaggregateIntegrations_SendGrid_ProviderArgs = {
  filter?: InputMaybe<Integrations_SendGrid_ProviderFilter>;
};


export type QueryaggregateIntegrations_Sendgrid_emailEventArgs = {
  filter?: InputMaybe<Integrations_Sendgrid_emailEventFilter>;
};


export type QueryaggregateIntegrations_accountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type QueryaggregateIntegrations_carrefour_operartionsLogArgs = {
  filter?: InputMaybe<Integrations_carrefour_operartionsLogFilter>;
};


export type QueryaggregateJobPositionArgs = {
  filter?: InputMaybe<JobPositionFilter>;
};


export type QueryaggregateLMS_PACKAGEArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
};


export type QueryaggregateLMS_accountArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
};


export type QueryaggregateLMS_accountLogArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
};


export type QueryaggregateLMS_accountLogDetailArgs = {
  filter?: InputMaybe<LMS_accountLogDetailFilter>;
};


export type QueryaggregateLMS_blockArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
};


export type QueryaggregateLMS_blockStudentProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
};


export type QueryaggregateLMS_contactArgs = {
  filter?: InputMaybe<LMS_contactFilter>;
};


export type QueryaggregateLMS_courseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
};


export type QueryaggregateLMS_courseCategoryArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
};


export type QueryaggregateLMS_courseStudentProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
};


export type QueryaggregateLMS_courseVersionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
};


export type QueryaggregateLMS_formArgs = {
  filter?: InputMaybe<LMS_formFilter>;
};


export type QueryaggregateLMS_formStudentProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
};


export type QueryaggregateLMS_groupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
};


export type QueryaggregateLMS_groupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
};


export type QueryaggregateLMS_groupAccountFormAnswerArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
};


export type QueryaggregateLMS_groupAccountFormAttemptArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
};


export type QueryaggregateLMS_groupBlockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
};


export type QueryaggregateLMS_groupCourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
};


export type QueryaggregateLMS_groupFormConfigArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
};


export type QueryaggregateLMS_groupFormConfigCalculationArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationFilter>;
};


export type QueryaggregateLMS_groupFormConfigCalculationRangeArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationRangeFilter>;
};


export type QueryaggregateLMS_groupLessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
};


export type QueryaggregateLMS_groupLessonMeetingConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
};


export type QueryaggregateLMS_groupLessonTeacherConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
};


export type QueryaggregateLMS_groupResourceConfigArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
};


export type QueryaggregateLMS_lessonArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
};


export type QueryaggregateLMS_lessonStudentProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
};


export type QueryaggregateLMS_meetingStudentProgressArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
};


export type QueryaggregateLMS_productArgs = {
  filter?: InputMaybe<LMS_productFilter>;
};


export type QueryaggregateLMS_resourceArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
};


export type QueryaggregateLMS_resourceStudentProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
};


export type QueryaggregateLMS_resourceStudentVideoReportArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
};


export type QueryaggregateLMS_resourceStudentVideoReport_intervalArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReport_intervalFilter>;
};


export type QueryaggregateLMS_sectionArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
};


export type QueryaggregateLMS_thumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
};


export type QueryaggregateLogger_logArgs = {
  filter?: InputMaybe<Logger_logFilter>;
};


export type QueryaggregateLoginProviderArgs = {
  filter?: InputMaybe<LoginProviderFilter>;
};


export type QueryaggregateMeetingArgs = {
  filter?: InputMaybe<MeetingFilter>;
};


export type QueryaggregateMeetingAccountArgs = {
  filter?: InputMaybe<MeetingAccountFilter>;
};


export type QueryaggregateMeetingDoctors_userArgs = {
  filter?: InputMaybe<MeetingDoctors_userFilter>;
};


export type QueryaggregateMeetingProviderArgs = {
  filter?: InputMaybe<MeetingProviderFilter>;
};


export type QueryaggregateNavigationArgs = {
  filter?: InputMaybe<NavigationFilter>;
};


export type QueryaggregateNavigation_routeArgs = {
  filter?: InputMaybe<Navigation_routeFilter>;
};


export type QueryaggregateORG_PACKAGEArgs = {
  filter?: InputMaybe<ORG_PACKAGEFilter>;
};


export type QueryaggregateORG_accountArgs = {
  filter?: InputMaybe<ORG_accountFilter>;
};


export type QueryaggregateORG_roleArgs = {
  filter?: InputMaybe<ORG_roleFilter>;
};


export type QueryaggregateOrgArgs = {
  filter?: InputMaybe<OrgFilter>;
};


export type QueryaggregateOrg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type QueryaggregateOrg360_themeArgs = {
  filter?: InputMaybe<Org360_themeFilter>;
};


export type QueryaggregateOrgDomainArgs = {
  filter?: InputMaybe<OrgDomainFilter>;
};


export type QueryaggregateOrganization_departmentArgs = {
  filter?: InputMaybe<Organization_departmentFilter>;
};


export type QueryaggregatePETPASS_APPArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
};


export type QueryaggregatePETPASS_bannerArgs = {
  filter?: InputMaybe<PETPASS_bannerFilter>;
};


export type QueryaggregatePETPASS_contractArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
};


export type QueryaggregatePETPASS_fileArgs = {
  filter?: InputMaybe<PETPASS_fileFilter>;
};


export type QueryaggregatePETPASS_insuranceArgs = {
  filter?: InputMaybe<PETPASS_insuranceFilter>;
};


export type QueryaggregatePETPASS_insurance_companyArgs = {
  filter?: InputMaybe<PETPASS_insurance_companyFilter>;
};


export type QueryaggregatePETPASS_locationArgs = {
  filter?: InputMaybe<PETPASS_locationFilter>;
};


export type QueryaggregatePETPASS_locationPolicyArgs = {
  filter?: InputMaybe<PETPASS_locationPolicyFilter>;
};


export type QueryaggregatePETPASS_locatorArgs = {
  filter?: InputMaybe<PETPASS_locatorFilter>;
};


export type QueryaggregatePETPASS_partnerArgs = {
  filter?: InputMaybe<PETPASS_partnerFilter>;
};


export type QueryaggregatePETPASS_petArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
};


export type QueryaggregatePETPASS_petTokenArgs = {
  filter?: InputMaybe<PETPASS_petTokenFilter>;
};


export type QueryaggregatePETPASS_pet_external_insuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
};


export type QueryaggregatePETPASS_pet_insuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
};


export type QueryaggregatePETPASS_productArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
};


export type QueryaggregatePETPASS_purchaseArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
};


export type QueryaggregatePETPASS_sosArgs = {
  filter?: InputMaybe<PETPASS_sosFilter>;
};


export type QueryaggregatePETPASS_sos_eventArgs = {
  filter?: InputMaybe<PETPASS_sos_eventFilter>;
};


export type QueryaggregatePETPASS_userArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
};


export type QueryaggregatePersonArgs = {
  filter?: InputMaybe<PersonFilter>;
};


export type QueryaggregatePetArgs = {
  filter?: InputMaybe<PetFilter>;
};


export type QueryaggregatePetBreedArgs = {
  filter?: InputMaybe<PetBreedFilter>;
};


export type QueryaggregatePetTypeArgs = {
  filter?: InputMaybe<PetTypeFilter>;
};


export type QueryaggregatePet_fileArgs = {
  filter?: InputMaybe<Pet_fileFilter>;
};


export type QueryaggregatePet_vaccinationArgs = {
  filter?: InputMaybe<Pet_vaccinationFilter>;
};


export type QueryaggregatePet_vaccineArgs = {
  filter?: InputMaybe<Pet_vaccineFilter>;
};


export type QueryaggregateProductArgs = {
  filter?: InputMaybe<ProductFilter>;
};


export type QueryaggregateProduct_categoryArgs = {
  filter?: InputMaybe<Product_categoryFilter>;
};


export type QueryaggregateProduct_itemArgs = {
  filter?: InputMaybe<Product_itemFilter>;
};


export type QueryaggregateProduct_paymentPlanItemArgs = {
  filter?: InputMaybe<Product_paymentPlanItemFilter>;
};


export type QueryaggregateProposalArgs = {
  filter?: InputMaybe<ProposalFilter>;
};


export type QueryaggregateProposal_resourceArgs = {
  filter?: InputMaybe<Proposal_resourceFilter>;
};


export type QueryaggregateProposal_stakeholderArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
};


export type QueryaggregateProposal_stakeholderResourceArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
};


export type QueryaggregateProposal_stakeholderTokenArgs = {
  filter?: InputMaybe<Proposal_stakeholderTokenFilter>;
};


export type QueryaggregateResourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
};


export type QueryaggregateResourceTokenArgs = {
  filter?: InputMaybe<ResourceTokenFilter>;
};


export type QueryaggregateSMSArgs = {
  filter?: InputMaybe<SMSFilter>;
};


export type QueryaggregateSchedulerArgs = {
  filter?: InputMaybe<SchedulerFilter>;
};


export type QueryaggregateScheduler_actionArgs = {
  filter?: InputMaybe<Scheduler_actionFilter>;
};


export type QueryaggregateScheduler_externalActionArgs = {
  filter?: InputMaybe<Scheduler_externalActionFilter>;
};


export type QueryaggregateScheduler_managerActionArgs = {
  filter?: InputMaybe<Scheduler_managerActionFilter>;
};


export type QueryaggregateScheduler_taskArgs = {
  filter?: InputMaybe<Scheduler_taskFilter>;
};


export type QueryaggregateSearchIndex_contactArgs = {
  filter?: InputMaybe<SearchIndex_contactFilter>;
};


export type QueryaggregateServiceAccountArgs = {
  filter?: InputMaybe<ServiceAccountFilter>;
};


export type QueryaggregateShortUrlArgs = {
  filter?: InputMaybe<ShortUrlFilter>;
};


export type QueryaggregateShortUrl_domainArgs = {
  filter?: InputMaybe<ShortUrl_domainFilter>;
};


export type QueryaggregateStorageArgs = {
  filter?: InputMaybe<StorageFilter>;
};


export type QueryaggregateStorage_fileArgs = {
  filter?: InputMaybe<Storage_fileFilter>;
};


export type QueryaggregateStorage_fileByDemandArgs = {
  filter?: InputMaybe<Storage_fileByDemandFilter>;
};


export type QueryaggregateStorage_fileOperationTokenArgs = {
  filter?: InputMaybe<Storage_fileOperationTokenFilter>;
};


export type QueryaggregateTwoFactorTokenArgs = {
  filter?: InputMaybe<TwoFactorTokenFilter>;
};


export type QueryaggregateUnitArgs = {
  filter?: InputMaybe<UnitFilter>;
};


export type QueryaggregateUserArgs = {
  filter?: InputMaybe<UserFilter>;
};


export type QueryaggregateUser_tokenArgs = {
  filter?: InputMaybe<User_tokenFilter>;
};


export type QueryaggregateVET_PACKAGEArgs = {
  filter?: InputMaybe<VET_PACKAGEFilter>;
};


export type QueryaggregateVET_accountArgs = {
  filter?: InputMaybe<VET_accountFilter>;
};


export type QueryaggregateVET_contactArgs = {
  filter?: InputMaybe<VET_contactFilter>;
};


export type QueryaggregateVET_petArgs = {
  filter?: InputMaybe<VET_petFilter>;
};


export type QueryaggregateWebhookArgs = {
  filter?: InputMaybe<WebhookFilter>;
};


export type QueryaggregateWebhook_providerArgs = {
  filter?: InputMaybe<Webhook_providerFilter>;
};


export type QueryaggregateWebhook_providerOriginArgs = {
  filter?: InputMaybe<Webhook_providerOriginFilter>;
};


export type QuerycheckUserPasswordArgs = {
  id: Scalars['ID'];
  pwd: Scalars['String'];
};


export type QuerygetAUDITS_PACKAGEArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_accountArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_documentArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_document_blockArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_document_blockImageArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_document_blockQuoteArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_document_blockTableArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_document_blockTableCellArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_document_blockTableColumnArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_document_blockTableRowArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_document_blockTextArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_document_blockTitleArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_fileArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_projectArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_project_versionArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_reviewArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_review_accountArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAUDITS_review_commentArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetAccountArgs = {
  id: Scalars['ID'];
};


export type QuerygetAccount_eventArgs = {
  id: Scalars['ID'];
};


export type QuerygetAccount_logArgs = {
  id: Scalars['ID'];
};


export type QuerygetAccount_notificationArgs = {
  id: Scalars['ID'];
};


export type QuerygetAccount_sessionArgs = {
  id: Scalars['ID'];
};


export type QuerygetAccount_sessionConnectionArgs = {
  id: Scalars['ID'];
};


export type QuerygetAccount_sessionConnectionTaskArgs = {
  id: Scalars['ID'];
};


export type QuerygetAccount_sessionTaskArgs = {
  id: Scalars['ID'];
};


export type QuerygetAddressArgs = {
  id: Scalars['ID'];
};


export type QuerygetBankArgs = {
  id: Scalars['ID'];
};


export type QuerygetBankAccountArgs = {
  id: Scalars['ID'];
};


export type QuerygetCMS_PACKAGEArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_accountArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_appArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  token?: InputMaybe<Scalars['String']>;
};


export type QuerygetCMS_appContactArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_authorAliasArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_contactArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  token?: InputMaybe<Scalars['String']>;
};


export type QuerygetCMS_fileArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_websiteArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_website_pageArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_website_page_blockArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_website_page_blockComboArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_website_page_blockImageArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_website_page_blockLinkArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_website_page_blockTextArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCMS_website_page_blockTitleArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_PACKAGEArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_accountArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_accountContactsTableColumnArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_accountContactsTableFilterArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_accountEventArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_actionArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_actionCallArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_actionChatArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_actionEmailArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_actionMeetingArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_areaArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_campaignArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_campaignContactArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_campaignContactEventArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_campaignDeliverArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_campaignEmailTemplateArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactActionArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactActionCallArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactActionChatArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactActionEmailArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactActionMeetingArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactActionStatusChangeArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactAnswerArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactInputArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactInputSubStatusArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactInputValueArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_contactListArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_emailTemplateArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_eventArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_funnelArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_funnelActionArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_funnelStatusArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_opportunityLogArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_opportunityPaymentPlanItemArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_overviewArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_proposalArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_roleArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_socialMediaCampaignArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_socialMediaCampaign_mediaArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_socialMediaCampaign_postArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_sourceArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_sourceCategoryArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_sourceFormArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_sourceFormFieldArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_sourceFormReasonArgs = {
  id: Scalars['ID'];
};


export type QuerygetCRM_sourceForm_emailTemplateArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_teamArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_teamAccountArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_teamActionArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_teamActionBoardEffectArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_teamBoardArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_teamBoardItemArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_teamBoardStatusArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_teamBoardSubStatusArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCRM_teamBoardTaskArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_PACKAGEArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_accountArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_areaArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_areaAccountArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_externalAPIArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_externalAPI_fieldArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processAPIArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processAccountArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processActionArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processButtonArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processFieldArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processFilterParamArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processOperationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processStatusArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processTableHeadArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processTableHeadConfigArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processTableMatchReplaceArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processValidationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processValidationOperationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processValidationOperation_documentArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processValidationOperation_document_fileArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_processsValidationOperation_fieldArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_validationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_validationDocumentArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_validationDocument_fileArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetChatbots_validationFieldArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCompanySectorArgs = {
  id: Scalars['ID'];
};


export type QuerygetContactArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetContact_billingInfoArgs = {
  id: Scalars['ID'];
};


export type QuerygetContact_businessInfoArgs = {
  id: Scalars['ID'];
};


export type QuerygetContact_emailArgs = {
  id: Scalars['ID'];
};


export type QuerygetContact_importLogArgs = {
  id: Scalars['ID'];
};


export type QuerygetContact_jobPositionArgs = {
  id: Scalars['ID'];
};


export type QuerygetContact_phoneArgs = {
  id: Scalars['ID'];
};


export type QuerygetCountryArgs = {
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetCurrencyArgs = {
  id: Scalars['ID'];
};


export type QuerygetDynamicTableArgs = {
  id: Scalars['ID'];
};


export type QuerygetDynamicTable_accountArgs = {
  id: Scalars['ID'];
};


export type QuerygetDynamicTable_headArgs = {
  id: Scalars['ID'];
};


export type QuerygetDynamicTable_headValueBooleanOptionsArgs = {
  id: Scalars['ID'];
};


export type QuerygetDynamicTable_headValueCurrencyOptionsArgs = {
  id: Scalars['ID'];
};


export type QuerygetDynamicTable_headValueDateOptionsArgs = {
  id: Scalars['ID'];
};


export type QuerygetDynamicTable_headValueLinkOptionsArgs = {
  id: Scalars['ID'];
};


export type QuerygetDynamicTable_headValueNumberOptionsArgs = {
  id: Scalars['ID'];
};


export type QuerygetE360AppArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_domainArgs = {
  domain?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_locationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  publicPath?: InputMaybe<Scalars['String']>;
};


export type QuerygetE360App_locationFileArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_locationScheduleArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_appoinmentArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_appoinmentLotsArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_areaArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_area_resourceArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_area_workShiftArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_menuArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_menu_comboArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_menu_itemArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_menu_sectionArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_menu_section_itemArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_menu_subSectionArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_location_menu_tagArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_notificationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_organizationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_organization_userArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_partnerArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_partner_webhookArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shopArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_contractArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_customer_contractArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_customer_contractServiceArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_customer_contract_renewalArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_operationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_partner_contractArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_productArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_productItemArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_productServiceArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_promoProductArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_promotionArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_promotionCodeArgs = {
  code?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_purchaseArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_shop_purchaseProviderEventArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_stablishmentArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_stablishment_userArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_userArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_userLogArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_userSessionArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_userSessionConnectionArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_userSessionConnectionTaskArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_userSessionTaskArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_user_notificationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360App_user_partnerArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetE360Storage_fileArgs = {
  id?: InputMaybe<Scalars['ID']>;
  ref?: InputMaybe<Scalars['String']>;
};


export type QuerygetERP_PACKAGEArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_accountArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_accountEventArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_accountingAccountArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_contactArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_contactActionArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_contactSerieArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_eventArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_invoiceArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_invoiceItemArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_invoiceNoteArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_organizationBillingInfoArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_paymentPlanArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_productArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_resourceArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_roleArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_seatArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_seatLineArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_taxArgs = {
  id: Scalars['ID'];
};


export type QuerygetERP_withholdingArgs = {
  id: Scalars['ID'];
};


export type QuerygetEmailArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetEmailEditorArgs = {
  id: Scalars['ID'];
};


export type QuerygetEmailEditor_templateArgs = {
  id: Scalars['ID'];
};


export type QuerygetEmail_attachmentArgs = {
  id: Scalars['ID'];
};


export type QuerygetEventArgs = {
  id: Scalars['ID'];
};


export type QuerygetExternalAPI_keyArgs = {
  id: Scalars['String'];
};


export type QuerygetFormBuilderArgs = {
  id: Scalars['ID'];
};


export type QuerygetFormBuilder_formArgs = {
  id: Scalars['ID'];
};


export type QuerygetFormBuilder_inputArgs = {
  id: Scalars['ID'];
};


export type QuerygetFormBuilder_inputBooleanArgs = {
  id: Scalars['ID'];
};


export type QuerygetFormBuilder_inputMultipleChoiceArgs = {
  id: Scalars['ID'];
};


export type QuerygetFormBuilder_inputMultipleChoiceOptionArgs = {
  id: Scalars['ID'];
};


export type QuerygetFormBuilder_inputNumberArgs = {
  id: Scalars['ID'];
};


export type QuerygetFormBuilder_inputTextArgs = {
  id: Scalars['ID'];
};


export type QuerygetGeneralAccountingAccountArgs = {
  id?: InputMaybe<Scalars['String']>;
  uuid?: InputMaybe<Scalars['ID']>;
};


export type QuerygetImportProcessArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetImportProcess_elementFieldArgs = {
  id: Scalars['ID'];
};


export type QuerygetImportProcess_itemArgs = {
  id: Scalars['ID'];
};


export type QuerygetImportProcess_itemErrorArgs = {
  id: Scalars['ID'];
};


export type QuerygetImportProcess_itemValueArgs = {
  id: Scalars['ID'];
};


export type QuerygetImportProcess_matchArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetImportProcess_sourceValueArgs = {
  id: Scalars['ID'];
};


export type QuerygetInboxArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetInbox_itemArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetIntegrationsArgs = {
  id: Scalars['ID'];
};


export type QuerygetIntegrations_Digilab_ProviderArgs = {
  id: Scalars['ID'];
};


export type QuerygetIntegrations_Google_Analytics_ProviderArgs = {
  id: Scalars['ID'];
};


export type QuerygetIntegrations_Google_ProviderArgs = {
  id: Scalars['ID'];
};


export type QuerygetIntegrations_Link_Mobility_ProviderArgs = {
  id?: InputMaybe<Scalars['ID']>;
  phone?: InputMaybe<Scalars['String']>;
};


export type QuerygetIntegrations_LinkedIn_ProviderArgs = {
  id: Scalars['ID'];
};


export type QuerygetIntegrations_MSFT_MeetingArgs = {
  id: Scalars['String'];
};


export type QuerygetIntegrations_MSFT_ProviderArgs = {
  id: Scalars['ID'];
};


export type QuerygetIntegrations_Meta_ProviderArgs = {
  id: Scalars['ID'];
};


export type QuerygetIntegrations_SendGrid_ProviderArgs = {
  id: Scalars['ID'];
};


export type QuerygetIntegrations_Sendgrid_emailEventArgs = {
  id: Scalars['ID'];
};


export type QuerygetIntegrations_accountArgs = {
  id: Scalars['ID'];
};


export type QuerygetIntegrations_carrefour_operartionsLogArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetJobPositionArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_PACKAGEArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_accountArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_accountLogArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_accountLogDetailArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_blockArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_blockStudentProgressArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_contactArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_courseArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_courseCategoryArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_courseStudentProgressArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_courseVersionArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_formArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_formStudentProgressArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupAccountArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupAccountFormAnswerArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupAccountFormAttemptArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupBlockConfigArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupCourseConfigArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupFormConfigArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupFormConfigCalculationArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupFormConfigCalculationRangeArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupLessonConfigArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupLessonMeetingConfigArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupLessonTeacherConfigArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_groupResourceConfigArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_lessonArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_lessonStudentProgressArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_meetingStudentProgressArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_productArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_resourceArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_resourceStudentProgressArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_resourceStudentVideoReportArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_resourceStudentVideoReport_intervalArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_sectionArgs = {
  id: Scalars['ID'];
};


export type QuerygetLMS_thumbnailArgs = {
  id: Scalars['ID'];
};


export type QuerygetLogger_logArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetLoginProviderArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetMeetingArgs = {
  id: Scalars['ID'];
};


export type QuerygetMeetingAccountArgs = {
  id: Scalars['ID'];
};


export type QuerygetMeetingDoctors_userArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetMeetingProviderArgs = {
  id: Scalars['ID'];
};


export type QuerygetNavigationArgs = {
  id: Scalars['ID'];
};


export type QuerygetNavigation_routeArgs = {
  id: Scalars['ID'];
};


export type QuerygetORG_PACKAGEArgs = {
  id: Scalars['ID'];
};


export type QuerygetORG_accountArgs = {
  id: Scalars['ID'];
};


export type QuerygetORG_roleArgs = {
  id: Scalars['ID'];
};


export type QuerygetOrgArgs = {
  id: Scalars['ID'];
};


export type QuerygetOrg360Args = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetOrg360_themeArgs = {
  id: Scalars['ID'];
};


export type QuerygetOrgDomainArgs = {
  domain?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetOrganization_departmentArgs = {
  id: Scalars['ID'];
};


export type QuerygetPETPASS_APPArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_bannerArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_contractArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_fileArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_insuranceArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_insurance_companyArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_locationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_locationPolicyArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_locatorArgs = {
  activationCode?: InputMaybe<Scalars['String']>;
  adminCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  ref?: InputMaybe<Scalars['String']>;
};


export type QuerygetPETPASS_partnerArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_petArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_petTokenArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_pet_external_insuranceArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_pet_insuranceArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_productArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_purchaseArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_sosArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_sos_eventArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPETPASS_userArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPersonArgs = {
  id: Scalars['ID'];
};


export type QuerygetPetArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPetBreedArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPetTypeArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPet_fileArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPet_vaccinationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetPet_vaccineArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetProductArgs = {
  id: Scalars['ID'];
};


export type QuerygetProduct_categoryArgs = {
  id: Scalars['ID'];
};


export type QuerygetProduct_itemArgs = {
  id: Scalars['ID'];
};


export type QuerygetProduct_paymentPlanItemArgs = {
  id: Scalars['ID'];
};


export type QuerygetProposalArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetProposal_resourceArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetProposal_stakeholderArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetProposal_stakeholderResourceArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetProposal_stakeholderTokenArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetResourceArgs = {
  id?: InputMaybe<Scalars['ID']>;
  ref?: InputMaybe<Scalars['String']>;
};


export type QuerygetResourceTokenArgs = {
  id?: InputMaybe<Scalars['ID']>;
  token?: InputMaybe<Scalars['String']>;
};


export type QuerygetSMSArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetSchedulerArgs = {
  id: Scalars['ID'];
};


export type QuerygetScheduler_actionArgs = {
  id: Scalars['ID'];
};


export type QuerygetScheduler_managerActionArgs = {
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
};


export type QuerygetScheduler_taskArgs = {
  id: Scalars['ID'];
};


export type QuerygetSearchIndex_contactArgs = {
  id: Scalars['String'];
};


export type QuerygetServiceAccountArgs = {
  id: Scalars['ID'];
};


export type QuerygetShortUrlArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  url?: InputMaybe<Scalars['String']>;
};


export type QuerygetShortUrl_domainArgs = {
  domain?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetStorageArgs = {
  id: Scalars['ID'];
};


export type QuerygetStorage_fileArgs = {
  filePath?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  ref?: InputMaybe<Scalars['String']>;
};


export type QuerygetStorage_fileByDemandArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetStorage_fileOperationTokenArgs = {
  token: Scalars['String'];
};


export type QuerygetTwoFactorTokenArgs = {
  token: Scalars['String'];
};


export type QuerygetUnitArgs = {
  id: Scalars['ID'];
};


export type QuerygetUserArgs = {
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetUser_tokenArgs = {
  id: Scalars['String'];
};


export type QuerygetVET_PACKAGEArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetVET_accountArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetVET_contactArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetVET_petArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type QuerygetWebhookArgs = {
  id: Scalars['ID'];
};


export type QuerygetWebhook_providerArgs = {
  id: Scalars['ID'];
};


export type QuerygetWebhook_providerOriginArgs = {
  id: Scalars['ID'];
};


export type QueryqueryAUDITS_PACKAGEArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_PACKAGEOrder>;
};


export type QueryqueryAUDITS_accountArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_accountOrder>;
};


export type QueryqueryAUDITS_documentArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_documentOrder>;
};


export type QueryqueryAUDITS_document_blockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockOrder>;
};


export type QueryqueryAUDITS_document_blockImageArgs = {
  filter?: InputMaybe<AUDITS_document_blockImageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockImageOrder>;
};


export type QueryqueryAUDITS_document_blockQuoteArgs = {
  filter?: InputMaybe<AUDITS_document_blockQuoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockQuoteOrder>;
};


export type QueryqueryAUDITS_document_blockTableArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableOrder>;
};


export type QueryqueryAUDITS_document_blockTableCellArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableCellFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableCellOrder>;
};


export type QueryqueryAUDITS_document_blockTableColumnArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableColumnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableColumnOrder>;
};


export type QueryqueryAUDITS_document_blockTableRowArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableRowFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableRowOrder>;
};


export type QueryqueryAUDITS_document_blockTextArgs = {
  filter?: InputMaybe<AUDITS_document_blockTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTextOrder>;
};


export type QueryqueryAUDITS_document_blockTitleArgs = {
  filter?: InputMaybe<AUDITS_document_blockTitleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTitleOrder>;
};


export type QueryqueryAUDITS_fileArgs = {
  filter?: InputMaybe<AUDITS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_fileOrder>;
};


export type QueryqueryAUDITS_projectArgs = {
  filter?: InputMaybe<AUDITS_projectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_projectOrder>;
};


export type QueryqueryAUDITS_project_versionArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_project_versionOrder>;
};


export type QueryqueryAUDITS_reviewArgs = {
  filter?: InputMaybe<AUDITS_reviewFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_reviewOrder>;
};


export type QueryqueryAUDITS_review_accountArgs = {
  filter?: InputMaybe<AUDITS_review_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_accountOrder>;
};


export type QueryqueryAUDITS_review_commentArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_commentOrder>;
};


export type QueryqueryAccountArgs = {
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AccountOrder>;
};


export type QueryqueryAccount_eventArgs = {
  filter?: InputMaybe<Account_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_eventOrder>;
};


export type QueryqueryAccount_logArgs = {
  filter?: InputMaybe<Account_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_logOrder>;
};


export type QueryqueryAccount_notificationArgs = {
  filter?: InputMaybe<Account_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_notificationOrder>;
};


export type QueryqueryAccount_sessionArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionOrder>;
};


export type QueryqueryAccount_sessionConnectionArgs = {
  filter?: InputMaybe<Account_sessionConnectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionOrder>;
};


export type QueryqueryAccount_sessionConnectionTaskArgs = {
  filter?: InputMaybe<Account_sessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionTaskOrder>;
};


export type QueryqueryAccount_sessionTaskArgs = {
  filter?: InputMaybe<Account_sessionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionTaskOrder>;
};


export type QueryqueryAddressArgs = {
  filter?: InputMaybe<AddressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AddressOrder>;
};


export type QueryqueryBankArgs = {
  filter?: InputMaybe<BankFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BankOrder>;
};


export type QueryqueryBankAccountArgs = {
  filter?: InputMaybe<BankAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BankAccountOrder>;
};


export type QueryqueryCMS_PACKAGEArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_PACKAGEOrder>;
};


export type QueryqueryCMS_accountArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_accountOrder>;
};


export type QueryqueryCMS_appArgs = {
  filter?: InputMaybe<CMS_appFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appOrder>;
};


export type QueryqueryCMS_appContactArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appContactOrder>;
};


export type QueryqueryCMS_authorAliasArgs = {
  filter?: InputMaybe<CMS_authorAliasFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_authorAliasOrder>;
};


export type QueryqueryCMS_contactArgs = {
  filter?: InputMaybe<CMS_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_contactOrder>;
};


export type QueryqueryCMS_fileArgs = {
  filter?: InputMaybe<CMS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_fileOrder>;
};


export type QueryqueryCMS_websiteArgs = {
  filter?: InputMaybe<CMS_websiteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_websiteOrder>;
};


export type QueryqueryCMS_website_pageArgs = {
  filter?: InputMaybe<CMS_website_pageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_pageOrder>;
};


export type QueryqueryCMS_website_page_blockArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockOrder>;
};


export type QueryqueryCMS_website_page_blockComboArgs = {
  filter?: InputMaybe<CMS_website_page_blockComboFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockComboOrder>;
};


export type QueryqueryCMS_website_page_blockImageArgs = {
  filter?: InputMaybe<CMS_website_page_blockImageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockImageOrder>;
};


export type QueryqueryCMS_website_page_blockLinkArgs = {
  filter?: InputMaybe<CMS_website_page_blockLinkFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockLinkOrder>;
};


export type QueryqueryCMS_website_page_blockTextArgs = {
  filter?: InputMaybe<CMS_website_page_blockTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockTextOrder>;
};


export type QueryqueryCMS_website_page_blockTitleArgs = {
  filter?: InputMaybe<CMS_website_page_blockTitleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockTitleOrder>;
};


export type QueryqueryCRM_PACKAGEArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_PACKAGEOrder>;
};


export type QueryqueryCRM_accountArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_accountContactsTableColumnArgs = {
  filter?: InputMaybe<CRM_accountContactsTableColumnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_accountContactsTableColumnOrder>;
};


export type QueryqueryCRM_accountContactsTableFilterArgs = {
  filter?: InputMaybe<CRM_accountContactsTableFilterFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_accountContactsTableFilterOrder>;
};


export type QueryqueryCRM_accountEventArgs = {
  filter?: InputMaybe<CRM_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_actionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionOrder>;
};


export type QueryqueryCRM_actionCallArgs = {
  filter?: InputMaybe<CRM_actionCallFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_actionChatArgs = {
  filter?: InputMaybe<CRM_actionChatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionChatOrder>;
};


export type QueryqueryCRM_actionEmailArgs = {
  filter?: InputMaybe<CRM_actionEmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionEmailOrder>;
};


export type QueryqueryCRM_actionMeetingArgs = {
  filter?: InputMaybe<CRM_actionMeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_areaArgs = {
  filter?: InputMaybe<CRM_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_areaOrder>;
};


export type QueryqueryCRM_campaignArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignOrder>;
};


export type QueryqueryCRM_campaignContactArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactOrder>;
};


export type QueryqueryCRM_campaignContactEventArgs = {
  filter?: InputMaybe<CRM_campaignContactEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactEventOrder>;
};


export type QueryqueryCRM_campaignDeliverArgs = {
  filter?: InputMaybe<CRM_campaignDeliverFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignDeliverOrder>;
};


export type QueryqueryCRM_campaignEmailTemplateArgs = {
  filter?: InputMaybe<CRM_campaignEmailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignEmailTemplateOrder>;
};


export type QueryqueryCRM_contactArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_contactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionOrder>;
};


export type QueryqueryCRM_contactActionCallArgs = {
  filter?: InputMaybe<CRM_contactActionCallFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionCallOrder>;
};


export type QueryqueryCRM_contactActionChatArgs = {
  filter?: InputMaybe<CRM_contactActionChatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_contactActionEmailArgs = {
  filter?: InputMaybe<CRM_contactActionEmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_contactActionMeetingArgs = {
  filter?: InputMaybe<CRM_contactActionMeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionMeetingOrder>;
};


export type QueryqueryCRM_contactActionStatusChangeArgs = {
  filter?: InputMaybe<CRM_contactActionStatusChangeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_contactAnswerArgs = {
  filter?: InputMaybe<CRM_contactAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactAnswerOrder>;
};


export type QueryqueryCRM_contactInputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};


export type QueryqueryCRM_contactInputSubStatusArgs = {
  filter?: InputMaybe<CRM_contactInputSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputSubStatusOrder>;
};


export type QueryqueryCRM_contactInputValueArgs = {
  filter?: InputMaybe<CRM_contactInputValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputValueOrder>;
};


export type QueryqueryCRM_contactListArgs = {
  filter?: InputMaybe<CRM_contactListFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactListOrder>;
};


export type QueryqueryCRM_emailTemplateArgs = {
  filter?: InputMaybe<CRM_emailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_eventArgs = {
  filter?: InputMaybe<CRM_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_funnelArgs = {
  filter?: InputMaybe<CRM_funnelFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelOrder>;
};


export type QueryqueryCRM_funnelActionArgs = {
  filter?: InputMaybe<CRM_funnelActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelActionOrder>;
};


export type QueryqueryCRM_funnelStatusArgs = {
  filter?: InputMaybe<CRM_funnelStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelStatusOrder>;
};


export type QueryqueryCRM_opportunityLogArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityLogOrder>;
};


export type QueryqueryCRM_opportunityPaymentPlanItemArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityPaymentPlanItemOrder>;
};


export type QueryqueryCRM_overviewArgs = {
  filter?: InputMaybe<CRM_overviewFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_proposalArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_roleArgs = {
  filter?: InputMaybe<CRM_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryCRM_socialMediaCampaignArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaignOrder>;
};


export type QueryqueryCRM_socialMediaCampaign_mediaArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_mediaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_mediaOrder>;
};


export type QueryqueryCRM_socialMediaCampaign_postArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_postFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_postOrder>;
};


export type QueryqueryCRM_sourceArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceOrder>;
};


export type QueryqueryCRM_sourceCategoryArgs = {
  filter?: InputMaybe<CRM_sourceCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceCategoryOrder>;
};


export type QueryqueryCRM_sourceFormArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormOrder>;
};


export type QueryqueryCRM_sourceFormFieldArgs = {
  filter?: InputMaybe<CRM_sourceFormFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormFieldOrder>;
};


export type QueryqueryCRM_sourceFormReasonArgs = {
  filter?: InputMaybe<CRM_sourceFormReasonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormReasonOrder>;
};


export type QueryqueryCRM_sourceForm_emailTemplateArgs = {
  filter?: InputMaybe<CRM_sourceForm_emailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceForm_emailTemplateOrder>;
};


export type QueryqueryCRM_teamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamOrder>;
};


export type QueryqueryCRM_teamAccountArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamAccountOrder>;
};


export type QueryqueryCRM_teamActionArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionOrder>;
};


export type QueryqueryCRM_teamActionBoardEffectArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionBoardEffectOrder>;
};


export type QueryqueryCRM_teamBoardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardOrder>;
};


export type QueryqueryCRM_teamBoardItemArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardItemOrder>;
};


export type QueryqueryCRM_teamBoardStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardStatusOrder>;
};


export type QueryqueryCRM_teamBoardSubStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardSubStatusOrder>;
};


export type QueryqueryCRM_teamBoardTaskArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardTaskOrder>;
};


export type QueryqueryChatbots_PACKAGEArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_PACKAGEOrder>;
};


export type QueryqueryChatbots_accountArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_accountOrder>;
};


export type QueryqueryChatbots_areaArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaOrder>;
};


export type QueryqueryChatbots_areaAccountArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaAccountOrder>;
};


export type QueryqueryChatbots_externalAPIArgs = {
  filter?: InputMaybe<Chatbots_externalAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_externalAPIOrder>;
};


export type QueryqueryChatbots_externalAPI_fieldArgs = {
  filter?: InputMaybe<Chatbots_externalAPI_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_externalAPI_fieldOrder>;
};


export type QueryqueryChatbots_processArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOrder>;
};


export type QueryqueryChatbots_processAPIArgs = {
  filter?: InputMaybe<Chatbots_processAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAPIOrder>;
};


export type QueryqueryChatbots_processAccountArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAccountOrder>;
};


export type QueryqueryChatbots_processActionArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processActionOrder>;
};


export type QueryqueryChatbots_processButtonArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processButtonOrder>;
};


export type QueryqueryChatbots_processFieldArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFieldOrder>;
};


export type QueryqueryChatbots_processFilterParamArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFilterParamOrder>;
};


export type QueryqueryChatbots_processOperationArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOperationOrder>;
};


export type QueryqueryChatbots_processStatusArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processStatusOrder>;
};


export type QueryqueryChatbots_processTableHeadArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadOrder>;
};


export type QueryqueryChatbots_processTableHeadConfigArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadConfigOrder>;
};


export type QueryqueryChatbots_processTableMatchReplaceArgs = {
  filter?: InputMaybe<Chatbots_processTableMatchReplaceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableMatchReplaceOrder>;
};


export type QueryqueryChatbots_processValidationArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOrder>;
};


export type QueryqueryChatbots_processValidationOperationArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperationOrder>;
};


export type QueryqueryChatbots_processValidationOperation_documentArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_documentOrder>;
};


export type QueryqueryChatbots_processValidationOperation_document_fileArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_document_fileOrder>;
};


export type QueryqueryChatbots_processsValidationOperation_fieldArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processsValidationOperation_fieldOrder>;
};


export type QueryqueryChatbots_validationArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationOrder>;
};


export type QueryqueryChatbots_validationDocumentArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocumentOrder>;
};


export type QueryqueryChatbots_validationDocument_fileArgs = {
  filter?: InputMaybe<Chatbots_validationDocument_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocument_fileOrder>;
};


export type QueryqueryChatbots_validationFieldArgs = {
  filter?: InputMaybe<Chatbots_validationFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationFieldOrder>;
};


export type QueryqueryCompanySectorArgs = {
  filter?: InputMaybe<CompanySectorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CompanySectorOrder>;
};


export type QueryqueryContactArgs = {
  filter?: InputMaybe<ContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ContactOrder>;
};


export type QueryqueryContact_billingInfoArgs = {
  filter?: InputMaybe<Contact_billingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_billingInfoOrder>;
};


export type QueryqueryContact_businessInfoArgs = {
  filter?: InputMaybe<Contact_businessInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_businessInfoOrder>;
};


export type QueryqueryContact_emailArgs = {
  filter?: InputMaybe<Contact_emailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_emailOrder>;
};


export type QueryqueryContact_importLogArgs = {
  filter?: InputMaybe<Contact_importLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_importLogOrder>;
};


export type QueryqueryContact_jobPositionArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_jobPositionOrder>;
};


export type QueryqueryContact_phoneArgs = {
  filter?: InputMaybe<Contact_phoneFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_phoneOrder>;
};


export type QueryqueryCountryArgs = {
  filter?: InputMaybe<CountryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CountryOrder>;
};


export type QueryqueryCurrencyArgs = {
  filter?: InputMaybe<CurrencyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CurrencyOrder>;
};


export type QueryqueryDynamicTableArgs = {
  filter?: InputMaybe<DynamicTableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTableOrder>;
};


export type QueryqueryDynamicTable_accountArgs = {
  filter?: InputMaybe<DynamicTable_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryDynamicTable_headArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headOrder>;
};


export type QueryqueryDynamicTable_headValueBooleanOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueBooleanOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headValueBooleanOptionsOrder>;
};


export type QueryqueryDynamicTable_headValueCurrencyOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueCurrencyOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryDynamicTable_headValueDateOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueDateOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headValueDateOptionsOrder>;
};


export type QueryqueryDynamicTable_headValueLinkOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueLinkOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryDynamicTable_headValueNumberOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueNumberOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryE360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360AppOrder>;
};


export type QueryqueryE360App_domainArgs = {
  filter?: InputMaybe<E360App_domainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_domainOrder>;
};


export type QueryqueryE360App_locationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationOrder>;
};


export type QueryqueryE360App_locationFileArgs = {
  filter?: InputMaybe<E360App_locationFileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationFileOrder>;
};


export type QueryqueryE360App_locationScheduleArgs = {
  filter?: InputMaybe<E360App_locationScheduleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationScheduleOrder>;
};


export type QueryqueryE360App_location_appoinmentArgs = {
  filter?: InputMaybe<E360App_location_appoinmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentOrder>;
};


export type QueryqueryE360App_location_appoinmentLotsArgs = {
  filter?: InputMaybe<E360App_location_appoinmentLotsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentLotsOrder>;
};


export type QueryqueryE360App_location_areaArgs = {
  filter?: InputMaybe<E360App_location_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_areaOrder>;
};


export type QueryqueryE360App_location_area_resourceArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_resourceOrder>;
};


export type QueryqueryE360App_location_area_workShiftArgs = {
  filter?: InputMaybe<E360App_location_area_workShiftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_workShiftOrder>;
};


export type QueryqueryE360App_location_menuArgs = {
  filter?: InputMaybe<E360App_location_menuFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menuOrder>;
};


export type QueryqueryE360App_location_menu_comboArgs = {
  filter?: InputMaybe<E360App_location_menu_comboFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_comboOrder>;
};


export type QueryqueryE360App_location_menu_itemArgs = {
  filter?: InputMaybe<E360App_location_menu_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_itemOrder>;
};


export type QueryqueryE360App_location_menu_sectionArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_sectionOrder>;
};


export type QueryqueryE360App_location_menu_section_itemArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_section_itemOrder>;
};


export type QueryqueryE360App_location_menu_subSectionArgs = {
  filter?: InputMaybe<E360App_location_menu_subSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_subSectionOrder>;
};


export type QueryqueryE360App_location_menu_tagArgs = {
  filter?: InputMaybe<E360App_location_menu_tagFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_tagOrder>;
};


export type QueryqueryE360App_notificationArgs = {
  filter?: InputMaybe<E360App_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_notificationOrder>;
};


export type QueryqueryE360App_organizationArgs = {
  filter?: InputMaybe<E360App_organizationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organizationOrder>;
};


export type QueryqueryE360App_organization_userArgs = {
  filter?: InputMaybe<E360App_organization_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organization_userOrder>;
};


export type QueryqueryE360App_partnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partnerOrder>;
};


export type QueryqueryE360App_partner_webhookArgs = {
  filter?: InputMaybe<E360App_partner_webhookFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partner_webhookOrder>;
};


export type QueryqueryE360App_shopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shopOrder>;
};


export type QueryqueryE360App_shop_contractArgs = {
  filter?: InputMaybe<E360App_shop_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_contractOrder>;
};


export type QueryqueryE360App_shop_customer_contractArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractOrder>;
};


export type QueryqueryE360App_shop_customer_contractServiceArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractServiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractServiceOrder>;
};


export type QueryqueryE360App_shop_customer_contract_renewalArgs = {
  filter?: InputMaybe<E360App_shop_customer_contract_renewalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contract_renewalOrder>;
};


export type QueryqueryE360App_shop_operationArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_operationOrder>;
};


export type QueryqueryE360App_shop_partner_contractArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_partner_contractOrder>;
};


export type QueryqueryE360App_shop_productArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productOrder>;
};


export type QueryqueryE360App_shop_productItemArgs = {
  filter?: InputMaybe<E360App_shop_productItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productItemOrder>;
};


export type QueryqueryE360App_shop_productServiceArgs = {
  filter?: InputMaybe<E360App_shop_productServiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productServiceOrder>;
};


export type QueryqueryE360App_shop_promoProductArgs = {
  filter?: InputMaybe<E360App_shop_promoProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promoProductOrder>;
};


export type QueryqueryE360App_shop_promotionArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionOrder>;
};


export type QueryqueryE360App_shop_promotionCodeArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionCodeOrder>;
};


export type QueryqueryE360App_shop_purchaseArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseOrder>;
};


export type QueryqueryE360App_shop_purchaseProviderEventArgs = {
  filter?: InputMaybe<E360App_shop_purchaseProviderEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseProviderEventOrder>;
};


export type QueryqueryE360App_stablishmentArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishmentOrder>;
};


export type QueryqueryE360App_stablishment_userArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishment_userOrder>;
};


export type QueryqueryE360App_userArgs = {
  filter?: InputMaybe<E360App_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userOrder>;
};


export type QueryqueryE360App_userLogArgs = {
  filter?: InputMaybe<E360App_userLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userLogOrder>;
};


export type QueryqueryE360App_userSessionArgs = {
  filter?: InputMaybe<E360App_userSessionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionOrder>;
};


export type QueryqueryE360App_userSessionConnectionArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionOrder>;
};


export type QueryqueryE360App_userSessionConnectionTaskArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionTaskOrder>;
};


export type QueryqueryE360App_userSessionTaskArgs = {
  filter?: InputMaybe<E360App_userSessionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionTaskOrder>;
};


export type QueryqueryE360App_user_notificationArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_notificationOrder>;
};


export type QueryqueryE360App_user_partnerArgs = {
  filter?: InputMaybe<E360App_user_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_partnerOrder>;
};


export type QueryqueryE360Storage_fileArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360Storage_fileOrder>;
};


export type QueryqueryERP_PACKAGEArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_PACKAGEOrder>;
};


export type QueryqueryERP_accountArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryERP_accountEventArgs = {
  filter?: InputMaybe<ERP_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryERP_accountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_accountingAccountOrder>;
};


export type QueryqueryERP_contactArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryERP_contactActionArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactActionOrder>;
};


export type QueryqueryERP_contactSerieArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactSerieOrder>;
};


export type QueryqueryERP_eventArgs = {
  filter?: InputMaybe<ERP_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryERP_invoiceArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceOrder>;
};


export type QueryqueryERP_invoiceItemArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceItemOrder>;
};


export type QueryqueryERP_invoiceNoteArgs = {
  filter?: InputMaybe<ERP_invoiceNoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceNoteOrder>;
};


export type QueryqueryERP_organizationBillingInfoArgs = {
  filter?: InputMaybe<ERP_organizationBillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_organizationBillingInfoOrder>;
};


export type QueryqueryERP_paymentPlanArgs = {
  filter?: InputMaybe<ERP_paymentPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_paymentPlanOrder>;
};


export type QueryqueryERP_productArgs = {
  filter?: InputMaybe<ERP_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryERP_resourceArgs = {
  filter?: InputMaybe<ERP_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryERP_roleArgs = {
  filter?: InputMaybe<ERP_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryERP_seatArgs = {
  filter?: InputMaybe<ERP_seatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatOrder>;
};


export type QueryqueryERP_seatLineArgs = {
  filter?: InputMaybe<ERP_seatLineFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatLineOrder>;
};


export type QueryqueryERP_taxArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_taxOrder>;
};


export type QueryqueryERP_withholdingArgs = {
  filter?: InputMaybe<ERP_withholdingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_withholdingOrder>;
};


export type QueryqueryEmailArgs = {
  filter?: InputMaybe<EmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailOrder>;
};


export type QueryqueryEmailEditorArgs = {
  filter?: InputMaybe<EmailEditorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryEmailEditor_templateArgs = {
  filter?: InputMaybe<EmailEditor_templateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailEditor_templateOrder>;
};


export type QueryqueryEmail_attachmentArgs = {
  filter?: InputMaybe<Email_attachmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryEmail_fromArgs = {
  filter?: InputMaybe<Email_fromFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Email_fromOrder>;
};


export type QueryqueryEmail_toArgs = {
  filter?: InputMaybe<Email_toFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Email_toOrder>;
};


export type QueryqueryEventArgs = {
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EventOrder>;
};


export type QueryqueryExternalAPI_keyArgs = {
  filter?: InputMaybe<ExternalAPI_keyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ExternalAPI_keyOrder>;
};


export type QueryqueryFormBuilderArgs = {
  filter?: InputMaybe<FormBuilderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryFormBuilder_formArgs = {
  filter?: InputMaybe<FormBuilder_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_formOrder>;
};


export type QueryqueryFormBuilder_inputArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputOrder>;
};


export type QueryqueryFormBuilder_inputBooleanArgs = {
  filter?: InputMaybe<FormBuilder_inputBooleanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryFormBuilder_inputMultipleChoiceArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryFormBuilder_inputMultipleChoiceOptionArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputMultipleChoiceOptionOrder>;
};


export type QueryqueryFormBuilder_inputNumberArgs = {
  filter?: InputMaybe<FormBuilder_inputNumberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputNumberOrder>;
};


export type QueryqueryFormBuilder_inputTextArgs = {
  filter?: InputMaybe<FormBuilder_inputTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputTextOrder>;
};


export type QueryqueryGeneralAccountingAccountArgs = {
  filter?: InputMaybe<GeneralAccountingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<GeneralAccountingAccountOrder>;
};


export type QueryqueryImportProcessArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcessOrder>;
};


export type QueryqueryImportProcess_elementFieldArgs = {
  filter?: InputMaybe<ImportProcess_elementFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryImportProcess_itemArgs = {
  filter?: InputMaybe<ImportProcess_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemOrder>;
};


export type QueryqueryImportProcess_itemErrorArgs = {
  filter?: InputMaybe<ImportProcess_itemErrorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryImportProcess_itemValueArgs = {
  filter?: InputMaybe<ImportProcess_itemValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemValueOrder>;
};


export type QueryqueryImportProcess_matchArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_matchOrder>;
};


export type QueryqueryImportProcess_sourceValueArgs = {
  filter?: InputMaybe<ImportProcess_sourceValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_sourceValueOrder>;
};


export type QueryqueryInboxArgs = {
  filter?: InputMaybe<InboxFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<InboxOrder>;
};


export type QueryqueryInbox_itemArgs = {
  filter?: InputMaybe<Inbox_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Inbox_itemOrder>;
};


export type QueryqueryIntegrationsArgs = {
  filter?: InputMaybe<IntegrationsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryIntegrations_Digilab_ProviderArgs = {
  filter?: InputMaybe<Integrations_Digilab_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Digilab_ProviderOrder>;
};


export type QueryqueryIntegrations_Google_Analytics_ProviderArgs = {
  filter?: InputMaybe<Integrations_Google_Analytics_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Google_Analytics_ProviderOrder>;
};


export type QueryqueryIntegrations_Google_ProviderArgs = {
  filter?: InputMaybe<Integrations_Google_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Google_ProviderOrder>;
};


export type QueryqueryIntegrations_Link_Mobility_ProviderArgs = {
  filter?: InputMaybe<Integrations_Link_Mobility_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Link_Mobility_ProviderOrder>;
};


export type QueryqueryIntegrations_LinkedIn_ProviderArgs = {
  filter?: InputMaybe<Integrations_LinkedIn_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_LinkedIn_ProviderOrder>;
};


export type QueryqueryIntegrations_MSFT_MeetingArgs = {
  filter?: InputMaybe<Integrations_MSFT_MeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_MSFT_MeetingOrder>;
};


export type QueryqueryIntegrations_MSFT_ProviderArgs = {
  filter?: InputMaybe<Integrations_MSFT_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_MSFT_ProviderOrder>;
};


export type QueryqueryIntegrations_Meta_ProviderArgs = {
  filter?: InputMaybe<Integrations_Meta_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Meta_ProviderOrder>;
};


export type QueryqueryIntegrations_SendGrid_ProviderArgs = {
  filter?: InputMaybe<Integrations_SendGrid_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_SendGrid_ProviderOrder>;
};


export type QueryqueryIntegrations_Sendgrid_emailEventArgs = {
  filter?: InputMaybe<Integrations_Sendgrid_emailEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Sendgrid_emailEventOrder>;
};


export type QueryqueryIntegrations_accountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_accountOrder>;
};


export type QueryqueryIntegrations_carrefour_operartionsLogArgs = {
  filter?: InputMaybe<Integrations_carrefour_operartionsLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_carrefour_operartionsLogOrder>;
};


export type QueryqueryJobPositionArgs = {
  filter?: InputMaybe<JobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<JobPositionOrder>;
};


export type QueryqueryLMS_PACKAGEArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_PACKAGEOrder>;
};


export type QueryqueryLMS_accountArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};


export type QueryqueryLMS_accountLogArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryLMS_accountLogDetailArgs = {
  filter?: InputMaybe<LMS_accountLogDetailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountLogDetailOrder>;
};


export type QueryqueryLMS_blockArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockOrder>;
};


export type QueryqueryLMS_blockStudentProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockStudentProgressOrder>;
};


export type QueryqueryLMS_contactArgs = {
  filter?: InputMaybe<LMS_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_contactOrder>;
};


export type QueryqueryLMS_courseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseOrder>;
};


export type QueryqueryLMS_courseCategoryArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseCategoryOrder>;
};


export type QueryqueryLMS_courseStudentProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseStudentProgressOrder>;
};


export type QueryqueryLMS_courseVersionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseVersionOrder>;
};


export type QueryqueryLMS_formArgs = {
  filter?: InputMaybe<LMS_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formOrder>;
};


export type QueryqueryLMS_formStudentProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};


export type QueryqueryLMS_groupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupOrder>;
};


export type QueryqueryLMS_groupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountOrder>;
};


export type QueryqueryLMS_groupAccountFormAnswerArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAnswerOrder>;
};


export type QueryqueryLMS_groupAccountFormAttemptArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAttemptOrder>;
};


export type QueryqueryLMS_groupBlockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupBlockConfigOrder>;
};


export type QueryqueryLMS_groupCourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupCourseConfigOrder>;
};


export type QueryqueryLMS_groupFormConfigArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};


export type QueryqueryLMS_groupFormConfigCalculationArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationOrder>;
};


export type QueryqueryLMS_groupFormConfigCalculationRangeArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationRangeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationRangeOrder>;
};


export type QueryqueryLMS_groupLessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonConfigOrder>;
};


export type QueryqueryLMS_groupLessonMeetingConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryLMS_groupLessonTeacherConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};


export type QueryqueryLMS_groupResourceConfigArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};


export type QueryqueryLMS_lessonArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonOrder>;
};


export type QueryqueryLMS_lessonStudentProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonStudentProgressOrder>;
};


export type QueryqueryLMS_meetingStudentProgressArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_meetingStudentProgressOrder>;
};


export type QueryqueryLMS_productArgs = {
  filter?: InputMaybe<LMS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_productOrder>;
};


export type QueryqueryLMS_resourceArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};


export type QueryqueryLMS_resourceStudentProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};


export type QueryqueryLMS_resourceStudentVideoReportArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReportOrder>;
};


export type QueryqueryLMS_resourceStudentVideoReport_intervalArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReport_intervalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReport_intervalOrder>;
};


export type QueryqueryLMS_sectionArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_sectionOrder>;
};


export type QueryqueryLMS_thumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_thumbnailOrder>;
};


export type QueryqueryLogger_logArgs = {
  filter?: InputMaybe<Logger_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Logger_logOrder>;
};


export type QueryqueryLoginProviderArgs = {
  filter?: InputMaybe<LoginProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LoginProviderOrder>;
};


export type QueryqueryMeetingArgs = {
  filter?: InputMaybe<MeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingOrder>;
};


export type QueryqueryMeetingAccountArgs = {
  filter?: InputMaybe<MeetingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingAccountOrder>;
};


export type QueryqueryMeetingDoctors_userArgs = {
  filter?: InputMaybe<MeetingDoctors_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingDoctors_userOrder>;
};


export type QueryqueryMeetingProviderArgs = {
  filter?: InputMaybe<MeetingProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingProviderOrder>;
};


export type QueryqueryNavigationArgs = {
  filter?: InputMaybe<NavigationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryNavigation_routeArgs = {
  filter?: InputMaybe<Navigation_routeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Navigation_routeOrder>;
};


export type QueryqueryORG_PACKAGEArgs = {
  filter?: InputMaybe<ORG_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_PACKAGEOrder>;
};


export type QueryqueryORG_accountArgs = {
  filter?: InputMaybe<ORG_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_accountOrder>;
};


export type QueryqueryORG_roleArgs = {
  filter?: InputMaybe<ORG_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_roleOrder>;
};


export type QueryqueryOrgArgs = {
  filter?: InputMaybe<OrgFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<OrgOrder>;
};


export type QueryqueryOrg360Args = {
  filter?: InputMaybe<Org360Filter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Org360Order>;
};


export type QueryqueryOrg360_themeArgs = {
  filter?: InputMaybe<Org360_themeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Org360_themeOrder>;
};


export type QueryqueryOrgDomainArgs = {
  filter?: InputMaybe<OrgDomainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<OrgDomainOrder>;
};


export type QueryqueryOrganization_departmentArgs = {
  filter?: InputMaybe<Organization_departmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Organization_departmentOrder>;
};


export type QueryqueryPETPASS_APPArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_APPOrder>;
};


export type QueryqueryPETPASS_bannerArgs = {
  filter?: InputMaybe<PETPASS_bannerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_bannerOrder>;
};


export type QueryqueryPETPASS_contractArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_contractOrder>;
};


export type QueryqueryPETPASS_fileArgs = {
  filter?: InputMaybe<PETPASS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_fileOrder>;
};


export type QueryqueryPETPASS_insuranceArgs = {
  filter?: InputMaybe<PETPASS_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insuranceOrder>;
};


export type QueryqueryPETPASS_insurance_companyArgs = {
  filter?: InputMaybe<PETPASS_insurance_companyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insurance_companyOrder>;
};


export type QueryqueryPETPASS_locationArgs = {
  filter?: InputMaybe<PETPASS_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locationOrder>;
};


export type QueryqueryPETPASS_locationPolicyArgs = {
  filter?: InputMaybe<PETPASS_locationPolicyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locationPolicyOrder>;
};


export type QueryqueryPETPASS_locatorArgs = {
  filter?: InputMaybe<PETPASS_locatorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locatorOrder>;
};


export type QueryqueryPETPASS_partnerArgs = {
  filter?: InputMaybe<PETPASS_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_partnerOrder>;
};


export type QueryqueryPETPASS_petArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petOrder>;
};


export type QueryqueryPETPASS_petTokenArgs = {
  filter?: InputMaybe<PETPASS_petTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petTokenOrder>;
};


export type QueryqueryPETPASS_pet_external_insuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_external_insuranceOrder>;
};


export type QueryqueryPETPASS_pet_insuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_insuranceOrder>;
};


export type QueryqueryPETPASS_productArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_productOrder>;
};


export type QueryqueryPETPASS_purchaseArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_purchaseOrder>;
};


export type QueryqueryPETPASS_sosArgs = {
  filter?: InputMaybe<PETPASS_sosFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_sosOrder>;
};


export type QueryqueryPETPASS_sos_eventArgs = {
  filter?: InputMaybe<PETPASS_sos_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_sos_eventOrder>;
};


export type QueryqueryPETPASS_userArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_userOrder>;
};


export type QueryqueryPersonArgs = {
  filter?: InputMaybe<PersonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PersonOrder>;
};


export type QueryqueryPetArgs = {
  filter?: InputMaybe<PetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetOrder>;
};


export type QueryqueryPetBreedArgs = {
  filter?: InputMaybe<PetBreedFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetBreedOrder>;
};


export type QueryqueryPetTypeArgs = {
  filter?: InputMaybe<PetTypeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetTypeOrder>;
};


export type QueryqueryPet_fileArgs = {
  filter?: InputMaybe<Pet_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_fileOrder>;
};


export type QueryqueryPet_vaccinationArgs = {
  filter?: InputMaybe<Pet_vaccinationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_vaccinationOrder>;
};


export type QueryqueryPet_vaccineArgs = {
  filter?: InputMaybe<Pet_vaccineFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_vaccineOrder>;
};


export type QueryqueryProductArgs = {
  filter?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProductOrder>;
};


export type QueryqueryProduct_categoryArgs = {
  filter?: InputMaybe<Product_categoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_categoryOrder>;
};


export type QueryqueryProduct_itemArgs = {
  filter?: InputMaybe<Product_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryProduct_paymentPlanItemArgs = {
  filter?: InputMaybe<Product_paymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_paymentPlanItemOrder>;
};


export type QueryqueryProposalArgs = {
  filter?: InputMaybe<ProposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProposalOrder>;
};


export type QueryqueryProposal_resourceArgs = {
  filter?: InputMaybe<Proposal_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_resourceOrder>;
};


export type QueryqueryProposal_stakeholderArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderOrder>;
};


export type QueryqueryProposal_stakeholderResourceArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderResourceOrder>;
};


export type QueryqueryProposal_stakeholderTokenArgs = {
  filter?: InputMaybe<Proposal_stakeholderTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderTokenOrder>;
};


export type QueryqueryResourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceOrder>;
};


export type QueryqueryResourceTokenArgs = {
  filter?: InputMaybe<ResourceTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceTokenOrder>;
};


export type QueryquerySMSArgs = {
  filter?: InputMaybe<SMSFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SMSOrder>;
};


export type QueryquerySchedulerArgs = {
  filter?: InputMaybe<SchedulerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryScheduler_actionArgs = {
  filter?: InputMaybe<Scheduler_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_actionOrder>;
};


export type QueryqueryScheduler_externalActionArgs = {
  filter?: InputMaybe<Scheduler_externalActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_externalActionOrder>;
};


export type QueryqueryScheduler_managerActionArgs = {
  filter?: InputMaybe<Scheduler_managerActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_managerActionOrder>;
};


export type QueryqueryScheduler_taskArgs = {
  filter?: InputMaybe<Scheduler_taskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_taskOrder>;
};


export type QueryquerySearchIndex_contactArgs = {
  filter?: InputMaybe<SearchIndex_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SearchIndex_contactOrder>;
};


export type QueryqueryServiceAccountArgs = {
  filter?: InputMaybe<ServiceAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ServiceAccountOrder>;
};


export type QueryqueryShortUrlArgs = {
  filter?: InputMaybe<ShortUrlFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ShortUrlOrder>;
};


export type QueryqueryShortUrl_domainArgs = {
  filter?: InputMaybe<ShortUrl_domainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ShortUrl_domainOrder>;
};


export type QueryqueryStorageArgs = {
  filter?: InputMaybe<StorageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<StorageOrder>;
};


export type QueryqueryStorage_fileArgs = {
  filter?: InputMaybe<Storage_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOrder>;
};


export type QueryqueryStorage_fileByDemandArgs = {
  filter?: InputMaybe<Storage_fileByDemandFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileByDemandOrder>;
};


export type QueryqueryStorage_fileOperationTokenArgs = {
  filter?: InputMaybe<Storage_fileOperationTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOperationTokenOrder>;
};


export type QueryqueryTwoFactorTokenArgs = {
  filter?: InputMaybe<TwoFactorTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TwoFactorTokenOrder>;
};


export type QueryqueryUnitArgs = {
  filter?: InputMaybe<UnitFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UnitOrder>;
};


export type QueryqueryUserArgs = {
  filter?: InputMaybe<UserFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UserOrder>;
};


export type QueryqueryUser_tokenArgs = {
  filter?: InputMaybe<User_tokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<User_tokenOrder>;
};


export type QueryqueryVET_PACKAGEArgs = {
  filter?: InputMaybe<VET_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_PACKAGEOrder>;
};


export type QueryqueryVET_accountArgs = {
  filter?: InputMaybe<VET_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_accountOrder>;
};


export type QueryqueryVET_contactArgs = {
  filter?: InputMaybe<VET_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_contactOrder>;
};


export type QueryqueryVET_petArgs = {
  filter?: InputMaybe<VET_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_petOrder>;
};


export type QueryqueryWebhookArgs = {
  filter?: InputMaybe<WebhookFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type QueryqueryWebhook_providerArgs = {
  filter?: InputMaybe<Webhook_providerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOrder>;
};


export type QueryqueryWebhook_providerOriginArgs = {
  filter?: InputMaybe<Webhook_providerOriginFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOriginOrder>;
};

export type Resource = {
  __typename?: 'Resource';
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  duration?: Maybe<Scalars['Int']>;
  erpResource?: Maybe<ERP_resource>;
  extension: Scalars['String'];
  fileName: Scalars['String'];
  id: Scalars['ID'];
  isAsset: Scalars['Boolean'];
  isPublic: Scalars['Boolean'];
  lmsResources?: Maybe<Array<LMS_resource>>;
  lmsResourcesAggregate?: Maybe<LMS_resourceAggregateResult>;
  mimeType: Scalars['String'];
  name: Scalars['String'];
  org360?: Maybe<Org360>;
  publicPath?: Maybe<Scalars['String']>;
  ref: Scalars['String'];
  size: Scalars['Int'];
  tokens?: Maybe<Array<Maybe<ResourceToken>>>;
  tokensAggregate?: Maybe<ResourceTokenAggregateResult>;
  updatedAt: Scalars['DateTime'];
};


export type ResourcecreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ResourceerpResourceArgs = {
  filter?: InputMaybe<ERP_resourceFilter>;
};


export type ResourcelmsResourcesArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};


export type ResourcelmsResourcesAggregateArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
};


export type Resourceorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type ResourcetokensArgs = {
  filter?: InputMaybe<ResourceTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceTokenOrder>;
};


export type ResourcetokensAggregateArgs = {
  filter?: InputMaybe<ResourceTokenFilter>;
};

export type ResourceAggregateResult = {
  __typename?: 'ResourceAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  durationAvg?: Maybe<Scalars['Float']>;
  durationMax?: Maybe<Scalars['Int']>;
  durationMin?: Maybe<Scalars['Int']>;
  durationSum?: Maybe<Scalars['Int']>;
  extensionMax?: Maybe<Scalars['String']>;
  extensionMin?: Maybe<Scalars['String']>;
  fileNameMax?: Maybe<Scalars['String']>;
  fileNameMin?: Maybe<Scalars['String']>;
  mimeTypeMax?: Maybe<Scalars['String']>;
  mimeTypeMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  publicPathMax?: Maybe<Scalars['String']>;
  publicPathMin?: Maybe<Scalars['String']>;
  refMax?: Maybe<Scalars['String']>;
  refMin?: Maybe<Scalars['String']>;
  sizeAvg?: Maybe<Scalars['Float']>;
  sizeMax?: Maybe<Scalars['Int']>;
  sizeMin?: Maybe<Scalars['Int']>;
  sizeSum?: Maybe<Scalars['Int']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type ResourceFilter = {
  and?: InputMaybe<Array<InputMaybe<ResourceFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ResourceHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  mimeType?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<ResourceFilter>;
  or?: InputMaybe<Array<InputMaybe<ResourceFilter>>>;
  publicPath?: InputMaybe<StringTermFilter>;
  ref?: InputMaybe<StringHashFilter>;
};

export enum ResourceHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  duration = 'duration',
  erpResource = 'erpResource',
  extension = 'extension',
  fileName = 'fileName',
  isAsset = 'isAsset',
  isPublic = 'isPublic',
  lmsResources = 'lmsResources',
  mimeType = 'mimeType',
  name = 'name',
  org360 = 'org360',
  publicPath = 'publicPath',
  ref = 'ref',
  size = 'size',
  tokens = 'tokens',
  updatedAt = 'updatedAt'
}

export type ResourceOrder = {
  asc?: InputMaybe<ResourceOrderable>;
  desc?: InputMaybe<ResourceOrderable>;
  then?: InputMaybe<ResourceOrder>;
};

export enum ResourceOrderable {
  createdAt = 'createdAt',
  duration = 'duration',
  extension = 'extension',
  fileName = 'fileName',
  mimeType = 'mimeType',
  name = 'name',
  publicPath = 'publicPath',
  ref = 'ref',
  size = 'size',
  updatedAt = 'updatedAt'
}

export type ResourcePatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  duration?: InputMaybe<Scalars['Int']>;
  erpResource?: InputMaybe<ERP_resourceRef>;
  extension?: InputMaybe<Scalars['String']>;
  fileName?: InputMaybe<Scalars['String']>;
  isAsset?: InputMaybe<Scalars['Boolean']>;
  isPublic?: InputMaybe<Scalars['Boolean']>;
  lmsResources?: InputMaybe<Array<LMS_resourceRef>>;
  mimeType?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  publicPath?: InputMaybe<Scalars['String']>;
  ref?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['Int']>;
  tokens?: InputMaybe<Array<InputMaybe<ResourceTokenRef>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ResourceRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  duration?: InputMaybe<Scalars['Int']>;
  erpResource?: InputMaybe<ERP_resourceRef>;
  extension?: InputMaybe<Scalars['String']>;
  fileName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isAsset?: InputMaybe<Scalars['Boolean']>;
  isPublic?: InputMaybe<Scalars['Boolean']>;
  lmsResources?: InputMaybe<Array<LMS_resourceRef>>;
  mimeType?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  publicPath?: InputMaybe<Scalars['String']>;
  ref?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['Int']>;
  tokens?: InputMaybe<Array<InputMaybe<ResourceTokenRef>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ResourceToken = {
  __typename?: 'ResourceToken';
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  expiresAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  isActive: Scalars['Boolean'];
  label?: Maybe<Scalars['String']>;
  org360?: Maybe<Org360>;
  resource: Resource;
  token: Scalars['String'];
  updatedAt: Scalars['DateTime'];
};


export type ResourceTokencreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type ResourceTokenorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type ResourceTokenresourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
};

export type ResourceTokenAggregateResult = {
  __typename?: 'ResourceTokenAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  expiresAtMax?: Maybe<Scalars['DateTime']>;
  expiresAtMin?: Maybe<Scalars['DateTime']>;
  labelMax?: Maybe<Scalars['String']>;
  labelMin?: Maybe<Scalars['String']>;
  tokenMax?: Maybe<Scalars['String']>;
  tokenMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type ResourceTokenFilter = {
  and?: InputMaybe<Array<InputMaybe<ResourceTokenFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ResourceTokenHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ResourceTokenFilter>;
  or?: InputMaybe<Array<InputMaybe<ResourceTokenFilter>>>;
  token?: InputMaybe<StringHashFilter>;
};

export enum ResourceTokenHasFilter {
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  expiresAt = 'expiresAt',
  isActive = 'isActive',
  label = 'label',
  org360 = 'org360',
  resource = 'resource',
  token = 'token',
  updatedAt = 'updatedAt'
}

export type ResourceTokenOrder = {
  asc?: InputMaybe<ResourceTokenOrderable>;
  desc?: InputMaybe<ResourceTokenOrderable>;
  then?: InputMaybe<ResourceTokenOrder>;
};

export enum ResourceTokenOrderable {
  createdAt = 'createdAt',
  expiresAt = 'expiresAt',
  label = 'label',
  token = 'token',
  updatedAt = 'updatedAt'
}

export type ResourceTokenPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  expiresAt?: InputMaybe<Scalars['DateTime']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  label?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  resource?: InputMaybe<ResourceRef>;
  token?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ResourceTokenRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  expiresAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  label?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  resource?: InputMaybe<ResourceRef>;
  token?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SMS = {
  __typename?: 'SMS';
  channel?: Maybe<SMS_channel>;
  createdAt: Scalars['DateTime'];
  createdBy?: Maybe<Account>;
  destinationNumber?: Maybe<Scalars['String']>;
  encoding?: Maybe<SMS_encoding>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  message?: Maybe<Scalars['String']>;
  operator?: Maybe<Scalars['String']>;
  operatorResultCode?: Maybe<Scalars['String']>;
  org360: Org360;
  receivedAt?: Maybe<Scalars['DateTime']>;
  resultCode?: Maybe<Scalars['Int']>;
  sentAt?: Maybe<Scalars['DateTime']>;
  smsId: Scalars['String'];
  source?: Maybe<Scalars['String']>;
  state?: Maybe<SMS_state>;
  type?: Maybe<SMS_type>;
};


export type SMScreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type SMSorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type SMSAggregateResult = {
  __typename?: 'SMSAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  destinationNumberMax?: Maybe<Scalars['String']>;
  destinationNumberMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  messageMax?: Maybe<Scalars['String']>;
  messageMin?: Maybe<Scalars['String']>;
  operatorMax?: Maybe<Scalars['String']>;
  operatorMin?: Maybe<Scalars['String']>;
  operatorResultCodeMax?: Maybe<Scalars['String']>;
  operatorResultCodeMin?: Maybe<Scalars['String']>;
  receivedAtMax?: Maybe<Scalars['DateTime']>;
  receivedAtMin?: Maybe<Scalars['DateTime']>;
  resultCodeAvg?: Maybe<Scalars['Float']>;
  resultCodeMax?: Maybe<Scalars['Int']>;
  resultCodeMin?: Maybe<Scalars['Int']>;
  resultCodeSum?: Maybe<Scalars['Int']>;
  sentAtMax?: Maybe<Scalars['DateTime']>;
  sentAtMin?: Maybe<Scalars['DateTime']>;
  smsIdMax?: Maybe<Scalars['String']>;
  smsIdMin?: Maybe<Scalars['String']>;
  sourceMax?: Maybe<Scalars['String']>;
  sourceMin?: Maybe<Scalars['String']>;
};

export type SMSFilter = {
  and?: InputMaybe<Array<InputMaybe<SMSFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  destinationNumber?: InputMaybe<StringExactFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<SMSHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  message?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<SMSFilter>;
  or?: InputMaybe<Array<InputMaybe<SMSFilter>>>;
  receivedAt?: InputMaybe<DateTimeFilter>;
  sentAt?: InputMaybe<DateTimeFilter>;
  smsId?: InputMaybe<StringExactFilter>;
  source?: InputMaybe<StringExactFilter>;
  state?: InputMaybe<SMS_state_exact>;
  type?: InputMaybe<SMS_type_exact>;
};

export enum SMSHasFilter {
  channel = 'channel',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  destinationNumber = 'destinationNumber',
  encoding = 'encoding',
  guid = 'guid',
  message = 'message',
  operator = 'operator',
  operatorResultCode = 'operatorResultCode',
  org360 = 'org360',
  receivedAt = 'receivedAt',
  resultCode = 'resultCode',
  sentAt = 'sentAt',
  smsId = 'smsId',
  source = 'source',
  state = 'state',
  type = 'type'
}

export type SMSOrder = {
  asc?: InputMaybe<SMSOrderable>;
  desc?: InputMaybe<SMSOrderable>;
  then?: InputMaybe<SMSOrder>;
};

export enum SMSOrderable {
  createdAt = 'createdAt',
  destinationNumber = 'destinationNumber',
  guid = 'guid',
  message = 'message',
  operator = 'operator',
  operatorResultCode = 'operatorResultCode',
  receivedAt = 'receivedAt',
  resultCode = 'resultCode',
  sentAt = 'sentAt',
  smsId = 'smsId',
  source = 'source'
}

export type SMSPatch = {
  channel?: InputMaybe<SMS_channel>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  destinationNumber?: InputMaybe<Scalars['String']>;
  encoding?: InputMaybe<SMS_encoding>;
  guid?: InputMaybe<Scalars['String']>;
  message?: InputMaybe<Scalars['String']>;
  operator?: InputMaybe<Scalars['String']>;
  operatorResultCode?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  receivedAt?: InputMaybe<Scalars['DateTime']>;
  resultCode?: InputMaybe<Scalars['Int']>;
  sentAt?: InputMaybe<Scalars['DateTime']>;
  smsId?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<SMS_state>;
  type?: InputMaybe<SMS_type>;
};

export type SMSRef = {
  channel?: InputMaybe<SMS_channel>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  destinationNumber?: InputMaybe<Scalars['String']>;
  encoding?: InputMaybe<SMS_encoding>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  message?: InputMaybe<Scalars['String']>;
  operator?: InputMaybe<Scalars['String']>;
  operatorResultCode?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  receivedAt?: InputMaybe<Scalars['DateTime']>;
  resultCode?: InputMaybe<Scalars['Int']>;
  sentAt?: InputMaybe<Scalars['DateTime']>;
  smsId?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<SMS_state>;
  type?: InputMaybe<SMS_type>;
};

export enum SMS_channel {
  SMS = 'SMS'
}

export enum SMS_encoding {
  TEXT = 'TEXT'
}

export enum SMS_state {
  DELIVERED = 'DELIVERED',
  PENDING = 'PENDING',
  SENT = 'SENT'
}

export type SMS_state_exact = {
  between?: InputMaybe<SMS_state>;
  eq?: InputMaybe<SMS_state>;
  ge?: InputMaybe<SMS_state>;
  gt?: InputMaybe<SMS_state>;
  in?: InputMaybe<Array<InputMaybe<SMS_state>>>;
  le?: InputMaybe<SMS_state>;
  lt?: InputMaybe<SMS_state>;
};

export enum SMS_type {
  RECEIVED = 'RECEIVED',
  SENT = 'SENT',
  TWOFA = 'TWOFA'
}

export type SMS_type_exact = {
  between?: InputMaybe<SMS_type>;
  eq?: InputMaybe<SMS_type>;
  ge?: InputMaybe<SMS_type>;
  gt?: InputMaybe<SMS_type>;
  in?: InputMaybe<Array<InputMaybe<SMS_type>>>;
  le?: InputMaybe<SMS_type>;
  lt?: InputMaybe<SMS_type>;
};

export type Scheduler = {
  __typename?: 'Scheduler';
  actions: Array<Maybe<Scheduler_action>>;
  actionsAggregate?: Maybe<Scheduler_actionAggregateResult>;
  id?: Maybe<Scalars['ID']>;
  isActive: Scalars['Boolean'];
  org360: Org360;
  tasks: Array<Maybe<Scheduler_task>>;
  tasksAggregate?: Maybe<Scheduler_taskAggregateResult>;
};


export type ScheduleractionsArgs = {
  filter?: InputMaybe<Scheduler_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_actionOrder>;
};


export type ScheduleractionsAggregateArgs = {
  filter?: InputMaybe<Scheduler_actionFilter>;
};


export type Schedulerorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type SchedulertasksArgs = {
  filter?: InputMaybe<Scheduler_taskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_taskOrder>;
};


export type SchedulertasksAggregateArgs = {
  filter?: InputMaybe<Scheduler_taskFilter>;
};

export type SchedulerAggregateResult = {
  __typename?: 'SchedulerAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type SchedulerFilter = {
  and?: InputMaybe<Array<InputMaybe<SchedulerFilter>>>;
  has?: InputMaybe<Array<InputMaybe<SchedulerHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<SchedulerFilter>;
  or?: InputMaybe<Array<InputMaybe<SchedulerFilter>>>;
};

export enum SchedulerHasFilter {
  actions = 'actions',
  isActive = 'isActive',
  org360 = 'org360',
  tasks = 'tasks'
}

export type SchedulerPatch = {
  actions?: InputMaybe<Array<InputMaybe<Scheduler_actionRef>>>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  org360?: InputMaybe<Org360Ref>;
  tasks?: InputMaybe<Array<InputMaybe<Scheduler_taskRef>>>;
};

export type SchedulerRef = {
  actions?: InputMaybe<Array<InputMaybe<Scheduler_actionRef>>>;
  id?: InputMaybe<Scalars['ID']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  org360?: InputMaybe<Org360Ref>;
  tasks?: InputMaybe<Array<InputMaybe<Scheduler_taskRef>>>;
};

export type Scheduler_action = {
  __typename?: 'Scheduler_action';
  external?: Maybe<Scheduler_externalAction>;
  id?: Maybe<Scalars['ID']>;
  index: Scalars['Int'];
  manager?: Maybe<Scheduler_managerAction>;
  payload: Scalars['String'];
  scheduler: Scheduler;
  status: Scheduler_actionStatus;
  task: Scheduler_task;
  type: Scheduler_actionType;
};


export type Scheduler_actionexternalArgs = {
  filter?: InputMaybe<Scheduler_externalActionFilter>;
};


export type Scheduler_actionmanagerArgs = {
  filter?: InputMaybe<Scheduler_managerActionFilter>;
};


export type Scheduler_actionschedulerArgs = {
  filter?: InputMaybe<SchedulerFilter>;
};


export type Scheduler_actiontaskArgs = {
  filter?: InputMaybe<Scheduler_taskFilter>;
};

export type Scheduler_actionAggregateResult = {
  __typename?: 'Scheduler_actionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  indexAvg?: Maybe<Scalars['Float']>;
  indexMax?: Maybe<Scalars['Int']>;
  indexMin?: Maybe<Scalars['Int']>;
  indexSum?: Maybe<Scalars['Int']>;
  payloadMax?: Maybe<Scalars['String']>;
  payloadMin?: Maybe<Scalars['String']>;
};

export enum Scheduler_actionAllowManagers {
  audits = 'audits',
  cms = 'cms',
  crm = 'crm',
  erp = 'erp',
  lms = 'lms',
  org = 'org',
  storage = 'storage',
  user = 'user'
}

export type Scheduler_actionFilter = {
  and?: InputMaybe<Array<InputMaybe<Scheduler_actionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Scheduler_actionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Scheduler_actionFilter>;
  or?: InputMaybe<Array<InputMaybe<Scheduler_actionFilter>>>;
};

export enum Scheduler_actionHasFilter {
  external = 'external',
  index = 'index',
  manager = 'manager',
  payload = 'payload',
  scheduler = 'scheduler',
  status = 'status',
  task = 'task',
  type = 'type'
}

export type Scheduler_actionOrder = {
  asc?: InputMaybe<Scheduler_actionOrderable>;
  desc?: InputMaybe<Scheduler_actionOrderable>;
  then?: InputMaybe<Scheduler_actionOrder>;
};

export enum Scheduler_actionOrderable {
  index = 'index',
  payload = 'payload'
}

export type Scheduler_actionPatch = {
  external?: InputMaybe<Scheduler_externalActionRef>;
  index?: InputMaybe<Scalars['Int']>;
  manager?: InputMaybe<Scheduler_managerActionRef>;
  payload?: InputMaybe<Scalars['String']>;
  scheduler?: InputMaybe<SchedulerRef>;
  status?: InputMaybe<Scheduler_actionStatus>;
  task?: InputMaybe<Scheduler_taskRef>;
  type?: InputMaybe<Scheduler_actionType>;
};

export type Scheduler_actionRef = {
  external?: InputMaybe<Scheduler_externalActionRef>;
  id?: InputMaybe<Scalars['ID']>;
  index?: InputMaybe<Scalars['Int']>;
  manager?: InputMaybe<Scheduler_managerActionRef>;
  payload?: InputMaybe<Scalars['String']>;
  scheduler?: InputMaybe<SchedulerRef>;
  status?: InputMaybe<Scheduler_actionStatus>;
  task?: InputMaybe<Scheduler_taskRef>;
  type?: InputMaybe<Scheduler_actionType>;
};

export enum Scheduler_actionStatus {
  CANCELED = 'CANCELED',
  COMPLETED = 'COMPLETED',
  FAILED = 'FAILED',
  PENDING = 'PENDING',
  RUNNING = 'RUNNING'
}

export enum Scheduler_actionType {
  EXTERNAL = 'EXTERNAL',
  MANAGER = 'MANAGER'
}

export type Scheduler_externalAction = {
  __typename?: 'Scheduler_externalAction';
  headers?: Maybe<Scalars['String']>;
  method: Scalars['String'];
  url: Scalars['String'];
};

export type Scheduler_externalActionAggregateResult = {
  __typename?: 'Scheduler_externalActionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  headersMax?: Maybe<Scalars['String']>;
  headersMin?: Maybe<Scalars['String']>;
  methodMax?: Maybe<Scalars['String']>;
  methodMin?: Maybe<Scalars['String']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
};

export type Scheduler_externalActionFilter = {
  and?: InputMaybe<Array<InputMaybe<Scheduler_externalActionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Scheduler_externalActionHasFilter>>>;
  not?: InputMaybe<Scheduler_externalActionFilter>;
  or?: InputMaybe<Array<InputMaybe<Scheduler_externalActionFilter>>>;
};

export enum Scheduler_externalActionHasFilter {
  headers = 'headers',
  method = 'method',
  url = 'url'
}

export type Scheduler_externalActionOrder = {
  asc?: InputMaybe<Scheduler_externalActionOrderable>;
  desc?: InputMaybe<Scheduler_externalActionOrderable>;
  then?: InputMaybe<Scheduler_externalActionOrder>;
};

export enum Scheduler_externalActionOrderable {
  headers = 'headers',
  method = 'method',
  url = 'url'
}

export type Scheduler_externalActionPatch = {
  headers?: InputMaybe<Scalars['String']>;
  method?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type Scheduler_externalActionRef = {
  headers?: InputMaybe<Scalars['String']>;
  method?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type Scheduler_managerAction = {
  __typename?: 'Scheduler_managerAction';
  fields: Scalars['String'];
  id?: Maybe<Scalars['ID']>;
  manager: Scheduler_actionAllowManagers;
  name?: Maybe<Scalars['String']>;
};

export type Scheduler_managerActionAggregateResult = {
  __typename?: 'Scheduler_managerActionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  fieldsMax?: Maybe<Scalars['String']>;
  fieldsMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Scheduler_managerActionFilter = {
  and?: InputMaybe<Array<InputMaybe<Scheduler_managerActionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Scheduler_managerActionHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  name?: InputMaybe<StringHashFilter>;
  not?: InputMaybe<Scheduler_managerActionFilter>;
  or?: InputMaybe<Array<InputMaybe<Scheduler_managerActionFilter>>>;
};

export enum Scheduler_managerActionHasFilter {
  fields = 'fields',
  manager = 'manager',
  name = 'name'
}

export type Scheduler_managerActionOrder = {
  asc?: InputMaybe<Scheduler_managerActionOrderable>;
  desc?: InputMaybe<Scheduler_managerActionOrderable>;
  then?: InputMaybe<Scheduler_managerActionOrder>;
};

export enum Scheduler_managerActionOrderable {
  fields = 'fields',
  name = 'name'
}

export type Scheduler_managerActionPatch = {
  fields?: InputMaybe<Scalars['String']>;
  manager?: InputMaybe<Scheduler_actionAllowManagers>;
  name?: InputMaybe<Scalars['String']>;
};

export type Scheduler_managerActionRef = {
  fields?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  manager?: InputMaybe<Scheduler_actionAllowManagers>;
  name?: InputMaybe<Scalars['String']>;
};

export type Scheduler_task = {
  __typename?: 'Scheduler_task';
  actions: Array<Maybe<Scheduler_action>>;
  actionsAggregate?: Maybe<Scheduler_actionAggregateResult>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  date: Scalars['DateTime'];
  id?: Maybe<Scalars['ID']>;
  org360: Org360;
  scheduler: Scheduler;
  status: Scheduler_taskStatus;
};


export type Scheduler_taskactionsArgs = {
  filter?: InputMaybe<Scheduler_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_actionOrder>;
};


export type Scheduler_taskactionsAggregateArgs = {
  filter?: InputMaybe<Scheduler_actionFilter>;
};


export type Scheduler_taskcreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Scheduler_taskorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type Scheduler_taskschedulerArgs = {
  filter?: InputMaybe<SchedulerFilter>;
};

export type Scheduler_taskAggregateResult = {
  __typename?: 'Scheduler_taskAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  dateMax?: Maybe<Scalars['DateTime']>;
  dateMin?: Maybe<Scalars['DateTime']>;
};

export type Scheduler_taskFilter = {
  and?: InputMaybe<Array<InputMaybe<Scheduler_taskFilter>>>;
  date?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<Scheduler_taskHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Scheduler_taskFilter>;
  or?: InputMaybe<Array<InputMaybe<Scheduler_taskFilter>>>;
  status?: InputMaybe<Scheduler_taskStatus_hash>;
};

export enum Scheduler_taskHasFilter {
  actions = 'actions',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  date = 'date',
  org360 = 'org360',
  scheduler = 'scheduler',
  status = 'status'
}

export type Scheduler_taskOrder = {
  asc?: InputMaybe<Scheduler_taskOrderable>;
  desc?: InputMaybe<Scheduler_taskOrderable>;
  then?: InputMaybe<Scheduler_taskOrder>;
};

export enum Scheduler_taskOrderable {
  createdAt = 'createdAt',
  date = 'date'
}

export type Scheduler_taskPatch = {
  actions?: InputMaybe<Array<InputMaybe<Scheduler_actionRef>>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  date?: InputMaybe<Scalars['DateTime']>;
  org360?: InputMaybe<Org360Ref>;
  scheduler?: InputMaybe<SchedulerRef>;
  status?: InputMaybe<Scheduler_taskStatus>;
};

export type Scheduler_taskRef = {
  actions?: InputMaybe<Array<InputMaybe<Scheduler_actionRef>>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  date?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  scheduler?: InputMaybe<SchedulerRef>;
  status?: InputMaybe<Scheduler_taskStatus>;
};

export enum Scheduler_taskStatus {
  CANCELED = 'CANCELED',
  COMPLETED = 'COMPLETED',
  FAILED = 'FAILED',
  PENDING = 'PENDING',
  RUNNING = 'RUNNING'
}

export type Scheduler_taskStatus_hash = {
  eq?: InputMaybe<Scheduler_taskStatus>;
  in?: InputMaybe<Array<InputMaybe<Scheduler_taskStatus>>>;
};

export type SearchIndex_contact = {
  __typename?: 'SearchIndex_contact';
  accountId?: Maybe<Scalars['String']>;
  comercialName: Scalars['String'];
  createdAt: Scalars['DateTime'];
  crmAreaIds: Array<Scalars['String']>;
  crmAssignedToIds: Array<Scalars['String']>;
  crmContactId: Scalars['String'];
  crmCustomerStatus?: Maybe<Scalars['String']>;
  crmCustomerType?: Maybe<Scalars['String']>;
  crmIsEmailBounced: Scalars['Boolean'];
  crmIsUnsubscribe: Scalars['Boolean'];
  crmRoles: Array<Scalars['String']>;
  crmSourceIds: Array<Scalars['String']>;
  crmSupplierStatus?: Maybe<Scalars['String']>;
  crmSupplierType?: Maybe<Scalars['String']>;
  emails: Array<Scalars['String']>;
  erpContactId: Scalars['String'];
  id: Scalars['String'];
  lastUpdateAt: Scalars['DateTime'];
  org360Id: Scalars['String'];
  phones: Array<Scalars['String']>;
};

export type SearchIndex_contactAggregateResult = {
  __typename?: 'SearchIndex_contactAggregateResult';
  accountIdMax?: Maybe<Scalars['String']>;
  accountIdMin?: Maybe<Scalars['String']>;
  comercialNameMax?: Maybe<Scalars['String']>;
  comercialNameMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  crmContactIdMax?: Maybe<Scalars['String']>;
  crmContactIdMin?: Maybe<Scalars['String']>;
  crmCustomerStatusMax?: Maybe<Scalars['String']>;
  crmCustomerStatusMin?: Maybe<Scalars['String']>;
  crmCustomerTypeMax?: Maybe<Scalars['String']>;
  crmCustomerTypeMin?: Maybe<Scalars['String']>;
  crmSupplierStatusMax?: Maybe<Scalars['String']>;
  crmSupplierStatusMin?: Maybe<Scalars['String']>;
  crmSupplierTypeMax?: Maybe<Scalars['String']>;
  crmSupplierTypeMin?: Maybe<Scalars['String']>;
  erpContactIdMax?: Maybe<Scalars['String']>;
  erpContactIdMin?: Maybe<Scalars['String']>;
  idMax?: Maybe<Scalars['String']>;
  idMin?: Maybe<Scalars['String']>;
  lastUpdateAtMax?: Maybe<Scalars['DateTime']>;
  lastUpdateAtMin?: Maybe<Scalars['DateTime']>;
  org360IdMax?: Maybe<Scalars['String']>;
  org360IdMin?: Maybe<Scalars['String']>;
};

export type SearchIndex_contactFilter = {
  accountId?: InputMaybe<StringTermFilter>;
  and?: InputMaybe<Array<InputMaybe<SearchIndex_contactFilter>>>;
  comercialName?: InputMaybe<StringRegExpFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  crmAreaIds?: InputMaybe<StringTermFilter>;
  crmAssignedToIds?: InputMaybe<StringTermFilter>;
  crmContactId?: InputMaybe<StringTermFilter>;
  crmCustomerStatus?: InputMaybe<StringTermFilter>;
  crmCustomerType?: InputMaybe<StringTermFilter>;
  crmIsEmailBounced?: InputMaybe<Scalars['Boolean']>;
  crmIsUnsubscribe?: InputMaybe<Scalars['Boolean']>;
  crmRoles?: InputMaybe<StringTermFilter>;
  crmSourceIds?: InputMaybe<StringTermFilter>;
  crmSupplierStatus?: InputMaybe<StringTermFilter>;
  crmSupplierType?: InputMaybe<StringTermFilter>;
  emails?: InputMaybe<StringRegExpFilter>;
  erpContactId?: InputMaybe<StringTermFilter>;
  has?: InputMaybe<Array<InputMaybe<SearchIndex_contactHasFilter>>>;
  id?: InputMaybe<StringHashFilter>;
  lastUpdateAt?: InputMaybe<DateTimeFilter>;
  not?: InputMaybe<SearchIndex_contactFilter>;
  or?: InputMaybe<Array<InputMaybe<SearchIndex_contactFilter>>>;
  org360Id?: InputMaybe<StringTermFilter>;
  phones?: InputMaybe<StringRegExpFilter>;
};

export enum SearchIndex_contactHasFilter {
  accountId = 'accountId',
  comercialName = 'comercialName',
  createdAt = 'createdAt',
  crmAreaIds = 'crmAreaIds',
  crmAssignedToIds = 'crmAssignedToIds',
  crmContactId = 'crmContactId',
  crmCustomerStatus = 'crmCustomerStatus',
  crmCustomerType = 'crmCustomerType',
  crmIsEmailBounced = 'crmIsEmailBounced',
  crmIsUnsubscribe = 'crmIsUnsubscribe',
  crmRoles = 'crmRoles',
  crmSourceIds = 'crmSourceIds',
  crmSupplierStatus = 'crmSupplierStatus',
  crmSupplierType = 'crmSupplierType',
  emails = 'emails',
  erpContactId = 'erpContactId',
  id = 'id',
  lastUpdateAt = 'lastUpdateAt',
  org360Id = 'org360Id',
  phones = 'phones'
}

export type SearchIndex_contactOrder = {
  asc?: InputMaybe<SearchIndex_contactOrderable>;
  desc?: InputMaybe<SearchIndex_contactOrderable>;
  then?: InputMaybe<SearchIndex_contactOrder>;
};

export enum SearchIndex_contactOrderable {
  accountId = 'accountId',
  comercialName = 'comercialName',
  createdAt = 'createdAt',
  crmContactId = 'crmContactId',
  crmCustomerStatus = 'crmCustomerStatus',
  crmCustomerType = 'crmCustomerType',
  crmSupplierStatus = 'crmSupplierStatus',
  crmSupplierType = 'crmSupplierType',
  erpContactId = 'erpContactId',
  id = 'id',
  lastUpdateAt = 'lastUpdateAt',
  org360Id = 'org360Id'
}

export type SearchIndex_contactPatch = {
  accountId?: InputMaybe<Scalars['String']>;
  comercialName?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crmAreaIds?: InputMaybe<Array<Scalars['String']>>;
  crmAssignedToIds?: InputMaybe<Array<Scalars['String']>>;
  crmContactId?: InputMaybe<Scalars['String']>;
  crmCustomerStatus?: InputMaybe<Scalars['String']>;
  crmCustomerType?: InputMaybe<Scalars['String']>;
  crmIsEmailBounced?: InputMaybe<Scalars['Boolean']>;
  crmIsUnsubscribe?: InputMaybe<Scalars['Boolean']>;
  crmRoles?: InputMaybe<Array<Scalars['String']>>;
  crmSourceIds?: InputMaybe<Array<Scalars['String']>>;
  crmSupplierStatus?: InputMaybe<Scalars['String']>;
  crmSupplierType?: InputMaybe<Scalars['String']>;
  emails?: InputMaybe<Array<Scalars['String']>>;
  erpContactId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  lastUpdateAt?: InputMaybe<Scalars['DateTime']>;
  org360Id?: InputMaybe<Scalars['String']>;
  phones?: InputMaybe<Array<Scalars['String']>>;
};

export type SearchIndex_contactRef = {
  accountId?: InputMaybe<Scalars['String']>;
  comercialName?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crmAreaIds?: InputMaybe<Array<Scalars['String']>>;
  crmAssignedToIds?: InputMaybe<Array<Scalars['String']>>;
  crmContactId?: InputMaybe<Scalars['String']>;
  crmCustomerStatus?: InputMaybe<Scalars['String']>;
  crmCustomerType?: InputMaybe<Scalars['String']>;
  crmIsEmailBounced?: InputMaybe<Scalars['Boolean']>;
  crmIsUnsubscribe?: InputMaybe<Scalars['Boolean']>;
  crmRoles?: InputMaybe<Array<Scalars['String']>>;
  crmSourceIds?: InputMaybe<Array<Scalars['String']>>;
  crmSupplierStatus?: InputMaybe<Scalars['String']>;
  crmSupplierType?: InputMaybe<Scalars['String']>;
  emails?: InputMaybe<Array<Scalars['String']>>;
  erpContactId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  lastUpdateAt?: InputMaybe<Scalars['DateTime']>;
  org360Id?: InputMaybe<Scalars['String']>;
  phones?: InputMaybe<Array<Scalars['String']>>;
};

export type ServiceAccount = {
  __typename?: 'ServiceAccount';
  createdAt: Scalars['DateTime'];
  id: Scalars['ID'];
  name: Scalars['String'];
  org360: Org360;
};


export type ServiceAccountorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type ServiceAccountAggregateResult = {
  __typename?: 'ServiceAccountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type ServiceAccountFilter = {
  and?: InputMaybe<Array<InputMaybe<ServiceAccountFilter>>>;
  has?: InputMaybe<Array<InputMaybe<ServiceAccountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ServiceAccountFilter>;
  or?: InputMaybe<Array<InputMaybe<ServiceAccountFilter>>>;
};

export enum ServiceAccountHasFilter {
  createdAt = 'createdAt',
  name = 'name',
  org360 = 'org360'
}

export type ServiceAccountOrder = {
  asc?: InputMaybe<ServiceAccountOrderable>;
  desc?: InputMaybe<ServiceAccountOrderable>;
  then?: InputMaybe<ServiceAccountOrder>;
};

export enum ServiceAccountOrderable {
  createdAt = 'createdAt',
  name = 'name'
}

export type ServiceAccountPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
};

export type ServiceAccountRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
};

export type ShortUrl = {
  __typename?: 'ShortUrl';
  createdAt: Scalars['DateTime'];
  description?: Maybe<Scalars['String']>;
  domain: ShortUrl_domain;
  guid: Scalars['String'];
  id: Scalars['ID'];
  qrCode?: Maybe<Scalars['String']>;
  qrCodeUrl?: Maybe<Scalars['String']>;
  redirectUrl: Scalars['String'];
  status: ShortUrl_status;
  url: Scalars['String'];
  utmCampaign?: Maybe<Scalars['String']>;
  utmContent?: Maybe<Scalars['String']>;
  utmMedium?: Maybe<Scalars['String']>;
  utmSource?: Maybe<Scalars['String']>;
  utmTerm?: Maybe<Scalars['String']>;
};


export type ShortUrldomainArgs = {
  filter?: InputMaybe<ShortUrl_domainFilter>;
};

export type ShortUrlAggregateResult = {
  __typename?: 'ShortUrlAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  qrCodeMax?: Maybe<Scalars['String']>;
  qrCodeMin?: Maybe<Scalars['String']>;
  qrCodeUrlMax?: Maybe<Scalars['String']>;
  qrCodeUrlMin?: Maybe<Scalars['String']>;
  redirectUrlMax?: Maybe<Scalars['String']>;
  redirectUrlMin?: Maybe<Scalars['String']>;
  urlMax?: Maybe<Scalars['String']>;
  urlMin?: Maybe<Scalars['String']>;
  utmCampaignMax?: Maybe<Scalars['String']>;
  utmCampaignMin?: Maybe<Scalars['String']>;
  utmContentMax?: Maybe<Scalars['String']>;
  utmContentMin?: Maybe<Scalars['String']>;
  utmMediumMax?: Maybe<Scalars['String']>;
  utmMediumMin?: Maybe<Scalars['String']>;
  utmSourceMax?: Maybe<Scalars['String']>;
  utmSourceMin?: Maybe<Scalars['String']>;
  utmTermMax?: Maybe<Scalars['String']>;
  utmTermMin?: Maybe<Scalars['String']>;
};

export type ShortUrlFilter = {
  and?: InputMaybe<Array<InputMaybe<ShortUrlFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<ShortUrlHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ShortUrlFilter>;
  or?: InputMaybe<Array<InputMaybe<ShortUrlFilter>>>;
  redirectUrl?: InputMaybe<StringRegExpFilter>;
  status?: InputMaybe<ShortUrl_status_hash>;
  url?: InputMaybe<StringHashFilter>;
};

export enum ShortUrlHasFilter {
  createdAt = 'createdAt',
  description = 'description',
  domain = 'domain',
  guid = 'guid',
  qrCode = 'qrCode',
  qrCodeUrl = 'qrCodeUrl',
  redirectUrl = 'redirectUrl',
  status = 'status',
  url = 'url',
  utmCampaign = 'utmCampaign',
  utmContent = 'utmContent',
  utmMedium = 'utmMedium',
  utmSource = 'utmSource',
  utmTerm = 'utmTerm'
}

export type ShortUrlOrder = {
  asc?: InputMaybe<ShortUrlOrderable>;
  desc?: InputMaybe<ShortUrlOrderable>;
  then?: InputMaybe<ShortUrlOrder>;
};

export enum ShortUrlOrderable {
  createdAt = 'createdAt',
  description = 'description',
  guid = 'guid',
  qrCode = 'qrCode',
  qrCodeUrl = 'qrCodeUrl',
  redirectUrl = 'redirectUrl',
  url = 'url',
  utmCampaign = 'utmCampaign',
  utmContent = 'utmContent',
  utmMedium = 'utmMedium',
  utmSource = 'utmSource',
  utmTerm = 'utmTerm'
}

export type ShortUrlPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  domain?: InputMaybe<ShortUrl_domainRef>;
  guid?: InputMaybe<Scalars['String']>;
  qrCode?: InputMaybe<Scalars['String']>;
  qrCodeUrl?: InputMaybe<Scalars['String']>;
  redirectUrl?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<ShortUrl_status>;
  url?: InputMaybe<Scalars['String']>;
  utmCampaign?: InputMaybe<Scalars['String']>;
  utmContent?: InputMaybe<Scalars['String']>;
  utmMedium?: InputMaybe<Scalars['String']>;
  utmSource?: InputMaybe<Scalars['String']>;
  utmTerm?: InputMaybe<Scalars['String']>;
};

export type ShortUrlRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  domain?: InputMaybe<ShortUrl_domainRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  qrCode?: InputMaybe<Scalars['String']>;
  qrCodeUrl?: InputMaybe<Scalars['String']>;
  redirectUrl?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<ShortUrl_status>;
  url?: InputMaybe<Scalars['String']>;
  utmCampaign?: InputMaybe<Scalars['String']>;
  utmContent?: InputMaybe<Scalars['String']>;
  utmMedium?: InputMaybe<Scalars['String']>;
  utmSource?: InputMaybe<Scalars['String']>;
  utmTerm?: InputMaybe<Scalars['String']>;
};

export type ShortUrl_domain = {
  __typename?: 'ShortUrl_domain';
  createdAt: Scalars['DateTime'];
  domain: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  shortUrls: Array<ShortUrl>;
  shortUrlsAggregate?: Maybe<ShortUrlAggregateResult>;
  status: ShortUrl_status;
};


export type ShortUrl_domainshortUrlsArgs = {
  filter?: InputMaybe<ShortUrlFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ShortUrlOrder>;
};


export type ShortUrl_domainshortUrlsAggregateArgs = {
  filter?: InputMaybe<ShortUrlFilter>;
};

export type ShortUrl_domainAggregateResult = {
  __typename?: 'ShortUrl_domainAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  domainMax?: Maybe<Scalars['String']>;
  domainMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type ShortUrl_domainFilter = {
  and?: InputMaybe<Array<InputMaybe<ShortUrl_domainFilter>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  domain?: InputMaybe<StringHashFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<ShortUrl_domainHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<ShortUrl_domainFilter>;
  or?: InputMaybe<Array<InputMaybe<ShortUrl_domainFilter>>>;
  status?: InputMaybe<ShortUrl_status_hash>;
};

export enum ShortUrl_domainHasFilter {
  createdAt = 'createdAt',
  domain = 'domain',
  guid = 'guid',
  shortUrls = 'shortUrls',
  status = 'status'
}

export type ShortUrl_domainOrder = {
  asc?: InputMaybe<ShortUrl_domainOrderable>;
  desc?: InputMaybe<ShortUrl_domainOrderable>;
  then?: InputMaybe<ShortUrl_domainOrder>;
};

export enum ShortUrl_domainOrderable {
  createdAt = 'createdAt',
  domain = 'domain',
  guid = 'guid'
}

export type ShortUrl_domainPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  domain?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  shortUrls?: InputMaybe<Array<ShortUrlRef>>;
  status?: InputMaybe<ShortUrl_status>;
};

export type ShortUrl_domainRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  domain?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  shortUrls?: InputMaybe<Array<ShortUrlRef>>;
  status?: InputMaybe<ShortUrl_status>;
};

export enum ShortUrl_status {
  ACTIVE = 'ACTIVE',
  DISABLED = 'DISABLED'
}

export type ShortUrl_status_hash = {
  eq?: InputMaybe<ShortUrl_status>;
  in?: InputMaybe<Array<InputMaybe<ShortUrl_status>>>;
};

export type Storage = {
  __typename?: 'Storage';
  createdAt: Scalars['DateTime'];
  files?: Maybe<Array<Maybe<Storage_file>>>;
  filesAggregate?: Maybe<Storage_fileAggregateResult>;
  filesByDemands?: Maybe<Array<Maybe<Storage_fileByDemand>>>;
  filesByDemandsAggregate?: Maybe<Storage_fileByDemandAggregateResult>;
  id: Scalars['ID'];
  org360?: Maybe<Org360>;
  publicPath: Scalars['String'];
  updatedAt: Scalars['DateTime'];
};


export type StoragefilesArgs = {
  filter?: InputMaybe<Storage_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOrder>;
};


export type StoragefilesAggregateArgs = {
  filter?: InputMaybe<Storage_fileFilter>;
};


export type StoragefilesByDemandsArgs = {
  filter?: InputMaybe<Storage_fileByDemandFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileByDemandOrder>;
};


export type StoragefilesByDemandsAggregateArgs = {
  filter?: InputMaybe<Storage_fileByDemandFilter>;
};


export type Storageorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};

export type StorageAggregateResult = {
  __typename?: 'StorageAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  publicPathMax?: Maybe<Scalars['String']>;
  publicPathMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
};

export type StorageFilter = {
  and?: InputMaybe<Array<InputMaybe<StorageFilter>>>;
  has?: InputMaybe<Array<InputMaybe<StorageHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<StorageFilter>;
  or?: InputMaybe<Array<InputMaybe<StorageFilter>>>;
  publicPath?: InputMaybe<StringExactFilter>;
};

export enum StorageHasFilter {
  createdAt = 'createdAt',
  files = 'files',
  filesByDemands = 'filesByDemands',
  org360 = 'org360',
  publicPath = 'publicPath',
  updatedAt = 'updatedAt'
}

export type StorageOrder = {
  asc?: InputMaybe<StorageOrderable>;
  desc?: InputMaybe<StorageOrderable>;
  then?: InputMaybe<StorageOrder>;
};

export enum StorageOrderable {
  createdAt = 'createdAt',
  publicPath = 'publicPath',
  updatedAt = 'updatedAt'
}

export type StoragePatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  files?: InputMaybe<Array<InputMaybe<Storage_fileRef>>>;
  filesByDemands?: InputMaybe<Array<InputMaybe<Storage_fileByDemandRef>>>;
  org360?: InputMaybe<Org360Ref>;
  publicPath?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type StorageRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  files?: InputMaybe<Array<InputMaybe<Storage_fileRef>>>;
  filesByDemands?: InputMaybe<Array<InputMaybe<Storage_fileByDemandRef>>>;
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  publicPath?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type Storage_file = {
  __typename?: 'Storage_file';
  createFileToken?: Maybe<Storage_fileOperationToken>;
  createdAt: Scalars['DateTime'];
  createdBy: Account;
  description?: Maybe<Scalars['String']>;
  extension: Scalars['String'];
  filePath: Scalars['String'];
  folderPath: Scalars['String'];
  id: Scalars['ID'];
  isAsset: Scalars['Boolean'];
  isPublic: Scalars['Boolean'];
  mimeType?: Maybe<Scalars['String']>;
  readFileTokens?: Maybe<Array<Maybe<Storage_fileOperationToken>>>;
  readFileTokensAggregate?: Maybe<Storage_fileOperationTokenAggregateResult>;
  ref: Scalars['String'];
  size?: Maybe<Scalars['Float']>;
  storage: Storage;
};


export type Storage_filecreateFileTokenArgs = {
  filter?: InputMaybe<Storage_fileOperationTokenFilter>;
};


export type Storage_filecreatedByArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Storage_filereadFileTokensArgs = {
  filter?: InputMaybe<Storage_fileOperationTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOperationTokenOrder>;
};


export type Storage_filereadFileTokensAggregateArgs = {
  filter?: InputMaybe<Storage_fileOperationTokenFilter>;
};


export type Storage_filestorageArgs = {
  filter?: InputMaybe<StorageFilter>;
};

export type Storage_fileAggregateResult = {
  __typename?: 'Storage_fileAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  descriptionMax?: Maybe<Scalars['String']>;
  descriptionMin?: Maybe<Scalars['String']>;
  extensionMax?: Maybe<Scalars['String']>;
  extensionMin?: Maybe<Scalars['String']>;
  filePathMax?: Maybe<Scalars['String']>;
  filePathMin?: Maybe<Scalars['String']>;
  folderPathMax?: Maybe<Scalars['String']>;
  folderPathMin?: Maybe<Scalars['String']>;
  mimeTypeMax?: Maybe<Scalars['String']>;
  mimeTypeMin?: Maybe<Scalars['String']>;
  refMax?: Maybe<Scalars['String']>;
  refMin?: Maybe<Scalars['String']>;
  sizeAvg?: Maybe<Scalars['Float']>;
  sizeMax?: Maybe<Scalars['Float']>;
  sizeMin?: Maybe<Scalars['Float']>;
  sizeSum?: Maybe<Scalars['Float']>;
};

export type Storage_fileByDemand = {
  __typename?: 'Storage_fileByDemand';
  createdAt: Scalars['DateTime'];
  expiresAt: Scalars['DateTime'];
  fileName: Scalars['String'];
  guid: Scalars['String'];
  id: Scalars['ID'];
  mimeType: Scalars['String'];
  status: Storage_fileByDemandStatus;
  storage: Storage;
  subscribers: Array<Account>;
  subscribersAggregate?: Maybe<AccountAggregateResult>;
};


export type Storage_fileByDemandstorageArgs = {
  filter?: InputMaybe<StorageFilter>;
};


export type Storage_fileByDemandsubscribersArgs = {
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AccountOrder>;
};


export type Storage_fileByDemandsubscribersAggregateArgs = {
  filter?: InputMaybe<AccountFilter>;
};

export type Storage_fileByDemandAggregateResult = {
  __typename?: 'Storage_fileByDemandAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  expiresAtMax?: Maybe<Scalars['DateTime']>;
  expiresAtMin?: Maybe<Scalars['DateTime']>;
  fileNameMax?: Maybe<Scalars['String']>;
  fileNameMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  mimeTypeMax?: Maybe<Scalars['String']>;
  mimeTypeMin?: Maybe<Scalars['String']>;
};

export type Storage_fileByDemandFilter = {
  and?: InputMaybe<Array<InputMaybe<Storage_fileByDemandFilter>>>;
  expiresAt?: InputMaybe<DateTimeFilter>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<Storage_fileByDemandHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Storage_fileByDemandFilter>;
  or?: InputMaybe<Array<InputMaybe<Storage_fileByDemandFilter>>>;
  status?: InputMaybe<Storage_fileByDemandStatus_exact>;
};

export enum Storage_fileByDemandHasFilter {
  createdAt = 'createdAt',
  expiresAt = 'expiresAt',
  fileName = 'fileName',
  guid = 'guid',
  mimeType = 'mimeType',
  status = 'status',
  storage = 'storage',
  subscribers = 'subscribers'
}

export type Storage_fileByDemandOrder = {
  asc?: InputMaybe<Storage_fileByDemandOrderable>;
  desc?: InputMaybe<Storage_fileByDemandOrderable>;
  then?: InputMaybe<Storage_fileByDemandOrder>;
};

export enum Storage_fileByDemandOrderable {
  createdAt = 'createdAt',
  expiresAt = 'expiresAt',
  fileName = 'fileName',
  guid = 'guid',
  mimeType = 'mimeType'
}

export type Storage_fileByDemandPatch = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expiresAt?: InputMaybe<Scalars['DateTime']>;
  fileName?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  mimeType?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Storage_fileByDemandStatus>;
  storage?: InputMaybe<StorageRef>;
  subscribers?: InputMaybe<Array<AccountRef>>;
};

export type Storage_fileByDemandRef = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expiresAt?: InputMaybe<Scalars['DateTime']>;
  fileName?: InputMaybe<Scalars['String']>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  mimeType?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Storage_fileByDemandStatus>;
  storage?: InputMaybe<StorageRef>;
  subscribers?: InputMaybe<Array<AccountRef>>;
};

export enum Storage_fileByDemandStatus {
  ERROR = 'ERROR',
  EXPIRED = 'EXPIRED',
  PENDING = 'PENDING',
  READY = 'READY'
}

export type Storage_fileByDemandStatus_exact = {
  between?: InputMaybe<Storage_fileByDemandStatus>;
  eq?: InputMaybe<Storage_fileByDemandStatus>;
  ge?: InputMaybe<Storage_fileByDemandStatus>;
  gt?: InputMaybe<Storage_fileByDemandStatus>;
  in?: InputMaybe<Array<InputMaybe<Storage_fileByDemandStatus>>>;
  le?: InputMaybe<Storage_fileByDemandStatus>;
  lt?: InputMaybe<Storage_fileByDemandStatus>;
};

export type Storage_fileFilter = {
  and?: InputMaybe<Array<InputMaybe<Storage_fileFilter>>>;
  filePath?: InputMaybe<StringHashFilter>;
  folderPath?: InputMaybe<StringTermFilter>;
  has?: InputMaybe<Array<InputMaybe<Storage_fileHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  isAsset?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<Storage_fileFilter>;
  or?: InputMaybe<Array<InputMaybe<Storage_fileFilter>>>;
  ref?: InputMaybe<StringHashFilter>;
};

export enum Storage_fileHasFilter {
  createFileToken = 'createFileToken',
  createdAt = 'createdAt',
  createdBy = 'createdBy',
  description = 'description',
  extension = 'extension',
  filePath = 'filePath',
  folderPath = 'folderPath',
  isAsset = 'isAsset',
  isPublic = 'isPublic',
  mimeType = 'mimeType',
  readFileTokens = 'readFileTokens',
  ref = 'ref',
  size = 'size',
  storage = 'storage'
}

export type Storage_fileOperationToken = {
  __typename?: 'Storage_fileOperationToken';
  account: Account;
  chunkSize?: Maybe<Scalars['Int']>;
  createdAt: Scalars['DateTime'];
  endAt?: Maybe<Scalars['DateTime']>;
  expiresAt: Scalars['DateTime'];
  file?: Maybe<Storage_file>;
  files?: Maybe<Array<Maybe<Storage_file>>>;
  filesAggregate?: Maybe<Storage_fileAggregateResult>;
  startAt?: Maybe<Scalars['DateTime']>;
  storage: Storage;
  token: Scalars['String'];
  type: Storage_fileOperationTokenType;
};


export type Storage_fileOperationTokenaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Storage_fileOperationTokenfileArgs = {
  filter?: InputMaybe<Storage_fileFilter>;
};


export type Storage_fileOperationTokenfilesArgs = {
  filter?: InputMaybe<Storage_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOrder>;
};


export type Storage_fileOperationTokenfilesAggregateArgs = {
  filter?: InputMaybe<Storage_fileFilter>;
};


export type Storage_fileOperationTokenstorageArgs = {
  filter?: InputMaybe<StorageFilter>;
};

export type Storage_fileOperationTokenAggregateResult = {
  __typename?: 'Storage_fileOperationTokenAggregateResult';
  chunkSizeAvg?: Maybe<Scalars['Float']>;
  chunkSizeMax?: Maybe<Scalars['Int']>;
  chunkSizeMin?: Maybe<Scalars['Int']>;
  chunkSizeSum?: Maybe<Scalars['Int']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  endAtMax?: Maybe<Scalars['DateTime']>;
  endAtMin?: Maybe<Scalars['DateTime']>;
  expiresAtMax?: Maybe<Scalars['DateTime']>;
  expiresAtMin?: Maybe<Scalars['DateTime']>;
  startAtMax?: Maybe<Scalars['DateTime']>;
  startAtMin?: Maybe<Scalars['DateTime']>;
  tokenMax?: Maybe<Scalars['String']>;
  tokenMin?: Maybe<Scalars['String']>;
};

export type Storage_fileOperationTokenFilter = {
  and?: InputMaybe<Array<InputMaybe<Storage_fileOperationTokenFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Storage_fileOperationTokenHasFilter>>>;
  not?: InputMaybe<Storage_fileOperationTokenFilter>;
  or?: InputMaybe<Array<InputMaybe<Storage_fileOperationTokenFilter>>>;
  token?: InputMaybe<StringHashFilter>;
  type?: InputMaybe<Storage_fileOperationTokenType_exact>;
};

export enum Storage_fileOperationTokenHasFilter {
  account = 'account',
  chunkSize = 'chunkSize',
  createdAt = 'createdAt',
  endAt = 'endAt',
  expiresAt = 'expiresAt',
  file = 'file',
  files = 'files',
  startAt = 'startAt',
  storage = 'storage',
  token = 'token',
  type = 'type'
}

export type Storage_fileOperationTokenOrder = {
  asc?: InputMaybe<Storage_fileOperationTokenOrderable>;
  desc?: InputMaybe<Storage_fileOperationTokenOrderable>;
  then?: InputMaybe<Storage_fileOperationTokenOrder>;
};

export enum Storage_fileOperationTokenOrderable {
  chunkSize = 'chunkSize',
  createdAt = 'createdAt',
  endAt = 'endAt',
  expiresAt = 'expiresAt',
  startAt = 'startAt',
  token = 'token'
}

export type Storage_fileOperationTokenPatch = {
  account?: InputMaybe<AccountRef>;
  chunkSize?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  expiresAt?: InputMaybe<Scalars['DateTime']>;
  file?: InputMaybe<Storage_fileRef>;
  files?: InputMaybe<Array<InputMaybe<Storage_fileRef>>>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  storage?: InputMaybe<StorageRef>;
  token?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Storage_fileOperationTokenType>;
};

export type Storage_fileOperationTokenRef = {
  account?: InputMaybe<AccountRef>;
  chunkSize?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  endAt?: InputMaybe<Scalars['DateTime']>;
  expiresAt?: InputMaybe<Scalars['DateTime']>;
  file?: InputMaybe<Storage_fileRef>;
  files?: InputMaybe<Array<InputMaybe<Storage_fileRef>>>;
  startAt?: InputMaybe<Scalars['DateTime']>;
  storage?: InputMaybe<StorageRef>;
  token?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Storage_fileOperationTokenType>;
};

export enum Storage_fileOperationTokenType {
  CREATE = 'CREATE',
  DELETE = 'DELETE',
  READ = 'READ',
  UPDATE = 'UPDATE'
}

export type Storage_fileOperationTokenType_exact = {
  between?: InputMaybe<Storage_fileOperationTokenType>;
  eq?: InputMaybe<Storage_fileOperationTokenType>;
  ge?: InputMaybe<Storage_fileOperationTokenType>;
  gt?: InputMaybe<Storage_fileOperationTokenType>;
  in?: InputMaybe<Array<InputMaybe<Storage_fileOperationTokenType>>>;
  le?: InputMaybe<Storage_fileOperationTokenType>;
  lt?: InputMaybe<Storage_fileOperationTokenType>;
};

export type Storage_fileOrder = {
  asc?: InputMaybe<Storage_fileOrderable>;
  desc?: InputMaybe<Storage_fileOrderable>;
  then?: InputMaybe<Storage_fileOrder>;
};

export enum Storage_fileOrderable {
  createdAt = 'createdAt',
  description = 'description',
  extension = 'extension',
  filePath = 'filePath',
  folderPath = 'folderPath',
  mimeType = 'mimeType',
  ref = 'ref',
  size = 'size'
}

export type Storage_filePatch = {
  createFileToken?: InputMaybe<Storage_fileOperationTokenRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  description?: InputMaybe<Scalars['String']>;
  extension?: InputMaybe<Scalars['String']>;
  filePath?: InputMaybe<Scalars['String']>;
  folderPath?: InputMaybe<Scalars['String']>;
  isAsset?: InputMaybe<Scalars['Boolean']>;
  isPublic?: InputMaybe<Scalars['Boolean']>;
  mimeType?: InputMaybe<Scalars['String']>;
  readFileTokens?: InputMaybe<Array<InputMaybe<Storage_fileOperationTokenRef>>>;
  ref?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['Float']>;
  storage?: InputMaybe<StorageRef>;
};

export type Storage_fileRef = {
  createFileToken?: InputMaybe<Storage_fileOperationTokenRef>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<AccountRef>;
  description?: InputMaybe<Scalars['String']>;
  extension?: InputMaybe<Scalars['String']>;
  filePath?: InputMaybe<Scalars['String']>;
  folderPath?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isAsset?: InputMaybe<Scalars['Boolean']>;
  isPublic?: InputMaybe<Scalars['Boolean']>;
  mimeType?: InputMaybe<Scalars['String']>;
  readFileTokens?: InputMaybe<Array<InputMaybe<Storage_fileOperationTokenRef>>>;
  ref?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['Float']>;
  storage?: InputMaybe<StorageRef>;
};

export type StringExactFilter = {
  between?: InputMaybe<StringRange>;
  eq?: InputMaybe<Scalars['String']>;
  ge?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  le?: InputMaybe<Scalars['String']>;
  lt?: InputMaybe<Scalars['String']>;
};

export type StringExactFilter_StringRegExpFilter = {
  between?: InputMaybe<StringRange>;
  eq?: InputMaybe<Scalars['String']>;
  ge?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  le?: InputMaybe<Scalars['String']>;
  lt?: InputMaybe<Scalars['String']>;
  regexp?: InputMaybe<Scalars['String']>;
};

export type StringFullTextFilter = {
  alloftext?: InputMaybe<Scalars['String']>;
  anyoftext?: InputMaybe<Scalars['String']>;
};

export type StringHashFilter = {
  eq?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type StringHashFilter_StringRegExpFilter = {
  eq?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  regexp?: InputMaybe<Scalars['String']>;
};

export type StringHashFilter_StringTermFilter = {
  allofterms?: InputMaybe<Scalars['String']>;
  anyofterms?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type StringRange = {
  max: Scalars['String'];
  min: Scalars['String'];
};

export type StringRegExpFilter = {
  regexp?: InputMaybe<Scalars['String']>;
};

export type StringTermFilter = {
  allofterms?: InputMaybe<Scalars['String']>;
  anyofterms?: InputMaybe<Scalars['String']>;
};

export type Subscription = {
  __typename?: 'Subscription';
  aggregateAccount_notification?: Maybe<Account_notificationAggregateResult>;
  aggregateE360App_user?: Maybe<E360App_userAggregateResult>;
  aggregateE360App_user_notification?: Maybe<E360App_user_notificationAggregateResult>;
  getAccount_notification?: Maybe<Account_notification>;
  getE360App_user?: Maybe<E360App_user>;
  getE360App_user_notification?: Maybe<E360App_user_notification>;
  queryAccount_notification?: Maybe<Array<Maybe<Account_notification>>>;
  queryE360App_user?: Maybe<Array<Maybe<E360App_user>>>;
  queryE360App_user_notification?: Maybe<Array<Maybe<E360App_user_notification>>>;
};


export type SubscriptionaggregateAccount_notificationArgs = {
  filter?: InputMaybe<Account_notificationFilter>;
};


export type SubscriptionaggregateE360App_userArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type SubscriptionaggregateE360App_user_notificationArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
};


export type SubscriptiongetAccount_notificationArgs = {
  id: Scalars['ID'];
};


export type SubscriptiongetE360App_userArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type SubscriptiongetE360App_user_notificationArgs = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
};


export type SubscriptionqueryAccount_notificationArgs = {
  filter?: InputMaybe<Account_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_notificationOrder>;
};


export type SubscriptionqueryE360App_userArgs = {
  filter?: InputMaybe<E360App_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userOrder>;
};


export type SubscriptionqueryE360App_user_notificationArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_notificationOrder>;
};

export type TwoFactorToken = {
  __typename?: 'TwoFactorToken';
  accountId?: Maybe<Scalars['String']>;
  code: Scalars['String'];
  expiredAt: Scalars['DateTime'];
  organizationId?: Maybe<Scalars['String']>;
  token: Scalars['String'];
  userId?: Maybe<Scalars['String']>;
  userToken?: Maybe<Scalars['String']>;
};

export type TwoFactorTokenAggregateResult = {
  __typename?: 'TwoFactorTokenAggregateResult';
  accountIdMax?: Maybe<Scalars['String']>;
  accountIdMin?: Maybe<Scalars['String']>;
  codeMax?: Maybe<Scalars['String']>;
  codeMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  expiredAtMax?: Maybe<Scalars['DateTime']>;
  expiredAtMin?: Maybe<Scalars['DateTime']>;
  organizationIdMax?: Maybe<Scalars['String']>;
  organizationIdMin?: Maybe<Scalars['String']>;
  tokenMax?: Maybe<Scalars['String']>;
  tokenMin?: Maybe<Scalars['String']>;
  userIdMax?: Maybe<Scalars['String']>;
  userIdMin?: Maybe<Scalars['String']>;
  userTokenMax?: Maybe<Scalars['String']>;
  userTokenMin?: Maybe<Scalars['String']>;
};

export type TwoFactorTokenFilter = {
  and?: InputMaybe<Array<InputMaybe<TwoFactorTokenFilter>>>;
  expiredAt?: InputMaybe<DateTimeFilter>;
  has?: InputMaybe<Array<InputMaybe<TwoFactorTokenHasFilter>>>;
  not?: InputMaybe<TwoFactorTokenFilter>;
  or?: InputMaybe<Array<InputMaybe<TwoFactorTokenFilter>>>;
  token?: InputMaybe<StringHashFilter>;
};

export enum TwoFactorTokenHasFilter {
  accountId = 'accountId',
  code = 'code',
  expiredAt = 'expiredAt',
  organizationId = 'organizationId',
  token = 'token',
  userId = 'userId',
  userToken = 'userToken'
}

export type TwoFactorTokenOrder = {
  asc?: InputMaybe<TwoFactorTokenOrderable>;
  desc?: InputMaybe<TwoFactorTokenOrderable>;
  then?: InputMaybe<TwoFactorTokenOrder>;
};

export enum TwoFactorTokenOrderable {
  accountId = 'accountId',
  code = 'code',
  expiredAt = 'expiredAt',
  organizationId = 'organizationId',
  token = 'token',
  userId = 'userId',
  userToken = 'userToken'
}

export type TwoFactorTokenPatch = {
  accountId?: InputMaybe<Scalars['String']>;
  code?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  organizationId?: InputMaybe<Scalars['String']>;
  token?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  userToken?: InputMaybe<Scalars['String']>;
};

export type TwoFactorTokenRef = {
  accountId?: InputMaybe<Scalars['String']>;
  code?: InputMaybe<Scalars['String']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  organizationId?: InputMaybe<Scalars['String']>;
  token?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  userToken?: InputMaybe<Scalars['String']>;
};

export enum TwoFactorType {
  AUTHENTICATOR = 'AUTHENTICATOR',
  EMAIL = 'EMAIL',
  SMS = 'SMS'
}

export type Unit = {
  __typename?: 'Unit';
  id: Scalars['ID'];
  name: Scalars['String'];
  plural: Scalars['String'];
  symbol: Scalars['String'];
  type: Unit_type;
};

export type UnitAggregateResult = {
  __typename?: 'UnitAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  pluralMax?: Maybe<Scalars['String']>;
  pluralMin?: Maybe<Scalars['String']>;
  symbolMax?: Maybe<Scalars['String']>;
  symbolMin?: Maybe<Scalars['String']>;
};

export type UnitFilter = {
  and?: InputMaybe<Array<InputMaybe<UnitFilter>>>;
  has?: InputMaybe<Array<InputMaybe<UnitHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<UnitFilter>;
  or?: InputMaybe<Array<InputMaybe<UnitFilter>>>;
};

export enum UnitHasFilter {
  name = 'name',
  plural = 'plural',
  symbol = 'symbol',
  type = 'type'
}

export type UnitOrder = {
  asc?: InputMaybe<UnitOrderable>;
  desc?: InputMaybe<UnitOrderable>;
  then?: InputMaybe<UnitOrder>;
};

export enum UnitOrderable {
  name = 'name',
  plural = 'plural',
  symbol = 'symbol'
}

export type UnitPatch = {
  name?: InputMaybe<Scalars['String']>;
  plural?: InputMaybe<Scalars['String']>;
  symbol?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Unit_type>;
};

export type UnitRef = {
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  plural?: InputMaybe<Scalars['String']>;
  symbol?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Unit_type>;
};

export enum Unit_type {
  time = 'time',
  unit = 'unit'
}

export type UpdateAUDITS_PACKAGEInput = {
  filter: AUDITS_PACKAGEFilter;
  remove?: InputMaybe<AUDITS_PACKAGEPatch>;
  set?: InputMaybe<AUDITS_PACKAGEPatch>;
};

export type UpdateAUDITS_PACKAGEPayload = {
  __typename?: 'UpdateAUDITS_PACKAGEPayload';
  aUDITS_PACKAGE?: Maybe<Array<Maybe<AUDITS_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_PACKAGEPayloadaUDITS_PACKAGEArgs = {
  filter?: InputMaybe<AUDITS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_PACKAGEOrder>;
};

export type UpdateAUDITS_accountInput = {
  filter: AUDITS_accountFilter;
  remove?: InputMaybe<AUDITS_accountPatch>;
  set?: InputMaybe<AUDITS_accountPatch>;
};

export type UpdateAUDITS_accountPayload = {
  __typename?: 'UpdateAUDITS_accountPayload';
  aUDITS_account?: Maybe<Array<Maybe<AUDITS_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_accountPayloadaUDITS_accountArgs = {
  filter?: InputMaybe<AUDITS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_accountOrder>;
};

export type UpdateAUDITS_documentInput = {
  filter: AUDITS_documentFilter;
  remove?: InputMaybe<AUDITS_documentPatch>;
  set?: InputMaybe<AUDITS_documentPatch>;
};

export type UpdateAUDITS_documentPayload = {
  __typename?: 'UpdateAUDITS_documentPayload';
  aUDITS_document?: Maybe<Array<Maybe<AUDITS_document>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_documentPayloadaUDITS_documentArgs = {
  filter?: InputMaybe<AUDITS_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_documentOrder>;
};

export type UpdateAUDITS_document_blockImageInput = {
  filter: AUDITS_document_blockImageFilter;
  remove?: InputMaybe<AUDITS_document_blockImagePatch>;
  set?: InputMaybe<AUDITS_document_blockImagePatch>;
};

export type UpdateAUDITS_document_blockImagePayload = {
  __typename?: 'UpdateAUDITS_document_blockImagePayload';
  aUDITS_document_blockImage?: Maybe<Array<Maybe<AUDITS_document_blockImage>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_document_blockImagePayloadaUDITS_document_blockImageArgs = {
  filter?: InputMaybe<AUDITS_document_blockImageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockImageOrder>;
};

export type UpdateAUDITS_document_blockInput = {
  filter: AUDITS_document_blockFilter;
  remove?: InputMaybe<AUDITS_document_blockPatch>;
  set?: InputMaybe<AUDITS_document_blockPatch>;
};

export type UpdateAUDITS_document_blockPayload = {
  __typename?: 'UpdateAUDITS_document_blockPayload';
  aUDITS_document_block?: Maybe<Array<Maybe<AUDITS_document_block>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_document_blockPayloadaUDITS_document_blockArgs = {
  filter?: InputMaybe<AUDITS_document_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockOrder>;
};

export type UpdateAUDITS_document_blockQuoteInput = {
  filter: AUDITS_document_blockQuoteFilter;
  remove?: InputMaybe<AUDITS_document_blockQuotePatch>;
  set?: InputMaybe<AUDITS_document_blockQuotePatch>;
};

export type UpdateAUDITS_document_blockQuotePayload = {
  __typename?: 'UpdateAUDITS_document_blockQuotePayload';
  aUDITS_document_blockQuote?: Maybe<Array<Maybe<AUDITS_document_blockQuote>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_document_blockQuotePayloadaUDITS_document_blockQuoteArgs = {
  filter?: InputMaybe<AUDITS_document_blockQuoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockQuoteOrder>;
};

export type UpdateAUDITS_document_blockTableCellInput = {
  filter: AUDITS_document_blockTableCellFilter;
  remove?: InputMaybe<AUDITS_document_blockTableCellPatch>;
  set?: InputMaybe<AUDITS_document_blockTableCellPatch>;
};

export type UpdateAUDITS_document_blockTableCellPayload = {
  __typename?: 'UpdateAUDITS_document_blockTableCellPayload';
  aUDITS_document_blockTableCell?: Maybe<Array<Maybe<AUDITS_document_blockTableCell>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_document_blockTableCellPayloadaUDITS_document_blockTableCellArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableCellFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableCellOrder>;
};

export type UpdateAUDITS_document_blockTableColumnInput = {
  filter: AUDITS_document_blockTableColumnFilter;
  remove?: InputMaybe<AUDITS_document_blockTableColumnPatch>;
  set?: InputMaybe<AUDITS_document_blockTableColumnPatch>;
};

export type UpdateAUDITS_document_blockTableColumnPayload = {
  __typename?: 'UpdateAUDITS_document_blockTableColumnPayload';
  aUDITS_document_blockTableColumn?: Maybe<Array<Maybe<AUDITS_document_blockTableColumn>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_document_blockTableColumnPayloadaUDITS_document_blockTableColumnArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableColumnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableColumnOrder>;
};

export type UpdateAUDITS_document_blockTableInput = {
  filter: AUDITS_document_blockTableFilter;
  remove?: InputMaybe<AUDITS_document_blockTablePatch>;
  set?: InputMaybe<AUDITS_document_blockTablePatch>;
};

export type UpdateAUDITS_document_blockTablePayload = {
  __typename?: 'UpdateAUDITS_document_blockTablePayload';
  aUDITS_document_blockTable?: Maybe<Array<Maybe<AUDITS_document_blockTable>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_document_blockTablePayloadaUDITS_document_blockTableArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableOrder>;
};

export type UpdateAUDITS_document_blockTableRowInput = {
  filter: AUDITS_document_blockTableRowFilter;
  remove?: InputMaybe<AUDITS_document_blockTableRowPatch>;
  set?: InputMaybe<AUDITS_document_blockTableRowPatch>;
};

export type UpdateAUDITS_document_blockTableRowPayload = {
  __typename?: 'UpdateAUDITS_document_blockTableRowPayload';
  aUDITS_document_blockTableRow?: Maybe<Array<Maybe<AUDITS_document_blockTableRow>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_document_blockTableRowPayloadaUDITS_document_blockTableRowArgs = {
  filter?: InputMaybe<AUDITS_document_blockTableRowFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTableRowOrder>;
};

export type UpdateAUDITS_document_blockTextInput = {
  filter: AUDITS_document_blockTextFilter;
  remove?: InputMaybe<AUDITS_document_blockTextPatch>;
  set?: InputMaybe<AUDITS_document_blockTextPatch>;
};

export type UpdateAUDITS_document_blockTextPayload = {
  __typename?: 'UpdateAUDITS_document_blockTextPayload';
  aUDITS_document_blockText?: Maybe<Array<Maybe<AUDITS_document_blockText>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_document_blockTextPayloadaUDITS_document_blockTextArgs = {
  filter?: InputMaybe<AUDITS_document_blockTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTextOrder>;
};

export type UpdateAUDITS_document_blockTitleInput = {
  filter: AUDITS_document_blockTitleFilter;
  remove?: InputMaybe<AUDITS_document_blockTitlePatch>;
  set?: InputMaybe<AUDITS_document_blockTitlePatch>;
};

export type UpdateAUDITS_document_blockTitlePayload = {
  __typename?: 'UpdateAUDITS_document_blockTitlePayload';
  aUDITS_document_blockTitle?: Maybe<Array<Maybe<AUDITS_document_blockTitle>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_document_blockTitlePayloadaUDITS_document_blockTitleArgs = {
  filter?: InputMaybe<AUDITS_document_blockTitleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_document_blockTitleOrder>;
};

export type UpdateAUDITS_fileInput = {
  filter: AUDITS_fileFilter;
  remove?: InputMaybe<AUDITS_filePatch>;
  set?: InputMaybe<AUDITS_filePatch>;
};

export type UpdateAUDITS_filePayload = {
  __typename?: 'UpdateAUDITS_filePayload';
  aUDITS_file?: Maybe<Array<Maybe<AUDITS_file>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_filePayloadaUDITS_fileArgs = {
  filter?: InputMaybe<AUDITS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_fileOrder>;
};

export type UpdateAUDITS_projectInput = {
  filter: AUDITS_projectFilter;
  remove?: InputMaybe<AUDITS_projectPatch>;
  set?: InputMaybe<AUDITS_projectPatch>;
};

export type UpdateAUDITS_projectPayload = {
  __typename?: 'UpdateAUDITS_projectPayload';
  aUDITS_project?: Maybe<Array<Maybe<AUDITS_project>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_projectPayloadaUDITS_projectArgs = {
  filter?: InputMaybe<AUDITS_projectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_projectOrder>;
};

export type UpdateAUDITS_project_versionInput = {
  filter: AUDITS_project_versionFilter;
  remove?: InputMaybe<AUDITS_project_versionPatch>;
  set?: InputMaybe<AUDITS_project_versionPatch>;
};

export type UpdateAUDITS_project_versionPayload = {
  __typename?: 'UpdateAUDITS_project_versionPayload';
  aUDITS_project_version?: Maybe<Array<Maybe<AUDITS_project_version>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_project_versionPayloadaUDITS_project_versionArgs = {
  filter?: InputMaybe<AUDITS_project_versionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_project_versionOrder>;
};

export type UpdateAUDITS_reviewInput = {
  filter: AUDITS_reviewFilter;
  remove?: InputMaybe<AUDITS_reviewPatch>;
  set?: InputMaybe<AUDITS_reviewPatch>;
};

export type UpdateAUDITS_reviewPayload = {
  __typename?: 'UpdateAUDITS_reviewPayload';
  aUDITS_review?: Maybe<Array<Maybe<AUDITS_review>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_reviewPayloadaUDITS_reviewArgs = {
  filter?: InputMaybe<AUDITS_reviewFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_reviewOrder>;
};

export type UpdateAUDITS_review_accountInput = {
  filter: AUDITS_review_accountFilter;
  remove?: InputMaybe<AUDITS_review_accountPatch>;
  set?: InputMaybe<AUDITS_review_accountPatch>;
};

export type UpdateAUDITS_review_accountPayload = {
  __typename?: 'UpdateAUDITS_review_accountPayload';
  aUDITS_review_account?: Maybe<Array<Maybe<AUDITS_review_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_review_accountPayloadaUDITS_review_accountArgs = {
  filter?: InputMaybe<AUDITS_review_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_accountOrder>;
};

export type UpdateAUDITS_review_commentInput = {
  filter: AUDITS_review_commentFilter;
  remove?: InputMaybe<AUDITS_review_commentPatch>;
  set?: InputMaybe<AUDITS_review_commentPatch>;
};

export type UpdateAUDITS_review_commentPayload = {
  __typename?: 'UpdateAUDITS_review_commentPayload';
  aUDITS_review_comment?: Maybe<Array<Maybe<AUDITS_review_comment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAUDITS_review_commentPayloadaUDITS_review_commentArgs = {
  filter?: InputMaybe<AUDITS_review_commentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AUDITS_review_commentOrder>;
};

export type UpdateAccountInput = {
  filter: AccountFilter;
  remove?: InputMaybe<AccountPatch>;
  set?: InputMaybe<AccountPatch>;
};

export type UpdateAccountPayload = {
  __typename?: 'UpdateAccountPayload';
  account?: Maybe<Array<Maybe<Account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAccountPayloadaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AccountOrder>;
};

export type UpdateAccount_eventInput = {
  filter: Account_eventFilter;
  remove?: InputMaybe<Account_eventPatch>;
  set?: InputMaybe<Account_eventPatch>;
};

export type UpdateAccount_eventPayload = {
  __typename?: 'UpdateAccount_eventPayload';
  account_event?: Maybe<Array<Maybe<Account_event>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAccount_eventPayloadaccount_eventArgs = {
  filter?: InputMaybe<Account_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_eventOrder>;
};

export type UpdateAccount_logInput = {
  filter: Account_logFilter;
  remove?: InputMaybe<Account_logPatch>;
  set?: InputMaybe<Account_logPatch>;
};

export type UpdateAccount_logPayload = {
  __typename?: 'UpdateAccount_logPayload';
  account_log?: Maybe<Array<Maybe<Account_log>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAccount_logPayloadaccount_logArgs = {
  filter?: InputMaybe<Account_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_logOrder>;
};

export type UpdateAccount_notificationInput = {
  filter: Account_notificationFilter;
  remove?: InputMaybe<Account_notificationPatch>;
  set?: InputMaybe<Account_notificationPatch>;
};

export type UpdateAccount_notificationPayload = {
  __typename?: 'UpdateAccount_notificationPayload';
  account_notification?: Maybe<Array<Maybe<Account_notification>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAccount_notificationPayloadaccount_notificationArgs = {
  filter?: InputMaybe<Account_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_notificationOrder>;
};

export type UpdateAccount_sessionConnectionInput = {
  filter: Account_sessionConnectionFilter;
  remove?: InputMaybe<Account_sessionConnectionPatch>;
  set?: InputMaybe<Account_sessionConnectionPatch>;
};

export type UpdateAccount_sessionConnectionPayload = {
  __typename?: 'UpdateAccount_sessionConnectionPayload';
  account_sessionConnection?: Maybe<Array<Maybe<Account_sessionConnection>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAccount_sessionConnectionPayloadaccount_sessionConnectionArgs = {
  filter?: InputMaybe<Account_sessionConnectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionOrder>;
};

export type UpdateAccount_sessionConnectionTaskInput = {
  filter: Account_sessionConnectionTaskFilter;
  remove?: InputMaybe<Account_sessionConnectionTaskPatch>;
  set?: InputMaybe<Account_sessionConnectionTaskPatch>;
};

export type UpdateAccount_sessionConnectionTaskPayload = {
  __typename?: 'UpdateAccount_sessionConnectionTaskPayload';
  account_sessionConnectionTask?: Maybe<Array<Maybe<Account_sessionConnectionTask>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAccount_sessionConnectionTaskPayloadaccount_sessionConnectionTaskArgs = {
  filter?: InputMaybe<Account_sessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionConnectionTaskOrder>;
};

export type UpdateAccount_sessionInput = {
  filter: Account_sessionFilter;
  remove?: InputMaybe<Account_sessionPatch>;
  set?: InputMaybe<Account_sessionPatch>;
};

export type UpdateAccount_sessionPayload = {
  __typename?: 'UpdateAccount_sessionPayload';
  account_session?: Maybe<Array<Maybe<Account_session>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAccount_sessionPayloadaccount_sessionArgs = {
  filter?: InputMaybe<Account_sessionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionOrder>;
};

export type UpdateAccount_sessionTaskInput = {
  filter: Account_sessionTaskFilter;
  remove?: InputMaybe<Account_sessionTaskPatch>;
  set?: InputMaybe<Account_sessionTaskPatch>;
};

export type UpdateAccount_sessionTaskPayload = {
  __typename?: 'UpdateAccount_sessionTaskPayload';
  account_sessionTask?: Maybe<Array<Maybe<Account_sessionTask>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAccount_sessionTaskPayloadaccount_sessionTaskArgs = {
  filter?: InputMaybe<Account_sessionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Account_sessionTaskOrder>;
};

export type UpdateAddressInput = {
  filter: AddressFilter;
  remove?: InputMaybe<AddressPatch>;
  set?: InputMaybe<AddressPatch>;
};

export type UpdateAddressPayload = {
  __typename?: 'UpdateAddressPayload';
  address?: Maybe<Array<Maybe<Address>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAddressPayloadaddressArgs = {
  filter?: InputMaybe<AddressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AddressOrder>;
};

export type UpdateBankAccountInput = {
  filter: BankAccountFilter;
  remove?: InputMaybe<BankAccountPatch>;
  set?: InputMaybe<BankAccountPatch>;
};

export type UpdateBankAccountPayload = {
  __typename?: 'UpdateBankAccountPayload';
  bankAccount?: Maybe<Array<Maybe<BankAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateBankAccountPayloadbankAccountArgs = {
  filter?: InputMaybe<BankAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BankAccountOrder>;
};

export type UpdateBankInput = {
  filter: BankFilter;
  remove?: InputMaybe<BankPatch>;
  set?: InputMaybe<BankPatch>;
};

export type UpdateBankPayload = {
  __typename?: 'UpdateBankPayload';
  bank?: Maybe<Array<Maybe<Bank>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateBankPayloadbankArgs = {
  filter?: InputMaybe<BankFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BankOrder>;
};

export type UpdateCMS_PACKAGEInput = {
  filter: CMS_PACKAGEFilter;
  remove?: InputMaybe<CMS_PACKAGEPatch>;
  set?: InputMaybe<CMS_PACKAGEPatch>;
};

export type UpdateCMS_PACKAGEPayload = {
  __typename?: 'UpdateCMS_PACKAGEPayload';
  cMS_PACKAGE?: Maybe<Array<Maybe<CMS_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_PACKAGEPayloadcMS_PACKAGEArgs = {
  filter?: InputMaybe<CMS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_PACKAGEOrder>;
};

export type UpdateCMS_accountInput = {
  filter: CMS_accountFilter;
  remove?: InputMaybe<CMS_accountPatch>;
  set?: InputMaybe<CMS_accountPatch>;
};

export type UpdateCMS_accountPayload = {
  __typename?: 'UpdateCMS_accountPayload';
  cMS_account?: Maybe<Array<Maybe<CMS_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_accountPayloadcMS_accountArgs = {
  filter?: InputMaybe<CMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_accountOrder>;
};

export type UpdateCMS_appContactInput = {
  filter: CMS_appContactFilter;
  remove?: InputMaybe<CMS_appContactPatch>;
  set?: InputMaybe<CMS_appContactPatch>;
};

export type UpdateCMS_appContactPayload = {
  __typename?: 'UpdateCMS_appContactPayload';
  cMS_appContact?: Maybe<Array<Maybe<CMS_appContact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_appContactPayloadcMS_appContactArgs = {
  filter?: InputMaybe<CMS_appContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appContactOrder>;
};

export type UpdateCMS_appInput = {
  filter: CMS_appFilter;
  remove?: InputMaybe<CMS_appPatch>;
  set?: InputMaybe<CMS_appPatch>;
};

export type UpdateCMS_appPayload = {
  __typename?: 'UpdateCMS_appPayload';
  cMS_app?: Maybe<Array<Maybe<CMS_app>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_appPayloadcMS_appArgs = {
  filter?: InputMaybe<CMS_appFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_appOrder>;
};

export type UpdateCMS_authorAliasInput = {
  filter: CMS_authorAliasFilter;
  remove?: InputMaybe<CMS_authorAliasPatch>;
  set?: InputMaybe<CMS_authorAliasPatch>;
};

export type UpdateCMS_authorAliasPayload = {
  __typename?: 'UpdateCMS_authorAliasPayload';
  cMS_authorAlias?: Maybe<Array<Maybe<CMS_authorAlias>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_authorAliasPayloadcMS_authorAliasArgs = {
  filter?: InputMaybe<CMS_authorAliasFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_authorAliasOrder>;
};

export type UpdateCMS_contactInput = {
  filter: CMS_contactFilter;
  remove?: InputMaybe<CMS_contactPatch>;
  set?: InputMaybe<CMS_contactPatch>;
};

export type UpdateCMS_contactPayload = {
  __typename?: 'UpdateCMS_contactPayload';
  cMS_contact?: Maybe<Array<Maybe<CMS_contact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_contactPayloadcMS_contactArgs = {
  filter?: InputMaybe<CMS_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_contactOrder>;
};

export type UpdateCMS_fileInput = {
  filter: CMS_fileFilter;
  remove?: InputMaybe<CMS_filePatch>;
  set?: InputMaybe<CMS_filePatch>;
};

export type UpdateCMS_filePayload = {
  __typename?: 'UpdateCMS_filePayload';
  cMS_file?: Maybe<Array<Maybe<CMS_file>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_filePayloadcMS_fileArgs = {
  filter?: InputMaybe<CMS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_fileOrder>;
};

export type UpdateCMS_websiteInput = {
  filter: CMS_websiteFilter;
  remove?: InputMaybe<CMS_websitePatch>;
  set?: InputMaybe<CMS_websitePatch>;
};

export type UpdateCMS_websitePayload = {
  __typename?: 'UpdateCMS_websitePayload';
  cMS_website?: Maybe<Array<Maybe<CMS_website>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_websitePayloadcMS_websiteArgs = {
  filter?: InputMaybe<CMS_websiteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_websiteOrder>;
};

export type UpdateCMS_website_pageInput = {
  filter: CMS_website_pageFilter;
  remove?: InputMaybe<CMS_website_pagePatch>;
  set?: InputMaybe<CMS_website_pagePatch>;
};

export type UpdateCMS_website_pagePayload = {
  __typename?: 'UpdateCMS_website_pagePayload';
  cMS_website_page?: Maybe<Array<Maybe<CMS_website_page>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_website_pagePayloadcMS_website_pageArgs = {
  filter?: InputMaybe<CMS_website_pageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_pageOrder>;
};

export type UpdateCMS_website_page_blockComboInput = {
  filter: CMS_website_page_blockComboFilter;
  remove?: InputMaybe<CMS_website_page_blockComboPatch>;
  set?: InputMaybe<CMS_website_page_blockComboPatch>;
};

export type UpdateCMS_website_page_blockComboPayload = {
  __typename?: 'UpdateCMS_website_page_blockComboPayload';
  cMS_website_page_blockCombo?: Maybe<Array<Maybe<CMS_website_page_blockCombo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_website_page_blockComboPayloadcMS_website_page_blockComboArgs = {
  filter?: InputMaybe<CMS_website_page_blockComboFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockComboOrder>;
};

export type UpdateCMS_website_page_blockImageInput = {
  filter: CMS_website_page_blockImageFilter;
  remove?: InputMaybe<CMS_website_page_blockImagePatch>;
  set?: InputMaybe<CMS_website_page_blockImagePatch>;
};

export type UpdateCMS_website_page_blockImagePayload = {
  __typename?: 'UpdateCMS_website_page_blockImagePayload';
  cMS_website_page_blockImage?: Maybe<Array<Maybe<CMS_website_page_blockImage>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_website_page_blockImagePayloadcMS_website_page_blockImageArgs = {
  filter?: InputMaybe<CMS_website_page_blockImageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockImageOrder>;
};

export type UpdateCMS_website_page_blockInput = {
  filter: CMS_website_page_blockFilter;
  remove?: InputMaybe<CMS_website_page_blockPatch>;
  set?: InputMaybe<CMS_website_page_blockPatch>;
};

export type UpdateCMS_website_page_blockLinkInput = {
  filter: CMS_website_page_blockLinkFilter;
  remove?: InputMaybe<CMS_website_page_blockLinkPatch>;
  set?: InputMaybe<CMS_website_page_blockLinkPatch>;
};

export type UpdateCMS_website_page_blockLinkPayload = {
  __typename?: 'UpdateCMS_website_page_blockLinkPayload';
  cMS_website_page_blockLink?: Maybe<Array<Maybe<CMS_website_page_blockLink>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_website_page_blockLinkPayloadcMS_website_page_blockLinkArgs = {
  filter?: InputMaybe<CMS_website_page_blockLinkFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockLinkOrder>;
};

export type UpdateCMS_website_page_blockPayload = {
  __typename?: 'UpdateCMS_website_page_blockPayload';
  cMS_website_page_block?: Maybe<Array<Maybe<CMS_website_page_block>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_website_page_blockPayloadcMS_website_page_blockArgs = {
  filter?: InputMaybe<CMS_website_page_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockOrder>;
};

export type UpdateCMS_website_page_blockTextInput = {
  filter: CMS_website_page_blockTextFilter;
  remove?: InputMaybe<CMS_website_page_blockTextPatch>;
  set?: InputMaybe<CMS_website_page_blockTextPatch>;
};

export type UpdateCMS_website_page_blockTextPayload = {
  __typename?: 'UpdateCMS_website_page_blockTextPayload';
  cMS_website_page_blockText?: Maybe<Array<Maybe<CMS_website_page_blockText>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_website_page_blockTextPayloadcMS_website_page_blockTextArgs = {
  filter?: InputMaybe<CMS_website_page_blockTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockTextOrder>;
};

export type UpdateCMS_website_page_blockTitleInput = {
  filter: CMS_website_page_blockTitleFilter;
  remove?: InputMaybe<CMS_website_page_blockTitlePatch>;
  set?: InputMaybe<CMS_website_page_blockTitlePatch>;
};

export type UpdateCMS_website_page_blockTitlePayload = {
  __typename?: 'UpdateCMS_website_page_blockTitlePayload';
  cMS_website_page_blockTitle?: Maybe<Array<Maybe<CMS_website_page_blockTitle>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCMS_website_page_blockTitlePayloadcMS_website_page_blockTitleArgs = {
  filter?: InputMaybe<CMS_website_page_blockTitleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CMS_website_page_blockTitleOrder>;
};

export type UpdateCRM_PACKAGEInput = {
  filter: CRM_PACKAGEFilter;
  remove?: InputMaybe<CRM_PACKAGEPatch>;
  set?: InputMaybe<CRM_PACKAGEPatch>;
};

export type UpdateCRM_PACKAGEPayload = {
  __typename?: 'UpdateCRM_PACKAGEPayload';
  cRM_PACKAGE?: Maybe<Array<Maybe<CRM_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_PACKAGEPayloadcRM_PACKAGEArgs = {
  filter?: InputMaybe<CRM_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_PACKAGEOrder>;
};

export type UpdateCRM_accountContactsTableColumnInput = {
  filter: CRM_accountContactsTableColumnFilter;
  remove?: InputMaybe<CRM_accountContactsTableColumnPatch>;
  set?: InputMaybe<CRM_accountContactsTableColumnPatch>;
};

export type UpdateCRM_accountContactsTableColumnPayload = {
  __typename?: 'UpdateCRM_accountContactsTableColumnPayload';
  cRM_accountContactsTableColumn?: Maybe<Array<Maybe<CRM_accountContactsTableColumn>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_accountContactsTableColumnPayloadcRM_accountContactsTableColumnArgs = {
  filter?: InputMaybe<CRM_accountContactsTableColumnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_accountContactsTableColumnOrder>;
};

export type UpdateCRM_accountContactsTableFilterInput = {
  filter: CRM_accountContactsTableFilterFilter;
  remove?: InputMaybe<CRM_accountContactsTableFilterPatch>;
  set?: InputMaybe<CRM_accountContactsTableFilterPatch>;
};

export type UpdateCRM_accountContactsTableFilterPayload = {
  __typename?: 'UpdateCRM_accountContactsTableFilterPayload';
  cRM_accountContactsTableFilter?: Maybe<Array<Maybe<CRM_accountContactsTableFilter>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_accountContactsTableFilterPayloadcRM_accountContactsTableFilterArgs = {
  filter?: InputMaybe<CRM_accountContactsTableFilterFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_accountContactsTableFilterOrder>;
};

export type UpdateCRM_accountEventInput = {
  filter: CRM_accountEventFilter;
  remove?: InputMaybe<CRM_accountEventPatch>;
  set?: InputMaybe<CRM_accountEventPatch>;
};

export type UpdateCRM_accountEventPayload = {
  __typename?: 'UpdateCRM_accountEventPayload';
  cRM_accountEvent?: Maybe<Array<Maybe<CRM_accountEvent>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_accountEventPayloadcRM_accountEventArgs = {
  filter?: InputMaybe<CRM_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_accountInput = {
  filter: CRM_accountFilter;
  remove?: InputMaybe<CRM_accountPatch>;
  set?: InputMaybe<CRM_accountPatch>;
};

export type UpdateCRM_accountPayload = {
  __typename?: 'UpdateCRM_accountPayload';
  cRM_account?: Maybe<Array<Maybe<CRM_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_accountPayloadcRM_accountArgs = {
  filter?: InputMaybe<CRM_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_actionCallInput = {
  filter: CRM_actionCallFilter;
  remove?: InputMaybe<CRM_actionCallPatch>;
  set?: InputMaybe<CRM_actionCallPatch>;
};

export type UpdateCRM_actionCallPayload = {
  __typename?: 'UpdateCRM_actionCallPayload';
  cRM_actionCall?: Maybe<Array<Maybe<CRM_actionCall>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_actionCallPayloadcRM_actionCallArgs = {
  filter?: InputMaybe<CRM_actionCallFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_actionChatInput = {
  filter: CRM_actionChatFilter;
  remove?: InputMaybe<CRM_actionChatPatch>;
  set?: InputMaybe<CRM_actionChatPatch>;
};

export type UpdateCRM_actionChatPayload = {
  __typename?: 'UpdateCRM_actionChatPayload';
  cRM_actionChat?: Maybe<Array<Maybe<CRM_actionChat>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_actionChatPayloadcRM_actionChatArgs = {
  filter?: InputMaybe<CRM_actionChatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionChatOrder>;
};

export type UpdateCRM_actionEmailInput = {
  filter: CRM_actionEmailFilter;
  remove?: InputMaybe<CRM_actionEmailPatch>;
  set?: InputMaybe<CRM_actionEmailPatch>;
};

export type UpdateCRM_actionEmailPayload = {
  __typename?: 'UpdateCRM_actionEmailPayload';
  cRM_actionEmail?: Maybe<Array<Maybe<CRM_actionEmail>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_actionEmailPayloadcRM_actionEmailArgs = {
  filter?: InputMaybe<CRM_actionEmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionEmailOrder>;
};

export type UpdateCRM_actionInput = {
  filter: CRM_actionFilter;
  remove?: InputMaybe<CRM_actionPatch>;
  set?: InputMaybe<CRM_actionPatch>;
};

export type UpdateCRM_actionMeetingInput = {
  filter: CRM_actionMeetingFilter;
  remove?: InputMaybe<CRM_actionMeetingPatch>;
  set?: InputMaybe<CRM_actionMeetingPatch>;
};

export type UpdateCRM_actionMeetingPayload = {
  __typename?: 'UpdateCRM_actionMeetingPayload';
  cRM_actionMeeting?: Maybe<Array<Maybe<CRM_actionMeeting>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_actionMeetingPayloadcRM_actionMeetingArgs = {
  filter?: InputMaybe<CRM_actionMeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_actionPayload = {
  __typename?: 'UpdateCRM_actionPayload';
  cRM_action?: Maybe<Array<Maybe<CRM_action>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_actionPayloadcRM_actionArgs = {
  filter?: InputMaybe<CRM_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_actionOrder>;
};

export type UpdateCRM_areaInput = {
  filter: CRM_areaFilter;
  remove?: InputMaybe<CRM_areaPatch>;
  set?: InputMaybe<CRM_areaPatch>;
};

export type UpdateCRM_areaPayload = {
  __typename?: 'UpdateCRM_areaPayload';
  cRM_area?: Maybe<Array<Maybe<CRM_area>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_areaPayloadcRM_areaArgs = {
  filter?: InputMaybe<CRM_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_areaOrder>;
};

export type UpdateCRM_campaignContactEventInput = {
  filter: CRM_campaignContactEventFilter;
  remove?: InputMaybe<CRM_campaignContactEventPatch>;
  set?: InputMaybe<CRM_campaignContactEventPatch>;
};

export type UpdateCRM_campaignContactEventPayload = {
  __typename?: 'UpdateCRM_campaignContactEventPayload';
  cRM_campaignContactEvent?: Maybe<Array<Maybe<CRM_campaignContactEvent>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_campaignContactEventPayloadcRM_campaignContactEventArgs = {
  filter?: InputMaybe<CRM_campaignContactEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactEventOrder>;
};

export type UpdateCRM_campaignContactInput = {
  filter: CRM_campaignContactFilter;
  remove?: InputMaybe<CRM_campaignContactPatch>;
  set?: InputMaybe<CRM_campaignContactPatch>;
};

export type UpdateCRM_campaignContactPayload = {
  __typename?: 'UpdateCRM_campaignContactPayload';
  cRM_campaignContact?: Maybe<Array<Maybe<CRM_campaignContact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_campaignContactPayloadcRM_campaignContactArgs = {
  filter?: InputMaybe<CRM_campaignContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignContactOrder>;
};

export type UpdateCRM_campaignDeliverInput = {
  filter: CRM_campaignDeliverFilter;
  remove?: InputMaybe<CRM_campaignDeliverPatch>;
  set?: InputMaybe<CRM_campaignDeliverPatch>;
};

export type UpdateCRM_campaignDeliverPayload = {
  __typename?: 'UpdateCRM_campaignDeliverPayload';
  cRM_campaignDeliver?: Maybe<Array<Maybe<CRM_campaignDeliver>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_campaignDeliverPayloadcRM_campaignDeliverArgs = {
  filter?: InputMaybe<CRM_campaignDeliverFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignDeliverOrder>;
};

export type UpdateCRM_campaignEmailTemplateInput = {
  filter: CRM_campaignEmailTemplateFilter;
  remove?: InputMaybe<CRM_campaignEmailTemplatePatch>;
  set?: InputMaybe<CRM_campaignEmailTemplatePatch>;
};

export type UpdateCRM_campaignEmailTemplatePayload = {
  __typename?: 'UpdateCRM_campaignEmailTemplatePayload';
  cRM_campaignEmailTemplate?: Maybe<Array<Maybe<CRM_campaignEmailTemplate>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_campaignEmailTemplatePayloadcRM_campaignEmailTemplateArgs = {
  filter?: InputMaybe<CRM_campaignEmailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignEmailTemplateOrder>;
};

export type UpdateCRM_campaignInput = {
  filter: CRM_campaignFilter;
  remove?: InputMaybe<CRM_campaignPatch>;
  set?: InputMaybe<CRM_campaignPatch>;
};

export type UpdateCRM_campaignPayload = {
  __typename?: 'UpdateCRM_campaignPayload';
  cRM_campaign?: Maybe<Array<Maybe<CRM_campaign>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_campaignPayloadcRM_campaignArgs = {
  filter?: InputMaybe<CRM_campaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_campaignOrder>;
};

export type UpdateCRM_contactActionCallInput = {
  filter: CRM_contactActionCallFilter;
  remove?: InputMaybe<CRM_contactActionCallPatch>;
  set?: InputMaybe<CRM_contactActionCallPatch>;
};

export type UpdateCRM_contactActionCallPayload = {
  __typename?: 'UpdateCRM_contactActionCallPayload';
  cRM_contactActionCall?: Maybe<Array<Maybe<CRM_contactActionCall>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactActionCallPayloadcRM_contactActionCallArgs = {
  filter?: InputMaybe<CRM_contactActionCallFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionCallOrder>;
};

export type UpdateCRM_contactActionChatInput = {
  filter: CRM_contactActionChatFilter;
  remove?: InputMaybe<CRM_contactActionChatPatch>;
  set?: InputMaybe<CRM_contactActionChatPatch>;
};

export type UpdateCRM_contactActionChatPayload = {
  __typename?: 'UpdateCRM_contactActionChatPayload';
  cRM_contactActionChat?: Maybe<Array<Maybe<CRM_contactActionChat>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactActionChatPayloadcRM_contactActionChatArgs = {
  filter?: InputMaybe<CRM_contactActionChatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_contactActionEmailInput = {
  filter: CRM_contactActionEmailFilter;
  remove?: InputMaybe<CRM_contactActionEmailPatch>;
  set?: InputMaybe<CRM_contactActionEmailPatch>;
};

export type UpdateCRM_contactActionEmailPayload = {
  __typename?: 'UpdateCRM_contactActionEmailPayload';
  cRM_contactActionEmail?: Maybe<Array<Maybe<CRM_contactActionEmail>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactActionEmailPayloadcRM_contactActionEmailArgs = {
  filter?: InputMaybe<CRM_contactActionEmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_contactActionInput = {
  filter: CRM_contactActionFilter;
  remove?: InputMaybe<CRM_contactActionPatch>;
  set?: InputMaybe<CRM_contactActionPatch>;
};

export type UpdateCRM_contactActionMeetingInput = {
  filter: CRM_contactActionMeetingFilter;
  remove?: InputMaybe<CRM_contactActionMeetingPatch>;
  set?: InputMaybe<CRM_contactActionMeetingPatch>;
};

export type UpdateCRM_contactActionMeetingPayload = {
  __typename?: 'UpdateCRM_contactActionMeetingPayload';
  cRM_contactActionMeeting?: Maybe<Array<Maybe<CRM_contactActionMeeting>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactActionMeetingPayloadcRM_contactActionMeetingArgs = {
  filter?: InputMaybe<CRM_contactActionMeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionMeetingOrder>;
};

export type UpdateCRM_contactActionPayload = {
  __typename?: 'UpdateCRM_contactActionPayload';
  cRM_contactAction?: Maybe<Array<Maybe<CRM_contactAction>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactActionPayloadcRM_contactActionArgs = {
  filter?: InputMaybe<CRM_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactActionOrder>;
};

export type UpdateCRM_contactActionStatusChangeInput = {
  filter: CRM_contactActionStatusChangeFilter;
  remove?: InputMaybe<CRM_contactActionStatusChangePatch>;
  set?: InputMaybe<CRM_contactActionStatusChangePatch>;
};

export type UpdateCRM_contactActionStatusChangePayload = {
  __typename?: 'UpdateCRM_contactActionStatusChangePayload';
  cRM_contactActionStatusChange?: Maybe<Array<Maybe<CRM_contactActionStatusChange>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactActionStatusChangePayloadcRM_contactActionStatusChangeArgs = {
  filter?: InputMaybe<CRM_contactActionStatusChangeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_contactAnswerInput = {
  filter: CRM_contactAnswerFilter;
  remove?: InputMaybe<CRM_contactAnswerPatch>;
  set?: InputMaybe<CRM_contactAnswerPatch>;
};

export type UpdateCRM_contactAnswerPayload = {
  __typename?: 'UpdateCRM_contactAnswerPayload';
  cRM_contactAnswer?: Maybe<Array<Maybe<CRM_contactAnswer>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactAnswerPayloadcRM_contactAnswerArgs = {
  filter?: InputMaybe<CRM_contactAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactAnswerOrder>;
};

export type UpdateCRM_contactInput = {
  filter: CRM_contactFilter;
  remove?: InputMaybe<CRM_contactPatch>;
  set?: InputMaybe<CRM_contactPatch>;
};

export type UpdateCRM_contactInputInput = {
  filter: CRM_contactInputFilter;
  remove?: InputMaybe<CRM_contactInputPatch>;
  set?: InputMaybe<CRM_contactInputPatch>;
};

export type UpdateCRM_contactInputPayload = {
  __typename?: 'UpdateCRM_contactInputPayload';
  cRM_contactInput?: Maybe<Array<Maybe<CRM_contactInput>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactInputPayloadcRM_contactInputArgs = {
  filter?: InputMaybe<CRM_contactInputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputOrder>;
};

export type UpdateCRM_contactInputSubStatusInput = {
  filter: CRM_contactInputSubStatusFilter;
  remove?: InputMaybe<CRM_contactInputSubStatusPatch>;
  set?: InputMaybe<CRM_contactInputSubStatusPatch>;
};

export type UpdateCRM_contactInputSubStatusPayload = {
  __typename?: 'UpdateCRM_contactInputSubStatusPayload';
  cRM_contactInputSubStatus?: Maybe<Array<Maybe<CRM_contactInputSubStatus>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactInputSubStatusPayloadcRM_contactInputSubStatusArgs = {
  filter?: InputMaybe<CRM_contactInputSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputSubStatusOrder>;
};

export type UpdateCRM_contactInputValueInput = {
  filter: CRM_contactInputValueFilter;
  remove?: InputMaybe<CRM_contactInputValuePatch>;
  set?: InputMaybe<CRM_contactInputValuePatch>;
};

export type UpdateCRM_contactInputValuePayload = {
  __typename?: 'UpdateCRM_contactInputValuePayload';
  cRM_contactInputValue?: Maybe<Array<Maybe<CRM_contactInputValue>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactInputValuePayloadcRM_contactInputValueArgs = {
  filter?: InputMaybe<CRM_contactInputValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactInputValueOrder>;
};

export type UpdateCRM_contactListInput = {
  filter: CRM_contactListFilter;
  remove?: InputMaybe<CRM_contactListPatch>;
  set?: InputMaybe<CRM_contactListPatch>;
};

export type UpdateCRM_contactListPayload = {
  __typename?: 'UpdateCRM_contactListPayload';
  cRM_contactList?: Maybe<Array<Maybe<CRM_contactList>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactListPayloadcRM_contactListArgs = {
  filter?: InputMaybe<CRM_contactListFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_contactListOrder>;
};

export type UpdateCRM_contactPayload = {
  __typename?: 'UpdateCRM_contactPayload';
  cRM_contact?: Maybe<Array<Maybe<CRM_contact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_contactPayloadcRM_contactArgs = {
  filter?: InputMaybe<CRM_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_emailTemplateInput = {
  filter: CRM_emailTemplateFilter;
  remove?: InputMaybe<CRM_emailTemplatePatch>;
  set?: InputMaybe<CRM_emailTemplatePatch>;
};

export type UpdateCRM_emailTemplatePayload = {
  __typename?: 'UpdateCRM_emailTemplatePayload';
  cRM_emailTemplate?: Maybe<Array<Maybe<CRM_emailTemplate>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_emailTemplatePayloadcRM_emailTemplateArgs = {
  filter?: InputMaybe<CRM_emailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_eventInput = {
  filter: CRM_eventFilter;
  remove?: InputMaybe<CRM_eventPatch>;
  set?: InputMaybe<CRM_eventPatch>;
};

export type UpdateCRM_eventPayload = {
  __typename?: 'UpdateCRM_eventPayload';
  cRM_event?: Maybe<Array<Maybe<CRM_event>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_eventPayloadcRM_eventArgs = {
  filter?: InputMaybe<CRM_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_funnelActionInput = {
  filter: CRM_funnelActionFilter;
  remove?: InputMaybe<CRM_funnelActionPatch>;
  set?: InputMaybe<CRM_funnelActionPatch>;
};

export type UpdateCRM_funnelActionPayload = {
  __typename?: 'UpdateCRM_funnelActionPayload';
  cRM_funnelAction?: Maybe<Array<Maybe<CRM_funnelAction>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_funnelActionPayloadcRM_funnelActionArgs = {
  filter?: InputMaybe<CRM_funnelActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelActionOrder>;
};

export type UpdateCRM_funnelInput = {
  filter: CRM_funnelFilter;
  remove?: InputMaybe<CRM_funnelPatch>;
  set?: InputMaybe<CRM_funnelPatch>;
};

export type UpdateCRM_funnelPayload = {
  __typename?: 'UpdateCRM_funnelPayload';
  cRM_funnel?: Maybe<Array<Maybe<CRM_funnel>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_funnelPayloadcRM_funnelArgs = {
  filter?: InputMaybe<CRM_funnelFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelOrder>;
};

export type UpdateCRM_funnelStatusInput = {
  filter: CRM_funnelStatusFilter;
  remove?: InputMaybe<CRM_funnelStatusPatch>;
  set?: InputMaybe<CRM_funnelStatusPatch>;
};

export type UpdateCRM_funnelStatusPayload = {
  __typename?: 'UpdateCRM_funnelStatusPayload';
  cRM_funnelStatus?: Maybe<Array<Maybe<CRM_funnelStatus>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_funnelStatusPayloadcRM_funnelStatusArgs = {
  filter?: InputMaybe<CRM_funnelStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_funnelStatusOrder>;
};

export type UpdateCRM_opportunityLogInput = {
  filter: CRM_opportunityLogFilter;
  remove?: InputMaybe<CRM_opportunityLogPatch>;
  set?: InputMaybe<CRM_opportunityLogPatch>;
};

export type UpdateCRM_opportunityLogPayload = {
  __typename?: 'UpdateCRM_opportunityLogPayload';
  cRM_opportunityLog?: Maybe<Array<Maybe<CRM_opportunityLog>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_opportunityLogPayloadcRM_opportunityLogArgs = {
  filter?: InputMaybe<CRM_opportunityLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityLogOrder>;
};

export type UpdateCRM_opportunityPaymentPlanItemInput = {
  filter: CRM_opportunityPaymentPlanItemFilter;
  remove?: InputMaybe<CRM_opportunityPaymentPlanItemPatch>;
  set?: InputMaybe<CRM_opportunityPaymentPlanItemPatch>;
};

export type UpdateCRM_opportunityPaymentPlanItemPayload = {
  __typename?: 'UpdateCRM_opportunityPaymentPlanItemPayload';
  cRM_opportunityPaymentPlanItem?: Maybe<Array<Maybe<CRM_opportunityPaymentPlanItem>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_opportunityPaymentPlanItemPayloadcRM_opportunityPaymentPlanItemArgs = {
  filter?: InputMaybe<CRM_opportunityPaymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_opportunityPaymentPlanItemOrder>;
};

export type UpdateCRM_overviewInput = {
  filter: CRM_overviewFilter;
  remove?: InputMaybe<CRM_overviewPatch>;
  set?: InputMaybe<CRM_overviewPatch>;
};

export type UpdateCRM_overviewPayload = {
  __typename?: 'UpdateCRM_overviewPayload';
  cRM_overview?: Maybe<Array<Maybe<CRM_overview>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_overviewPayloadcRM_overviewArgs = {
  filter?: InputMaybe<CRM_overviewFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_proposalInput = {
  filter: CRM_proposalFilter;
  remove?: InputMaybe<CRM_proposalPatch>;
  set?: InputMaybe<CRM_proposalPatch>;
};

export type UpdateCRM_proposalPayload = {
  __typename?: 'UpdateCRM_proposalPayload';
  cRM_proposal?: Maybe<Array<Maybe<CRM_proposal>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_proposalPayloadcRM_proposalArgs = {
  filter?: InputMaybe<CRM_proposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_roleInput = {
  filter: CRM_roleFilter;
  remove?: InputMaybe<CRM_rolePatch>;
  set?: InputMaybe<CRM_rolePatch>;
};

export type UpdateCRM_rolePayload = {
  __typename?: 'UpdateCRM_rolePayload';
  cRM_role?: Maybe<Array<Maybe<CRM_role>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_rolePayloadcRM_roleArgs = {
  filter?: InputMaybe<CRM_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateCRM_socialMediaCampaignInput = {
  filter: CRM_socialMediaCampaignFilter;
  remove?: InputMaybe<CRM_socialMediaCampaignPatch>;
  set?: InputMaybe<CRM_socialMediaCampaignPatch>;
};

export type UpdateCRM_socialMediaCampaignPayload = {
  __typename?: 'UpdateCRM_socialMediaCampaignPayload';
  cRM_socialMediaCampaign?: Maybe<Array<Maybe<CRM_socialMediaCampaign>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_socialMediaCampaignPayloadcRM_socialMediaCampaignArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaignFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaignOrder>;
};

export type UpdateCRM_socialMediaCampaign_mediaInput = {
  filter: CRM_socialMediaCampaign_mediaFilter;
  remove?: InputMaybe<CRM_socialMediaCampaign_mediaPatch>;
  set?: InputMaybe<CRM_socialMediaCampaign_mediaPatch>;
};

export type UpdateCRM_socialMediaCampaign_mediaPayload = {
  __typename?: 'UpdateCRM_socialMediaCampaign_mediaPayload';
  cRM_socialMediaCampaign_media?: Maybe<Array<Maybe<CRM_socialMediaCampaign_media>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_socialMediaCampaign_mediaPayloadcRM_socialMediaCampaign_mediaArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_mediaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_mediaOrder>;
};

export type UpdateCRM_socialMediaCampaign_postInput = {
  filter: CRM_socialMediaCampaign_postFilter;
  remove?: InputMaybe<CRM_socialMediaCampaign_postPatch>;
  set?: InputMaybe<CRM_socialMediaCampaign_postPatch>;
};

export type UpdateCRM_socialMediaCampaign_postPayload = {
  __typename?: 'UpdateCRM_socialMediaCampaign_postPayload';
  cRM_socialMediaCampaign_post?: Maybe<Array<Maybe<CRM_socialMediaCampaign_post>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_socialMediaCampaign_postPayloadcRM_socialMediaCampaign_postArgs = {
  filter?: InputMaybe<CRM_socialMediaCampaign_postFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_socialMediaCampaign_postOrder>;
};

export type UpdateCRM_sourceCategoryInput = {
  filter: CRM_sourceCategoryFilter;
  remove?: InputMaybe<CRM_sourceCategoryPatch>;
  set?: InputMaybe<CRM_sourceCategoryPatch>;
};

export type UpdateCRM_sourceCategoryPayload = {
  __typename?: 'UpdateCRM_sourceCategoryPayload';
  cRM_sourceCategory?: Maybe<Array<Maybe<CRM_sourceCategory>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_sourceCategoryPayloadcRM_sourceCategoryArgs = {
  filter?: InputMaybe<CRM_sourceCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceCategoryOrder>;
};

export type UpdateCRM_sourceFormFieldInput = {
  filter: CRM_sourceFormFieldFilter;
  remove?: InputMaybe<CRM_sourceFormFieldPatch>;
  set?: InputMaybe<CRM_sourceFormFieldPatch>;
};

export type UpdateCRM_sourceFormFieldPayload = {
  __typename?: 'UpdateCRM_sourceFormFieldPayload';
  cRM_sourceFormField?: Maybe<Array<Maybe<CRM_sourceFormField>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_sourceFormFieldPayloadcRM_sourceFormFieldArgs = {
  filter?: InputMaybe<CRM_sourceFormFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormFieldOrder>;
};

export type UpdateCRM_sourceFormInput = {
  filter: CRM_sourceFormFilter;
  remove?: InputMaybe<CRM_sourceFormPatch>;
  set?: InputMaybe<CRM_sourceFormPatch>;
};

export type UpdateCRM_sourceFormPayload = {
  __typename?: 'UpdateCRM_sourceFormPayload';
  cRM_sourceForm?: Maybe<Array<Maybe<CRM_sourceForm>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_sourceFormPayloadcRM_sourceFormArgs = {
  filter?: InputMaybe<CRM_sourceFormFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormOrder>;
};

export type UpdateCRM_sourceFormReasonInput = {
  filter: CRM_sourceFormReasonFilter;
  remove?: InputMaybe<CRM_sourceFormReasonPatch>;
  set?: InputMaybe<CRM_sourceFormReasonPatch>;
};

export type UpdateCRM_sourceFormReasonPayload = {
  __typename?: 'UpdateCRM_sourceFormReasonPayload';
  cRM_sourceFormReason?: Maybe<Array<Maybe<CRM_sourceFormReason>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_sourceFormReasonPayloadcRM_sourceFormReasonArgs = {
  filter?: InputMaybe<CRM_sourceFormReasonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceFormReasonOrder>;
};

export type UpdateCRM_sourceForm_emailTemplateInput = {
  filter: CRM_sourceForm_emailTemplateFilter;
  remove?: InputMaybe<CRM_sourceForm_emailTemplatePatch>;
  set?: InputMaybe<CRM_sourceForm_emailTemplatePatch>;
};

export type UpdateCRM_sourceForm_emailTemplatePayload = {
  __typename?: 'UpdateCRM_sourceForm_emailTemplatePayload';
  cRM_sourceForm_emailTemplate?: Maybe<Array<Maybe<CRM_sourceForm_emailTemplate>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_sourceForm_emailTemplatePayloadcRM_sourceForm_emailTemplateArgs = {
  filter?: InputMaybe<CRM_sourceForm_emailTemplateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceForm_emailTemplateOrder>;
};

export type UpdateCRM_sourceInput = {
  filter: CRM_sourceFilter;
  remove?: InputMaybe<CRM_sourcePatch>;
  set?: InputMaybe<CRM_sourcePatch>;
};

export type UpdateCRM_sourcePayload = {
  __typename?: 'UpdateCRM_sourcePayload';
  cRM_source?: Maybe<Array<Maybe<CRM_source>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_sourcePayloadcRM_sourceArgs = {
  filter?: InputMaybe<CRM_sourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_sourceOrder>;
};

export type UpdateCRM_teamAccountInput = {
  filter: CRM_teamAccountFilter;
  remove?: InputMaybe<CRM_teamAccountPatch>;
  set?: InputMaybe<CRM_teamAccountPatch>;
};

export type UpdateCRM_teamAccountPayload = {
  __typename?: 'UpdateCRM_teamAccountPayload';
  cRM_teamAccount?: Maybe<Array<Maybe<CRM_teamAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_teamAccountPayloadcRM_teamAccountArgs = {
  filter?: InputMaybe<CRM_teamAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamAccountOrder>;
};

export type UpdateCRM_teamActionBoardEffectInput = {
  filter: CRM_teamActionBoardEffectFilter;
  remove?: InputMaybe<CRM_teamActionBoardEffectPatch>;
  set?: InputMaybe<CRM_teamActionBoardEffectPatch>;
};

export type UpdateCRM_teamActionBoardEffectPayload = {
  __typename?: 'UpdateCRM_teamActionBoardEffectPayload';
  cRM_teamActionBoardEffect?: Maybe<Array<Maybe<CRM_teamActionBoardEffect>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_teamActionBoardEffectPayloadcRM_teamActionBoardEffectArgs = {
  filter?: InputMaybe<CRM_teamActionBoardEffectFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionBoardEffectOrder>;
};

export type UpdateCRM_teamActionInput = {
  filter: CRM_teamActionFilter;
  remove?: InputMaybe<CRM_teamActionPatch>;
  set?: InputMaybe<CRM_teamActionPatch>;
};

export type UpdateCRM_teamActionPayload = {
  __typename?: 'UpdateCRM_teamActionPayload';
  cRM_teamAction?: Maybe<Array<Maybe<CRM_teamAction>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_teamActionPayloadcRM_teamActionArgs = {
  filter?: InputMaybe<CRM_teamActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamActionOrder>;
};

export type UpdateCRM_teamBoardInput = {
  filter: CRM_teamBoardFilter;
  remove?: InputMaybe<CRM_teamBoardPatch>;
  set?: InputMaybe<CRM_teamBoardPatch>;
};

export type UpdateCRM_teamBoardItemInput = {
  filter: CRM_teamBoardItemFilter;
  remove?: InputMaybe<CRM_teamBoardItemPatch>;
  set?: InputMaybe<CRM_teamBoardItemPatch>;
};

export type UpdateCRM_teamBoardItemPayload = {
  __typename?: 'UpdateCRM_teamBoardItemPayload';
  cRM_teamBoardItem?: Maybe<Array<Maybe<CRM_teamBoardItem>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_teamBoardItemPayloadcRM_teamBoardItemArgs = {
  filter?: InputMaybe<CRM_teamBoardItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardItemOrder>;
};

export type UpdateCRM_teamBoardPayload = {
  __typename?: 'UpdateCRM_teamBoardPayload';
  cRM_teamBoard?: Maybe<Array<Maybe<CRM_teamBoard>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_teamBoardPayloadcRM_teamBoardArgs = {
  filter?: InputMaybe<CRM_teamBoardFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardOrder>;
};

export type UpdateCRM_teamBoardStatusInput = {
  filter: CRM_teamBoardStatusFilter;
  remove?: InputMaybe<CRM_teamBoardStatusPatch>;
  set?: InputMaybe<CRM_teamBoardStatusPatch>;
};

export type UpdateCRM_teamBoardStatusPayload = {
  __typename?: 'UpdateCRM_teamBoardStatusPayload';
  cRM_teamBoardStatus?: Maybe<Array<Maybe<CRM_teamBoardStatus>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_teamBoardStatusPayloadcRM_teamBoardStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardStatusOrder>;
};

export type UpdateCRM_teamBoardSubStatusInput = {
  filter: CRM_teamBoardSubStatusFilter;
  remove?: InputMaybe<CRM_teamBoardSubStatusPatch>;
  set?: InputMaybe<CRM_teamBoardSubStatusPatch>;
};

export type UpdateCRM_teamBoardSubStatusPayload = {
  __typename?: 'UpdateCRM_teamBoardSubStatusPayload';
  cRM_teamBoardSubStatus?: Maybe<Array<Maybe<CRM_teamBoardSubStatus>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_teamBoardSubStatusPayloadcRM_teamBoardSubStatusArgs = {
  filter?: InputMaybe<CRM_teamBoardSubStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardSubStatusOrder>;
};

export type UpdateCRM_teamBoardTaskInput = {
  filter: CRM_teamBoardTaskFilter;
  remove?: InputMaybe<CRM_teamBoardTaskPatch>;
  set?: InputMaybe<CRM_teamBoardTaskPatch>;
};

export type UpdateCRM_teamBoardTaskPayload = {
  __typename?: 'UpdateCRM_teamBoardTaskPayload';
  cRM_teamBoardTask?: Maybe<Array<Maybe<CRM_teamBoardTask>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_teamBoardTaskPayloadcRM_teamBoardTaskArgs = {
  filter?: InputMaybe<CRM_teamBoardTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamBoardTaskOrder>;
};

export type UpdateCRM_teamInput = {
  filter: CRM_teamFilter;
  remove?: InputMaybe<CRM_teamPatch>;
  set?: InputMaybe<CRM_teamPatch>;
};

export type UpdateCRM_teamPayload = {
  __typename?: 'UpdateCRM_teamPayload';
  cRM_team?: Maybe<Array<Maybe<CRM_team>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCRM_teamPayloadcRM_teamArgs = {
  filter?: InputMaybe<CRM_teamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CRM_teamOrder>;
};

export type UpdateChatbots_PACKAGEInput = {
  filter: Chatbots_PACKAGEFilter;
  remove?: InputMaybe<Chatbots_PACKAGEPatch>;
  set?: InputMaybe<Chatbots_PACKAGEPatch>;
};

export type UpdateChatbots_PACKAGEPayload = {
  __typename?: 'UpdateChatbots_PACKAGEPayload';
  chatbots_PACKAGE?: Maybe<Array<Maybe<Chatbots_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_PACKAGEPayloadchatbots_PACKAGEArgs = {
  filter?: InputMaybe<Chatbots_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_PACKAGEOrder>;
};

export type UpdateChatbots_accountInput = {
  filter: Chatbots_accountFilter;
  remove?: InputMaybe<Chatbots_accountPatch>;
  set?: InputMaybe<Chatbots_accountPatch>;
};

export type UpdateChatbots_accountPayload = {
  __typename?: 'UpdateChatbots_accountPayload';
  chatbots_account?: Maybe<Array<Maybe<Chatbots_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_accountPayloadchatbots_accountArgs = {
  filter?: InputMaybe<Chatbots_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_accountOrder>;
};

export type UpdateChatbots_areaAccountInput = {
  filter: Chatbots_areaAccountFilter;
  remove?: InputMaybe<Chatbots_areaAccountPatch>;
  set?: InputMaybe<Chatbots_areaAccountPatch>;
};

export type UpdateChatbots_areaAccountPayload = {
  __typename?: 'UpdateChatbots_areaAccountPayload';
  chatbots_areaAccount?: Maybe<Array<Maybe<Chatbots_areaAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_areaAccountPayloadchatbots_areaAccountArgs = {
  filter?: InputMaybe<Chatbots_areaAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaAccountOrder>;
};

export type UpdateChatbots_areaInput = {
  filter: Chatbots_areaFilter;
  remove?: InputMaybe<Chatbots_areaPatch>;
  set?: InputMaybe<Chatbots_areaPatch>;
};

export type UpdateChatbots_areaPayload = {
  __typename?: 'UpdateChatbots_areaPayload';
  chatbots_area?: Maybe<Array<Maybe<Chatbots_area>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_areaPayloadchatbots_areaArgs = {
  filter?: InputMaybe<Chatbots_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_areaOrder>;
};

export type UpdateChatbots_externalAPIInput = {
  filter: Chatbots_externalAPIFilter;
  remove?: InputMaybe<Chatbots_externalAPIPatch>;
  set?: InputMaybe<Chatbots_externalAPIPatch>;
};

export type UpdateChatbots_externalAPIPayload = {
  __typename?: 'UpdateChatbots_externalAPIPayload';
  chatbots_externalAPI?: Maybe<Array<Maybe<Chatbots_externalAPI>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_externalAPIPayloadchatbots_externalAPIArgs = {
  filter?: InputMaybe<Chatbots_externalAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_externalAPIOrder>;
};

export type UpdateChatbots_externalAPI_fieldInput = {
  filter: Chatbots_externalAPI_fieldFilter;
  remove?: InputMaybe<Chatbots_externalAPI_fieldPatch>;
  set?: InputMaybe<Chatbots_externalAPI_fieldPatch>;
};

export type UpdateChatbots_externalAPI_fieldPayload = {
  __typename?: 'UpdateChatbots_externalAPI_fieldPayload';
  chatbots_externalAPI_field?: Maybe<Array<Maybe<Chatbots_externalAPI_field>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_externalAPI_fieldPayloadchatbots_externalAPI_fieldArgs = {
  filter?: InputMaybe<Chatbots_externalAPI_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_externalAPI_fieldOrder>;
};

export type UpdateChatbots_processAPIInput = {
  filter: Chatbots_processAPIFilter;
  remove?: InputMaybe<Chatbots_processAPIPatch>;
  set?: InputMaybe<Chatbots_processAPIPatch>;
};

export type UpdateChatbots_processAPIPayload = {
  __typename?: 'UpdateChatbots_processAPIPayload';
  chatbots_processAPI?: Maybe<Array<Maybe<Chatbots_processAPI>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processAPIPayloadchatbots_processAPIArgs = {
  filter?: InputMaybe<Chatbots_processAPIFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAPIOrder>;
};

export type UpdateChatbots_processAccountInput = {
  filter: Chatbots_processAccountFilter;
  remove?: InputMaybe<Chatbots_processAccountPatch>;
  set?: InputMaybe<Chatbots_processAccountPatch>;
};

export type UpdateChatbots_processAccountPayload = {
  __typename?: 'UpdateChatbots_processAccountPayload';
  chatbots_processAccount?: Maybe<Array<Maybe<Chatbots_processAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processAccountPayloadchatbots_processAccountArgs = {
  filter?: InputMaybe<Chatbots_processAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processAccountOrder>;
};

export type UpdateChatbots_processActionInput = {
  filter: Chatbots_processActionFilter;
  remove?: InputMaybe<Chatbots_processActionPatch>;
  set?: InputMaybe<Chatbots_processActionPatch>;
};

export type UpdateChatbots_processActionPayload = {
  __typename?: 'UpdateChatbots_processActionPayload';
  chatbots_processAction?: Maybe<Array<Maybe<Chatbots_processAction>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processActionPayloadchatbots_processActionArgs = {
  filter?: InputMaybe<Chatbots_processActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processActionOrder>;
};

export type UpdateChatbots_processButtonInput = {
  filter: Chatbots_processButtonFilter;
  remove?: InputMaybe<Chatbots_processButtonPatch>;
  set?: InputMaybe<Chatbots_processButtonPatch>;
};

export type UpdateChatbots_processButtonPayload = {
  __typename?: 'UpdateChatbots_processButtonPayload';
  chatbots_processButton?: Maybe<Array<Maybe<Chatbots_processButton>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processButtonPayloadchatbots_processButtonArgs = {
  filter?: InputMaybe<Chatbots_processButtonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processButtonOrder>;
};

export type UpdateChatbots_processFieldInput = {
  filter: Chatbots_processFieldFilter;
  remove?: InputMaybe<Chatbots_processFieldPatch>;
  set?: InputMaybe<Chatbots_processFieldPatch>;
};

export type UpdateChatbots_processFieldPayload = {
  __typename?: 'UpdateChatbots_processFieldPayload';
  chatbots_processField?: Maybe<Array<Maybe<Chatbots_processField>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processFieldPayloadchatbots_processFieldArgs = {
  filter?: InputMaybe<Chatbots_processFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFieldOrder>;
};

export type UpdateChatbots_processFilterParamInput = {
  filter: Chatbots_processFilterParamFilter;
  remove?: InputMaybe<Chatbots_processFilterParamPatch>;
  set?: InputMaybe<Chatbots_processFilterParamPatch>;
};

export type UpdateChatbots_processFilterParamPayload = {
  __typename?: 'UpdateChatbots_processFilterParamPayload';
  chatbots_processFilterParam?: Maybe<Array<Maybe<Chatbots_processFilterParam>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processFilterParamPayloadchatbots_processFilterParamArgs = {
  filter?: InputMaybe<Chatbots_processFilterParamFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processFilterParamOrder>;
};

export type UpdateChatbots_processInput = {
  filter: Chatbots_processFilter;
  remove?: InputMaybe<Chatbots_processPatch>;
  set?: InputMaybe<Chatbots_processPatch>;
};

export type UpdateChatbots_processOperationInput = {
  filter: Chatbots_processOperationFilter;
  remove?: InputMaybe<Chatbots_processOperationPatch>;
  set?: InputMaybe<Chatbots_processOperationPatch>;
};

export type UpdateChatbots_processOperationPayload = {
  __typename?: 'UpdateChatbots_processOperationPayload';
  chatbots_processOperation?: Maybe<Array<Maybe<Chatbots_processOperation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processOperationPayloadchatbots_processOperationArgs = {
  filter?: InputMaybe<Chatbots_processOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOperationOrder>;
};

export type UpdateChatbots_processPayload = {
  __typename?: 'UpdateChatbots_processPayload';
  chatbots_process?: Maybe<Array<Maybe<Chatbots_process>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processPayloadchatbots_processArgs = {
  filter?: InputMaybe<Chatbots_processFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processOrder>;
};

export type UpdateChatbots_processStatusInput = {
  filter: Chatbots_processStatusFilter;
  remove?: InputMaybe<Chatbots_processStatusPatch>;
  set?: InputMaybe<Chatbots_processStatusPatch>;
};

export type UpdateChatbots_processStatusPayload = {
  __typename?: 'UpdateChatbots_processStatusPayload';
  chatbots_processStatus?: Maybe<Array<Maybe<Chatbots_processStatus>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processStatusPayloadchatbots_processStatusArgs = {
  filter?: InputMaybe<Chatbots_processStatusFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processStatusOrder>;
};

export type UpdateChatbots_processTableHeadConfigInput = {
  filter: Chatbots_processTableHeadConfigFilter;
  remove?: InputMaybe<Chatbots_processTableHeadConfigPatch>;
  set?: InputMaybe<Chatbots_processTableHeadConfigPatch>;
};

export type UpdateChatbots_processTableHeadConfigPayload = {
  __typename?: 'UpdateChatbots_processTableHeadConfigPayload';
  chatbots_processTableHeadConfig?: Maybe<Array<Maybe<Chatbots_processTableHeadConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processTableHeadConfigPayloadchatbots_processTableHeadConfigArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadConfigOrder>;
};

export type UpdateChatbots_processTableHeadInput = {
  filter: Chatbots_processTableHeadFilter;
  remove?: InputMaybe<Chatbots_processTableHeadPatch>;
  set?: InputMaybe<Chatbots_processTableHeadPatch>;
};

export type UpdateChatbots_processTableHeadPayload = {
  __typename?: 'UpdateChatbots_processTableHeadPayload';
  chatbots_processTableHead?: Maybe<Array<Maybe<Chatbots_processTableHead>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processTableHeadPayloadchatbots_processTableHeadArgs = {
  filter?: InputMaybe<Chatbots_processTableHeadFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableHeadOrder>;
};

export type UpdateChatbots_processTableMatchReplaceInput = {
  filter: Chatbots_processTableMatchReplaceFilter;
  remove?: InputMaybe<Chatbots_processTableMatchReplacePatch>;
  set?: InputMaybe<Chatbots_processTableMatchReplacePatch>;
};

export type UpdateChatbots_processTableMatchReplacePayload = {
  __typename?: 'UpdateChatbots_processTableMatchReplacePayload';
  chatbots_processTableMatchReplace?: Maybe<Array<Maybe<Chatbots_processTableMatchReplace>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processTableMatchReplacePayloadchatbots_processTableMatchReplaceArgs = {
  filter?: InputMaybe<Chatbots_processTableMatchReplaceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processTableMatchReplaceOrder>;
};

export type UpdateChatbots_processValidationInput = {
  filter: Chatbots_processValidationFilter;
  remove?: InputMaybe<Chatbots_processValidationPatch>;
  set?: InputMaybe<Chatbots_processValidationPatch>;
};

export type UpdateChatbots_processValidationOperationInput = {
  filter: Chatbots_processValidationOperationFilter;
  remove?: InputMaybe<Chatbots_processValidationOperationPatch>;
  set?: InputMaybe<Chatbots_processValidationOperationPatch>;
};

export type UpdateChatbots_processValidationOperationPayload = {
  __typename?: 'UpdateChatbots_processValidationOperationPayload';
  chatbots_processValidationOperation?: Maybe<Array<Maybe<Chatbots_processValidationOperation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processValidationOperationPayloadchatbots_processValidationOperationArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperationOrder>;
};

export type UpdateChatbots_processValidationOperation_documentInput = {
  filter: Chatbots_processValidationOperation_documentFilter;
  remove?: InputMaybe<Chatbots_processValidationOperation_documentPatch>;
  set?: InputMaybe<Chatbots_processValidationOperation_documentPatch>;
};

export type UpdateChatbots_processValidationOperation_documentPayload = {
  __typename?: 'UpdateChatbots_processValidationOperation_documentPayload';
  chatbots_processValidationOperation_document?: Maybe<Array<Maybe<Chatbots_processValidationOperation_document>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processValidationOperation_documentPayloadchatbots_processValidationOperation_documentArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_documentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_documentOrder>;
};

export type UpdateChatbots_processValidationOperation_document_fileInput = {
  filter: Chatbots_processValidationOperation_document_fileFilter;
  remove?: InputMaybe<Chatbots_processValidationOperation_document_filePatch>;
  set?: InputMaybe<Chatbots_processValidationOperation_document_filePatch>;
};

export type UpdateChatbots_processValidationOperation_document_filePayload = {
  __typename?: 'UpdateChatbots_processValidationOperation_document_filePayload';
  chatbots_processValidationOperation_document_file?: Maybe<Array<Maybe<Chatbots_processValidationOperation_document_file>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processValidationOperation_document_filePayloadchatbots_processValidationOperation_document_fileArgs = {
  filter?: InputMaybe<Chatbots_processValidationOperation_document_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOperation_document_fileOrder>;
};

export type UpdateChatbots_processValidationPayload = {
  __typename?: 'UpdateChatbots_processValidationPayload';
  chatbots_processValidation?: Maybe<Array<Maybe<Chatbots_processValidation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processValidationPayloadchatbots_processValidationArgs = {
  filter?: InputMaybe<Chatbots_processValidationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processValidationOrder>;
};

export type UpdateChatbots_processsValidationOperation_fieldInput = {
  filter: Chatbots_processsValidationOperation_fieldFilter;
  remove?: InputMaybe<Chatbots_processsValidationOperation_fieldPatch>;
  set?: InputMaybe<Chatbots_processsValidationOperation_fieldPatch>;
};

export type UpdateChatbots_processsValidationOperation_fieldPayload = {
  __typename?: 'UpdateChatbots_processsValidationOperation_fieldPayload';
  chatbots_processsValidationOperation_field?: Maybe<Array<Maybe<Chatbots_processsValidationOperation_field>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_processsValidationOperation_fieldPayloadchatbots_processsValidationOperation_fieldArgs = {
  filter?: InputMaybe<Chatbots_processsValidationOperation_fieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_processsValidationOperation_fieldOrder>;
};

export type UpdateChatbots_validationDocumentInput = {
  filter: Chatbots_validationDocumentFilter;
  remove?: InputMaybe<Chatbots_validationDocumentPatch>;
  set?: InputMaybe<Chatbots_validationDocumentPatch>;
};

export type UpdateChatbots_validationDocumentPayload = {
  __typename?: 'UpdateChatbots_validationDocumentPayload';
  chatbots_validationDocument?: Maybe<Array<Maybe<Chatbots_validationDocument>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_validationDocumentPayloadchatbots_validationDocumentArgs = {
  filter?: InputMaybe<Chatbots_validationDocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocumentOrder>;
};

export type UpdateChatbots_validationDocument_fileInput = {
  filter: Chatbots_validationDocument_fileFilter;
  remove?: InputMaybe<Chatbots_validationDocument_filePatch>;
  set?: InputMaybe<Chatbots_validationDocument_filePatch>;
};

export type UpdateChatbots_validationDocument_filePayload = {
  __typename?: 'UpdateChatbots_validationDocument_filePayload';
  chatbots_validationDocument_file?: Maybe<Array<Maybe<Chatbots_validationDocument_file>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_validationDocument_filePayloadchatbots_validationDocument_fileArgs = {
  filter?: InputMaybe<Chatbots_validationDocument_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationDocument_fileOrder>;
};

export type UpdateChatbots_validationFieldInput = {
  filter: Chatbots_validationFieldFilter;
  remove?: InputMaybe<Chatbots_validationFieldPatch>;
  set?: InputMaybe<Chatbots_validationFieldPatch>;
};

export type UpdateChatbots_validationFieldPayload = {
  __typename?: 'UpdateChatbots_validationFieldPayload';
  chatbots_validationField?: Maybe<Array<Maybe<Chatbots_validationField>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_validationFieldPayloadchatbots_validationFieldArgs = {
  filter?: InputMaybe<Chatbots_validationFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationFieldOrder>;
};

export type UpdateChatbots_validationInput = {
  filter: Chatbots_validationFilter;
  remove?: InputMaybe<Chatbots_validationPatch>;
  set?: InputMaybe<Chatbots_validationPatch>;
};

export type UpdateChatbots_validationPayload = {
  __typename?: 'UpdateChatbots_validationPayload';
  chatbots_validation?: Maybe<Array<Maybe<Chatbots_validation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateChatbots_validationPayloadchatbots_validationArgs = {
  filter?: InputMaybe<Chatbots_validationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Chatbots_validationOrder>;
};

export type UpdateCompanySectorInput = {
  filter: CompanySectorFilter;
  remove?: InputMaybe<CompanySectorPatch>;
  set?: InputMaybe<CompanySectorPatch>;
};

export type UpdateCompanySectorPayload = {
  __typename?: 'UpdateCompanySectorPayload';
  companySector?: Maybe<Array<Maybe<CompanySector>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCompanySectorPayloadcompanySectorArgs = {
  filter?: InputMaybe<CompanySectorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CompanySectorOrder>;
};

export type UpdateContactInput = {
  filter: ContactFilter;
  remove?: InputMaybe<ContactPatch>;
  set?: InputMaybe<ContactPatch>;
};

export type UpdateContactPayload = {
  __typename?: 'UpdateContactPayload';
  contact?: Maybe<Array<Maybe<Contact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateContactPayloadcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ContactOrder>;
};

export type UpdateContact_billingInfoInput = {
  filter: Contact_billingInfoFilter;
  remove?: InputMaybe<Contact_billingInfoPatch>;
  set?: InputMaybe<Contact_billingInfoPatch>;
};

export type UpdateContact_billingInfoPayload = {
  __typename?: 'UpdateContact_billingInfoPayload';
  contact_billingInfo?: Maybe<Array<Maybe<Contact_billingInfo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateContact_billingInfoPayloadcontact_billingInfoArgs = {
  filter?: InputMaybe<Contact_billingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_billingInfoOrder>;
};

export type UpdateContact_businessInfoInput = {
  filter: Contact_businessInfoFilter;
  remove?: InputMaybe<Contact_businessInfoPatch>;
  set?: InputMaybe<Contact_businessInfoPatch>;
};

export type UpdateContact_businessInfoPayload = {
  __typename?: 'UpdateContact_businessInfoPayload';
  contact_businessInfo?: Maybe<Array<Maybe<Contact_businessInfo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateContact_businessInfoPayloadcontact_businessInfoArgs = {
  filter?: InputMaybe<Contact_businessInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_businessInfoOrder>;
};

export type UpdateContact_emailInput = {
  filter: Contact_emailFilter;
  remove?: InputMaybe<Contact_emailPatch>;
  set?: InputMaybe<Contact_emailPatch>;
};

export type UpdateContact_emailPayload = {
  __typename?: 'UpdateContact_emailPayload';
  contact_email?: Maybe<Array<Maybe<Contact_email>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateContact_emailPayloadcontact_emailArgs = {
  filter?: InputMaybe<Contact_emailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_emailOrder>;
};

export type UpdateContact_importLogInput = {
  filter: Contact_importLogFilter;
  remove?: InputMaybe<Contact_importLogPatch>;
  set?: InputMaybe<Contact_importLogPatch>;
};

export type UpdateContact_importLogPayload = {
  __typename?: 'UpdateContact_importLogPayload';
  contact_importLog?: Maybe<Array<Maybe<Contact_importLog>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateContact_importLogPayloadcontact_importLogArgs = {
  filter?: InputMaybe<Contact_importLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_importLogOrder>;
};

export type UpdateContact_jobPositionInput = {
  filter: Contact_jobPositionFilter;
  remove?: InputMaybe<Contact_jobPositionPatch>;
  set?: InputMaybe<Contact_jobPositionPatch>;
};

export type UpdateContact_jobPositionPayload = {
  __typename?: 'UpdateContact_jobPositionPayload';
  contact_jobPosition?: Maybe<Array<Maybe<Contact_jobPosition>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateContact_jobPositionPayloadcontact_jobPositionArgs = {
  filter?: InputMaybe<Contact_jobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_jobPositionOrder>;
};

export type UpdateContact_phoneInput = {
  filter: Contact_phoneFilter;
  remove?: InputMaybe<Contact_phonePatch>;
  set?: InputMaybe<Contact_phonePatch>;
};

export type UpdateContact_phonePayload = {
  __typename?: 'UpdateContact_phonePayload';
  contact_phone?: Maybe<Array<Maybe<Contact_phone>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateContact_phonePayloadcontact_phoneArgs = {
  filter?: InputMaybe<Contact_phoneFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Contact_phoneOrder>;
};

export type UpdateCountryInput = {
  filter: CountryFilter;
  remove?: InputMaybe<CountryPatch>;
  set?: InputMaybe<CountryPatch>;
};

export type UpdateCountryPayload = {
  __typename?: 'UpdateCountryPayload';
  country?: Maybe<Array<Maybe<Country>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCountryPayloadcountryArgs = {
  filter?: InputMaybe<CountryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CountryOrder>;
};

export type UpdateCurrencyInput = {
  filter: CurrencyFilter;
  remove?: InputMaybe<CurrencyPatch>;
  set?: InputMaybe<CurrencyPatch>;
};

export type UpdateCurrencyPayload = {
  __typename?: 'UpdateCurrencyPayload';
  currency?: Maybe<Array<Maybe<Currency>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCurrencyPayloadcurrencyArgs = {
  filter?: InputMaybe<CurrencyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CurrencyOrder>;
};

export type UpdateDynamicTableInput = {
  filter: DynamicTableFilter;
  remove?: InputMaybe<DynamicTablePatch>;
  set?: InputMaybe<DynamicTablePatch>;
};

export type UpdateDynamicTablePayload = {
  __typename?: 'UpdateDynamicTablePayload';
  dynamicTable?: Maybe<Array<Maybe<DynamicTable>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDynamicTablePayloaddynamicTableArgs = {
  filter?: InputMaybe<DynamicTableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTableOrder>;
};

export type UpdateDynamicTable_accountInput = {
  filter: DynamicTable_accountFilter;
  remove?: InputMaybe<DynamicTable_accountPatch>;
  set?: InputMaybe<DynamicTable_accountPatch>;
};

export type UpdateDynamicTable_accountPayload = {
  __typename?: 'UpdateDynamicTable_accountPayload';
  dynamicTable_account?: Maybe<Array<Maybe<DynamicTable_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDynamicTable_accountPayloaddynamicTable_accountArgs = {
  filter?: InputMaybe<DynamicTable_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateDynamicTable_headInput = {
  filter: DynamicTable_headFilter;
  remove?: InputMaybe<DynamicTable_headPatch>;
  set?: InputMaybe<DynamicTable_headPatch>;
};

export type UpdateDynamicTable_headPayload = {
  __typename?: 'UpdateDynamicTable_headPayload';
  dynamicTable_head?: Maybe<Array<Maybe<DynamicTable_head>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDynamicTable_headPayloaddynamicTable_headArgs = {
  filter?: InputMaybe<DynamicTable_headFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headOrder>;
};

export type UpdateDynamicTable_headValueBooleanOptionsInput = {
  filter: DynamicTable_headValueBooleanOptionsFilter;
  remove?: InputMaybe<DynamicTable_headValueBooleanOptionsPatch>;
  set?: InputMaybe<DynamicTable_headValueBooleanOptionsPatch>;
};

export type UpdateDynamicTable_headValueBooleanOptionsPayload = {
  __typename?: 'UpdateDynamicTable_headValueBooleanOptionsPayload';
  dynamicTable_headValueBooleanOptions?: Maybe<Array<Maybe<DynamicTable_headValueBooleanOptions>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDynamicTable_headValueBooleanOptionsPayloaddynamicTable_headValueBooleanOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueBooleanOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headValueBooleanOptionsOrder>;
};

export type UpdateDynamicTable_headValueCurrencyOptionsInput = {
  filter: DynamicTable_headValueCurrencyOptionsFilter;
  remove?: InputMaybe<DynamicTable_headValueCurrencyOptionsPatch>;
  set?: InputMaybe<DynamicTable_headValueCurrencyOptionsPatch>;
};

export type UpdateDynamicTable_headValueCurrencyOptionsPayload = {
  __typename?: 'UpdateDynamicTable_headValueCurrencyOptionsPayload';
  dynamicTable_headValueCurrencyOptions?: Maybe<Array<Maybe<DynamicTable_headValueCurrencyOptions>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDynamicTable_headValueCurrencyOptionsPayloaddynamicTable_headValueCurrencyOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueCurrencyOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateDynamicTable_headValueDateOptionsInput = {
  filter: DynamicTable_headValueDateOptionsFilter;
  remove?: InputMaybe<DynamicTable_headValueDateOptionsPatch>;
  set?: InputMaybe<DynamicTable_headValueDateOptionsPatch>;
};

export type UpdateDynamicTable_headValueDateOptionsPayload = {
  __typename?: 'UpdateDynamicTable_headValueDateOptionsPayload';
  dynamicTable_headValueDateOptions?: Maybe<Array<Maybe<DynamicTable_headValueDateOptions>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDynamicTable_headValueDateOptionsPayloaddynamicTable_headValueDateOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueDateOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DynamicTable_headValueDateOptionsOrder>;
};

export type UpdateDynamicTable_headValueLinkOptionsInput = {
  filter: DynamicTable_headValueLinkOptionsFilter;
  remove?: InputMaybe<DynamicTable_headValueLinkOptionsPatch>;
  set?: InputMaybe<DynamicTable_headValueLinkOptionsPatch>;
};

export type UpdateDynamicTable_headValueLinkOptionsPayload = {
  __typename?: 'UpdateDynamicTable_headValueLinkOptionsPayload';
  dynamicTable_headValueLinkOptions?: Maybe<Array<Maybe<DynamicTable_headValueLinkOptions>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDynamicTable_headValueLinkOptionsPayloaddynamicTable_headValueLinkOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueLinkOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateDynamicTable_headValueNumberOptionsInput = {
  filter: DynamicTable_headValueNumberOptionsFilter;
  remove?: InputMaybe<DynamicTable_headValueNumberOptionsPatch>;
  set?: InputMaybe<DynamicTable_headValueNumberOptionsPatch>;
};

export type UpdateDynamicTable_headValueNumberOptionsPayload = {
  __typename?: 'UpdateDynamicTable_headValueNumberOptionsPayload';
  dynamicTable_headValueNumberOptions?: Maybe<Array<Maybe<DynamicTable_headValueNumberOptions>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDynamicTable_headValueNumberOptionsPayloaddynamicTable_headValueNumberOptionsArgs = {
  filter?: InputMaybe<DynamicTable_headValueNumberOptionsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateE360AppInput = {
  filter: E360AppFilter;
  remove?: InputMaybe<E360AppPatch>;
  set?: InputMaybe<E360AppPatch>;
};

export type UpdateE360AppPayload = {
  __typename?: 'UpdateE360AppPayload';
  e360App?: Maybe<Array<Maybe<E360App>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360AppPayloade360AppArgs = {
  filter?: InputMaybe<E360AppFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360AppOrder>;
};

export type UpdateE360App_domainInput = {
  filter: E360App_domainFilter;
  remove?: InputMaybe<E360App_domainPatch>;
  set?: InputMaybe<E360App_domainPatch>;
};

export type UpdateE360App_domainPayload = {
  __typename?: 'UpdateE360App_domainPayload';
  e360App_domain?: Maybe<Array<Maybe<E360App_domain>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_domainPayloade360App_domainArgs = {
  filter?: InputMaybe<E360App_domainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_domainOrder>;
};

export type UpdateE360App_locationFileInput = {
  filter: E360App_locationFileFilter;
  remove?: InputMaybe<E360App_locationFilePatch>;
  set?: InputMaybe<E360App_locationFilePatch>;
};

export type UpdateE360App_locationFilePayload = {
  __typename?: 'UpdateE360App_locationFilePayload';
  e360App_locationFile?: Maybe<Array<Maybe<E360App_locationFile>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_locationFilePayloade360App_locationFileArgs = {
  filter?: InputMaybe<E360App_locationFileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationFileOrder>;
};

export type UpdateE360App_locationInput = {
  filter: E360App_locationFilter;
  remove?: InputMaybe<E360App_locationPatch>;
  set?: InputMaybe<E360App_locationPatch>;
};

export type UpdateE360App_locationPayload = {
  __typename?: 'UpdateE360App_locationPayload';
  e360App_location?: Maybe<Array<Maybe<E360App_location>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_locationPayloade360App_locationArgs = {
  filter?: InputMaybe<E360App_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationOrder>;
};

export type UpdateE360App_locationScheduleInput = {
  filter: E360App_locationScheduleFilter;
  remove?: InputMaybe<E360App_locationSchedulePatch>;
  set?: InputMaybe<E360App_locationSchedulePatch>;
};

export type UpdateE360App_locationSchedulePayload = {
  __typename?: 'UpdateE360App_locationSchedulePayload';
  e360App_locationSchedule?: Maybe<Array<Maybe<E360App_locationSchedule>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_locationSchedulePayloade360App_locationScheduleArgs = {
  filter?: InputMaybe<E360App_locationScheduleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_locationScheduleOrder>;
};

export type UpdateE360App_location_appoinmentInput = {
  filter: E360App_location_appoinmentFilter;
  remove?: InputMaybe<E360App_location_appoinmentPatch>;
  set?: InputMaybe<E360App_location_appoinmentPatch>;
};

export type UpdateE360App_location_appoinmentLotsInput = {
  filter: E360App_location_appoinmentLotsFilter;
  remove?: InputMaybe<E360App_location_appoinmentLotsPatch>;
  set?: InputMaybe<E360App_location_appoinmentLotsPatch>;
};

export type UpdateE360App_location_appoinmentLotsPayload = {
  __typename?: 'UpdateE360App_location_appoinmentLotsPayload';
  e360App_location_appoinmentLots?: Maybe<Array<Maybe<E360App_location_appoinmentLots>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_appoinmentLotsPayloade360App_location_appoinmentLotsArgs = {
  filter?: InputMaybe<E360App_location_appoinmentLotsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentLotsOrder>;
};

export type UpdateE360App_location_appoinmentPayload = {
  __typename?: 'UpdateE360App_location_appoinmentPayload';
  e360App_location_appoinment?: Maybe<Array<Maybe<E360App_location_appoinment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_appoinmentPayloade360App_location_appoinmentArgs = {
  filter?: InputMaybe<E360App_location_appoinmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_appoinmentOrder>;
};

export type UpdateE360App_location_areaInput = {
  filter: E360App_location_areaFilter;
  remove?: InputMaybe<E360App_location_areaPatch>;
  set?: InputMaybe<E360App_location_areaPatch>;
};

export type UpdateE360App_location_areaPayload = {
  __typename?: 'UpdateE360App_location_areaPayload';
  e360App_location_area?: Maybe<Array<Maybe<E360App_location_area>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_areaPayloade360App_location_areaArgs = {
  filter?: InputMaybe<E360App_location_areaFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_areaOrder>;
};

export type UpdateE360App_location_area_resourceInput = {
  filter: E360App_location_area_resourceFilter;
  remove?: InputMaybe<E360App_location_area_resourcePatch>;
  set?: InputMaybe<E360App_location_area_resourcePatch>;
};

export type UpdateE360App_location_area_resourcePayload = {
  __typename?: 'UpdateE360App_location_area_resourcePayload';
  e360App_location_area_resource?: Maybe<Array<Maybe<E360App_location_area_resource>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_area_resourcePayloade360App_location_area_resourceArgs = {
  filter?: InputMaybe<E360App_location_area_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_resourceOrder>;
};

export type UpdateE360App_location_area_workShiftInput = {
  filter: E360App_location_area_workShiftFilter;
  remove?: InputMaybe<E360App_location_area_workShiftPatch>;
  set?: InputMaybe<E360App_location_area_workShiftPatch>;
};

export type UpdateE360App_location_area_workShiftPayload = {
  __typename?: 'UpdateE360App_location_area_workShiftPayload';
  e360App_location_area_workShift?: Maybe<Array<Maybe<E360App_location_area_workShift>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_area_workShiftPayloade360App_location_area_workShiftArgs = {
  filter?: InputMaybe<E360App_location_area_workShiftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_area_workShiftOrder>;
};

export type UpdateE360App_location_menuInput = {
  filter: E360App_location_menuFilter;
  remove?: InputMaybe<E360App_location_menuPatch>;
  set?: InputMaybe<E360App_location_menuPatch>;
};

export type UpdateE360App_location_menuPayload = {
  __typename?: 'UpdateE360App_location_menuPayload';
  e360App_location_menu?: Maybe<Array<Maybe<E360App_location_menu>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_menuPayloade360App_location_menuArgs = {
  filter?: InputMaybe<E360App_location_menuFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menuOrder>;
};

export type UpdateE360App_location_menu_comboInput = {
  filter: E360App_location_menu_comboFilter;
  remove?: InputMaybe<E360App_location_menu_comboPatch>;
  set?: InputMaybe<E360App_location_menu_comboPatch>;
};

export type UpdateE360App_location_menu_comboPayload = {
  __typename?: 'UpdateE360App_location_menu_comboPayload';
  e360App_location_menu_combo?: Maybe<Array<Maybe<E360App_location_menu_combo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_menu_comboPayloade360App_location_menu_comboArgs = {
  filter?: InputMaybe<E360App_location_menu_comboFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_comboOrder>;
};

export type UpdateE360App_location_menu_itemInput = {
  filter: E360App_location_menu_itemFilter;
  remove?: InputMaybe<E360App_location_menu_itemPatch>;
  set?: InputMaybe<E360App_location_menu_itemPatch>;
};

export type UpdateE360App_location_menu_itemPayload = {
  __typename?: 'UpdateE360App_location_menu_itemPayload';
  e360App_location_menu_item?: Maybe<Array<Maybe<E360App_location_menu_item>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_menu_itemPayloade360App_location_menu_itemArgs = {
  filter?: InputMaybe<E360App_location_menu_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_itemOrder>;
};

export type UpdateE360App_location_menu_sectionInput = {
  filter: E360App_location_menu_sectionFilter;
  remove?: InputMaybe<E360App_location_menu_sectionPatch>;
  set?: InputMaybe<E360App_location_menu_sectionPatch>;
};

export type UpdateE360App_location_menu_sectionPayload = {
  __typename?: 'UpdateE360App_location_menu_sectionPayload';
  e360App_location_menu_section?: Maybe<Array<Maybe<E360App_location_menu_section>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_menu_sectionPayloade360App_location_menu_sectionArgs = {
  filter?: InputMaybe<E360App_location_menu_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_sectionOrder>;
};

export type UpdateE360App_location_menu_section_itemInput = {
  filter: E360App_location_menu_section_itemFilter;
  remove?: InputMaybe<E360App_location_menu_section_itemPatch>;
  set?: InputMaybe<E360App_location_menu_section_itemPatch>;
};

export type UpdateE360App_location_menu_section_itemPayload = {
  __typename?: 'UpdateE360App_location_menu_section_itemPayload';
  e360App_location_menu_section_item?: Maybe<Array<Maybe<E360App_location_menu_section_item>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_menu_section_itemPayloade360App_location_menu_section_itemArgs = {
  filter?: InputMaybe<E360App_location_menu_section_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_section_itemOrder>;
};

export type UpdateE360App_location_menu_subSectionInput = {
  filter: E360App_location_menu_subSectionFilter;
  remove?: InputMaybe<E360App_location_menu_subSectionPatch>;
  set?: InputMaybe<E360App_location_menu_subSectionPatch>;
};

export type UpdateE360App_location_menu_subSectionPayload = {
  __typename?: 'UpdateE360App_location_menu_subSectionPayload';
  e360App_location_menu_subSection?: Maybe<Array<Maybe<E360App_location_menu_subSection>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_menu_subSectionPayloade360App_location_menu_subSectionArgs = {
  filter?: InputMaybe<E360App_location_menu_subSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_subSectionOrder>;
};

export type UpdateE360App_location_menu_tagInput = {
  filter: E360App_location_menu_tagFilter;
  remove?: InputMaybe<E360App_location_menu_tagPatch>;
  set?: InputMaybe<E360App_location_menu_tagPatch>;
};

export type UpdateE360App_location_menu_tagPayload = {
  __typename?: 'UpdateE360App_location_menu_tagPayload';
  e360App_location_menu_tag?: Maybe<Array<Maybe<E360App_location_menu_tag>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_location_menu_tagPayloade360App_location_menu_tagArgs = {
  filter?: InputMaybe<E360App_location_menu_tagFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_location_menu_tagOrder>;
};

export type UpdateE360App_notificationInput = {
  filter: E360App_notificationFilter;
  remove?: InputMaybe<E360App_notificationPatch>;
  set?: InputMaybe<E360App_notificationPatch>;
};

export type UpdateE360App_notificationPayload = {
  __typename?: 'UpdateE360App_notificationPayload';
  e360App_notification?: Maybe<Array<Maybe<E360App_notification>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_notificationPayloade360App_notificationArgs = {
  filter?: InputMaybe<E360App_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_notificationOrder>;
};

export type UpdateE360App_organizationInput = {
  filter: E360App_organizationFilter;
  remove?: InputMaybe<E360App_organizationPatch>;
  set?: InputMaybe<E360App_organizationPatch>;
};

export type UpdateE360App_organizationPayload = {
  __typename?: 'UpdateE360App_organizationPayload';
  e360App_organization?: Maybe<Array<Maybe<E360App_organization>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_organizationPayloade360App_organizationArgs = {
  filter?: InputMaybe<E360App_organizationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organizationOrder>;
};

export type UpdateE360App_organization_userInput = {
  filter: E360App_organization_userFilter;
  remove?: InputMaybe<E360App_organization_userPatch>;
  set?: InputMaybe<E360App_organization_userPatch>;
};

export type UpdateE360App_organization_userPayload = {
  __typename?: 'UpdateE360App_organization_userPayload';
  e360App_organization_user?: Maybe<Array<Maybe<E360App_organization_user>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_organization_userPayloade360App_organization_userArgs = {
  filter?: InputMaybe<E360App_organization_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_organization_userOrder>;
};

export type UpdateE360App_partnerInput = {
  filter: E360App_partnerFilter;
  remove?: InputMaybe<E360App_partnerPatch>;
  set?: InputMaybe<E360App_partnerPatch>;
};

export type UpdateE360App_partnerPayload = {
  __typename?: 'UpdateE360App_partnerPayload';
  e360App_partner?: Maybe<Array<Maybe<E360App_partner>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_partnerPayloade360App_partnerArgs = {
  filter?: InputMaybe<E360App_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partnerOrder>;
};

export type UpdateE360App_partner_webhookInput = {
  filter: E360App_partner_webhookFilter;
  remove?: InputMaybe<E360App_partner_webhookPatch>;
  set?: InputMaybe<E360App_partner_webhookPatch>;
};

export type UpdateE360App_partner_webhookPayload = {
  __typename?: 'UpdateE360App_partner_webhookPayload';
  e360App_partner_webhook?: Maybe<Array<Maybe<E360App_partner_webhook>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_partner_webhookPayloade360App_partner_webhookArgs = {
  filter?: InputMaybe<E360App_partner_webhookFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_partner_webhookOrder>;
};

export type UpdateE360App_shopInput = {
  filter: E360App_shopFilter;
  remove?: InputMaybe<E360App_shopPatch>;
  set?: InputMaybe<E360App_shopPatch>;
};

export type UpdateE360App_shopPayload = {
  __typename?: 'UpdateE360App_shopPayload';
  e360App_shop?: Maybe<Array<Maybe<E360App_shop>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shopPayloade360App_shopArgs = {
  filter?: InputMaybe<E360App_shopFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shopOrder>;
};

export type UpdateE360App_shop_contractInput = {
  filter: E360App_shop_contractFilter;
  remove?: InputMaybe<E360App_shop_contractPatch>;
  set?: InputMaybe<E360App_shop_contractPatch>;
};

export type UpdateE360App_shop_contractPayload = {
  __typename?: 'UpdateE360App_shop_contractPayload';
  e360App_shop_contract?: Maybe<Array<Maybe<E360App_shop_contract>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_contractPayloade360App_shop_contractArgs = {
  filter?: InputMaybe<E360App_shop_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_contractOrder>;
};

export type UpdateE360App_shop_customer_contractInput = {
  filter: E360App_shop_customer_contractFilter;
  remove?: InputMaybe<E360App_shop_customer_contractPatch>;
  set?: InputMaybe<E360App_shop_customer_contractPatch>;
};

export type UpdateE360App_shop_customer_contractPayload = {
  __typename?: 'UpdateE360App_shop_customer_contractPayload';
  e360App_shop_customer_contract?: Maybe<Array<Maybe<E360App_shop_customer_contract>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_customer_contractPayloade360App_shop_customer_contractArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractOrder>;
};

export type UpdateE360App_shop_customer_contractServiceInput = {
  filter: E360App_shop_customer_contractServiceFilter;
  remove?: InputMaybe<E360App_shop_customer_contractServicePatch>;
  set?: InputMaybe<E360App_shop_customer_contractServicePatch>;
};

export type UpdateE360App_shop_customer_contractServicePayload = {
  __typename?: 'UpdateE360App_shop_customer_contractServicePayload';
  e360App_shop_customer_contractService?: Maybe<Array<Maybe<E360App_shop_customer_contractService>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_customer_contractServicePayloade360App_shop_customer_contractServiceArgs = {
  filter?: InputMaybe<E360App_shop_customer_contractServiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contractServiceOrder>;
};

export type UpdateE360App_shop_customer_contract_renewalInput = {
  filter: E360App_shop_customer_contract_renewalFilter;
  remove?: InputMaybe<E360App_shop_customer_contract_renewalPatch>;
  set?: InputMaybe<E360App_shop_customer_contract_renewalPatch>;
};

export type UpdateE360App_shop_customer_contract_renewalPayload = {
  __typename?: 'UpdateE360App_shop_customer_contract_renewalPayload';
  e360App_shop_customer_contract_renewal?: Maybe<Array<Maybe<E360App_shop_customer_contract_renewal>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_customer_contract_renewalPayloade360App_shop_customer_contract_renewalArgs = {
  filter?: InputMaybe<E360App_shop_customer_contract_renewalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_customer_contract_renewalOrder>;
};

export type UpdateE360App_shop_operationInput = {
  filter: E360App_shop_operationFilter;
  remove?: InputMaybe<E360App_shop_operationPatch>;
  set?: InputMaybe<E360App_shop_operationPatch>;
};

export type UpdateE360App_shop_operationPayload = {
  __typename?: 'UpdateE360App_shop_operationPayload';
  e360App_shop_operation?: Maybe<Array<Maybe<E360App_shop_operation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_operationPayloade360App_shop_operationArgs = {
  filter?: InputMaybe<E360App_shop_operationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_operationOrder>;
};

export type UpdateE360App_shop_partner_contractInput = {
  filter: E360App_shop_partner_contractFilter;
  remove?: InputMaybe<E360App_shop_partner_contractPatch>;
  set?: InputMaybe<E360App_shop_partner_contractPatch>;
};

export type UpdateE360App_shop_partner_contractPayload = {
  __typename?: 'UpdateE360App_shop_partner_contractPayload';
  e360App_shop_partner_contract?: Maybe<Array<Maybe<E360App_shop_partner_contract>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_partner_contractPayloade360App_shop_partner_contractArgs = {
  filter?: InputMaybe<E360App_shop_partner_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_partner_contractOrder>;
};

export type UpdateE360App_shop_productInput = {
  filter: E360App_shop_productFilter;
  remove?: InputMaybe<E360App_shop_productPatch>;
  set?: InputMaybe<E360App_shop_productPatch>;
};

export type UpdateE360App_shop_productItemInput = {
  filter: E360App_shop_productItemFilter;
  remove?: InputMaybe<E360App_shop_productItemPatch>;
  set?: InputMaybe<E360App_shop_productItemPatch>;
};

export type UpdateE360App_shop_productItemPayload = {
  __typename?: 'UpdateE360App_shop_productItemPayload';
  e360App_shop_productItem?: Maybe<Array<Maybe<E360App_shop_productItem>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_productItemPayloade360App_shop_productItemArgs = {
  filter?: InputMaybe<E360App_shop_productItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productItemOrder>;
};

export type UpdateE360App_shop_productPayload = {
  __typename?: 'UpdateE360App_shop_productPayload';
  e360App_shop_product?: Maybe<Array<Maybe<E360App_shop_product>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_productPayloade360App_shop_productArgs = {
  filter?: InputMaybe<E360App_shop_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productOrder>;
};

export type UpdateE360App_shop_productServiceInput = {
  filter: E360App_shop_productServiceFilter;
  remove?: InputMaybe<E360App_shop_productServicePatch>;
  set?: InputMaybe<E360App_shop_productServicePatch>;
};

export type UpdateE360App_shop_productServicePayload = {
  __typename?: 'UpdateE360App_shop_productServicePayload';
  e360App_shop_productService?: Maybe<Array<Maybe<E360App_shop_productService>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_productServicePayloade360App_shop_productServiceArgs = {
  filter?: InputMaybe<E360App_shop_productServiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_productServiceOrder>;
};

export type UpdateE360App_shop_promoProductInput = {
  filter: E360App_shop_promoProductFilter;
  remove?: InputMaybe<E360App_shop_promoProductPatch>;
  set?: InputMaybe<E360App_shop_promoProductPatch>;
};

export type UpdateE360App_shop_promoProductPayload = {
  __typename?: 'UpdateE360App_shop_promoProductPayload';
  e360App_shop_promoProduct?: Maybe<Array<Maybe<E360App_shop_promoProduct>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_promoProductPayloade360App_shop_promoProductArgs = {
  filter?: InputMaybe<E360App_shop_promoProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promoProductOrder>;
};

export type UpdateE360App_shop_promotionCodeInput = {
  filter: E360App_shop_promotionCodeFilter;
  remove?: InputMaybe<E360App_shop_promotionCodePatch>;
  set?: InputMaybe<E360App_shop_promotionCodePatch>;
};

export type UpdateE360App_shop_promotionCodePayload = {
  __typename?: 'UpdateE360App_shop_promotionCodePayload';
  e360App_shop_promotionCode?: Maybe<Array<Maybe<E360App_shop_promotionCode>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_promotionCodePayloade360App_shop_promotionCodeArgs = {
  filter?: InputMaybe<E360App_shop_promotionCodeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionCodeOrder>;
};

export type UpdateE360App_shop_promotionInput = {
  filter: E360App_shop_promotionFilter;
  remove?: InputMaybe<E360App_shop_promotionPatch>;
  set?: InputMaybe<E360App_shop_promotionPatch>;
};

export type UpdateE360App_shop_promotionPayload = {
  __typename?: 'UpdateE360App_shop_promotionPayload';
  e360App_shop_promotion?: Maybe<Array<Maybe<E360App_shop_promotion>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_promotionPayloade360App_shop_promotionArgs = {
  filter?: InputMaybe<E360App_shop_promotionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_promotionOrder>;
};

export type UpdateE360App_shop_purchaseInput = {
  filter: E360App_shop_purchaseFilter;
  remove?: InputMaybe<E360App_shop_purchasePatch>;
  set?: InputMaybe<E360App_shop_purchasePatch>;
};

export type UpdateE360App_shop_purchasePayload = {
  __typename?: 'UpdateE360App_shop_purchasePayload';
  e360App_shop_purchase?: Maybe<Array<Maybe<E360App_shop_purchase>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_purchasePayloade360App_shop_purchaseArgs = {
  filter?: InputMaybe<E360App_shop_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseOrder>;
};

export type UpdateE360App_shop_purchaseProviderEventInput = {
  filter: E360App_shop_purchaseProviderEventFilter;
  remove?: InputMaybe<E360App_shop_purchaseProviderEventPatch>;
  set?: InputMaybe<E360App_shop_purchaseProviderEventPatch>;
};

export type UpdateE360App_shop_purchaseProviderEventPayload = {
  __typename?: 'UpdateE360App_shop_purchaseProviderEventPayload';
  e360App_shop_purchaseProviderEvent?: Maybe<Array<Maybe<E360App_shop_purchaseProviderEvent>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_shop_purchaseProviderEventPayloade360App_shop_purchaseProviderEventArgs = {
  filter?: InputMaybe<E360App_shop_purchaseProviderEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_shop_purchaseProviderEventOrder>;
};

export type UpdateE360App_stablishmentInput = {
  filter: E360App_stablishmentFilter;
  remove?: InputMaybe<E360App_stablishmentPatch>;
  set?: InputMaybe<E360App_stablishmentPatch>;
};

export type UpdateE360App_stablishmentPayload = {
  __typename?: 'UpdateE360App_stablishmentPayload';
  e360App_stablishment?: Maybe<Array<Maybe<E360App_stablishment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_stablishmentPayloade360App_stablishmentArgs = {
  filter?: InputMaybe<E360App_stablishmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishmentOrder>;
};

export type UpdateE360App_stablishment_userInput = {
  filter: E360App_stablishment_userFilter;
  remove?: InputMaybe<E360App_stablishment_userPatch>;
  set?: InputMaybe<E360App_stablishment_userPatch>;
};

export type UpdateE360App_stablishment_userPayload = {
  __typename?: 'UpdateE360App_stablishment_userPayload';
  e360App_stablishment_user?: Maybe<Array<Maybe<E360App_stablishment_user>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_stablishment_userPayloade360App_stablishment_userArgs = {
  filter?: InputMaybe<E360App_stablishment_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_stablishment_userOrder>;
};

export type UpdateE360App_userInput = {
  filter: E360App_userFilter;
  remove?: InputMaybe<E360App_userPatch>;
  set?: InputMaybe<E360App_userPatch>;
};

export type UpdateE360App_userLogInput = {
  filter: E360App_userLogFilter;
  remove?: InputMaybe<E360App_userLogPatch>;
  set?: InputMaybe<E360App_userLogPatch>;
};

export type UpdateE360App_userLogPayload = {
  __typename?: 'UpdateE360App_userLogPayload';
  e360App_userLog?: Maybe<Array<Maybe<E360App_userLog>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_userLogPayloade360App_userLogArgs = {
  filter?: InputMaybe<E360App_userLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userLogOrder>;
};

export type UpdateE360App_userPayload = {
  __typename?: 'UpdateE360App_userPayload';
  e360App_user?: Maybe<Array<Maybe<E360App_user>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_userPayloade360App_userArgs = {
  filter?: InputMaybe<E360App_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userOrder>;
};

export type UpdateE360App_userSessionConnectionInput = {
  filter: E360App_userSessionConnectionFilter;
  remove?: InputMaybe<E360App_userSessionConnectionPatch>;
  set?: InputMaybe<E360App_userSessionConnectionPatch>;
};

export type UpdateE360App_userSessionConnectionPayload = {
  __typename?: 'UpdateE360App_userSessionConnectionPayload';
  e360App_userSessionConnection?: Maybe<Array<Maybe<E360App_userSessionConnection>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_userSessionConnectionPayloade360App_userSessionConnectionArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionOrder>;
};

export type UpdateE360App_userSessionConnectionTaskInput = {
  filter: E360App_userSessionConnectionTaskFilter;
  remove?: InputMaybe<E360App_userSessionConnectionTaskPatch>;
  set?: InputMaybe<E360App_userSessionConnectionTaskPatch>;
};

export type UpdateE360App_userSessionConnectionTaskPayload = {
  __typename?: 'UpdateE360App_userSessionConnectionTaskPayload';
  e360App_userSessionConnectionTask?: Maybe<Array<Maybe<E360App_userSessionConnectionTask>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_userSessionConnectionTaskPayloade360App_userSessionConnectionTaskArgs = {
  filter?: InputMaybe<E360App_userSessionConnectionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionConnectionTaskOrder>;
};

export type UpdateE360App_userSessionInput = {
  filter: E360App_userSessionFilter;
  remove?: InputMaybe<E360App_userSessionPatch>;
  set?: InputMaybe<E360App_userSessionPatch>;
};

export type UpdateE360App_userSessionPayload = {
  __typename?: 'UpdateE360App_userSessionPayload';
  e360App_userSession?: Maybe<Array<Maybe<E360App_userSession>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_userSessionPayloade360App_userSessionArgs = {
  filter?: InputMaybe<E360App_userSessionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionOrder>;
};

export type UpdateE360App_userSessionTaskInput = {
  filter: E360App_userSessionTaskFilter;
  remove?: InputMaybe<E360App_userSessionTaskPatch>;
  set?: InputMaybe<E360App_userSessionTaskPatch>;
};

export type UpdateE360App_userSessionTaskPayload = {
  __typename?: 'UpdateE360App_userSessionTaskPayload';
  e360App_userSessionTask?: Maybe<Array<Maybe<E360App_userSessionTask>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_userSessionTaskPayloade360App_userSessionTaskArgs = {
  filter?: InputMaybe<E360App_userSessionTaskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userSessionTaskOrder>;
};

export type UpdateE360App_user_notificationInput = {
  filter: E360App_user_notificationFilter;
  remove?: InputMaybe<E360App_user_notificationPatch>;
  set?: InputMaybe<E360App_user_notificationPatch>;
};

export type UpdateE360App_user_notificationPayload = {
  __typename?: 'UpdateE360App_user_notificationPayload';
  e360App_user_notification?: Maybe<Array<Maybe<E360App_user_notification>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_user_notificationPayloade360App_user_notificationArgs = {
  filter?: InputMaybe<E360App_user_notificationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_notificationOrder>;
};

export type UpdateE360App_user_partnerInput = {
  filter: E360App_user_partnerFilter;
  remove?: InputMaybe<E360App_user_partnerPatch>;
  set?: InputMaybe<E360App_user_partnerPatch>;
};

export type UpdateE360App_user_partnerPayload = {
  __typename?: 'UpdateE360App_user_partnerPayload';
  e360App_user_partner?: Maybe<Array<Maybe<E360App_user_partner>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360App_user_partnerPayloade360App_user_partnerArgs = {
  filter?: InputMaybe<E360App_user_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_user_partnerOrder>;
};

export type UpdateE360Storage_fileInput = {
  filter: E360Storage_fileFilter;
  remove?: InputMaybe<E360Storage_filePatch>;
  set?: InputMaybe<E360Storage_filePatch>;
};

export type UpdateE360Storage_filePayload = {
  __typename?: 'UpdateE360Storage_filePayload';
  e360Storage_file?: Maybe<Array<Maybe<E360Storage_file>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateE360Storage_filePayloade360Storage_fileArgs = {
  filter?: InputMaybe<E360Storage_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360Storage_fileOrder>;
};

export type UpdateERP_PACKAGEInput = {
  filter: ERP_PACKAGEFilter;
  remove?: InputMaybe<ERP_PACKAGEPatch>;
  set?: InputMaybe<ERP_PACKAGEPatch>;
};

export type UpdateERP_PACKAGEPayload = {
  __typename?: 'UpdateERP_PACKAGEPayload';
  eRP_PACKAGE?: Maybe<Array<Maybe<ERP_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_PACKAGEPayloadeRP_PACKAGEArgs = {
  filter?: InputMaybe<ERP_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_PACKAGEOrder>;
};

export type UpdateERP_accountEventInput = {
  filter: ERP_accountEventFilter;
  remove?: InputMaybe<ERP_accountEventPatch>;
  set?: InputMaybe<ERP_accountEventPatch>;
};

export type UpdateERP_accountEventPayload = {
  __typename?: 'UpdateERP_accountEventPayload';
  eRP_accountEvent?: Maybe<Array<Maybe<ERP_accountEvent>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_accountEventPayloadeRP_accountEventArgs = {
  filter?: InputMaybe<ERP_accountEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateERP_accountInput = {
  filter: ERP_accountFilter;
  remove?: InputMaybe<ERP_accountPatch>;
  set?: InputMaybe<ERP_accountPatch>;
};

export type UpdateERP_accountPayload = {
  __typename?: 'UpdateERP_accountPayload';
  eRP_account?: Maybe<Array<Maybe<ERP_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_accountPayloadeRP_accountArgs = {
  filter?: InputMaybe<ERP_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateERP_accountingAccountInput = {
  filter: ERP_accountingAccountFilter;
  remove?: InputMaybe<ERP_accountingAccountPatch>;
  set?: InputMaybe<ERP_accountingAccountPatch>;
};

export type UpdateERP_accountingAccountPayload = {
  __typename?: 'UpdateERP_accountingAccountPayload';
  eRP_accountingAccount?: Maybe<Array<Maybe<ERP_accountingAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_accountingAccountPayloadeRP_accountingAccountArgs = {
  filter?: InputMaybe<ERP_accountingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_accountingAccountOrder>;
};

export type UpdateERP_contactActionInput = {
  filter: ERP_contactActionFilter;
  remove?: InputMaybe<ERP_contactActionPatch>;
  set?: InputMaybe<ERP_contactActionPatch>;
};

export type UpdateERP_contactActionPayload = {
  __typename?: 'UpdateERP_contactActionPayload';
  eRP_contactAction?: Maybe<Array<Maybe<ERP_contactAction>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_contactActionPayloadeRP_contactActionArgs = {
  filter?: InputMaybe<ERP_contactActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactActionOrder>;
};

export type UpdateERP_contactInput = {
  filter: ERP_contactFilter;
  remove?: InputMaybe<ERP_contactPatch>;
  set?: InputMaybe<ERP_contactPatch>;
};

export type UpdateERP_contactPayload = {
  __typename?: 'UpdateERP_contactPayload';
  eRP_contact?: Maybe<Array<Maybe<ERP_contact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_contactPayloadeRP_contactArgs = {
  filter?: InputMaybe<ERP_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateERP_contactSerieInput = {
  filter: ERP_contactSerieFilter;
  remove?: InputMaybe<ERP_contactSeriePatch>;
  set?: InputMaybe<ERP_contactSeriePatch>;
};

export type UpdateERP_contactSeriePayload = {
  __typename?: 'UpdateERP_contactSeriePayload';
  eRP_contactSerie?: Maybe<Array<Maybe<ERP_contactSerie>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_contactSeriePayloadeRP_contactSerieArgs = {
  filter?: InputMaybe<ERP_contactSerieFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_contactSerieOrder>;
};

export type UpdateERP_eventInput = {
  filter: ERP_eventFilter;
  remove?: InputMaybe<ERP_eventPatch>;
  set?: InputMaybe<ERP_eventPatch>;
};

export type UpdateERP_eventPayload = {
  __typename?: 'UpdateERP_eventPayload';
  eRP_event?: Maybe<Array<Maybe<ERP_event>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_eventPayloadeRP_eventArgs = {
  filter?: InputMaybe<ERP_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateERP_invoiceInput = {
  filter: ERP_invoiceFilter;
  remove?: InputMaybe<ERP_invoicePatch>;
  set?: InputMaybe<ERP_invoicePatch>;
};

export type UpdateERP_invoiceItemInput = {
  filter: ERP_invoiceItemFilter;
  remove?: InputMaybe<ERP_invoiceItemPatch>;
  set?: InputMaybe<ERP_invoiceItemPatch>;
};

export type UpdateERP_invoiceItemPayload = {
  __typename?: 'UpdateERP_invoiceItemPayload';
  eRP_invoiceItem?: Maybe<Array<Maybe<ERP_invoiceItem>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_invoiceItemPayloadeRP_invoiceItemArgs = {
  filter?: InputMaybe<ERP_invoiceItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceItemOrder>;
};

export type UpdateERP_invoiceNoteInput = {
  filter: ERP_invoiceNoteFilter;
  remove?: InputMaybe<ERP_invoiceNotePatch>;
  set?: InputMaybe<ERP_invoiceNotePatch>;
};

export type UpdateERP_invoiceNotePayload = {
  __typename?: 'UpdateERP_invoiceNotePayload';
  eRP_invoiceNote?: Maybe<Array<Maybe<ERP_invoiceNote>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_invoiceNotePayloadeRP_invoiceNoteArgs = {
  filter?: InputMaybe<ERP_invoiceNoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceNoteOrder>;
};

export type UpdateERP_invoicePayload = {
  __typename?: 'UpdateERP_invoicePayload';
  eRP_invoice?: Maybe<Array<Maybe<ERP_invoice>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_invoicePayloadeRP_invoiceArgs = {
  filter?: InputMaybe<ERP_invoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_invoiceOrder>;
};

export type UpdateERP_organizationBillingInfoInput = {
  filter: ERP_organizationBillingInfoFilter;
  remove?: InputMaybe<ERP_organizationBillingInfoPatch>;
  set?: InputMaybe<ERP_organizationBillingInfoPatch>;
};

export type UpdateERP_organizationBillingInfoPayload = {
  __typename?: 'UpdateERP_organizationBillingInfoPayload';
  eRP_organizationBillingInfo?: Maybe<Array<Maybe<ERP_organizationBillingInfo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_organizationBillingInfoPayloadeRP_organizationBillingInfoArgs = {
  filter?: InputMaybe<ERP_organizationBillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_organizationBillingInfoOrder>;
};

export type UpdateERP_paymentPlanInput = {
  filter: ERP_paymentPlanFilter;
  remove?: InputMaybe<ERP_paymentPlanPatch>;
  set?: InputMaybe<ERP_paymentPlanPatch>;
};

export type UpdateERP_paymentPlanPayload = {
  __typename?: 'UpdateERP_paymentPlanPayload';
  eRP_paymentPlan?: Maybe<Array<Maybe<ERP_paymentPlan>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_paymentPlanPayloadeRP_paymentPlanArgs = {
  filter?: InputMaybe<ERP_paymentPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_paymentPlanOrder>;
};

export type UpdateERP_productInput = {
  filter: ERP_productFilter;
  remove?: InputMaybe<ERP_productPatch>;
  set?: InputMaybe<ERP_productPatch>;
};

export type UpdateERP_productPayload = {
  __typename?: 'UpdateERP_productPayload';
  eRP_product?: Maybe<Array<Maybe<ERP_product>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_productPayloadeRP_productArgs = {
  filter?: InputMaybe<ERP_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateERP_resourceInput = {
  filter: ERP_resourceFilter;
  remove?: InputMaybe<ERP_resourcePatch>;
  set?: InputMaybe<ERP_resourcePatch>;
};

export type UpdateERP_resourcePayload = {
  __typename?: 'UpdateERP_resourcePayload';
  eRP_resource?: Maybe<Array<Maybe<ERP_resource>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_resourcePayloadeRP_resourceArgs = {
  filter?: InputMaybe<ERP_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateERP_roleInput = {
  filter: ERP_roleFilter;
  remove?: InputMaybe<ERP_rolePatch>;
  set?: InputMaybe<ERP_rolePatch>;
};

export type UpdateERP_rolePayload = {
  __typename?: 'UpdateERP_rolePayload';
  eRP_role?: Maybe<Array<Maybe<ERP_role>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_rolePayloadeRP_roleArgs = {
  filter?: InputMaybe<ERP_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateERP_seatInput = {
  filter: ERP_seatFilter;
  remove?: InputMaybe<ERP_seatPatch>;
  set?: InputMaybe<ERP_seatPatch>;
};

export type UpdateERP_seatLineInput = {
  filter: ERP_seatLineFilter;
  remove?: InputMaybe<ERP_seatLinePatch>;
  set?: InputMaybe<ERP_seatLinePatch>;
};

export type UpdateERP_seatLinePayload = {
  __typename?: 'UpdateERP_seatLinePayload';
  eRP_seatLine?: Maybe<Array<Maybe<ERP_seatLine>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_seatLinePayloadeRP_seatLineArgs = {
  filter?: InputMaybe<ERP_seatLineFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatLineOrder>;
};

export type UpdateERP_seatPayload = {
  __typename?: 'UpdateERP_seatPayload';
  eRP_seat?: Maybe<Array<Maybe<ERP_seat>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_seatPayloadeRP_seatArgs = {
  filter?: InputMaybe<ERP_seatFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_seatOrder>;
};

export type UpdateERP_taxInput = {
  filter: ERP_taxFilter;
  remove?: InputMaybe<ERP_taxPatch>;
  set?: InputMaybe<ERP_taxPatch>;
};

export type UpdateERP_taxPayload = {
  __typename?: 'UpdateERP_taxPayload';
  eRP_tax?: Maybe<Array<Maybe<ERP_tax>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_taxPayloadeRP_taxArgs = {
  filter?: InputMaybe<ERP_taxFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_taxOrder>;
};

export type UpdateERP_withholdingInput = {
  filter: ERP_withholdingFilter;
  remove?: InputMaybe<ERP_withholdingPatch>;
  set?: InputMaybe<ERP_withholdingPatch>;
};

export type UpdateERP_withholdingPayload = {
  __typename?: 'UpdateERP_withholdingPayload';
  eRP_withholding?: Maybe<Array<Maybe<ERP_withholding>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateERP_withholdingPayloadeRP_withholdingArgs = {
  filter?: InputMaybe<ERP_withholdingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ERP_withholdingOrder>;
};

export type UpdateEmailEditorInput = {
  filter: EmailEditorFilter;
  remove?: InputMaybe<EmailEditorPatch>;
  set?: InputMaybe<EmailEditorPatch>;
};

export type UpdateEmailEditorPayload = {
  __typename?: 'UpdateEmailEditorPayload';
  emailEditor?: Maybe<Array<Maybe<EmailEditor>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateEmailEditorPayloademailEditorArgs = {
  filter?: InputMaybe<EmailEditorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateEmailEditor_templateInput = {
  filter: EmailEditor_templateFilter;
  remove?: InputMaybe<EmailEditor_templatePatch>;
  set?: InputMaybe<EmailEditor_templatePatch>;
};

export type UpdateEmailEditor_templatePayload = {
  __typename?: 'UpdateEmailEditor_templatePayload';
  emailEditor_template?: Maybe<Array<Maybe<EmailEditor_template>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateEmailEditor_templatePayloademailEditor_templateArgs = {
  filter?: InputMaybe<EmailEditor_templateFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailEditor_templateOrder>;
};

export type UpdateEmailInput = {
  filter: EmailFilter;
  remove?: InputMaybe<EmailPatch>;
  set?: InputMaybe<EmailPatch>;
};

export type UpdateEmailPayload = {
  __typename?: 'UpdateEmailPayload';
  email?: Maybe<Array<Maybe<Email>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateEmailPayloademailArgs = {
  filter?: InputMaybe<EmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailOrder>;
};

export type UpdateEmail_attachmentInput = {
  filter: Email_attachmentFilter;
  remove?: InputMaybe<Email_attachmentPatch>;
  set?: InputMaybe<Email_attachmentPatch>;
};

export type UpdateEmail_attachmentPayload = {
  __typename?: 'UpdateEmail_attachmentPayload';
  email_attachment?: Maybe<Array<Maybe<Email_attachment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateEmail_attachmentPayloademail_attachmentArgs = {
  filter?: InputMaybe<Email_attachmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateEmail_fromInput = {
  filter: Email_fromFilter;
  remove?: InputMaybe<Email_fromPatch>;
  set?: InputMaybe<Email_fromPatch>;
};

export type UpdateEmail_fromPayload = {
  __typename?: 'UpdateEmail_fromPayload';
  email_from?: Maybe<Array<Maybe<Email_from>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateEmail_fromPayloademail_fromArgs = {
  filter?: InputMaybe<Email_fromFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Email_fromOrder>;
};

export type UpdateEmail_toInput = {
  filter: Email_toFilter;
  remove?: InputMaybe<Email_toPatch>;
  set?: InputMaybe<Email_toPatch>;
};

export type UpdateEmail_toPayload = {
  __typename?: 'UpdateEmail_toPayload';
  email_to?: Maybe<Array<Maybe<Email_to>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateEmail_toPayloademail_toArgs = {
  filter?: InputMaybe<Email_toFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Email_toOrder>;
};

export type UpdateEventInput = {
  filter: EventFilter;
  remove?: InputMaybe<EventPatch>;
  set?: InputMaybe<EventPatch>;
};

export type UpdateEventPayload = {
  __typename?: 'UpdateEventPayload';
  event?: Maybe<Array<Maybe<Event>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateEventPayloadeventArgs = {
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EventOrder>;
};

export type UpdateExternalAPI_keyInput = {
  filter: ExternalAPI_keyFilter;
  remove?: InputMaybe<ExternalAPI_keyPatch>;
  set?: InputMaybe<ExternalAPI_keyPatch>;
};

export type UpdateExternalAPI_keyPayload = {
  __typename?: 'UpdateExternalAPI_keyPayload';
  externalAPI_key?: Maybe<Array<Maybe<ExternalAPI_key>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateExternalAPI_keyPayloadexternalAPI_keyArgs = {
  filter?: InputMaybe<ExternalAPI_keyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ExternalAPI_keyOrder>;
};

export type UpdateFormBuilderInput = {
  filter: FormBuilderFilter;
  remove?: InputMaybe<FormBuilderPatch>;
  set?: InputMaybe<FormBuilderPatch>;
};

export type UpdateFormBuilderPayload = {
  __typename?: 'UpdateFormBuilderPayload';
  formBuilder?: Maybe<Array<Maybe<FormBuilder>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateFormBuilderPayloadformBuilderArgs = {
  filter?: InputMaybe<FormBuilderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateFormBuilder_formInput = {
  filter: FormBuilder_formFilter;
  remove?: InputMaybe<FormBuilder_formPatch>;
  set?: InputMaybe<FormBuilder_formPatch>;
};

export type UpdateFormBuilder_formPayload = {
  __typename?: 'UpdateFormBuilder_formPayload';
  formBuilder_form?: Maybe<Array<Maybe<FormBuilder_form>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateFormBuilder_formPayloadformBuilder_formArgs = {
  filter?: InputMaybe<FormBuilder_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_formOrder>;
};

export type UpdateFormBuilder_inputBooleanInput = {
  filter: FormBuilder_inputBooleanFilter;
  remove?: InputMaybe<FormBuilder_inputBooleanPatch>;
  set?: InputMaybe<FormBuilder_inputBooleanPatch>;
};

export type UpdateFormBuilder_inputBooleanPayload = {
  __typename?: 'UpdateFormBuilder_inputBooleanPayload';
  formBuilder_inputBoolean?: Maybe<Array<Maybe<FormBuilder_inputBoolean>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateFormBuilder_inputBooleanPayloadformBuilder_inputBooleanArgs = {
  filter?: InputMaybe<FormBuilder_inputBooleanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateFormBuilder_inputInput = {
  filter: FormBuilder_inputFilter;
  remove?: InputMaybe<FormBuilder_inputPatch>;
  set?: InputMaybe<FormBuilder_inputPatch>;
};

export type UpdateFormBuilder_inputMultipleChoiceInput = {
  filter: FormBuilder_inputMultipleChoiceFilter;
  remove?: InputMaybe<FormBuilder_inputMultipleChoicePatch>;
  set?: InputMaybe<FormBuilder_inputMultipleChoicePatch>;
};

export type UpdateFormBuilder_inputMultipleChoiceOptionInput = {
  filter: FormBuilder_inputMultipleChoiceOptionFilter;
  remove?: InputMaybe<FormBuilder_inputMultipleChoiceOptionPatch>;
  set?: InputMaybe<FormBuilder_inputMultipleChoiceOptionPatch>;
};

export type UpdateFormBuilder_inputMultipleChoiceOptionPayload = {
  __typename?: 'UpdateFormBuilder_inputMultipleChoiceOptionPayload';
  formBuilder_inputMultipleChoiceOption?: Maybe<Array<Maybe<FormBuilder_inputMultipleChoiceOption>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateFormBuilder_inputMultipleChoiceOptionPayloadformBuilder_inputMultipleChoiceOptionArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceOptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputMultipleChoiceOptionOrder>;
};

export type UpdateFormBuilder_inputMultipleChoicePayload = {
  __typename?: 'UpdateFormBuilder_inputMultipleChoicePayload';
  formBuilder_inputMultipleChoice?: Maybe<Array<Maybe<FormBuilder_inputMultipleChoice>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateFormBuilder_inputMultipleChoicePayloadformBuilder_inputMultipleChoiceArgs = {
  filter?: InputMaybe<FormBuilder_inputMultipleChoiceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateFormBuilder_inputNumberInput = {
  filter: FormBuilder_inputNumberFilter;
  remove?: InputMaybe<FormBuilder_inputNumberPatch>;
  set?: InputMaybe<FormBuilder_inputNumberPatch>;
};

export type UpdateFormBuilder_inputNumberPayload = {
  __typename?: 'UpdateFormBuilder_inputNumberPayload';
  formBuilder_inputNumber?: Maybe<Array<Maybe<FormBuilder_inputNumber>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateFormBuilder_inputNumberPayloadformBuilder_inputNumberArgs = {
  filter?: InputMaybe<FormBuilder_inputNumberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputNumberOrder>;
};

export type UpdateFormBuilder_inputPayload = {
  __typename?: 'UpdateFormBuilder_inputPayload';
  formBuilder_input?: Maybe<Array<Maybe<FormBuilder_input>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateFormBuilder_inputPayloadformBuilder_inputArgs = {
  filter?: InputMaybe<FormBuilder_inputFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputOrder>;
};

export type UpdateFormBuilder_inputTextInput = {
  filter: FormBuilder_inputTextFilter;
  remove?: InputMaybe<FormBuilder_inputTextPatch>;
  set?: InputMaybe<FormBuilder_inputTextPatch>;
};

export type UpdateFormBuilder_inputTextPayload = {
  __typename?: 'UpdateFormBuilder_inputTextPayload';
  formBuilder_inputText?: Maybe<Array<Maybe<FormBuilder_inputText>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateFormBuilder_inputTextPayloadformBuilder_inputTextArgs = {
  filter?: InputMaybe<FormBuilder_inputTextFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<FormBuilder_inputTextOrder>;
};

export type UpdateGeneralAccountingAccountInput = {
  filter: GeneralAccountingAccountFilter;
  remove?: InputMaybe<GeneralAccountingAccountPatch>;
  set?: InputMaybe<GeneralAccountingAccountPatch>;
};

export type UpdateGeneralAccountingAccountPayload = {
  __typename?: 'UpdateGeneralAccountingAccountPayload';
  generalAccountingAccount?: Maybe<Array<Maybe<GeneralAccountingAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateGeneralAccountingAccountPayloadgeneralAccountingAccountArgs = {
  filter?: InputMaybe<GeneralAccountingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<GeneralAccountingAccountOrder>;
};

export type UpdateImportProcessInput = {
  filter: ImportProcessFilter;
  remove?: InputMaybe<ImportProcessPatch>;
  set?: InputMaybe<ImportProcessPatch>;
};

export type UpdateImportProcessPayload = {
  __typename?: 'UpdateImportProcessPayload';
  importProcess?: Maybe<Array<Maybe<ImportProcess>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateImportProcessPayloadimportProcessArgs = {
  filter?: InputMaybe<ImportProcessFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcessOrder>;
};

export type UpdateImportProcess_elementFieldInput = {
  filter: ImportProcess_elementFieldFilter;
  remove?: InputMaybe<ImportProcess_elementFieldPatch>;
  set?: InputMaybe<ImportProcess_elementFieldPatch>;
};

export type UpdateImportProcess_elementFieldPayload = {
  __typename?: 'UpdateImportProcess_elementFieldPayload';
  importProcess_elementField?: Maybe<Array<Maybe<ImportProcess_elementField>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateImportProcess_elementFieldPayloadimportProcess_elementFieldArgs = {
  filter?: InputMaybe<ImportProcess_elementFieldFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateImportProcess_itemErrorInput = {
  filter: ImportProcess_itemErrorFilter;
  remove?: InputMaybe<ImportProcess_itemErrorPatch>;
  set?: InputMaybe<ImportProcess_itemErrorPatch>;
};

export type UpdateImportProcess_itemErrorPayload = {
  __typename?: 'UpdateImportProcess_itemErrorPayload';
  importProcess_itemError?: Maybe<Array<Maybe<ImportProcess_itemError>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateImportProcess_itemErrorPayloadimportProcess_itemErrorArgs = {
  filter?: InputMaybe<ImportProcess_itemErrorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateImportProcess_itemInput = {
  filter: ImportProcess_itemFilter;
  remove?: InputMaybe<ImportProcess_itemPatch>;
  set?: InputMaybe<ImportProcess_itemPatch>;
};

export type UpdateImportProcess_itemPayload = {
  __typename?: 'UpdateImportProcess_itemPayload';
  importProcess_item?: Maybe<Array<Maybe<ImportProcess_item>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateImportProcess_itemPayloadimportProcess_itemArgs = {
  filter?: InputMaybe<ImportProcess_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemOrder>;
};

export type UpdateImportProcess_itemValueInput = {
  filter: ImportProcess_itemValueFilter;
  remove?: InputMaybe<ImportProcess_itemValuePatch>;
  set?: InputMaybe<ImportProcess_itemValuePatch>;
};

export type UpdateImportProcess_itemValuePayload = {
  __typename?: 'UpdateImportProcess_itemValuePayload';
  importProcess_itemValue?: Maybe<Array<Maybe<ImportProcess_itemValue>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateImportProcess_itemValuePayloadimportProcess_itemValueArgs = {
  filter?: InputMaybe<ImportProcess_itemValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_itemValueOrder>;
};

export type UpdateImportProcess_matchInput = {
  filter: ImportProcess_matchFilter;
  remove?: InputMaybe<ImportProcess_matchPatch>;
  set?: InputMaybe<ImportProcess_matchPatch>;
};

export type UpdateImportProcess_matchPayload = {
  __typename?: 'UpdateImportProcess_matchPayload';
  importProcess_match?: Maybe<Array<Maybe<ImportProcess_match>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateImportProcess_matchPayloadimportProcess_matchArgs = {
  filter?: InputMaybe<ImportProcess_matchFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_matchOrder>;
};

export type UpdateImportProcess_sourceValueInput = {
  filter: ImportProcess_sourceValueFilter;
  remove?: InputMaybe<ImportProcess_sourceValuePatch>;
  set?: InputMaybe<ImportProcess_sourceValuePatch>;
};

export type UpdateImportProcess_sourceValuePayload = {
  __typename?: 'UpdateImportProcess_sourceValuePayload';
  importProcess_sourceValue?: Maybe<Array<Maybe<ImportProcess_sourceValue>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateImportProcess_sourceValuePayloadimportProcess_sourceValueArgs = {
  filter?: InputMaybe<ImportProcess_sourceValueFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ImportProcess_sourceValueOrder>;
};

export type UpdateInboxInput = {
  filter: InboxFilter;
  remove?: InputMaybe<InboxPatch>;
  set?: InputMaybe<InboxPatch>;
};

export type UpdateInboxPayload = {
  __typename?: 'UpdateInboxPayload';
  inbox?: Maybe<Array<Maybe<Inbox>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateInboxPayloadinboxArgs = {
  filter?: InputMaybe<InboxFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<InboxOrder>;
};

export type UpdateInbox_itemInput = {
  filter: Inbox_itemFilter;
  remove?: InputMaybe<Inbox_itemPatch>;
  set?: InputMaybe<Inbox_itemPatch>;
};

export type UpdateInbox_itemPayload = {
  __typename?: 'UpdateInbox_itemPayload';
  inbox_item?: Maybe<Array<Maybe<Inbox_item>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateInbox_itemPayloadinbox_itemArgs = {
  filter?: InputMaybe<Inbox_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Inbox_itemOrder>;
};

export type UpdateIntegrationsInput = {
  filter: IntegrationsFilter;
  remove?: InputMaybe<IntegrationsPatch>;
  set?: InputMaybe<IntegrationsPatch>;
};

export type UpdateIntegrationsPayload = {
  __typename?: 'UpdateIntegrationsPayload';
  integrations?: Maybe<Array<Maybe<Integrations>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrationsPayloadintegrationsArgs = {
  filter?: InputMaybe<IntegrationsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateIntegrations_Digilab_ProviderInput = {
  filter: Integrations_Digilab_ProviderFilter;
  remove?: InputMaybe<Integrations_Digilab_ProviderPatch>;
  set?: InputMaybe<Integrations_Digilab_ProviderPatch>;
};

export type UpdateIntegrations_Digilab_ProviderPayload = {
  __typename?: 'UpdateIntegrations_Digilab_ProviderPayload';
  integrations_Digilab_Provider?: Maybe<Array<Maybe<Integrations_Digilab_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_Digilab_ProviderPayloadintegrations_Digilab_ProviderArgs = {
  filter?: InputMaybe<Integrations_Digilab_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Digilab_ProviderOrder>;
};

export type UpdateIntegrations_Google_Analytics_ProviderInput = {
  filter: Integrations_Google_Analytics_ProviderFilter;
  remove?: InputMaybe<Integrations_Google_Analytics_ProviderPatch>;
  set?: InputMaybe<Integrations_Google_Analytics_ProviderPatch>;
};

export type UpdateIntegrations_Google_Analytics_ProviderPayload = {
  __typename?: 'UpdateIntegrations_Google_Analytics_ProviderPayload';
  integrations_Google_Analytics_Provider?: Maybe<Array<Maybe<Integrations_Google_Analytics_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_Google_Analytics_ProviderPayloadintegrations_Google_Analytics_ProviderArgs = {
  filter?: InputMaybe<Integrations_Google_Analytics_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Google_Analytics_ProviderOrder>;
};

export type UpdateIntegrations_Google_ProviderInput = {
  filter: Integrations_Google_ProviderFilter;
  remove?: InputMaybe<Integrations_Google_ProviderPatch>;
  set?: InputMaybe<Integrations_Google_ProviderPatch>;
};

export type UpdateIntegrations_Google_ProviderPayload = {
  __typename?: 'UpdateIntegrations_Google_ProviderPayload';
  integrations_Google_Provider?: Maybe<Array<Maybe<Integrations_Google_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_Google_ProviderPayloadintegrations_Google_ProviderArgs = {
  filter?: InputMaybe<Integrations_Google_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Google_ProviderOrder>;
};

export type UpdateIntegrations_Link_Mobility_ProviderInput = {
  filter: Integrations_Link_Mobility_ProviderFilter;
  remove?: InputMaybe<Integrations_Link_Mobility_ProviderPatch>;
  set?: InputMaybe<Integrations_Link_Mobility_ProviderPatch>;
};

export type UpdateIntegrations_Link_Mobility_ProviderPayload = {
  __typename?: 'UpdateIntegrations_Link_Mobility_ProviderPayload';
  integrations_Link_Mobility_Provider?: Maybe<Array<Maybe<Integrations_Link_Mobility_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_Link_Mobility_ProviderPayloadintegrations_Link_Mobility_ProviderArgs = {
  filter?: InputMaybe<Integrations_Link_Mobility_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Link_Mobility_ProviderOrder>;
};

export type UpdateIntegrations_LinkedIn_ProviderInput = {
  filter: Integrations_LinkedIn_ProviderFilter;
  remove?: InputMaybe<Integrations_LinkedIn_ProviderPatch>;
  set?: InputMaybe<Integrations_LinkedIn_ProviderPatch>;
};

export type UpdateIntegrations_LinkedIn_ProviderPayload = {
  __typename?: 'UpdateIntegrations_LinkedIn_ProviderPayload';
  integrations_LinkedIn_Provider?: Maybe<Array<Maybe<Integrations_LinkedIn_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_LinkedIn_ProviderPayloadintegrations_LinkedIn_ProviderArgs = {
  filter?: InputMaybe<Integrations_LinkedIn_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_LinkedIn_ProviderOrder>;
};

export type UpdateIntegrations_MSFT_MeetingInput = {
  filter: Integrations_MSFT_MeetingFilter;
  remove?: InputMaybe<Integrations_MSFT_MeetingPatch>;
  set?: InputMaybe<Integrations_MSFT_MeetingPatch>;
};

export type UpdateIntegrations_MSFT_MeetingPayload = {
  __typename?: 'UpdateIntegrations_MSFT_MeetingPayload';
  integrations_MSFT_Meeting?: Maybe<Array<Maybe<Integrations_MSFT_Meeting>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_MSFT_MeetingPayloadintegrations_MSFT_MeetingArgs = {
  filter?: InputMaybe<Integrations_MSFT_MeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_MSFT_MeetingOrder>;
};

export type UpdateIntegrations_MSFT_ProviderInput = {
  filter: Integrations_MSFT_ProviderFilter;
  remove?: InputMaybe<Integrations_MSFT_ProviderPatch>;
  set?: InputMaybe<Integrations_MSFT_ProviderPatch>;
};

export type UpdateIntegrations_MSFT_ProviderPayload = {
  __typename?: 'UpdateIntegrations_MSFT_ProviderPayload';
  integrations_MSFT_Provider?: Maybe<Array<Maybe<Integrations_MSFT_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_MSFT_ProviderPayloadintegrations_MSFT_ProviderArgs = {
  filter?: InputMaybe<Integrations_MSFT_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_MSFT_ProviderOrder>;
};

export type UpdateIntegrations_Meta_ProviderInput = {
  filter: Integrations_Meta_ProviderFilter;
  remove?: InputMaybe<Integrations_Meta_ProviderPatch>;
  set?: InputMaybe<Integrations_Meta_ProviderPatch>;
};

export type UpdateIntegrations_Meta_ProviderPayload = {
  __typename?: 'UpdateIntegrations_Meta_ProviderPayload';
  integrations_Meta_Provider?: Maybe<Array<Maybe<Integrations_Meta_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_Meta_ProviderPayloadintegrations_Meta_ProviderArgs = {
  filter?: InputMaybe<Integrations_Meta_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Meta_ProviderOrder>;
};

export type UpdateIntegrations_SendGrid_ProviderInput = {
  filter: Integrations_SendGrid_ProviderFilter;
  remove?: InputMaybe<Integrations_SendGrid_ProviderPatch>;
  set?: InputMaybe<Integrations_SendGrid_ProviderPatch>;
};

export type UpdateIntegrations_SendGrid_ProviderPayload = {
  __typename?: 'UpdateIntegrations_SendGrid_ProviderPayload';
  integrations_SendGrid_Provider?: Maybe<Array<Maybe<Integrations_SendGrid_Provider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_SendGrid_ProviderPayloadintegrations_SendGrid_ProviderArgs = {
  filter?: InputMaybe<Integrations_SendGrid_ProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_SendGrid_ProviderOrder>;
};

export type UpdateIntegrations_Sendgrid_emailEventInput = {
  filter: Integrations_Sendgrid_emailEventFilter;
  remove?: InputMaybe<Integrations_Sendgrid_emailEventPatch>;
  set?: InputMaybe<Integrations_Sendgrid_emailEventPatch>;
};

export type UpdateIntegrations_Sendgrid_emailEventPayload = {
  __typename?: 'UpdateIntegrations_Sendgrid_emailEventPayload';
  integrations_Sendgrid_emailEvent?: Maybe<Array<Maybe<Integrations_Sendgrid_emailEvent>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_Sendgrid_emailEventPayloadintegrations_Sendgrid_emailEventArgs = {
  filter?: InputMaybe<Integrations_Sendgrid_emailEventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_Sendgrid_emailEventOrder>;
};

export type UpdateIntegrations_accountInput = {
  filter: Integrations_accountFilter;
  remove?: InputMaybe<Integrations_accountPatch>;
  set?: InputMaybe<Integrations_accountPatch>;
};

export type UpdateIntegrations_accountPayload = {
  __typename?: 'UpdateIntegrations_accountPayload';
  integrations_account?: Maybe<Array<Maybe<Integrations_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_accountPayloadintegrations_accountArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_accountOrder>;
};

export type UpdateIntegrations_carrefour_operartionsLogInput = {
  filter: Integrations_carrefour_operartionsLogFilter;
  remove?: InputMaybe<Integrations_carrefour_operartionsLogPatch>;
  set?: InputMaybe<Integrations_carrefour_operartionsLogPatch>;
};

export type UpdateIntegrations_carrefour_operartionsLogPayload = {
  __typename?: 'UpdateIntegrations_carrefour_operartionsLogPayload';
  integrations_carrefour_operartionsLog?: Maybe<Array<Maybe<Integrations_carrefour_operartionsLog>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateIntegrations_carrefour_operartionsLogPayloadintegrations_carrefour_operartionsLogArgs = {
  filter?: InputMaybe<Integrations_carrefour_operartionsLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_carrefour_operartionsLogOrder>;
};

export type UpdateJobPositionInput = {
  filter: JobPositionFilter;
  remove?: InputMaybe<JobPositionPatch>;
  set?: InputMaybe<JobPositionPatch>;
};

export type UpdateJobPositionPayload = {
  __typename?: 'UpdateJobPositionPayload';
  jobPosition?: Maybe<Array<Maybe<JobPosition>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateJobPositionPayloadjobPositionArgs = {
  filter?: InputMaybe<JobPositionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<JobPositionOrder>;
};

export type UpdateLMS_PACKAGEInput = {
  filter: LMS_PACKAGEFilter;
  remove?: InputMaybe<LMS_PACKAGEPatch>;
  set?: InputMaybe<LMS_PACKAGEPatch>;
};

export type UpdateLMS_PACKAGEPayload = {
  __typename?: 'UpdateLMS_PACKAGEPayload';
  lMS_PACKAGE?: Maybe<Array<Maybe<LMS_PACKAGE>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_PACKAGEPayloadlMS_PACKAGEArgs = {
  filter?: InputMaybe<LMS_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_PACKAGEOrder>;
};

export type UpdateLMS_accountInput = {
  filter: LMS_accountFilter;
  remove?: InputMaybe<LMS_accountPatch>;
  set?: InputMaybe<LMS_accountPatch>;
};

export type UpdateLMS_accountLogDetailInput = {
  filter: LMS_accountLogDetailFilter;
  remove?: InputMaybe<LMS_accountLogDetailPatch>;
  set?: InputMaybe<LMS_accountLogDetailPatch>;
};

export type UpdateLMS_accountLogDetailPayload = {
  __typename?: 'UpdateLMS_accountLogDetailPayload';
  lMS_accountLogDetail?: Maybe<Array<Maybe<LMS_accountLogDetail>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_accountLogDetailPayloadlMS_accountLogDetailArgs = {
  filter?: InputMaybe<LMS_accountLogDetailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountLogDetailOrder>;
};

export type UpdateLMS_accountLogInput = {
  filter: LMS_accountLogFilter;
  remove?: InputMaybe<LMS_accountLogPatch>;
  set?: InputMaybe<LMS_accountLogPatch>;
};

export type UpdateLMS_accountLogPayload = {
  __typename?: 'UpdateLMS_accountLogPayload';
  lMS_accountLog?: Maybe<Array<Maybe<LMS_accountLog>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_accountLogPayloadlMS_accountLogArgs = {
  filter?: InputMaybe<LMS_accountLogFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateLMS_accountPayload = {
  __typename?: 'UpdateLMS_accountPayload';
  lMS_account?: Maybe<Array<Maybe<LMS_account>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_accountPayloadlMS_accountArgs = {
  filter?: InputMaybe<LMS_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_accountOrder>;
};

export type UpdateLMS_blockInput = {
  filter: LMS_blockFilter;
  remove?: InputMaybe<LMS_blockPatch>;
  set?: InputMaybe<LMS_blockPatch>;
};

export type UpdateLMS_blockPayload = {
  __typename?: 'UpdateLMS_blockPayload';
  lMS_block?: Maybe<Array<Maybe<LMS_block>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_blockPayloadlMS_blockArgs = {
  filter?: InputMaybe<LMS_blockFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockOrder>;
};

export type UpdateLMS_blockStudentProgressInput = {
  filter: LMS_blockStudentProgressFilter;
  remove?: InputMaybe<LMS_blockStudentProgressPatch>;
  set?: InputMaybe<LMS_blockStudentProgressPatch>;
};

export type UpdateLMS_blockStudentProgressPayload = {
  __typename?: 'UpdateLMS_blockStudentProgressPayload';
  lMS_blockStudentProgress?: Maybe<Array<Maybe<LMS_blockStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_blockStudentProgressPayloadlMS_blockStudentProgressArgs = {
  filter?: InputMaybe<LMS_blockStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_blockStudentProgressOrder>;
};

export type UpdateLMS_contactInput = {
  filter: LMS_contactFilter;
  remove?: InputMaybe<LMS_contactPatch>;
  set?: InputMaybe<LMS_contactPatch>;
};

export type UpdateLMS_contactPayload = {
  __typename?: 'UpdateLMS_contactPayload';
  lMS_contact?: Maybe<Array<Maybe<LMS_contact>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_contactPayloadlMS_contactArgs = {
  filter?: InputMaybe<LMS_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_contactOrder>;
};

export type UpdateLMS_courseCategoryInput = {
  filter: LMS_courseCategoryFilter;
  remove?: InputMaybe<LMS_courseCategoryPatch>;
  set?: InputMaybe<LMS_courseCategoryPatch>;
};

export type UpdateLMS_courseCategoryPayload = {
  __typename?: 'UpdateLMS_courseCategoryPayload';
  lMS_courseCategory?: Maybe<Array<Maybe<LMS_courseCategory>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_courseCategoryPayloadlMS_courseCategoryArgs = {
  filter?: InputMaybe<LMS_courseCategoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseCategoryOrder>;
};

export type UpdateLMS_courseInput = {
  filter: LMS_courseFilter;
  remove?: InputMaybe<LMS_coursePatch>;
  set?: InputMaybe<LMS_coursePatch>;
};

export type UpdateLMS_coursePayload = {
  __typename?: 'UpdateLMS_coursePayload';
  lMS_course?: Maybe<Array<Maybe<LMS_course>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_coursePayloadlMS_courseArgs = {
  filter?: InputMaybe<LMS_courseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseOrder>;
};

export type UpdateLMS_courseStudentProgressInput = {
  filter: LMS_courseStudentProgressFilter;
  remove?: InputMaybe<LMS_courseStudentProgressPatch>;
  set?: InputMaybe<LMS_courseStudentProgressPatch>;
};

export type UpdateLMS_courseStudentProgressPayload = {
  __typename?: 'UpdateLMS_courseStudentProgressPayload';
  lMS_courseStudentProgress?: Maybe<Array<Maybe<LMS_courseStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_courseStudentProgressPayloadlMS_courseStudentProgressArgs = {
  filter?: InputMaybe<LMS_courseStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseStudentProgressOrder>;
};

export type UpdateLMS_courseVersionInput = {
  filter: LMS_courseVersionFilter;
  remove?: InputMaybe<LMS_courseVersionPatch>;
  set?: InputMaybe<LMS_courseVersionPatch>;
};

export type UpdateLMS_courseVersionPayload = {
  __typename?: 'UpdateLMS_courseVersionPayload';
  lMS_courseVersion?: Maybe<Array<Maybe<LMS_courseVersion>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_courseVersionPayloadlMS_courseVersionArgs = {
  filter?: InputMaybe<LMS_courseVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_courseVersionOrder>;
};

export type UpdateLMS_formInput = {
  filter: LMS_formFilter;
  remove?: InputMaybe<LMS_formPatch>;
  set?: InputMaybe<LMS_formPatch>;
};

export type UpdateLMS_formPayload = {
  __typename?: 'UpdateLMS_formPayload';
  lMS_form?: Maybe<Array<Maybe<LMS_form>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_formPayloadlMS_formArgs = {
  filter?: InputMaybe<LMS_formFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formOrder>;
};

export type UpdateLMS_formStudentProgressInput = {
  filter: LMS_formStudentProgressFilter;
  remove?: InputMaybe<LMS_formStudentProgressPatch>;
  set?: InputMaybe<LMS_formStudentProgressPatch>;
};

export type UpdateLMS_formStudentProgressPayload = {
  __typename?: 'UpdateLMS_formStudentProgressPayload';
  lMS_formStudentProgress?: Maybe<Array<Maybe<LMS_formStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_formStudentProgressPayloadlMS_formStudentProgressArgs = {
  filter?: InputMaybe<LMS_formStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_formStudentProgressOrder>;
};

export type UpdateLMS_groupAccountFormAnswerInput = {
  filter: LMS_groupAccountFormAnswerFilter;
  remove?: InputMaybe<LMS_groupAccountFormAnswerPatch>;
  set?: InputMaybe<LMS_groupAccountFormAnswerPatch>;
};

export type UpdateLMS_groupAccountFormAnswerPayload = {
  __typename?: 'UpdateLMS_groupAccountFormAnswerPayload';
  lMS_groupAccountFormAnswer?: Maybe<Array<Maybe<LMS_groupAccountFormAnswer>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupAccountFormAnswerPayloadlMS_groupAccountFormAnswerArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAnswerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAnswerOrder>;
};

export type UpdateLMS_groupAccountFormAttemptInput = {
  filter: LMS_groupAccountFormAttemptFilter;
  remove?: InputMaybe<LMS_groupAccountFormAttemptPatch>;
  set?: InputMaybe<LMS_groupAccountFormAttemptPatch>;
};

export type UpdateLMS_groupAccountFormAttemptPayload = {
  __typename?: 'UpdateLMS_groupAccountFormAttemptPayload';
  lMS_groupAccountFormAttempt?: Maybe<Array<Maybe<LMS_groupAccountFormAttempt>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupAccountFormAttemptPayloadlMS_groupAccountFormAttemptArgs = {
  filter?: InputMaybe<LMS_groupAccountFormAttemptFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountFormAttemptOrder>;
};

export type UpdateLMS_groupAccountInput = {
  filter: LMS_groupAccountFilter;
  remove?: InputMaybe<LMS_groupAccountPatch>;
  set?: InputMaybe<LMS_groupAccountPatch>;
};

export type UpdateLMS_groupAccountPayload = {
  __typename?: 'UpdateLMS_groupAccountPayload';
  lMS_groupAccount?: Maybe<Array<Maybe<LMS_groupAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupAccountPayloadlMS_groupAccountArgs = {
  filter?: InputMaybe<LMS_groupAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupAccountOrder>;
};

export type UpdateLMS_groupBlockConfigInput = {
  filter: LMS_groupBlockConfigFilter;
  remove?: InputMaybe<LMS_groupBlockConfigPatch>;
  set?: InputMaybe<LMS_groupBlockConfigPatch>;
};

export type UpdateLMS_groupBlockConfigPayload = {
  __typename?: 'UpdateLMS_groupBlockConfigPayload';
  lMS_groupBlockConfig?: Maybe<Array<Maybe<LMS_groupBlockConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupBlockConfigPayloadlMS_groupBlockConfigArgs = {
  filter?: InputMaybe<LMS_groupBlockConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupBlockConfigOrder>;
};

export type UpdateLMS_groupCourseConfigInput = {
  filter: LMS_groupCourseConfigFilter;
  remove?: InputMaybe<LMS_groupCourseConfigPatch>;
  set?: InputMaybe<LMS_groupCourseConfigPatch>;
};

export type UpdateLMS_groupCourseConfigPayload = {
  __typename?: 'UpdateLMS_groupCourseConfigPayload';
  lMS_groupCourseConfig?: Maybe<Array<Maybe<LMS_groupCourseConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupCourseConfigPayloadlMS_groupCourseConfigArgs = {
  filter?: InputMaybe<LMS_groupCourseConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupCourseConfigOrder>;
};

export type UpdateLMS_groupFormConfigCalculationInput = {
  filter: LMS_groupFormConfigCalculationFilter;
  remove?: InputMaybe<LMS_groupFormConfigCalculationPatch>;
  set?: InputMaybe<LMS_groupFormConfigCalculationPatch>;
};

export type UpdateLMS_groupFormConfigCalculationPayload = {
  __typename?: 'UpdateLMS_groupFormConfigCalculationPayload';
  lMS_groupFormConfigCalculation?: Maybe<Array<Maybe<LMS_groupFormConfigCalculation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupFormConfigCalculationPayloadlMS_groupFormConfigCalculationArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationOrder>;
};

export type UpdateLMS_groupFormConfigCalculationRangeInput = {
  filter: LMS_groupFormConfigCalculationRangeFilter;
  remove?: InputMaybe<LMS_groupFormConfigCalculationRangePatch>;
  set?: InputMaybe<LMS_groupFormConfigCalculationRangePatch>;
};

export type UpdateLMS_groupFormConfigCalculationRangePayload = {
  __typename?: 'UpdateLMS_groupFormConfigCalculationRangePayload';
  lMS_groupFormConfigCalculationRange?: Maybe<Array<Maybe<LMS_groupFormConfigCalculationRange>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupFormConfigCalculationRangePayloadlMS_groupFormConfigCalculationRangeArgs = {
  filter?: InputMaybe<LMS_groupFormConfigCalculationRangeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigCalculationRangeOrder>;
};

export type UpdateLMS_groupFormConfigInput = {
  filter: LMS_groupFormConfigFilter;
  remove?: InputMaybe<LMS_groupFormConfigPatch>;
  set?: InputMaybe<LMS_groupFormConfigPatch>;
};

export type UpdateLMS_groupFormConfigPayload = {
  __typename?: 'UpdateLMS_groupFormConfigPayload';
  lMS_groupFormConfig?: Maybe<Array<Maybe<LMS_groupFormConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupFormConfigPayloadlMS_groupFormConfigArgs = {
  filter?: InputMaybe<LMS_groupFormConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupFormConfigOrder>;
};

export type UpdateLMS_groupInput = {
  filter: LMS_groupFilter;
  remove?: InputMaybe<LMS_groupPatch>;
  set?: InputMaybe<LMS_groupPatch>;
};

export type UpdateLMS_groupLessonConfigInput = {
  filter: LMS_groupLessonConfigFilter;
  remove?: InputMaybe<LMS_groupLessonConfigPatch>;
  set?: InputMaybe<LMS_groupLessonConfigPatch>;
};

export type UpdateLMS_groupLessonConfigPayload = {
  __typename?: 'UpdateLMS_groupLessonConfigPayload';
  lMS_groupLessonConfig?: Maybe<Array<Maybe<LMS_groupLessonConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupLessonConfigPayloadlMS_groupLessonConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonConfigOrder>;
};

export type UpdateLMS_groupLessonMeetingConfigInput = {
  filter: LMS_groupLessonMeetingConfigFilter;
  remove?: InputMaybe<LMS_groupLessonMeetingConfigPatch>;
  set?: InputMaybe<LMS_groupLessonMeetingConfigPatch>;
};

export type UpdateLMS_groupLessonMeetingConfigPayload = {
  __typename?: 'UpdateLMS_groupLessonMeetingConfigPayload';
  lMS_groupLessonMeetingConfig?: Maybe<Array<Maybe<LMS_groupLessonMeetingConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupLessonMeetingConfigPayloadlMS_groupLessonMeetingConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonMeetingConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateLMS_groupLessonTeacherConfigInput = {
  filter: LMS_groupLessonTeacherConfigFilter;
  remove?: InputMaybe<LMS_groupLessonTeacherConfigPatch>;
  set?: InputMaybe<LMS_groupLessonTeacherConfigPatch>;
};

export type UpdateLMS_groupLessonTeacherConfigPayload = {
  __typename?: 'UpdateLMS_groupLessonTeacherConfigPayload';
  lMS_groupLessonTeacherConfig?: Maybe<Array<Maybe<LMS_groupLessonTeacherConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupLessonTeacherConfigPayloadlMS_groupLessonTeacherConfigArgs = {
  filter?: InputMaybe<LMS_groupLessonTeacherConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupLessonTeacherConfigOrder>;
};

export type UpdateLMS_groupPayload = {
  __typename?: 'UpdateLMS_groupPayload';
  lMS_group?: Maybe<Array<Maybe<LMS_group>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupPayloadlMS_groupArgs = {
  filter?: InputMaybe<LMS_groupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupOrder>;
};

export type UpdateLMS_groupResourceConfigInput = {
  filter: LMS_groupResourceConfigFilter;
  remove?: InputMaybe<LMS_groupResourceConfigPatch>;
  set?: InputMaybe<LMS_groupResourceConfigPatch>;
};

export type UpdateLMS_groupResourceConfigPayload = {
  __typename?: 'UpdateLMS_groupResourceConfigPayload';
  lMS_groupResourceConfig?: Maybe<Array<Maybe<LMS_groupResourceConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_groupResourceConfigPayloadlMS_groupResourceConfigArgs = {
  filter?: InputMaybe<LMS_groupResourceConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_groupResourceConfigOrder>;
};

export type UpdateLMS_lessonInput = {
  filter: LMS_lessonFilter;
  remove?: InputMaybe<LMS_lessonPatch>;
  set?: InputMaybe<LMS_lessonPatch>;
};

export type UpdateLMS_lessonPayload = {
  __typename?: 'UpdateLMS_lessonPayload';
  lMS_lesson?: Maybe<Array<Maybe<LMS_lesson>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_lessonPayloadlMS_lessonArgs = {
  filter?: InputMaybe<LMS_lessonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonOrder>;
};

export type UpdateLMS_lessonStudentProgressInput = {
  filter: LMS_lessonStudentProgressFilter;
  remove?: InputMaybe<LMS_lessonStudentProgressPatch>;
  set?: InputMaybe<LMS_lessonStudentProgressPatch>;
};

export type UpdateLMS_lessonStudentProgressPayload = {
  __typename?: 'UpdateLMS_lessonStudentProgressPayload';
  lMS_lessonStudentProgress?: Maybe<Array<Maybe<LMS_lessonStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_lessonStudentProgressPayloadlMS_lessonStudentProgressArgs = {
  filter?: InputMaybe<LMS_lessonStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_lessonStudentProgressOrder>;
};

export type UpdateLMS_meetingStudentProgressInput = {
  filter: LMS_meetingStudentProgressFilter;
  remove?: InputMaybe<LMS_meetingStudentProgressPatch>;
  set?: InputMaybe<LMS_meetingStudentProgressPatch>;
};

export type UpdateLMS_meetingStudentProgressPayload = {
  __typename?: 'UpdateLMS_meetingStudentProgressPayload';
  lMS_meetingStudentProgress?: Maybe<Array<Maybe<LMS_meetingStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_meetingStudentProgressPayloadlMS_meetingStudentProgressArgs = {
  filter?: InputMaybe<LMS_meetingStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_meetingStudentProgressOrder>;
};

export type UpdateLMS_productInput = {
  filter: LMS_productFilter;
  remove?: InputMaybe<LMS_productPatch>;
  set?: InputMaybe<LMS_productPatch>;
};

export type UpdateLMS_productPayload = {
  __typename?: 'UpdateLMS_productPayload';
  lMS_product?: Maybe<Array<Maybe<LMS_product>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_productPayloadlMS_productArgs = {
  filter?: InputMaybe<LMS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_productOrder>;
};

export type UpdateLMS_resourceInput = {
  filter: LMS_resourceFilter;
  remove?: InputMaybe<LMS_resourcePatch>;
  set?: InputMaybe<LMS_resourcePatch>;
};

export type UpdateLMS_resourcePayload = {
  __typename?: 'UpdateLMS_resourcePayload';
  lMS_resource?: Maybe<Array<Maybe<LMS_resource>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_resourcePayloadlMS_resourceArgs = {
  filter?: InputMaybe<LMS_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceOrder>;
};

export type UpdateLMS_resourceStudentProgressInput = {
  filter: LMS_resourceStudentProgressFilter;
  remove?: InputMaybe<LMS_resourceStudentProgressPatch>;
  set?: InputMaybe<LMS_resourceStudentProgressPatch>;
};

export type UpdateLMS_resourceStudentProgressPayload = {
  __typename?: 'UpdateLMS_resourceStudentProgressPayload';
  lMS_resourceStudentProgress?: Maybe<Array<Maybe<LMS_resourceStudentProgress>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_resourceStudentProgressPayloadlMS_resourceStudentProgressArgs = {
  filter?: InputMaybe<LMS_resourceStudentProgressFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentProgressOrder>;
};

export type UpdateLMS_resourceStudentVideoReportInput = {
  filter: LMS_resourceStudentVideoReportFilter;
  remove?: InputMaybe<LMS_resourceStudentVideoReportPatch>;
  set?: InputMaybe<LMS_resourceStudentVideoReportPatch>;
};

export type UpdateLMS_resourceStudentVideoReportPayload = {
  __typename?: 'UpdateLMS_resourceStudentVideoReportPayload';
  lMS_resourceStudentVideoReport?: Maybe<Array<Maybe<LMS_resourceStudentVideoReport>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_resourceStudentVideoReportPayloadlMS_resourceStudentVideoReportArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReportFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReportOrder>;
};

export type UpdateLMS_resourceStudentVideoReport_intervalInput = {
  filter: LMS_resourceStudentVideoReport_intervalFilter;
  remove?: InputMaybe<LMS_resourceStudentVideoReport_intervalPatch>;
  set?: InputMaybe<LMS_resourceStudentVideoReport_intervalPatch>;
};

export type UpdateLMS_resourceStudentVideoReport_intervalPayload = {
  __typename?: 'UpdateLMS_resourceStudentVideoReport_intervalPayload';
  lMS_resourceStudentVideoReport_interval?: Maybe<Array<Maybe<LMS_resourceStudentVideoReport_interval>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_resourceStudentVideoReport_intervalPayloadlMS_resourceStudentVideoReport_intervalArgs = {
  filter?: InputMaybe<LMS_resourceStudentVideoReport_intervalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_resourceStudentVideoReport_intervalOrder>;
};

export type UpdateLMS_sectionInput = {
  filter: LMS_sectionFilter;
  remove?: InputMaybe<LMS_sectionPatch>;
  set?: InputMaybe<LMS_sectionPatch>;
};

export type UpdateLMS_sectionPayload = {
  __typename?: 'UpdateLMS_sectionPayload';
  lMS_section?: Maybe<Array<Maybe<LMS_section>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_sectionPayloadlMS_sectionArgs = {
  filter?: InputMaybe<LMS_sectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_sectionOrder>;
};

export type UpdateLMS_thumbnailInput = {
  filter: LMS_thumbnailFilter;
  remove?: InputMaybe<LMS_thumbnailPatch>;
  set?: InputMaybe<LMS_thumbnailPatch>;
};

export type UpdateLMS_thumbnailPayload = {
  __typename?: 'UpdateLMS_thumbnailPayload';
  lMS_thumbnail?: Maybe<Array<Maybe<LMS_thumbnail>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLMS_thumbnailPayloadlMS_thumbnailArgs = {
  filter?: InputMaybe<LMS_thumbnailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LMS_thumbnailOrder>;
};

export type UpdateLogger_logInput = {
  filter: Logger_logFilter;
  remove?: InputMaybe<Logger_logPatch>;
  set?: InputMaybe<Logger_logPatch>;
};

export type UpdateLogger_logPayload = {
  __typename?: 'UpdateLogger_logPayload';
  logger_log?: Maybe<Array<Maybe<Logger_log>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLogger_logPayloadlogger_logArgs = {
  filter?: InputMaybe<Logger_logFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Logger_logOrder>;
};

export type UpdateLoginProviderInput = {
  filter: LoginProviderFilter;
  remove?: InputMaybe<LoginProviderPatch>;
  set?: InputMaybe<LoginProviderPatch>;
};

export type UpdateLoginProviderPayload = {
  __typename?: 'UpdateLoginProviderPayload';
  loginProvider?: Maybe<Array<Maybe<LoginProvider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateLoginProviderPayloadloginProviderArgs = {
  filter?: InputMaybe<LoginProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LoginProviderOrder>;
};

export type UpdateMeetingAccountInput = {
  filter: MeetingAccountFilter;
  remove?: InputMaybe<MeetingAccountPatch>;
  set?: InputMaybe<MeetingAccountPatch>;
};

export type UpdateMeetingAccountPayload = {
  __typename?: 'UpdateMeetingAccountPayload';
  meetingAccount?: Maybe<Array<Maybe<MeetingAccount>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateMeetingAccountPayloadmeetingAccountArgs = {
  filter?: InputMaybe<MeetingAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingAccountOrder>;
};

export type UpdateMeetingDoctors_userInput = {
  filter: MeetingDoctors_userFilter;
  remove?: InputMaybe<MeetingDoctors_userPatch>;
  set?: InputMaybe<MeetingDoctors_userPatch>;
};

export type UpdateMeetingDoctors_userPayload = {
  __typename?: 'UpdateMeetingDoctors_userPayload';
  meetingDoctors_user?: Maybe<Array<Maybe<MeetingDoctors_user>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateMeetingDoctors_userPayloadmeetingDoctors_userArgs = {
  filter?: InputMaybe<MeetingDoctors_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingDoctors_userOrder>;
};

export type UpdateMeetingInput = {
  filter: MeetingFilter;
  remove?: InputMaybe<MeetingPatch>;
  set?: InputMaybe<MeetingPatch>;
};

export type UpdateMeetingPayload = {
  __typename?: 'UpdateMeetingPayload';
  meeting?: Maybe<Array<Maybe<Meeting>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateMeetingPayloadmeetingArgs = {
  filter?: InputMaybe<MeetingFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingOrder>;
};

export type UpdateMeetingProviderInput = {
  filter: MeetingProviderFilter;
  remove?: InputMaybe<MeetingProviderPatch>;
  set?: InputMaybe<MeetingProviderPatch>;
};

export type UpdateMeetingProviderPayload = {
  __typename?: 'UpdateMeetingProviderPayload';
  meetingProvider?: Maybe<Array<Maybe<MeetingProvider>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateMeetingProviderPayloadmeetingProviderArgs = {
  filter?: InputMaybe<MeetingProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MeetingProviderOrder>;
};

export type UpdateNavigationInput = {
  filter: NavigationFilter;
  remove?: InputMaybe<NavigationPatch>;
  set?: InputMaybe<NavigationPatch>;
};

export type UpdateNavigationPayload = {
  __typename?: 'UpdateNavigationPayload';
  navigation?: Maybe<Array<Maybe<Navigation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateNavigationPayloadnavigationArgs = {
  filter?: InputMaybe<NavigationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateNavigation_routeInput = {
  filter: Navigation_routeFilter;
  remove?: InputMaybe<Navigation_routePatch>;
  set?: InputMaybe<Navigation_routePatch>;
};

export type UpdateNavigation_routePayload = {
  __typename?: 'UpdateNavigation_routePayload';
  navigation_route?: Maybe<Array<Maybe<Navigation_route>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateNavigation_routePayloadnavigation_routeArgs = {
  filter?: InputMaybe<Navigation_routeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Navigation_routeOrder>;
};

export type UpdateORG_PACKAGEInput = {
  filter: ORG_PACKAGEFilter;
  remove?: InputMaybe<ORG_PACKAGEPatch>;
  set?: InputMaybe<ORG_PACKAGEPatch>;
};

export type UpdateORG_PACKAGEPayload = {
  __typename?: 'UpdateORG_PACKAGEPayload';
  numUids?: Maybe<Scalars['Int']>;
  oRG_PACKAGE?: Maybe<Array<Maybe<ORG_PACKAGE>>>;
};


export type UpdateORG_PACKAGEPayloadoRG_PACKAGEArgs = {
  filter?: InputMaybe<ORG_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_PACKAGEOrder>;
};

export type UpdateORG_accountInput = {
  filter: ORG_accountFilter;
  remove?: InputMaybe<ORG_accountPatch>;
  set?: InputMaybe<ORG_accountPatch>;
};

export type UpdateORG_accountPayload = {
  __typename?: 'UpdateORG_accountPayload';
  numUids?: Maybe<Scalars['Int']>;
  oRG_account?: Maybe<Array<Maybe<ORG_account>>>;
};


export type UpdateORG_accountPayloadoRG_accountArgs = {
  filter?: InputMaybe<ORG_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_accountOrder>;
};

export type UpdateORG_roleInput = {
  filter: ORG_roleFilter;
  remove?: InputMaybe<ORG_rolePatch>;
  set?: InputMaybe<ORG_rolePatch>;
};

export type UpdateORG_rolePayload = {
  __typename?: 'UpdateORG_rolePayload';
  numUids?: Maybe<Scalars['Int']>;
  oRG_role?: Maybe<Array<Maybe<ORG_role>>>;
};


export type UpdateORG_rolePayloadoRG_roleArgs = {
  filter?: InputMaybe<ORG_roleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ORG_roleOrder>;
};

export type UpdateOrg360Input = {
  filter: Org360Filter;
  remove?: InputMaybe<Org360Patch>;
  set?: InputMaybe<Org360Patch>;
};

export type UpdateOrg360Payload = {
  __typename?: 'UpdateOrg360Payload';
  numUids?: Maybe<Scalars['Int']>;
  org360?: Maybe<Array<Maybe<Org360>>>;
};


export type UpdateOrg360Payloadorg360Args = {
  filter?: InputMaybe<Org360Filter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Org360Order>;
};

export type UpdateOrg360_themeInput = {
  filter: Org360_themeFilter;
  remove?: InputMaybe<Org360_themePatch>;
  set?: InputMaybe<Org360_themePatch>;
};

export type UpdateOrg360_themePayload = {
  __typename?: 'UpdateOrg360_themePayload';
  numUids?: Maybe<Scalars['Int']>;
  org360_theme?: Maybe<Array<Maybe<Org360_theme>>>;
};


export type UpdateOrg360_themePayloadorg360_themeArgs = {
  filter?: InputMaybe<Org360_themeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Org360_themeOrder>;
};

export type UpdateOrgDomainInput = {
  filter: OrgDomainFilter;
  remove?: InputMaybe<OrgDomainPatch>;
  set?: InputMaybe<OrgDomainPatch>;
};

export type UpdateOrgDomainPayload = {
  __typename?: 'UpdateOrgDomainPayload';
  numUids?: Maybe<Scalars['Int']>;
  orgDomain?: Maybe<Array<Maybe<OrgDomain>>>;
};


export type UpdateOrgDomainPayloadorgDomainArgs = {
  filter?: InputMaybe<OrgDomainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<OrgDomainOrder>;
};

export type UpdateOrgInput = {
  filter: OrgFilter;
  remove?: InputMaybe<OrgPatch>;
  set?: InputMaybe<OrgPatch>;
};

export type UpdateOrgPayload = {
  __typename?: 'UpdateOrgPayload';
  numUids?: Maybe<Scalars['Int']>;
  org?: Maybe<Array<Maybe<Org>>>;
};


export type UpdateOrgPayloadorgArgs = {
  filter?: InputMaybe<OrgFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<OrgOrder>;
};

export type UpdateOrganization_departmentInput = {
  filter: Organization_departmentFilter;
  remove?: InputMaybe<Organization_departmentPatch>;
  set?: InputMaybe<Organization_departmentPatch>;
};

export type UpdateOrganization_departmentPayload = {
  __typename?: 'UpdateOrganization_departmentPayload';
  numUids?: Maybe<Scalars['Int']>;
  organization_department?: Maybe<Array<Maybe<Organization_department>>>;
};


export type UpdateOrganization_departmentPayloadorganization_departmentArgs = {
  filter?: InputMaybe<Organization_departmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Organization_departmentOrder>;
};

export type UpdatePETPASS_APPInput = {
  filter: PETPASS_APPFilter;
  remove?: InputMaybe<PETPASS_APPPatch>;
  set?: InputMaybe<PETPASS_APPPatch>;
};

export type UpdatePETPASS_APPPayload = {
  __typename?: 'UpdatePETPASS_APPPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_APP?: Maybe<Array<Maybe<PETPASS_APP>>>;
};


export type UpdatePETPASS_APPPayloadpETPASS_APPArgs = {
  filter?: InputMaybe<PETPASS_APPFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_APPOrder>;
};

export type UpdatePETPASS_bannerInput = {
  filter: PETPASS_bannerFilter;
  remove?: InputMaybe<PETPASS_bannerPatch>;
  set?: InputMaybe<PETPASS_bannerPatch>;
};

export type UpdatePETPASS_bannerPayload = {
  __typename?: 'UpdatePETPASS_bannerPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_banner?: Maybe<Array<Maybe<PETPASS_banner>>>;
};


export type UpdatePETPASS_bannerPayloadpETPASS_bannerArgs = {
  filter?: InputMaybe<PETPASS_bannerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_bannerOrder>;
};

export type UpdatePETPASS_contractInput = {
  filter: PETPASS_contractFilter;
  remove?: InputMaybe<PETPASS_contractPatch>;
  set?: InputMaybe<PETPASS_contractPatch>;
};

export type UpdatePETPASS_contractPayload = {
  __typename?: 'UpdatePETPASS_contractPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_contract?: Maybe<Array<Maybe<PETPASS_contract>>>;
};


export type UpdatePETPASS_contractPayloadpETPASS_contractArgs = {
  filter?: InputMaybe<PETPASS_contractFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_contractOrder>;
};

export type UpdatePETPASS_fileInput = {
  filter: PETPASS_fileFilter;
  remove?: InputMaybe<PETPASS_filePatch>;
  set?: InputMaybe<PETPASS_filePatch>;
};

export type UpdatePETPASS_filePayload = {
  __typename?: 'UpdatePETPASS_filePayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_file?: Maybe<Array<Maybe<PETPASS_file>>>;
};


export type UpdatePETPASS_filePayloadpETPASS_fileArgs = {
  filter?: InputMaybe<PETPASS_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_fileOrder>;
};

export type UpdatePETPASS_insuranceInput = {
  filter: PETPASS_insuranceFilter;
  remove?: InputMaybe<PETPASS_insurancePatch>;
  set?: InputMaybe<PETPASS_insurancePatch>;
};

export type UpdatePETPASS_insurancePayload = {
  __typename?: 'UpdatePETPASS_insurancePayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_insurance?: Maybe<Array<Maybe<PETPASS_insurance>>>;
};


export type UpdatePETPASS_insurancePayloadpETPASS_insuranceArgs = {
  filter?: InputMaybe<PETPASS_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insuranceOrder>;
};

export type UpdatePETPASS_insurance_companyInput = {
  filter: PETPASS_insurance_companyFilter;
  remove?: InputMaybe<PETPASS_insurance_companyPatch>;
  set?: InputMaybe<PETPASS_insurance_companyPatch>;
};

export type UpdatePETPASS_insurance_companyPayload = {
  __typename?: 'UpdatePETPASS_insurance_companyPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_insurance_company?: Maybe<Array<Maybe<PETPASS_insurance_company>>>;
};


export type UpdatePETPASS_insurance_companyPayloadpETPASS_insurance_companyArgs = {
  filter?: InputMaybe<PETPASS_insurance_companyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_insurance_companyOrder>;
};

export type UpdatePETPASS_locationInput = {
  filter: PETPASS_locationFilter;
  remove?: InputMaybe<PETPASS_locationPatch>;
  set?: InputMaybe<PETPASS_locationPatch>;
};

export type UpdatePETPASS_locationPayload = {
  __typename?: 'UpdatePETPASS_locationPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_location?: Maybe<Array<Maybe<PETPASS_location>>>;
};


export type UpdatePETPASS_locationPayloadpETPASS_locationArgs = {
  filter?: InputMaybe<PETPASS_locationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locationOrder>;
};

export type UpdatePETPASS_locationPolicyInput = {
  filter: PETPASS_locationPolicyFilter;
  remove?: InputMaybe<PETPASS_locationPolicyPatch>;
  set?: InputMaybe<PETPASS_locationPolicyPatch>;
};

export type UpdatePETPASS_locationPolicyPayload = {
  __typename?: 'UpdatePETPASS_locationPolicyPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_locationPolicy?: Maybe<Array<Maybe<PETPASS_locationPolicy>>>;
};


export type UpdatePETPASS_locationPolicyPayloadpETPASS_locationPolicyArgs = {
  filter?: InputMaybe<PETPASS_locationPolicyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locationPolicyOrder>;
};

export type UpdatePETPASS_locatorInput = {
  filter: PETPASS_locatorFilter;
  remove?: InputMaybe<PETPASS_locatorPatch>;
  set?: InputMaybe<PETPASS_locatorPatch>;
};

export type UpdatePETPASS_locatorPayload = {
  __typename?: 'UpdatePETPASS_locatorPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_locator?: Maybe<Array<Maybe<PETPASS_locator>>>;
};


export type UpdatePETPASS_locatorPayloadpETPASS_locatorArgs = {
  filter?: InputMaybe<PETPASS_locatorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_locatorOrder>;
};

export type UpdatePETPASS_partnerInput = {
  filter: PETPASS_partnerFilter;
  remove?: InputMaybe<PETPASS_partnerPatch>;
  set?: InputMaybe<PETPASS_partnerPatch>;
};

export type UpdatePETPASS_partnerPayload = {
  __typename?: 'UpdatePETPASS_partnerPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_partner?: Maybe<Array<Maybe<PETPASS_partner>>>;
};


export type UpdatePETPASS_partnerPayloadpETPASS_partnerArgs = {
  filter?: InputMaybe<PETPASS_partnerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_partnerOrder>;
};

export type UpdatePETPASS_petInput = {
  filter: PETPASS_petFilter;
  remove?: InputMaybe<PETPASS_petPatch>;
  set?: InputMaybe<PETPASS_petPatch>;
};

export type UpdatePETPASS_petPayload = {
  __typename?: 'UpdatePETPASS_petPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_pet?: Maybe<Array<Maybe<PETPASS_pet>>>;
};


export type UpdatePETPASS_petPayloadpETPASS_petArgs = {
  filter?: InputMaybe<PETPASS_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petOrder>;
};

export type UpdatePETPASS_petTokenInput = {
  filter: PETPASS_petTokenFilter;
  remove?: InputMaybe<PETPASS_petTokenPatch>;
  set?: InputMaybe<PETPASS_petTokenPatch>;
};

export type UpdatePETPASS_petTokenPayload = {
  __typename?: 'UpdatePETPASS_petTokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_petToken?: Maybe<Array<Maybe<PETPASS_petToken>>>;
};


export type UpdatePETPASS_petTokenPayloadpETPASS_petTokenArgs = {
  filter?: InputMaybe<PETPASS_petTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_petTokenOrder>;
};

export type UpdatePETPASS_pet_external_insuranceInput = {
  filter: PETPASS_pet_external_insuranceFilter;
  remove?: InputMaybe<PETPASS_pet_external_insurancePatch>;
  set?: InputMaybe<PETPASS_pet_external_insurancePatch>;
};

export type UpdatePETPASS_pet_external_insurancePayload = {
  __typename?: 'UpdatePETPASS_pet_external_insurancePayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_pet_external_insurance?: Maybe<Array<Maybe<PETPASS_pet_external_insurance>>>;
};


export type UpdatePETPASS_pet_external_insurancePayloadpETPASS_pet_external_insuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_external_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_external_insuranceOrder>;
};

export type UpdatePETPASS_pet_insuranceInput = {
  filter: PETPASS_pet_insuranceFilter;
  remove?: InputMaybe<PETPASS_pet_insurancePatch>;
  set?: InputMaybe<PETPASS_pet_insurancePatch>;
};

export type UpdatePETPASS_pet_insurancePayload = {
  __typename?: 'UpdatePETPASS_pet_insurancePayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_pet_insurance?: Maybe<Array<Maybe<PETPASS_pet_insurance>>>;
};


export type UpdatePETPASS_pet_insurancePayloadpETPASS_pet_insuranceArgs = {
  filter?: InputMaybe<PETPASS_pet_insuranceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_pet_insuranceOrder>;
};

export type UpdatePETPASS_productInput = {
  filter: PETPASS_productFilter;
  remove?: InputMaybe<PETPASS_productPatch>;
  set?: InputMaybe<PETPASS_productPatch>;
};

export type UpdatePETPASS_productPayload = {
  __typename?: 'UpdatePETPASS_productPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_product?: Maybe<Array<Maybe<PETPASS_product>>>;
};


export type UpdatePETPASS_productPayloadpETPASS_productArgs = {
  filter?: InputMaybe<PETPASS_productFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_productOrder>;
};

export type UpdatePETPASS_purchaseInput = {
  filter: PETPASS_purchaseFilter;
  remove?: InputMaybe<PETPASS_purchasePatch>;
  set?: InputMaybe<PETPASS_purchasePatch>;
};

export type UpdatePETPASS_purchasePayload = {
  __typename?: 'UpdatePETPASS_purchasePayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_purchase?: Maybe<Array<Maybe<PETPASS_purchase>>>;
};


export type UpdatePETPASS_purchasePayloadpETPASS_purchaseArgs = {
  filter?: InputMaybe<PETPASS_purchaseFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_purchaseOrder>;
};

export type UpdatePETPASS_sosInput = {
  filter: PETPASS_sosFilter;
  remove?: InputMaybe<PETPASS_sosPatch>;
  set?: InputMaybe<PETPASS_sosPatch>;
};

export type UpdatePETPASS_sosPayload = {
  __typename?: 'UpdatePETPASS_sosPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_sos?: Maybe<Array<Maybe<PETPASS_sos>>>;
};


export type UpdatePETPASS_sosPayloadpETPASS_sosArgs = {
  filter?: InputMaybe<PETPASS_sosFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_sosOrder>;
};

export type UpdatePETPASS_sos_eventInput = {
  filter: PETPASS_sos_eventFilter;
  remove?: InputMaybe<PETPASS_sos_eventPatch>;
  set?: InputMaybe<PETPASS_sos_eventPatch>;
};

export type UpdatePETPASS_sos_eventPayload = {
  __typename?: 'UpdatePETPASS_sos_eventPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_sos_event?: Maybe<Array<Maybe<PETPASS_sos_event>>>;
};


export type UpdatePETPASS_sos_eventPayloadpETPASS_sos_eventArgs = {
  filter?: InputMaybe<PETPASS_sos_eventFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_sos_eventOrder>;
};

export type UpdatePETPASS_userInput = {
  filter: PETPASS_userFilter;
  remove?: InputMaybe<PETPASS_userPatch>;
  set?: InputMaybe<PETPASS_userPatch>;
};

export type UpdatePETPASS_userPayload = {
  __typename?: 'UpdatePETPASS_userPayload';
  numUids?: Maybe<Scalars['Int']>;
  pETPASS_user?: Maybe<Array<Maybe<PETPASS_user>>>;
};


export type UpdatePETPASS_userPayloadpETPASS_userArgs = {
  filter?: InputMaybe<PETPASS_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PETPASS_userOrder>;
};

export type UpdatePersonInput = {
  filter: PersonFilter;
  remove?: InputMaybe<PersonPatch>;
  set?: InputMaybe<PersonPatch>;
};

export type UpdatePersonPayload = {
  __typename?: 'UpdatePersonPayload';
  numUids?: Maybe<Scalars['Int']>;
  person?: Maybe<Array<Maybe<Person>>>;
};


export type UpdatePersonPayloadpersonArgs = {
  filter?: InputMaybe<PersonFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PersonOrder>;
};

export type UpdatePetBreedInput = {
  filter: PetBreedFilter;
  remove?: InputMaybe<PetBreedPatch>;
  set?: InputMaybe<PetBreedPatch>;
};

export type UpdatePetBreedPayload = {
  __typename?: 'UpdatePetBreedPayload';
  numUids?: Maybe<Scalars['Int']>;
  petBreed?: Maybe<Array<Maybe<PetBreed>>>;
};


export type UpdatePetBreedPayloadpetBreedArgs = {
  filter?: InputMaybe<PetBreedFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetBreedOrder>;
};

export type UpdatePetInput = {
  filter: PetFilter;
  remove?: InputMaybe<PetPatch>;
  set?: InputMaybe<PetPatch>;
};

export type UpdatePetPayload = {
  __typename?: 'UpdatePetPayload';
  numUids?: Maybe<Scalars['Int']>;
  pet?: Maybe<Array<Maybe<Pet>>>;
};


export type UpdatePetPayloadpetArgs = {
  filter?: InputMaybe<PetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetOrder>;
};

export type UpdatePetTypeInput = {
  filter: PetTypeFilter;
  remove?: InputMaybe<PetTypePatch>;
  set?: InputMaybe<PetTypePatch>;
};

export type UpdatePetTypePayload = {
  __typename?: 'UpdatePetTypePayload';
  numUids?: Maybe<Scalars['Int']>;
  petType?: Maybe<Array<Maybe<PetType>>>;
};


export type UpdatePetTypePayloadpetTypeArgs = {
  filter?: InputMaybe<PetTypeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PetTypeOrder>;
};

export type UpdatePet_fileInput = {
  filter: Pet_fileFilter;
  remove?: InputMaybe<Pet_filePatch>;
  set?: InputMaybe<Pet_filePatch>;
};

export type UpdatePet_filePayload = {
  __typename?: 'UpdatePet_filePayload';
  numUids?: Maybe<Scalars['Int']>;
  pet_file?: Maybe<Array<Maybe<Pet_file>>>;
};


export type UpdatePet_filePayloadpet_fileArgs = {
  filter?: InputMaybe<Pet_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_fileOrder>;
};

export type UpdatePet_vaccinationInput = {
  filter: Pet_vaccinationFilter;
  remove?: InputMaybe<Pet_vaccinationPatch>;
  set?: InputMaybe<Pet_vaccinationPatch>;
};

export type UpdatePet_vaccinationPayload = {
  __typename?: 'UpdatePet_vaccinationPayload';
  numUids?: Maybe<Scalars['Int']>;
  pet_vaccination?: Maybe<Array<Maybe<Pet_vaccination>>>;
};


export type UpdatePet_vaccinationPayloadpet_vaccinationArgs = {
  filter?: InputMaybe<Pet_vaccinationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_vaccinationOrder>;
};

export type UpdatePet_vaccineInput = {
  filter: Pet_vaccineFilter;
  remove?: InputMaybe<Pet_vaccinePatch>;
  set?: InputMaybe<Pet_vaccinePatch>;
};

export type UpdatePet_vaccinePayload = {
  __typename?: 'UpdatePet_vaccinePayload';
  numUids?: Maybe<Scalars['Int']>;
  pet_vaccine?: Maybe<Array<Maybe<Pet_vaccine>>>;
};


export type UpdatePet_vaccinePayloadpet_vaccineArgs = {
  filter?: InputMaybe<Pet_vaccineFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Pet_vaccineOrder>;
};

export type UpdateProductInput = {
  filter: ProductFilter;
  remove?: InputMaybe<ProductPatch>;
  set?: InputMaybe<ProductPatch>;
};

export type UpdateProductPayload = {
  __typename?: 'UpdateProductPayload';
  numUids?: Maybe<Scalars['Int']>;
  product?: Maybe<Array<Maybe<Product>>>;
};


export type UpdateProductPayloadproductArgs = {
  filter?: InputMaybe<ProductFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProductOrder>;
};

export type UpdateProduct_categoryInput = {
  filter: Product_categoryFilter;
  remove?: InputMaybe<Product_categoryPatch>;
  set?: InputMaybe<Product_categoryPatch>;
};

export type UpdateProduct_categoryPayload = {
  __typename?: 'UpdateProduct_categoryPayload';
  numUids?: Maybe<Scalars['Int']>;
  product_category?: Maybe<Array<Maybe<Product_category>>>;
};


export type UpdateProduct_categoryPayloadproduct_categoryArgs = {
  filter?: InputMaybe<Product_categoryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_categoryOrder>;
};

export type UpdateProduct_itemInput = {
  filter: Product_itemFilter;
  remove?: InputMaybe<Product_itemPatch>;
  set?: InputMaybe<Product_itemPatch>;
};

export type UpdateProduct_itemPayload = {
  __typename?: 'UpdateProduct_itemPayload';
  numUids?: Maybe<Scalars['Int']>;
  product_item?: Maybe<Array<Maybe<Product_item>>>;
};


export type UpdateProduct_itemPayloadproduct_itemArgs = {
  filter?: InputMaybe<Product_itemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateProduct_paymentPlanItemInput = {
  filter: Product_paymentPlanItemFilter;
  remove?: InputMaybe<Product_paymentPlanItemPatch>;
  set?: InputMaybe<Product_paymentPlanItemPatch>;
};

export type UpdateProduct_paymentPlanItemPayload = {
  __typename?: 'UpdateProduct_paymentPlanItemPayload';
  numUids?: Maybe<Scalars['Int']>;
  product_paymentPlanItem?: Maybe<Array<Maybe<Product_paymentPlanItem>>>;
};


export type UpdateProduct_paymentPlanItemPayloadproduct_paymentPlanItemArgs = {
  filter?: InputMaybe<Product_paymentPlanItemFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Product_paymentPlanItemOrder>;
};

export type UpdateProposalInput = {
  filter: ProposalFilter;
  remove?: InputMaybe<ProposalPatch>;
  set?: InputMaybe<ProposalPatch>;
};

export type UpdateProposalPayload = {
  __typename?: 'UpdateProposalPayload';
  numUids?: Maybe<Scalars['Int']>;
  proposal?: Maybe<Array<Maybe<Proposal>>>;
};


export type UpdateProposalPayloadproposalArgs = {
  filter?: InputMaybe<ProposalFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ProposalOrder>;
};

export type UpdateProposal_resourceInput = {
  filter: Proposal_resourceFilter;
  remove?: InputMaybe<Proposal_resourcePatch>;
  set?: InputMaybe<Proposal_resourcePatch>;
};

export type UpdateProposal_resourcePayload = {
  __typename?: 'UpdateProposal_resourcePayload';
  numUids?: Maybe<Scalars['Int']>;
  proposal_resource?: Maybe<Array<Maybe<Proposal_resource>>>;
};


export type UpdateProposal_resourcePayloadproposal_resourceArgs = {
  filter?: InputMaybe<Proposal_resourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_resourceOrder>;
};

export type UpdateProposal_stakeholderInput = {
  filter: Proposal_stakeholderFilter;
  remove?: InputMaybe<Proposal_stakeholderPatch>;
  set?: InputMaybe<Proposal_stakeholderPatch>;
};

export type UpdateProposal_stakeholderPayload = {
  __typename?: 'UpdateProposal_stakeholderPayload';
  numUids?: Maybe<Scalars['Int']>;
  proposal_stakeholder?: Maybe<Array<Maybe<Proposal_stakeholder>>>;
};


export type UpdateProposal_stakeholderPayloadproposal_stakeholderArgs = {
  filter?: InputMaybe<Proposal_stakeholderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderOrder>;
};

export type UpdateProposal_stakeholderResourceInput = {
  filter: Proposal_stakeholderResourceFilter;
  remove?: InputMaybe<Proposal_stakeholderResourcePatch>;
  set?: InputMaybe<Proposal_stakeholderResourcePatch>;
};

export type UpdateProposal_stakeholderResourcePayload = {
  __typename?: 'UpdateProposal_stakeholderResourcePayload';
  numUids?: Maybe<Scalars['Int']>;
  proposal_stakeholderResource?: Maybe<Array<Maybe<Proposal_stakeholderResource>>>;
};


export type UpdateProposal_stakeholderResourcePayloadproposal_stakeholderResourceArgs = {
  filter?: InputMaybe<Proposal_stakeholderResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderResourceOrder>;
};

export type UpdateProposal_stakeholderTokenInput = {
  filter: Proposal_stakeholderTokenFilter;
  remove?: InputMaybe<Proposal_stakeholderTokenPatch>;
  set?: InputMaybe<Proposal_stakeholderTokenPatch>;
};

export type UpdateProposal_stakeholderTokenPayload = {
  __typename?: 'UpdateProposal_stakeholderTokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  proposal_stakeholderToken?: Maybe<Array<Maybe<Proposal_stakeholderToken>>>;
};


export type UpdateProposal_stakeholderTokenPayloadproposal_stakeholderTokenArgs = {
  filter?: InputMaybe<Proposal_stakeholderTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Proposal_stakeholderTokenOrder>;
};

export type UpdateResourceInput = {
  filter: ResourceFilter;
  remove?: InputMaybe<ResourcePatch>;
  set?: InputMaybe<ResourcePatch>;
};

export type UpdateResourcePayload = {
  __typename?: 'UpdateResourcePayload';
  numUids?: Maybe<Scalars['Int']>;
  resource?: Maybe<Array<Maybe<Resource>>>;
};


export type UpdateResourcePayloadresourceArgs = {
  filter?: InputMaybe<ResourceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceOrder>;
};

export type UpdateResourceTokenInput = {
  filter: ResourceTokenFilter;
  remove?: InputMaybe<ResourceTokenPatch>;
  set?: InputMaybe<ResourceTokenPatch>;
};

export type UpdateResourceTokenPayload = {
  __typename?: 'UpdateResourceTokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  resourceToken?: Maybe<Array<Maybe<ResourceToken>>>;
};


export type UpdateResourceTokenPayloadresourceTokenArgs = {
  filter?: InputMaybe<ResourceTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ResourceTokenOrder>;
};

export type UpdateSMSInput = {
  filter: SMSFilter;
  remove?: InputMaybe<SMSPatch>;
  set?: InputMaybe<SMSPatch>;
};

export type UpdateSMSPayload = {
  __typename?: 'UpdateSMSPayload';
  numUids?: Maybe<Scalars['Int']>;
  sMS?: Maybe<Array<Maybe<SMS>>>;
};


export type UpdateSMSPayloadsMSArgs = {
  filter?: InputMaybe<SMSFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SMSOrder>;
};

export type UpdateSchedulerInput = {
  filter: SchedulerFilter;
  remove?: InputMaybe<SchedulerPatch>;
  set?: InputMaybe<SchedulerPatch>;
};

export type UpdateSchedulerPayload = {
  __typename?: 'UpdateSchedulerPayload';
  numUids?: Maybe<Scalars['Int']>;
  scheduler?: Maybe<Array<Maybe<Scheduler>>>;
};


export type UpdateSchedulerPayloadschedulerArgs = {
  filter?: InputMaybe<SchedulerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateScheduler_actionInput = {
  filter: Scheduler_actionFilter;
  remove?: InputMaybe<Scheduler_actionPatch>;
  set?: InputMaybe<Scheduler_actionPatch>;
};

export type UpdateScheduler_actionPayload = {
  __typename?: 'UpdateScheduler_actionPayload';
  numUids?: Maybe<Scalars['Int']>;
  scheduler_action?: Maybe<Array<Maybe<Scheduler_action>>>;
};


export type UpdateScheduler_actionPayloadscheduler_actionArgs = {
  filter?: InputMaybe<Scheduler_actionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_actionOrder>;
};

export type UpdateScheduler_externalActionInput = {
  filter: Scheduler_externalActionFilter;
  remove?: InputMaybe<Scheduler_externalActionPatch>;
  set?: InputMaybe<Scheduler_externalActionPatch>;
};

export type UpdateScheduler_externalActionPayload = {
  __typename?: 'UpdateScheduler_externalActionPayload';
  numUids?: Maybe<Scalars['Int']>;
  scheduler_externalAction?: Maybe<Array<Maybe<Scheduler_externalAction>>>;
};


export type UpdateScheduler_externalActionPayloadscheduler_externalActionArgs = {
  filter?: InputMaybe<Scheduler_externalActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_externalActionOrder>;
};

export type UpdateScheduler_managerActionInput = {
  filter: Scheduler_managerActionFilter;
  remove?: InputMaybe<Scheduler_managerActionPatch>;
  set?: InputMaybe<Scheduler_managerActionPatch>;
};

export type UpdateScheduler_managerActionPayload = {
  __typename?: 'UpdateScheduler_managerActionPayload';
  numUids?: Maybe<Scalars['Int']>;
  scheduler_managerAction?: Maybe<Array<Maybe<Scheduler_managerAction>>>;
};


export type UpdateScheduler_managerActionPayloadscheduler_managerActionArgs = {
  filter?: InputMaybe<Scheduler_managerActionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_managerActionOrder>;
};

export type UpdateScheduler_taskInput = {
  filter: Scheduler_taskFilter;
  remove?: InputMaybe<Scheduler_taskPatch>;
  set?: InputMaybe<Scheduler_taskPatch>;
};

export type UpdateScheduler_taskPayload = {
  __typename?: 'UpdateScheduler_taskPayload';
  numUids?: Maybe<Scalars['Int']>;
  scheduler_task?: Maybe<Array<Maybe<Scheduler_task>>>;
};


export type UpdateScheduler_taskPayloadscheduler_taskArgs = {
  filter?: InputMaybe<Scheduler_taskFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Scheduler_taskOrder>;
};

export type UpdateSearchIndex_contactInput = {
  filter: SearchIndex_contactFilter;
  remove?: InputMaybe<SearchIndex_contactPatch>;
  set?: InputMaybe<SearchIndex_contactPatch>;
};

export type UpdateSearchIndex_contactPayload = {
  __typename?: 'UpdateSearchIndex_contactPayload';
  numUids?: Maybe<Scalars['Int']>;
  searchIndex_contact?: Maybe<Array<Maybe<SearchIndex_contact>>>;
};


export type UpdateSearchIndex_contactPayloadsearchIndex_contactArgs = {
  filter?: InputMaybe<SearchIndex_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SearchIndex_contactOrder>;
};

export type UpdateServiceAccountInput = {
  filter: ServiceAccountFilter;
  remove?: InputMaybe<ServiceAccountPatch>;
  set?: InputMaybe<ServiceAccountPatch>;
};

export type UpdateServiceAccountPayload = {
  __typename?: 'UpdateServiceAccountPayload';
  numUids?: Maybe<Scalars['Int']>;
  serviceAccount?: Maybe<Array<Maybe<ServiceAccount>>>;
};


export type UpdateServiceAccountPayloadserviceAccountArgs = {
  filter?: InputMaybe<ServiceAccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ServiceAccountOrder>;
};

export type UpdateShortUrlInput = {
  filter: ShortUrlFilter;
  remove?: InputMaybe<ShortUrlPatch>;
  set?: InputMaybe<ShortUrlPatch>;
};

export type UpdateShortUrlPayload = {
  __typename?: 'UpdateShortUrlPayload';
  numUids?: Maybe<Scalars['Int']>;
  shortUrl?: Maybe<Array<Maybe<ShortUrl>>>;
};


export type UpdateShortUrlPayloadshortUrlArgs = {
  filter?: InputMaybe<ShortUrlFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ShortUrlOrder>;
};

export type UpdateShortUrl_domainInput = {
  filter: ShortUrl_domainFilter;
  remove?: InputMaybe<ShortUrl_domainPatch>;
  set?: InputMaybe<ShortUrl_domainPatch>;
};

export type UpdateShortUrl_domainPayload = {
  __typename?: 'UpdateShortUrl_domainPayload';
  numUids?: Maybe<Scalars['Int']>;
  shortUrl_domain?: Maybe<Array<Maybe<ShortUrl_domain>>>;
};


export type UpdateShortUrl_domainPayloadshortUrl_domainArgs = {
  filter?: InputMaybe<ShortUrl_domainFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ShortUrl_domainOrder>;
};

export type UpdateStorageInput = {
  filter: StorageFilter;
  remove?: InputMaybe<StoragePatch>;
  set?: InputMaybe<StoragePatch>;
};

export type UpdateStoragePayload = {
  __typename?: 'UpdateStoragePayload';
  numUids?: Maybe<Scalars['Int']>;
  storage?: Maybe<Array<Maybe<Storage>>>;
};


export type UpdateStoragePayloadstorageArgs = {
  filter?: InputMaybe<StorageFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<StorageOrder>;
};

export type UpdateStorage_fileByDemandInput = {
  filter: Storage_fileByDemandFilter;
  remove?: InputMaybe<Storage_fileByDemandPatch>;
  set?: InputMaybe<Storage_fileByDemandPatch>;
};

export type UpdateStorage_fileByDemandPayload = {
  __typename?: 'UpdateStorage_fileByDemandPayload';
  numUids?: Maybe<Scalars['Int']>;
  storage_fileByDemand?: Maybe<Array<Maybe<Storage_fileByDemand>>>;
};


export type UpdateStorage_fileByDemandPayloadstorage_fileByDemandArgs = {
  filter?: InputMaybe<Storage_fileByDemandFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileByDemandOrder>;
};

export type UpdateStorage_fileInput = {
  filter: Storage_fileFilter;
  remove?: InputMaybe<Storage_filePatch>;
  set?: InputMaybe<Storage_filePatch>;
};

export type UpdateStorage_fileOperationTokenInput = {
  filter: Storage_fileOperationTokenFilter;
  remove?: InputMaybe<Storage_fileOperationTokenPatch>;
  set?: InputMaybe<Storage_fileOperationTokenPatch>;
};

export type UpdateStorage_fileOperationTokenPayload = {
  __typename?: 'UpdateStorage_fileOperationTokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  storage_fileOperationToken?: Maybe<Array<Maybe<Storage_fileOperationToken>>>;
};


export type UpdateStorage_fileOperationTokenPayloadstorage_fileOperationTokenArgs = {
  filter?: InputMaybe<Storage_fileOperationTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOperationTokenOrder>;
};

export type UpdateStorage_filePayload = {
  __typename?: 'UpdateStorage_filePayload';
  numUids?: Maybe<Scalars['Int']>;
  storage_file?: Maybe<Array<Maybe<Storage_file>>>;
};


export type UpdateStorage_filePayloadstorage_fileArgs = {
  filter?: InputMaybe<Storage_fileFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Storage_fileOrder>;
};

export type UpdateTwoFactorTokenInput = {
  filter: TwoFactorTokenFilter;
  remove?: InputMaybe<TwoFactorTokenPatch>;
  set?: InputMaybe<TwoFactorTokenPatch>;
};

export type UpdateTwoFactorTokenPayload = {
  __typename?: 'UpdateTwoFactorTokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  twoFactorToken?: Maybe<Array<Maybe<TwoFactorToken>>>;
};


export type UpdateTwoFactorTokenPayloadtwoFactorTokenArgs = {
  filter?: InputMaybe<TwoFactorTokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TwoFactorTokenOrder>;
};

export type UpdateUnitInput = {
  filter: UnitFilter;
  remove?: InputMaybe<UnitPatch>;
  set?: InputMaybe<UnitPatch>;
};

export type UpdateUnitPayload = {
  __typename?: 'UpdateUnitPayload';
  numUids?: Maybe<Scalars['Int']>;
  unit?: Maybe<Array<Maybe<Unit>>>;
};


export type UpdateUnitPayloadunitArgs = {
  filter?: InputMaybe<UnitFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UnitOrder>;
};

export type UpdateUserInput = {
  filter: UserFilter;
  remove?: InputMaybe<UserPatch>;
  set?: InputMaybe<UserPatch>;
};

export type UpdateUserPayload = {
  __typename?: 'UpdateUserPayload';
  numUids?: Maybe<Scalars['Int']>;
  user?: Maybe<Array<Maybe<User>>>;
};


export type UpdateUserPayloaduserArgs = {
  filter?: InputMaybe<UserFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UserOrder>;
};

export type UpdateUser_tokenInput = {
  filter: User_tokenFilter;
  remove?: InputMaybe<User_tokenPatch>;
  set?: InputMaybe<User_tokenPatch>;
};

export type UpdateUser_tokenPayload = {
  __typename?: 'UpdateUser_tokenPayload';
  numUids?: Maybe<Scalars['Int']>;
  user_token?: Maybe<Array<Maybe<User_token>>>;
};


export type UpdateUser_tokenPayloaduser_tokenArgs = {
  filter?: InputMaybe<User_tokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<User_tokenOrder>;
};

export type UpdateVET_PACKAGEInput = {
  filter: VET_PACKAGEFilter;
  remove?: InputMaybe<VET_PACKAGEPatch>;
  set?: InputMaybe<VET_PACKAGEPatch>;
};

export type UpdateVET_PACKAGEPayload = {
  __typename?: 'UpdateVET_PACKAGEPayload';
  numUids?: Maybe<Scalars['Int']>;
  vET_PACKAGE?: Maybe<Array<Maybe<VET_PACKAGE>>>;
};


export type UpdateVET_PACKAGEPayloadvET_PACKAGEArgs = {
  filter?: InputMaybe<VET_PACKAGEFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_PACKAGEOrder>;
};

export type UpdateVET_accountInput = {
  filter: VET_accountFilter;
  remove?: InputMaybe<VET_accountPatch>;
  set?: InputMaybe<VET_accountPatch>;
};

export type UpdateVET_accountPayload = {
  __typename?: 'UpdateVET_accountPayload';
  numUids?: Maybe<Scalars['Int']>;
  vET_account?: Maybe<Array<Maybe<VET_account>>>;
};


export type UpdateVET_accountPayloadvET_accountArgs = {
  filter?: InputMaybe<VET_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_accountOrder>;
};

export type UpdateVET_contactInput = {
  filter: VET_contactFilter;
  remove?: InputMaybe<VET_contactPatch>;
  set?: InputMaybe<VET_contactPatch>;
};

export type UpdateVET_contactPayload = {
  __typename?: 'UpdateVET_contactPayload';
  numUids?: Maybe<Scalars['Int']>;
  vET_contact?: Maybe<Array<Maybe<VET_contact>>>;
};


export type UpdateVET_contactPayloadvET_contactArgs = {
  filter?: InputMaybe<VET_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_contactOrder>;
};

export type UpdateVET_petInput = {
  filter: VET_petFilter;
  remove?: InputMaybe<VET_petPatch>;
  set?: InputMaybe<VET_petPatch>;
};

export type UpdateVET_petPayload = {
  __typename?: 'UpdateVET_petPayload';
  numUids?: Maybe<Scalars['Int']>;
  vET_pet?: Maybe<Array<Maybe<VET_pet>>>;
};


export type UpdateVET_petPayloadvET_petArgs = {
  filter?: InputMaybe<VET_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_petOrder>;
};

export type UpdateWebhookInput = {
  filter: WebhookFilter;
  remove?: InputMaybe<WebhookPatch>;
  set?: InputMaybe<WebhookPatch>;
};

export type UpdateWebhookPayload = {
  __typename?: 'UpdateWebhookPayload';
  numUids?: Maybe<Scalars['Int']>;
  webhook?: Maybe<Array<Maybe<Webhook>>>;
};


export type UpdateWebhookPayloadwebhookArgs = {
  filter?: InputMaybe<WebhookFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type UpdateWebhook_providerInput = {
  filter: Webhook_providerFilter;
  remove?: InputMaybe<Webhook_providerPatch>;
  set?: InputMaybe<Webhook_providerPatch>;
};

export type UpdateWebhook_providerOriginInput = {
  filter: Webhook_providerOriginFilter;
  remove?: InputMaybe<Webhook_providerOriginPatch>;
  set?: InputMaybe<Webhook_providerOriginPatch>;
};

export type UpdateWebhook_providerOriginPayload = {
  __typename?: 'UpdateWebhook_providerOriginPayload';
  numUids?: Maybe<Scalars['Int']>;
  webhook_providerOrigin?: Maybe<Array<Maybe<Webhook_providerOrigin>>>;
};


export type UpdateWebhook_providerOriginPayloadwebhook_providerOriginArgs = {
  filter?: InputMaybe<Webhook_providerOriginFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOriginOrder>;
};

export type UpdateWebhook_providerPayload = {
  __typename?: 'UpdateWebhook_providerPayload';
  numUids?: Maybe<Scalars['Int']>;
  webhook_provider?: Maybe<Array<Maybe<Webhook_provider>>>;
};


export type UpdateWebhook_providerPayloadwebhook_providerArgs = {
  filter?: InputMaybe<Webhook_providerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOrder>;
};

export type User = {
  __typename?: 'User';
  accounts?: Maybe<Array<Account>>;
  accountsAggregate?: Maybe<AccountAggregateResult>;
  createdAt: Scalars['DateTime'];
  crypto?: Maybe<Scalars['String']>;
  currentAccount?: Maybe<Account>;
  e360Apps?: Maybe<Array<E360App_user>>;
  e360AppsAggregate?: Maybe<E360App_userAggregateResult>;
  email: Scalars['String'];
  emails: Array<Email>;
  emailsAggregate?: Maybe<EmailAggregateResult>;
  guid?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  inbox?: Maybe<Inbox>;
  integrations?: Maybe<Array<Integrations_account>>;
  integrationsAggregate?: Maybe<Integrations_accountAggregateResult>;
  isConnected?: Maybe<Scalars['Boolean']>;
  isDeleted: Scalars['Boolean'];
  isDisabled: Scalars['Boolean'];
  isTwoFactor: Scalars['Boolean'];
  loginProvider?: Maybe<Array<LoginProvider>>;
  loginProviderAggregate?: Maybe<LoginProviderAggregateResult>;
  person?: Maybe<Person>;
  phone?: Maybe<Scalars['String']>;
  tokens: Array<User_token>;
  tokensAggregate?: Maybe<User_tokenAggregateResult>;
  twoFactorType?: Maybe<TwoFactorType>;
  updatedAt: Scalars['DateTime'];
  userName: Scalars['String'];
};


export type UseraccountsArgs = {
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AccountOrder>;
};


export type UseraccountsAggregateArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type UsercurrentAccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type Usere360AppsArgs = {
  filter?: InputMaybe<E360App_userFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<E360App_userOrder>;
};


export type Usere360AppsAggregateArgs = {
  filter?: InputMaybe<E360App_userFilter>;
};


export type UseremailsArgs = {
  filter?: InputMaybe<EmailFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EmailOrder>;
};


export type UseremailsAggregateArgs = {
  filter?: InputMaybe<EmailFilter>;
};


export type UserinboxArgs = {
  filter?: InputMaybe<InboxFilter>;
};


export type UserintegrationsArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Integrations_accountOrder>;
};


export type UserintegrationsAggregateArgs = {
  filter?: InputMaybe<Integrations_accountFilter>;
};


export type UserloginProviderArgs = {
  filter?: InputMaybe<LoginProviderFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<LoginProviderOrder>;
};


export type UserloginProviderAggregateArgs = {
  filter?: InputMaybe<LoginProviderFilter>;
};


export type UserpersonArgs = {
  filter?: InputMaybe<PersonFilter>;
};


export type UsertokensArgs = {
  filter?: InputMaybe<User_tokenFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<User_tokenOrder>;
};


export type UsertokensAggregateArgs = {
  filter?: InputMaybe<User_tokenFilter>;
};

export type UserAggregateResult = {
  __typename?: 'UserAggregateResult';
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  cryptoMax?: Maybe<Scalars['String']>;
  cryptoMin?: Maybe<Scalars['String']>;
  emailMax?: Maybe<Scalars['String']>;
  emailMin?: Maybe<Scalars['String']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  phoneMax?: Maybe<Scalars['String']>;
  phoneMin?: Maybe<Scalars['String']>;
  updatedAtMax?: Maybe<Scalars['DateTime']>;
  updatedAtMin?: Maybe<Scalars['DateTime']>;
  userNameMax?: Maybe<Scalars['String']>;
  userNameMin?: Maybe<Scalars['String']>;
};

export type UserFilter = {
  and?: InputMaybe<Array<InputMaybe<UserFilter>>>;
  email?: InputMaybe<StringHashFilter_StringRegExpFilter>;
  guid?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<UserHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<UserFilter>;
  or?: InputMaybe<Array<InputMaybe<UserFilter>>>;
  phone?: InputMaybe<StringRegExpFilter>;
  userName?: InputMaybe<StringRegExpFilter>;
};

export enum UserHasFilter {
  accounts = 'accounts',
  createdAt = 'createdAt',
  crypto = 'crypto',
  currentAccount = 'currentAccount',
  e360Apps = 'e360Apps',
  email = 'email',
  emails = 'emails',
  guid = 'guid',
  inbox = 'inbox',
  integrations = 'integrations',
  isConnected = 'isConnected',
  isDeleted = 'isDeleted',
  isDisabled = 'isDisabled',
  isTwoFactor = 'isTwoFactor',
  loginProvider = 'loginProvider',
  person = 'person',
  phone = 'phone',
  tokens = 'tokens',
  twoFactorType = 'twoFactorType',
  updatedAt = 'updatedAt',
  userName = 'userName'
}

export type UserOrder = {
  asc?: InputMaybe<UserOrderable>;
  desc?: InputMaybe<UserOrderable>;
  then?: InputMaybe<UserOrder>;
};

export enum UserOrderable {
  createdAt = 'createdAt',
  crypto = 'crypto',
  email = 'email',
  guid = 'guid',
  phone = 'phone',
  updatedAt = 'updatedAt',
  userName = 'userName'
}

export type UserPatch = {
  accounts?: InputMaybe<Array<AccountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crypto?: InputMaybe<Scalars['String']>;
  currentAccount?: InputMaybe<AccountRef>;
  e360Apps?: InputMaybe<Array<E360App_userRef>>;
  email?: InputMaybe<Scalars['String']>;
  emails?: InputMaybe<Array<EmailRef>>;
  guid?: InputMaybe<Scalars['String']>;
  inbox?: InputMaybe<InboxRef>;
  integrations?: InputMaybe<Array<Integrations_accountRef>>;
  isConnected?: InputMaybe<Scalars['Boolean']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isTwoFactor?: InputMaybe<Scalars['Boolean']>;
  loginProvider?: InputMaybe<Array<LoginProviderRef>>;
  person?: InputMaybe<PersonRef>;
  phone?: InputMaybe<Scalars['String']>;
  pwd?: InputMaybe<Scalars['String']>;
  tokens?: InputMaybe<Array<User_tokenRef>>;
  twoFactorType?: InputMaybe<TwoFactorType>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userName?: InputMaybe<Scalars['String']>;
};

export type UserRef = {
  accounts?: InputMaybe<Array<AccountRef>>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  crypto?: InputMaybe<Scalars['String']>;
  currentAccount?: InputMaybe<AccountRef>;
  e360Apps?: InputMaybe<Array<E360App_userRef>>;
  email?: InputMaybe<Scalars['String']>;
  emails?: InputMaybe<Array<EmailRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  inbox?: InputMaybe<InboxRef>;
  integrations?: InputMaybe<Array<Integrations_accountRef>>;
  isConnected?: InputMaybe<Scalars['Boolean']>;
  isDeleted?: InputMaybe<Scalars['Boolean']>;
  isDisabled?: InputMaybe<Scalars['Boolean']>;
  isTwoFactor?: InputMaybe<Scalars['Boolean']>;
  loginProvider?: InputMaybe<Array<LoginProviderRef>>;
  person?: InputMaybe<PersonRef>;
  phone?: InputMaybe<Scalars['String']>;
  pwd?: InputMaybe<Scalars['String']>;
  tokens?: InputMaybe<Array<User_tokenRef>>;
  twoFactorType?: InputMaybe<TwoFactorType>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userName?: InputMaybe<Scalars['String']>;
};

export type User_token = {
  __typename?: 'User_token';
  code?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  expiredAt: Scalars['DateTime'];
  id: Scalars['String'];
  type: User_tokenType;
  usedAt?: Maybe<Scalars['DateTime']>;
  user?: Maybe<User>;
};


export type User_tokenuserArgs = {
  filter?: InputMaybe<UserFilter>;
};

export type User_tokenAggregateResult = {
  __typename?: 'User_tokenAggregateResult';
  codeMax?: Maybe<Scalars['String']>;
  codeMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdAtMax?: Maybe<Scalars['DateTime']>;
  createdAtMin?: Maybe<Scalars['DateTime']>;
  expiredAtMax?: Maybe<Scalars['DateTime']>;
  expiredAtMin?: Maybe<Scalars['DateTime']>;
  idMax?: Maybe<Scalars['String']>;
  idMin?: Maybe<Scalars['String']>;
  usedAtMax?: Maybe<Scalars['DateTime']>;
  usedAtMin?: Maybe<Scalars['DateTime']>;
};

export type User_tokenFilter = {
  and?: InputMaybe<Array<InputMaybe<User_tokenFilter>>>;
  has?: InputMaybe<Array<InputMaybe<User_tokenHasFilter>>>;
  id?: InputMaybe<StringHashFilter>;
  not?: InputMaybe<User_tokenFilter>;
  or?: InputMaybe<Array<InputMaybe<User_tokenFilter>>>;
};

export enum User_tokenHasFilter {
  code = 'code',
  createdAt = 'createdAt',
  expiredAt = 'expiredAt',
  id = 'id',
  type = 'type',
  usedAt = 'usedAt',
  user = 'user'
}

export type User_tokenOrder = {
  asc?: InputMaybe<User_tokenOrderable>;
  desc?: InputMaybe<User_tokenOrderable>;
  then?: InputMaybe<User_tokenOrder>;
};

export enum User_tokenOrderable {
  code = 'code',
  createdAt = 'createdAt',
  expiredAt = 'expiredAt',
  id = 'id',
  usedAt = 'usedAt'
}

export type User_tokenPatch = {
  code?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<User_tokenType>;
  usedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserRef>;
};

export type User_tokenRef = {
  code?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<User_tokenType>;
  usedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserRef>;
};

export enum User_tokenType {
  DELETE_USER = 'DELETE_USER',
  SIGN_UP_VERIFY = 'SIGN_UP_VERIFY',
  UPDATE_AVATAR = 'UPDATE_AVATAR',
  UPDATE_EMAIL = 'UPDATE_EMAIL',
  UPDATE_PASSWORD = 'UPDATE_PASSWORD'
}

export type VET_PACKAGE = {
  __typename?: 'VET_PACKAGE';
  accounts: Array<VET_account>;
  accountsAggregate?: Maybe<VET_accountAggregateResult>;
  contacts: Array<VET_contact>;
  contactsAggregate?: Maybe<VET_contactAggregateResult>;
  guid: Scalars['String'];
  id: Scalars['ID'];
  name: Scalars['String'];
  org360: Org360;
  pets: Array<VET_pet>;
  petsAggregate?: Maybe<VET_petAggregateResult>;
};


export type VET_PACKAGEaccountsArgs = {
  filter?: InputMaybe<VET_accountFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_accountOrder>;
};


export type VET_PACKAGEaccountsAggregateArgs = {
  filter?: InputMaybe<VET_accountFilter>;
};


export type VET_PACKAGEcontactsArgs = {
  filter?: InputMaybe<VET_contactFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_contactOrder>;
};


export type VET_PACKAGEcontactsAggregateArgs = {
  filter?: InputMaybe<VET_contactFilter>;
};


export type VET_PACKAGEorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type VET_PACKAGEpetsArgs = {
  filter?: InputMaybe<VET_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_petOrder>;
};


export type VET_PACKAGEpetsAggregateArgs = {
  filter?: InputMaybe<VET_petFilter>;
};

export type VET_PACKAGEAggregateResult = {
  __typename?: 'VET_PACKAGEAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type VET_PACKAGEFilter = {
  and?: InputMaybe<Array<InputMaybe<VET_PACKAGEFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<VET_PACKAGEHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<VET_PACKAGEFilter>;
  or?: InputMaybe<Array<InputMaybe<VET_PACKAGEFilter>>>;
};

export enum VET_PACKAGEHasFilter {
  accounts = 'accounts',
  contacts = 'contacts',
  guid = 'guid',
  name = 'name',
  org360 = 'org360',
  pets = 'pets'
}

export type VET_PACKAGEOrder = {
  asc?: InputMaybe<VET_PACKAGEOrderable>;
  desc?: InputMaybe<VET_PACKAGEOrderable>;
  then?: InputMaybe<VET_PACKAGEOrder>;
};

export enum VET_PACKAGEOrderable {
  guid = 'guid',
  name = 'name'
}

export type VET_PACKAGEPatch = {
  accounts?: InputMaybe<Array<VET_accountRef>>;
  contacts?: InputMaybe<Array<VET_contactRef>>;
  guid?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  pets?: InputMaybe<Array<VET_petRef>>;
};

export type VET_PACKAGERef = {
  accounts?: InputMaybe<Array<VET_accountRef>>;
  contacts?: InputMaybe<Array<VET_contactRef>>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  org360?: InputMaybe<Org360Ref>;
  pets?: InputMaybe<Array<VET_petRef>>;
};

export type VET_account = {
  __typename?: 'VET_account';
  account: Account;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: VET_PACKAGE;
  role: VET_role;
};


export type VET_accountaccountArgs = {
  filter?: InputMaybe<AccountFilter>;
};


export type VET_accountpackageArgs = {
  filter?: InputMaybe<VET_PACKAGEFilter>;
};

export type VET_accountAggregateResult = {
  __typename?: 'VET_accountAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type VET_accountFilter = {
  and?: InputMaybe<Array<InputMaybe<VET_accountFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<VET_accountHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<VET_accountFilter>;
  or?: InputMaybe<Array<InputMaybe<VET_accountFilter>>>;
  role?: InputMaybe<VET_role_exact>;
};

export enum VET_accountHasFilter {
  account = 'account',
  guid = 'guid',
  package = 'package',
  role = 'role'
}

export type VET_accountOrder = {
  asc?: InputMaybe<VET_accountOrderable>;
  desc?: InputMaybe<VET_accountOrderable>;
  then?: InputMaybe<VET_accountOrder>;
};

export enum VET_accountOrderable {
  guid = 'guid'
}

export type VET_accountPatch = {
  account?: InputMaybe<AccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<VET_PACKAGERef>;
  role?: InputMaybe<VET_role>;
};

export type VET_accountRef = {
  account?: InputMaybe<AccountRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<VET_PACKAGERef>;
  role?: InputMaybe<VET_role>;
};

export type VET_contact = {
  __typename?: 'VET_contact';
  contact: Contact;
  guid: Scalars['String'];
  id: Scalars['ID'];
  package: VET_PACKAGE;
  pets: Array<VET_pet>;
  petsAggregate?: Maybe<VET_petAggregateResult>;
};


export type VET_contactcontactArgs = {
  filter?: InputMaybe<ContactFilter>;
};


export type VET_contactpackageArgs = {
  filter?: InputMaybe<VET_PACKAGEFilter>;
};


export type VET_contactpetsArgs = {
  filter?: InputMaybe<VET_petFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VET_petOrder>;
};


export type VET_contactpetsAggregateArgs = {
  filter?: InputMaybe<VET_petFilter>;
};

export type VET_contactAggregateResult = {
  __typename?: 'VET_contactAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type VET_contactFilter = {
  and?: InputMaybe<Array<InputMaybe<VET_contactFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<VET_contactHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<VET_contactFilter>;
  or?: InputMaybe<Array<InputMaybe<VET_contactFilter>>>;
};

export enum VET_contactHasFilter {
  contact = 'contact',
  guid = 'guid',
  package = 'package',
  pets = 'pets'
}

export type VET_contactOrder = {
  asc?: InputMaybe<VET_contactOrderable>;
  desc?: InputMaybe<VET_contactOrderable>;
  then?: InputMaybe<VET_contactOrder>;
};

export enum VET_contactOrderable {
  guid = 'guid'
}

export type VET_contactPatch = {
  contact?: InputMaybe<ContactRef>;
  guid?: InputMaybe<Scalars['String']>;
  package?: InputMaybe<VET_PACKAGERef>;
  pets?: InputMaybe<Array<VET_petRef>>;
};

export type VET_contactRef = {
  contact?: InputMaybe<ContactRef>;
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  package?: InputMaybe<VET_PACKAGERef>;
  pets?: InputMaybe<Array<VET_petRef>>;
};

export type VET_pet = {
  __typename?: 'VET_pet';
  guid: Scalars['String'];
  id: Scalars['ID'];
  owner: VET_contact;
  package: VET_PACKAGE;
  pet: Pet;
};


export type VET_petownerArgs = {
  filter?: InputMaybe<VET_contactFilter>;
};


export type VET_petpackageArgs = {
  filter?: InputMaybe<VET_PACKAGEFilter>;
};


export type VET_petpetArgs = {
  filter?: InputMaybe<PetFilter>;
};

export type VET_petAggregateResult = {
  __typename?: 'VET_petAggregateResult';
  count?: Maybe<Scalars['Int']>;
  guidMax?: Maybe<Scalars['String']>;
  guidMin?: Maybe<Scalars['String']>;
};

export type VET_petFilter = {
  and?: InputMaybe<Array<InputMaybe<VET_petFilter>>>;
  guid?: InputMaybe<StringHashFilter>;
  has?: InputMaybe<Array<InputMaybe<VET_petHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<VET_petFilter>;
  or?: InputMaybe<Array<InputMaybe<VET_petFilter>>>;
};

export enum VET_petHasFilter {
  guid = 'guid',
  owner = 'owner',
  package = 'package',
  pet = 'pet'
}

export type VET_petOrder = {
  asc?: InputMaybe<VET_petOrderable>;
  desc?: InputMaybe<VET_petOrderable>;
  then?: InputMaybe<VET_petOrder>;
};

export enum VET_petOrderable {
  guid = 'guid'
}

export type VET_petPatch = {
  guid?: InputMaybe<Scalars['String']>;
  owner?: InputMaybe<VET_contactRef>;
  package?: InputMaybe<VET_PACKAGERef>;
  pet?: InputMaybe<PetRef>;
};

export type VET_petRef = {
  guid?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  owner?: InputMaybe<VET_contactRef>;
  package?: InputMaybe<VET_PACKAGERef>;
  pet?: InputMaybe<PetRef>;
};

export enum VET_role {
  ADMIN = 'ADMIN',
  VET = 'VET'
}

export type VET_role_exact = {
  between?: InputMaybe<VET_role>;
  eq?: InputMaybe<VET_role>;
  ge?: InputMaybe<VET_role>;
  gt?: InputMaybe<VET_role>;
  in?: InputMaybe<Array<InputMaybe<VET_role>>>;
  le?: InputMaybe<VET_role>;
  lt?: InputMaybe<VET_role>;
};

export type Webhook = {
  __typename?: 'Webhook';
  id: Scalars['ID'];
  org360: Org360;
  origins: Array<Webhook_providerOrigin>;
  originsAggregate?: Maybe<Webhook_providerOriginAggregateResult>;
  providers: Array<Webhook_provider>;
  providersAggregate?: Maybe<Webhook_providerAggregateResult>;
};


export type Webhookorg360Args = {
  filter?: InputMaybe<Org360Filter>;
};


export type WebhookoriginsArgs = {
  filter?: InputMaybe<Webhook_providerOriginFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOriginOrder>;
};


export type WebhookoriginsAggregateArgs = {
  filter?: InputMaybe<Webhook_providerOriginFilter>;
};


export type WebhookprovidersArgs = {
  filter?: InputMaybe<Webhook_providerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOrder>;
};


export type WebhookprovidersAggregateArgs = {
  filter?: InputMaybe<Webhook_providerFilter>;
};

export type WebhookAggregateResult = {
  __typename?: 'WebhookAggregateResult';
  count?: Maybe<Scalars['Int']>;
};

export type WebhookFilter = {
  and?: InputMaybe<Array<InputMaybe<WebhookFilter>>>;
  has?: InputMaybe<Array<InputMaybe<WebhookHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<WebhookFilter>;
  or?: InputMaybe<Array<InputMaybe<WebhookFilter>>>;
};

export enum WebhookHasFilter {
  org360 = 'org360',
  origins = 'origins',
  providers = 'providers'
}

export type WebhookPatch = {
  org360?: InputMaybe<Org360Ref>;
  origins?: InputMaybe<Array<Webhook_providerOriginRef>>;
  providers?: InputMaybe<Array<Webhook_providerRef>>;
};

export type WebhookRef = {
  id?: InputMaybe<Scalars['ID']>;
  org360?: InputMaybe<Org360Ref>;
  origins?: InputMaybe<Array<Webhook_providerOriginRef>>;
  providers?: InputMaybe<Array<Webhook_providerRef>>;
};

export type Webhook_provider = {
  __typename?: 'Webhook_provider';
  id: Scalars['ID'];
  name: Scalars['String'];
  origins: Array<Webhook_providerOrigin>;
  originsAggregate?: Maybe<Webhook_providerOriginAggregateResult>;
  webhook: Webhook;
};


export type Webhook_provideroriginsArgs = {
  filter?: InputMaybe<Webhook_providerOriginFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<Webhook_providerOriginOrder>;
};


export type Webhook_provideroriginsAggregateArgs = {
  filter?: InputMaybe<Webhook_providerOriginFilter>;
};


export type Webhook_providerwebhookArgs = {
  filter?: InputMaybe<WebhookFilter>;
};

export type Webhook_providerAggregateResult = {
  __typename?: 'Webhook_providerAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
};

export type Webhook_providerFilter = {
  and?: InputMaybe<Array<InputMaybe<Webhook_providerFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Webhook_providerHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Webhook_providerFilter>;
  or?: InputMaybe<Array<InputMaybe<Webhook_providerFilter>>>;
};

export enum Webhook_providerHasFilter {
  name = 'name',
  origins = 'origins',
  webhook = 'webhook'
}

export type Webhook_providerOrder = {
  asc?: InputMaybe<Webhook_providerOrderable>;
  desc?: InputMaybe<Webhook_providerOrderable>;
  then?: InputMaybe<Webhook_providerOrder>;
};

export enum Webhook_providerOrderable {
  name = 'name'
}

export type Webhook_providerOrigin = {
  __typename?: 'Webhook_providerOrigin';
  enable: Scalars['Boolean'];
  id: Scalars['ID'];
  name: Scalars['String'];
  origin: Scalars['String'];
  provider: Webhook_provider;
  webhook: Webhook;
};


export type Webhook_providerOriginproviderArgs = {
  filter?: InputMaybe<Webhook_providerFilter>;
};


export type Webhook_providerOriginwebhookArgs = {
  filter?: InputMaybe<WebhookFilter>;
};

export type Webhook_providerOriginAggregateResult = {
  __typename?: 'Webhook_providerOriginAggregateResult';
  count?: Maybe<Scalars['Int']>;
  nameMax?: Maybe<Scalars['String']>;
  nameMin?: Maybe<Scalars['String']>;
  originMax?: Maybe<Scalars['String']>;
  originMin?: Maybe<Scalars['String']>;
};

export type Webhook_providerOriginFilter = {
  and?: InputMaybe<Array<InputMaybe<Webhook_providerOriginFilter>>>;
  has?: InputMaybe<Array<InputMaybe<Webhook_providerOriginHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']>>;
  not?: InputMaybe<Webhook_providerOriginFilter>;
  or?: InputMaybe<Array<InputMaybe<Webhook_providerOriginFilter>>>;
};

export enum Webhook_providerOriginHasFilter {
  enable = 'enable',
  name = 'name',
  origin = 'origin',
  provider = 'provider',
  webhook = 'webhook'
}

export type Webhook_providerOriginOrder = {
  asc?: InputMaybe<Webhook_providerOriginOrderable>;
  desc?: InputMaybe<Webhook_providerOriginOrderable>;
  then?: InputMaybe<Webhook_providerOriginOrder>;
};

export enum Webhook_providerOriginOrderable {
  name = 'name',
  origin = 'origin'
}

export type Webhook_providerOriginPatch = {
  enable?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  origin?: InputMaybe<Scalars['String']>;
  provider?: InputMaybe<Webhook_providerRef>;
  webhook?: InputMaybe<WebhookRef>;
};

export type Webhook_providerOriginRef = {
  enable?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  origin?: InputMaybe<Scalars['String']>;
  provider?: InputMaybe<Webhook_providerRef>;
  webhook?: InputMaybe<WebhookRef>;
};

export type Webhook_providerPatch = {
  name?: InputMaybe<Scalars['String']>;
  origins?: InputMaybe<Array<Webhook_providerOriginRef>>;
  webhook?: InputMaybe<WebhookRef>;
};

export type Webhook_providerRef = {
  id?: InputMaybe<Scalars['ID']>;
  name?: InputMaybe<Scalars['String']>;
  origins?: InputMaybe<Array<Webhook_providerOriginRef>>;
  webhook?: InputMaybe<WebhookRef>;
};

export type WithinFilter = {
  polygon: PolygonRef;
};

export enum e360App_shop_taxType {
  EXCLUDED = 'EXCLUDED',
  INCLUDED = 'INCLUDED'
}

export type e360App_shop_taxType_exact = {
  between?: InputMaybe<e360App_shop_taxType>;
  eq?: InputMaybe<e360App_shop_taxType>;
  ge?: InputMaybe<e360App_shop_taxType>;
  gt?: InputMaybe<e360App_shop_taxType>;
  in?: InputMaybe<Array<InputMaybe<e360App_shop_taxType>>>;
  le?: InputMaybe<e360App_shop_taxType>;
  lt?: InputMaybe<e360App_shop_taxType>;
};

export enum e360App_shop_taxValueType {
  FIXED = 'FIXED',
  PERCENTAGE = 'PERCENTAGE'
}

export type e360App_shop_taxValueType_exact = {
  between?: InputMaybe<e360App_shop_taxValueType>;
  eq?: InputMaybe<e360App_shop_taxValueType>;
  ge?: InputMaybe<e360App_shop_taxValueType>;
  gt?: InputMaybe<e360App_shop_taxValueType>;
  in?: InputMaybe<Array<InputMaybe<e360App_shop_taxValueType>>>;
  le?: InputMaybe<e360App_shop_taxValueType>;
  lt?: InputMaybe<e360App_shop_taxValueType>;
};
